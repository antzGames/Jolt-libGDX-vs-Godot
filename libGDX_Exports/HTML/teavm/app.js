"use strict";
(function(module) {
    if (typeof define === 'function' && define.amd) {
        define(['exports'], function(exports)  {
            module(exports);
        });
    } else if (typeof exports === 'object' && exports !== null && typeof exports.nodeName !== 'string') {
        module(exports);
    } else {
        module(typeof self !== 'undefined' ? self : this);
}
}(function($rt_exports) {
let $rt_seed = 2463534242,
$rt_nextId = () => {
    let x = $rt_seed;
    x ^= x << 13;
    x ^= x >>> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
},
$rt_wrapFunction0 = f => function() {
    return f(this);
},
$rt_wrapFunction1 = f => function(p1) {
    return f(this, p1);
},
$rt_wrapFunction2 = f => function(p1, p2) {
    return f(this, p1, p2);
},
$rt_wrapFunction3 = f => function(p1, p2, p3) {
    return f(this, p1, p2, p3, p3);
},
$rt_wrapFunction4 = f => function(p1, p2, p3, p4) {
    return f(this, p1, p2, p3, p4);
},
$rt_mainStarter = f => (args, callback) => {
    if (!args) {
        args = [];
    }
    let javaArgs = $rt_createArray($rt_objcls(), args.length);
    for (let i = 0;i < args.length;++i) {
        javaArgs.data[i] = $rt_str(args[i]);
    }
    $rt_startThread(() => {
        f.call(null, javaArgs);
    }, callback);
},
$rt_eraseClinit = target => target.$clinit = () => {
},
$dbg_class = obj => {
    let cls = obj.constructor;
    let arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    let clsName = "";
    if (cls.$meta.primitive) {
        clsName = cls.$meta.name;
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
},
$rt_classWithoutFields = superclass => {
    if (superclass === 0) {
        return function() {
        };
    }
    if (superclass === void 0) {
        superclass = $rt_objcls();
    }
    return function() {
        superclass.call(this);
    };
},
$rt_cls = cls => jl_Class_getClass(cls),
$rt_objcls = () => jl_Object,
$rt_getThread = () => {
    {
        return jl_Thread_currentThread0();
    }
},
$rt_setThread = t => {
    {
        return jl_Thread_setCurrentThread(t);
    }
},
$rt_callWithReceiver = f => function() {
    return f.apply(null, [this].concat(Array.prototype.slice.call(arguments)));
},
$rt_createcls = () => {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
},
$rt_createPrimitiveCls = (name, binaryName) => {
    let cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    cls.$meta.simpleName = null;
    cls.$meta.declaringClass = null;
    cls.$meta.enclosingClass = null;
    return cls;
},
$rt_booleancls = $rt_createPrimitiveCls("boolean", "Z"),
$rt_charcls = $rt_createPrimitiveCls("char", "C"),
$rt_bytecls = $rt_createPrimitiveCls("byte", "B"),
$rt_shortcls = $rt_createPrimitiveCls("short", "S"),
$rt_intcls = $rt_createPrimitiveCls("int", "I"),
$rt_longcls = $rt_createPrimitiveCls("long", "J"),
$rt_floatcls = $rt_createPrimitiveCls("float", "F"),
$rt_voidcls = $rt_createPrimitiveCls("void", "V"),
$rt_numberConversionBuffer = new ArrayBuffer(16),
$rt_numberConversionFloatArray = new Float32Array($rt_numberConversionBuffer),
$rt_numberConversionIntArray = new Int32Array($rt_numberConversionBuffer),
$rt_floatToRawIntBits = n => {
    $rt_numberConversionFloatArray[0] = n;
    return $rt_numberConversionIntArray[0];
},
$rt_intBitsToFloat = n => {
    $rt_numberConversionIntArray[0] = n;
    return $rt_numberConversionFloatArray[0];
},
$rt_compare = (a, b) => a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1,
$rt_imul = Math.imul || function(a, b) {
    let ah = a >>> 16 & 0xFFFF;
    let al = a & 0xFFFF;
    let bh = b >>> 16 & 0xFFFF;
    let bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
},
$rt_udiv = (a, b) => (a >>> 0) / (b >>> 0) >>> 0,
$rt_umod = (a, b) => (a >>> 0) % (b >>> 0) >>> 0,
$rt_ucmp = (a, b) => {
    a >>>= 0;
    b >>>= 0;
    return a < b ?  -1 : a > b ? 1 : 0;
},
Long_ZERO = BigInt(0),
Long_create = (lo, hi) => BigInt.asIntN(64, BigInt.asUintN(64, BigInt(lo)) | BigInt.asUintN(64, BigInt(hi) << BigInt(32))),
Long_fromInt = val => BigInt.asIntN(64, BigInt(val | 0)),
Long_fromNumber = val => BigInt.asIntN(64, BigInt(val >= 0 ? Math.floor(val) : Math.ceil(val))),
Long_toNumber = val => Number(val),
Long_lo = val => Number(BigInt.asIntN(32, val)) | 0,
Long_eq = (a, b) => a === b,
Long_ne = (a, b) => a !== b,
Long_gt = (a, b) => a > b,
Long_lt = (a, b) => a < b,
Long_add = (a, b) => BigInt.asIntN(64, a + b),
Long_neg = a => BigInt.asIntN(64,  -a),
Long_sub = (a, b) => BigInt.asIntN(64, a - b),
Long_compare = (a, b) => a < b ?  -1 : a > b ? 1 : 0;
let Long_ucompare = (a, b) => {
    a = BigInt.asUintN(64, a);
    b = BigInt.asUintN(64, b);
    return a < b ?  -1 : a > b ? 1 : 0;
},
Long_mul = (a, b) => BigInt.asIntN(64, a * b),
Long_div = (a, b) => BigInt.asIntN(64, a / b),
Long_udiv = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) / BigInt.asUintN(64, b)),
Long_rem = (a, b) => BigInt.asIntN(64, a % b),
Long_urem = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) % BigInt.asUintN(64, b)),
Long_and = (a, b) => BigInt.asIntN(64, a & b),
Long_or = (a, b) => BigInt.asIntN(64, a | b),
Long_xor = (a, b) => BigInt.asIntN(64, a ^ b),
Long_shl = (a, b) => BigInt.asIntN(64, a << BigInt(b & 63)),
Long_shr = (a, b) => BigInt.asIntN(64, a >> BigInt(b & 63)),
Long_shru = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) >> BigInt(b & 63)),
$rt_createArray = (cls, sz) => {
    let data = new Array(sz);
    data.fill(null);
    return new ($rt_arraycls(cls))(data);
},
$rt_wrapArray = (cls, data) => new ($rt_arraycls(cls))(data),
$rt_createLongArray = sz => new $rt_longArrayCls(new BigInt64Array(sz)),
$rt_createLongArrayFromData = data => {
    let buffer = new BigInt64Array(data.length);
    buffer.set(data);
    return new $rt_longArrayCls(buffer);
},
$rt_createCharArray = sz => new $rt_charArrayCls(new Uint16Array(sz)),
$rt_createCharArrayFromData = data => {
    let buffer = new Uint16Array(data.length);
    buffer.set(data);
    return new $rt_charArrayCls(buffer);
},
$rt_createByteArray = sz => new $rt_byteArrayCls(new Int8Array(sz)),
$rt_createShortArray = sz => new $rt_shortArrayCls(new Int16Array(sz)),
$rt_createIntArray = sz => new $rt_intArrayCls(new Int32Array(sz)),
$rt_createIntArrayFromData = data => {
    let buffer = new Int32Array(data.length);
    buffer.set(data);
    return new $rt_intArrayCls(buffer);
},
$rt_createBooleanArray = sz => new $rt_booleanArrayCls(new Int8Array(sz)),
$rt_createFloatArray = sz => new $rt_floatArrayCls(new Float32Array(sz)),
$rt_createFloatArrayFromData = data => {
    let buffer = new Float32Array(data.length);
    buffer.set(data);
    return new $rt_floatArrayCls(buffer);
},
$rt_arraycls = cls => {
    let result = cls.$array;
    if (result === null) {
        function JavaArray(data) {
            ($rt_objcls()).call(this);
            this.data = data;
        }
        JavaArray.prototype = Object.create(($rt_objcls()).prototype);
        JavaArray.prototype.type = cls;
        JavaArray.prototype.constructor = JavaArray;
        JavaArray.prototype.toString = function() {
            let str = "[";
            for (let i = 0;i < this.data.length;++i) {
                if (i > 0) {
                    str += ", ";
                }
                str += this.data[i].toString();
            }
            str += "]";
            return str;
        };
        JavaArray.prototype.$clone0 = function() {
            let dataCopy;
            if ('slice' in this.data) {
                dataCopy = this.data.slice();
            } else {
                dataCopy = new this.data.constructor(this.data.length);
                for (let i = 0;i < dataCopy.length;++i) {
                    dataCopy[i] = this.data[i];
                }
            }
            return new ($rt_arraycls(this.type))(dataCopy);
        };
        let name = "[" + cls.$meta.binaryName;
        JavaArray.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false, simpleName : null, declaringClass : null, enclosingClass : null };
        JavaArray.classObject = null;
        JavaArray.$array = null;
        result = JavaArray;
        cls.$array = JavaArray;
    }
    return result;
},
$rt_stringPool_instance,
$rt_stringPool = strings => {
    $rt_stringClassInit();
    $rt_stringPool_instance = new Array(strings.length);
    for (let i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
},
$rt_s = index => $rt_stringPool_instance[index],
$rt_charArrayToString = (array, offset, count) => {
    let result = "";
    let limit = offset + count;
    for (let i = offset;i < limit;i = i + 1024 | 0) {
        let next = Math.min(limit, i + 1024 | 0);
        result += String.fromCharCode.apply(null, array.subarray(i, next));
    }
    return result;
},
$rt_fullArrayToString = array => $rt_charArrayToString(array, 0, array.length),
$rt_stringToCharArray = (string, begin, dst, dstBegin, count) => {
    for (let i = 0;i < count;i = i + 1 | 0) {
        dst[dstBegin + i] = string.charCodeAt(begin + i);
    }
},
$rt_fastStringToCharArray = string => {
    let array = new Uint16Array(string.length);
    for (let i = 0;i < array.length;++i) {
        array[i] = string.charCodeAt(i);
    }
    return new $rt_charArrayCls(array);
},
$rt_str = str => str === null ? null : jl_String__init_3(str),
$rt_ustr = str => str === null ? null : str.$nativeString,
$rt_stringClassInit = () => (() => {})(),
$rt_intern;
{
    $rt_intern = str => str;
}
let $rt_isInstance = (obj, cls) => obj instanceof $rt_objcls() && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls),
$rt_isAssignable = (from, to) => {
    if (from === to) {
        return true;
    }
    let map = from.$meta.assignableCache;
    if (typeof map === 'undefined') {
        map = new Map();
        from.$meta.assignableCache = map;
    }
    let cachedResult = map.get(to);
    if (typeof cachedResult !== 'undefined') {
        return cachedResult;
    }
    if (to.$meta.item !== null) {
        let result = from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
        map.set(to, result);
        return result;
    }
    let supertypes = from.$meta.supertypes;
    for (let i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            map.set(to, true);
            return true;
        }
    }
    map.set(to, false);
    return false;
},
$rt_throw = ex => {
    throw $rt_exception(ex);
},
$rt_javaExceptionProp = Symbol("javaException"),
$rt_exception = ex => {
    if (!ex.$jsException) {
        $rt_fillNativeException(ex);
    }
    return ex.$jsException;
},
$rt_fillNativeException = ex => {
    let javaCause = $rt_throwableCause(ex);
    let jsCause = javaCause !== null ? javaCause.$jsException : void 0;
    let cause = typeof jsCause === "object" ? { cause : jsCause } : void 0;
    let err = new JavaError("Java exception thrown", cause);
    if (typeof Error.captureStackTrace === "function") {
        Error.captureStackTrace(err);
    }
    err[$rt_javaExceptionProp] = ex;
    ex.$jsException = err;
    $rt_fillStack(err, ex);
},
$rt_fillStack = (err, ex) => {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        let stack = $rt_decodeStack(err.stack);
        let javaStack = $rt_createArray($rt_stecls(), stack.length);
        let elem;
        let noStack = false;
        for (let i = 0;i < stack.length;++i) {
            let element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
},
JavaError;
if (typeof Reflect === 'object') {
    let defaultMessage = Symbol("defaultMessage");
    JavaError = function JavaError(message, cause) {
        let self = Reflect.construct(Error, [void 0, cause], JavaError);
        Object.setPrototypeOf(self, JavaError.prototype);
        self[defaultMessage] = message;
        return self;
    }
    ;
    JavaError.prototype = Object.create(Error.prototype, { constructor : { configurable : true, writable : true, value : JavaError }, message : { get() {
        try {
            let javaException = this[$rt_javaExceptionProp];
            if (typeof javaException === 'object') {
                let javaMessage = $rt_throwableMessage(javaException);
                if (typeof javaMessage === "object") {
                    return javaMessage !== null ? javaMessage.toString() : null;
                }
            }
            return this[defaultMessage];
        } catch (e){
            return "Exception occurred trying to extract Java exception message: " + e;
        }
    } } });
} else {
    JavaError = Error;
}
let $rt_javaException = e => e instanceof Error && typeof e[$rt_javaExceptionProp] === 'object' ? e[$rt_javaExceptionProp] : null,
$rt_wrapException = err => {
    let ex = err[$rt_javaExceptionProp];
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
},
$rt_createException = message => jl_RuntimeException__init_0(message),
$rt_throwableMessage = t => jl_Throwable_getMessage(t),
$rt_throwableCause = t => jl_Throwable_getCause(t),
$rt_stecls = () => $rt_objcls(),
$rt_createStackElement = (className, methodName, fileName, lineNumber) => {
    {
        return null;
    }
},
$rt_setStack = (e, stack) => {
},
$rt_createOutputFunction = outputFunction => {
    let buffer = "";
    return msg => {
        let index = 0;
        while (true) {
            let next = msg.indexOf('\n', index);
            if (next < 0) {
                break;
            }
            outputFunction(buffer + msg.substring(index, next));
            buffer = "";
            index = next + 1;
        }
        buffer += msg.substring(index);
    };
},
$rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : typeof console === "object" ? $rt_createOutputFunction(msg => console.info(msg)) : () => {
},
$rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : typeof console === "object" ? $rt_createOutputFunction(msg => console.error(msg)) : () => {
},
$rt_packageData = null,
$rt_packages = data => {
    let i = 0;
    let packages = new Array(data.length);
    for (let j = 0;j < data.length;++j) {
        let prefixIndex = data[i++];
        let prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
},
$rt_metadata = data => {
    let packages = $rt_packageData;
    let i = 0;
    while (i < data.length) {
        let cls = data[i++];
        cls.$meta = {  };
        let m = cls.$meta;
        let className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            let packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        let superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        let flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        let innerClassInfo = data[i++];
        if (innerClassInfo === 0) {
            m.simpleName = null;
            m.declaringClass = null;
            m.enclosingClass = null;
        } else {
            let enclosingClass = innerClassInfo[0];
            m.enclosingClass = enclosingClass !== 0 ? enclosingClass : null;
            let declaringClass = innerClassInfo[1];
            m.declaringClass = declaringClass !== 0 ? declaringClass : null;
            let simpleName = innerClassInfo[2];
            m.simpleName = simpleName !== 0 ? simpleName : null;
        }
        let clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        let virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (let j = 0;j < virtualMethods.length;j += 2) {
                let name = virtualMethods[j];
                let func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (let k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
};
function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
TeaVMThread.prototype.push = function() {
    for (let i = 0;i < arguments.length;++i) {
        this.stack.push(arguments[i]);
    }
    return this;
};
TeaVMThread.prototype.s = TeaVMThread.prototype.push;
TeaVMThread.prototype.pop = function() {
    return this.stack.pop();
};
TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
TeaVMThread.prototype.isResuming = function() {
    return this.status === 2;
};
TeaVMThread.prototype.isSuspending = function() {
    return this.status === 1;
};
TeaVMThread.prototype.suspend = function(callback) {
    this.suspendCallback = callback;
    this.status = 1;
};
TeaVMThread.prototype.start = function(callback) {
    if (this.status !== 3) {
        throw new Error("Thread already started");
    }
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 0;
    this.completeCallback = callback ? callback : result => {
        if (result instanceof Error) {
            throw result;
        }
    };
    this.run();
};
TeaVMThread.prototype.resume = function() {
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 2;
    this.run();
};
TeaVMThread.prototype.run = function() {
    $rt_currentNativeThread = this;
    let result;
    try {
        result = this.runner();
    } catch (e){
        result = e;
    } finally {
        $rt_currentNativeThread = null;
    }
    if (this.suspendCallback !== null) {
        let self = this;
        let callback = this.suspendCallback;
        this.suspendCallback = null;
        callback(() => self.resume());
    } else if (this.status === 0) {
        this.completeCallback(result);
    }
};
let $rt_suspending = () => {
    let thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
},
$rt_resuming = () => {
    let thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
},
$rt_requireNativeThread = () => {
    let nativeThread = $rt_nativeThread();
    if (nativeThread === null) {
        throw new Error("Suspension point reached from non-threading context " + "(perhaps, from native JS method). See https://teavm.org/docs/runtime/coroutines.html " + "('Interaction with JavaScript' section)");
    }
    return nativeThread;
},
$rt_startThread = (runner, callback) => (new TeaVMThread(runner)).start(callback),
$rt_currentNativeThread = null,
$rt_nativeThread = () => $rt_currentNativeThread,
$rt_invalidPointer = () => {
    throw new Error("Invalid recorded state");
};
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
let jl_Object_monitorEnterSync = $o => {
    let var$2;
    if (jl_Thread_currentThread === null)
        return;
    if ($o.$monitor === null)
        jl_Object_createMonitor($o);
    $o = $o.$monitor;
    var$2 = $o.$owner;
    if (var$2 === null)
        $o.$owner = jl_Thread_currentThread;
    else if (var$2 !== jl_Thread_currentThread) {
        var$2 = new jl_IllegalStateException;
        jl_Exception__init_(var$2, $rt_s(0));
        $rt_throw(var$2);
    }
    $o.$count = $o.$count + 1 | 0;
},
jl_Object_monitorExitSync = $o => {
    let var$2, var$3;
    if (jl_Thread_currentThread === null)
        return;
    if (!jl_Object_isEmptyMonitor($o)) {
        var$2 = $o.$monitor;
        if (var$2.$owner === jl_Thread_currentThread) {
            var$3 = var$2.$count - 1 | 0;
            var$2.$count = var$3;
            if (!var$3)
                var$2.$owner = null;
            jl_Object_isEmptyMonitor($o);
            return;
        }
    }
    $o = new jl_IllegalMonitorStateException;
    jl_Exception__init_0($o);
    $rt_throw($o);
},
jl_Object_monitorEnter = $o => {
    let var$2, var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = 1;
        if ($o.$monitor === null)
            jl_Object_createMonitor($o);
        var$3 = $o.$monitor;
        if (var$3.$owner === null)
            var$3.$owner = jl_Thread_currentThread;
        if (var$3.$owner === jl_Thread_currentThread) {
            var$3.$count = var$3.$count + var$2 | 0;
            return;
        }
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait$_asyncCall_$($o, var$2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, var$2, var$3, $ptr);
},
jl_Object_createMonitor = $o => {
    let var$2;
    var$2 = new jl_Object$Monitor;
    var$2.$owner = jl_Thread_currentThread;
    $o.$monitor = var$2;
},
jl_Object_monitorEnterWait = ($o, $count, $callback) => {
    let $thread_0, $monitor, var$6;
    $thread_0 = jl_Thread_currentThread;
    $monitor = $o.$monitor;
    if ($monitor === null) {
        jl_Object_createMonitor($o);
        jl_Thread_setCurrentThread($thread_0);
        $o = $o.$monitor;
        $o.$count = $o.$count + $count | 0;
        $o = null;
        otpp_AsyncCallbackWrapper_complete($callback, $o);
        return;
    }
    if ($monitor.$owner === null) {
        $monitor.$owner = $thread_0;
        jl_Thread_setCurrentThread($thread_0);
        $o = $o.$monitor;
        $o.$count = $o.$count + $count | 0;
        $o = null;
        otpp_AsyncCallbackWrapper_complete($callback, $o);
        return;
    }
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueueJs$js_body$_30();
    $monitor = $monitor.$enteringThreads;
    var$6 = new jl_Object$monitorEnterWait$lambda$_6_0;
    var$6.$_06 = $thread_0;
    var$6.$_13 = $o;
    var$6.$_22 = $count;
    var$6.$_31 = $callback;
    $callback = var$6;
    $monitor.push($callback);
},
jl_Object_monitorExit = $o => {
    let var$2, var$3;
    if (!jl_Object_isEmptyMonitor($o)) {
        var$2 = $o.$monitor;
        if (var$2.$owner === jl_Thread_currentThread) {
            var$3 = var$2.$count - 1 | 0;
            var$2.$count = var$3;
            if (var$3 <= 0) {
                var$2.$owner = null;
                var$2 = var$2.$enteringThreads;
                if (var$2 !== null && !otp_PlatformQueue_isEmpty$static(var$2)) {
                    var$2 = new jl_Object$monitorExit$lambda$_8_0;
                    var$2.$_020 = $o;
                    otp_Platform_schedule(var$2, 0);
                } else
                    jl_Object_isEmptyMonitor($o);
            }
            return;
        }
    }
    $o = new jl_IllegalMonitorStateException;
    jl_Exception__init_0($o);
    $rt_throw($o);
},
jl_Object_isEmptyMonitor = $this => {
    let $monitor, var$2;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        if ($monitor.$owner === null) {
            var$2 = $monitor.$enteringThreads;
            if (!(var$2 !== null && !otp_PlatformQueue_isEmpty$static(var$2))) {
                $monitor = $monitor.$notifyListeners;
                if ($monitor === null)
                    break a;
                if (otp_PlatformQueue_isEmpty$static($monitor))
                    break a;
            }
        }
        return 0;
    }
    $this.$monitor = null;
    return 1;
},
jl_Object_getClass = $this => {
    return jl_Class_getClass($this.constructor);
},
jl_Object_hashCode = $this => {
    return jl_Object_identity($this);
},
jl_Object_equals = ($this, $other) => {
    return $this !== $other ? 0 : 1;
},
jl_Object_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_Class_getName(jl_Object_getClass($this));
    var$2 = jl_Integer_toHexString(jl_Object_identity($this));
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    var$1 = jl_StringBuilder_append(var$3, var$1);
    jl_AbstractStringBuilder_append0(var$1, 64);
    jl_StringBuilder_append(var$1, var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jl_Object_identity = $this => {
    let $platformThis;
    $platformThis = $this;
    if (!$platformThis.$id$)
        $platformThis.$id$ = $rt_nextId();
    return $this.$id$;
},
jl_Object_clone = $this => {
    let $result, var$2, var$3;
    if (!$rt_isInstance($this, jl_Cloneable) && $this.constructor.$meta.item === null) {
        $result = new jl_CloneNotSupportedException;
        jl_Exception__init_0($result);
        $rt_throw($result);
    }
    $result = otp_Platform_clone($this);
    var$2 = $result;
    var$3 = $rt_nextId();
    var$2.$id$ = var$3;
    return $result;
},
jl_Object_monitorEnterWait$_asyncCall_$ = (var$1, var$2) => {
    let thread = $rt_requireNativeThread();
    let javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        let result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    let callback = function() {
    };
    callback.$complete = val => {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error0 = e => {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    thread.suspend(() => {
        try {
            jl_Object_monitorEnterWait(var$1, var$2, callback);
            ;
        } catch ($e){
            callback.$error0($e);
        }
    });
    return null;
},
cbgu_Pool$Poolable = $rt_classWithoutFields(0);
function cbggg_GlyphLayout() {
    let a = this; jl_Object.call(a);
    a.$runs = null;
    a.$colors = null;
    a.$glyphCount = 0;
    a.$width5 = 0.0;
    a.$height2 = 0.0;
}
let cbggg_GlyphLayout_glyphRunPool = null,
cbggg_GlyphLayout_colorStack = null,
cbggg_GlyphLayout_$callClinit = () => {
    cbggg_GlyphLayout_$callClinit = $rt_eraseClinit(cbggg_GlyphLayout);
    cbggg_GlyphLayout__clinit_();
},
cbggg_GlyphLayout_setText = ($this, var$1, var$2, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) => {
    let $fontData, $wrapOrTruncate, $currentColor, var$13, var$14, $i, $markupEnabled, $isLastRun, $y, $down, $lineRun, $lastGlyph, var$22, $runStart, $newline, $runEnd, $length, $run, $runWidth, $wrapIndex;
    cbggg_GlyphLayout_reset($this);
    $fontData = var$1.$data10;
    if ($start == $end) {
        $this.$height2 = $fontData.$capHeight;
        return;
    }
    if ($wrap)
        $targetWidth = jl_Math_max0($targetWidth, $fontData.$spaceXadvance * 3.0);
    $wrapOrTruncate = !$wrap && $truncate === null ? 0 : 1;
    $currentColor = cbgg_Color_toIntBits($color);
    var$1 = $this.$colors;
    var$13 = var$1.$items1;
    var$14 = var$13.data;
    $i = var$1.$size1;
    if (($i + 1 | 0) >= var$14.length)
        var$13 = cbgu_IntArray_resize(var$1, jl_Math_max(8, $i * 1.75 | 0));
    var$13 = var$13.data;
    $i = var$1.$size1;
    var$13[$i] = 0;
    var$13[$i + 1 | 0] = $currentColor;
    var$1.$size1 = $i + 2 | 0;
    $markupEnabled = $fontData.$markupEnabled;
    if ($markupEnabled)
        cbgu_IntArray_add(cbggg_GlyphLayout_colorStack, $currentColor);
    $isLastRun = 0;
    $y = 0.0;
    $down = $fontData.$down;
    $lineRun = null;
    $lastGlyph = null;
    $color = var$2;
    var$22 = $currentColor;
    $runStart = $start;
    a: {
        b: while (true) {
            c: {
                $newline = 0;
                if ($start == $end) {
                    if ($runStart == $end)
                        break b;
                    $isLastRun = 1;
                    $runEnd = $end;
                } else {
                    d: {
                        $wrap = $start + 1 | 0;
                        switch (jl_String_charAt($color, $start)) {
                            case 10:
                                $runEnd = $wrap - 1 | 0;
                                $newline = 1;
                                $start = $wrap;
                                break c;
                            case 91:
                                if (!$markupEnabled) {
                                    $start = $wrap;
                                    break d;
                                }
                                $length = cbggg_GlyphLayout_parseColorMarkup($this, var$2, $wrap, $end);
                                if ($length >= 0) {
                                    $runEnd = $wrap - 1 | 0;
                                    $start = $wrap + ($length + 1 | 0) | 0;
                                    if ($start == $end) {
                                        $isLastRun = 1;
                                        break c;
                                    }
                                    $currentColor = cbgu_IntArray_peek(cbggg_GlyphLayout_colorStack);
                                    break c;
                                }
                                if ($length != (-2)) {
                                    $start = $wrap;
                                    break d;
                                }
                                $start = $wrap + 1 | 0;
                                break d;
                            default:
                        }
                        $start = $wrap;
                    }
                    continue b;
                }
            }
            $run = cbgu_Pool_obtain(cbggg_GlyphLayout_glyphRunPool);
            $run.$x1 = 0.0;
            $run.$y2 = $y;
            cbggg_BitmapFont$BitmapFontData_getGlyphs($fontData, $run, var$2, $runStart, $runEnd, $lastGlyph);
            $this.$glyphCount = $this.$glyphCount + $run.$glyphs.$size0 | 0;
            if ($currentColor != var$22) {
                var$1 = $this.$colors;
                $wrap = cbgu_IntArray_get(var$1, var$1.$size1 - 2 | 0);
                $i = $this.$glyphCount;
                if ($wrap != $i) {
                    cbgu_IntArray_add($this.$colors, $i);
                    cbgu_IntArray_add($this.$colors, $currentColor);
                } else {
                    var$1 = $this.$colors;
                    cbgu_IntArray_set(var$1, var$1.$size1 - 1 | 0, $currentColor);
                }
                var$22 = $currentColor;
            }
            e: {
                if (!$run.$glyphs.$size0) {
                    cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $run);
                    if ($lineRun === null)
                        break e;
                } else if ($lineRun !== null) {
                    cbggg_GlyphLayout$GlyphRun_appendRun($lineRun, $run);
                    cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $run);
                } else {
                    cbgu_Array_add($this.$runs, $run);
                    $lineRun = $run;
                }
                if (!$newline && !$isLastRun)
                    $lastGlyph = cbgu_Array_peek($lineRun.$glyphs);
                else {
                    cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $lineRun);
                    $lastGlyph = null;
                }
                if ($wrapOrTruncate && $lineRun.$glyphs.$size0 && !(!$newline && !$isLastRun)) {
                    $runWidth = cbgu_FloatArray_first($lineRun.$xAdvances) + cbgu_FloatArray_get($lineRun.$xAdvances, 1);
                    $i = 2;
                    while ($i < $lineRun.$xAdvances.$size2) {
                        var$1 = $lineRun.$glyphs;
                        $wrap = $i - 1 | 0;
                        if ($runWidth + cbggg_GlyphLayout_getGlyphWidth($this, cbgu_Array_get(var$1, $wrap), $fontData) - 9.999999747378752E-5 <= $targetWidth)
                            $runWidth = $runWidth + $lineRun.$xAdvances.$items0.data[$i];
                        else {
                            if ($truncate !== null) {
                                cbggg_GlyphLayout_truncate($this, $fontData, $lineRun, $targetWidth, $truncate);
                                break a;
                            }
                            $wrapIndex = cbggg_BitmapFont$BitmapFontData_getWrapIndex($fontData, $lineRun.$glyphs, $i);
                            if (!(!$wrapIndex && $lineRun.$x1 === 0.0) && $wrapIndex < $lineRun.$glyphs.$size0)
                                $wrap = $wrapIndex;
                            $lineRun = cbggg_GlyphLayout_wrap($this, $fontData, $lineRun, $wrap);
                            if ($lineRun === null)
                                break e;
                            cbgu_Array_add($this.$runs, $lineRun);
                            $y = $y + $down;
                            $lineRun.$x1 = 0.0;
                            $lineRun.$y2 = $y;
                            $runWidth = cbgu_FloatArray_first($lineRun.$xAdvances) + cbgu_FloatArray_get($lineRun.$xAdvances, 1);
                            $i = 1;
                        }
                        $i = $i + 1 | 0;
                    }
                }
            }
            if ($newline) {
                $lineRun = null;
                $lastGlyph = null;
                $y = $runEnd != $runStart ? $y + $down : $y + $down * $fontData.$blankLineScale;
            }
            $runStart = $start;
        }
    }
    f: {
        $this.$height2 = $fontData.$capHeight + jl_Math_abs($y);
        cbggg_GlyphLayout_calculateWidths($this, $fontData);
        if (!($halign & 8)) {
            $start = !($halign & 1) ? 0 : 1;
            var$1 = $this.$runs;
            var$13 = var$1.$items;
            $end = 0;
            $halign = var$1.$size0;
            while (true) {
                if ($end >= $halign)
                    break f;
                var$1 = var$13.data[$end];
                var$1.$x1 = var$1.$x1 + (!$start ? $targetWidth - var$1.$width4 : 0.5 * ($targetWidth - var$1.$width4));
                $end = $end + 1 | 0;
            }
        }
    }
    if ($markupEnabled)
        cbgu_IntArray_clear(cbggg_GlyphLayout_colorStack);
},
cbggg_GlyphLayout_calculateWidths = ($this, $fontData) => {
    let $width, $run, $runsItems, $i, $n, $xAdvances, $runWidth, $max, $glyph, $glyphs, $ii, $nn;
    $width = 0.0;
    $run = $this.$runs;
    $runsItems = $run.$items;
    $i = 0;
    $n = $run.$size0;
    while ($i < $n) {
        $run = $runsItems.data[$i];
        $xAdvances = $run.$xAdvances.$items0.data;
        $runWidth = $run.$x1 + $xAdvances[0];
        $max = 0.0;
        $glyph = $run.$glyphs;
        $glyphs = $glyph.$items;
        $ii = 0;
        $nn = $glyph.$size0;
        while ($ii < $nn) {
            $max = jl_Math_max0($max, $runWidth + cbggg_GlyphLayout_getGlyphWidth($this, $glyphs.data[$ii], $fontData));
            $ii = $ii + 1 | 0;
            $runWidth = $runWidth + $xAdvances[$ii];
        }
        $runWidth = jl_Math_max0($runWidth, $max);
        $max = $run.$x1;
        $runWidth = $runWidth - $max;
        $run.$width4 = $runWidth;
        $width = jl_Math_max0($width, $max + $runWidth);
        $i = $i + 1 | 0;
    }
    $this.$width5 = $width;
},
cbggg_GlyphLayout_truncate = ($this, $fontData, $run, $targetWidth, $truncate) => {
    let $glyphCount, $truncateRun, $truncateWidth, var$8, $xAdvances, $i, $n, $count, $width, $xAdvances_0, $droppedGlyphCount;
    $glyphCount = $run.$glyphs.$size0;
    cbggg_GlyphLayout_$callClinit();
    $truncateRun = cbgu_Pool_obtain(cbggg_GlyphLayout_glyphRunPool);
    cbggg_BitmapFont$BitmapFontData_getGlyphs($fontData, $truncateRun, $truncate, 0, $truncate.$length(), null);
    $truncateWidth = 0.0;
    if ($truncateRun.$xAdvances.$size2 > 0) {
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $truncateRun);
        var$8 = $truncateRun.$xAdvances;
        $xAdvances = var$8.$items0;
        $i = 1;
        $n = var$8.$size2;
        while ($i < $n) {
            $truncateWidth = $truncateWidth + $xAdvances.data[$i];
            $i = $i + 1 | 0;
        }
    }
    $targetWidth = $targetWidth - $truncateWidth;
    $count = 0;
    $width = $run.$x1;
    var$8 = $run.$xAdvances;
    $xAdvances_0 = var$8.$items0;
    a: {
        while (true) {
            if ($count >= var$8.$size2)
                break a;
            $width = $width + $xAdvances_0.data[$count];
            if ($width > $targetWidth)
                break;
            $count = $count + 1 | 0;
        }
    }
    if ($count <= 1) {
        cbgu_Array_clear($run.$glyphs);
        cbgu_FloatArray_clear($run.$xAdvances);
        cbgu_FloatArray_addAll0($run.$xAdvances, $truncateRun.$xAdvances);
    } else {
        cbgu_Array_truncate($run.$glyphs, $count - 1 | 0);
        cbgu_FloatArray_truncate($run.$xAdvances, $count);
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $run);
        var$8 = $truncateRun.$xAdvances;
        $droppedGlyphCount = var$8.$size2;
        if ($droppedGlyphCount > 0)
            cbgu_FloatArray_addAll1($run.$xAdvances, var$8, 1, $droppedGlyphCount - 1 | 0);
    }
    b: {
        $droppedGlyphCount = $glyphCount - $run.$glyphs.$size0 | 0;
        if ($droppedGlyphCount > 0) {
            $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled)
                while (true) {
                    $fontData = $this.$colors;
                    $droppedGlyphCount = $fontData.$size1;
                    if ($droppedGlyphCount <= 2)
                        break b;
                    if (cbgu_IntArray_get($fontData, $droppedGlyphCount - 2 | 0) < $this.$glyphCount)
                        break b;
                    $fontData = $this.$colors;
                    $fontData.$size1 = $fontData.$size1 - 2 | 0;
                }
        }
    }
    cbgu_Array_addAll($run.$glyphs, $truncateRun.$glyphs);
    $this.$glyphCount = $this.$glyphCount + $truncate.$length() | 0;
    cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $truncateRun);
},
cbggg_GlyphLayout_wrap = ($this, $fontData, $first, $secondStart) => {
    let $glyphs2, $glyphCount, $xAdvances2, $firstEnd, $reductionThreshold, $second, $droppedGlyphCount, $xAdvances1, $lastColor, $glyphs1, $secondGlyphCount, var$15, $i, $colorChangeIndex, $firstGlyphCount;
    $glyphs2 = $first.$glyphs;
    $glyphCount = $glyphs2.$size0;
    $xAdvances2 = $first.$xAdvances;
    $firstEnd = $secondStart;
    a: {
        while (true) {
            if ($firstEnd <= 0)
                break a;
            if (!cbggg_BitmapFont$BitmapFontData_isWhitespace($fontData, (cbgu_Array_get($glyphs2, $firstEnd - 1 | 0)).$id0 & 65535))
                break;
            $firstEnd = $firstEnd + (-1) | 0;
        }
    }
    b: {
        while (true) {
            $reductionThreshold = $rt_compare($secondStart, $glyphCount);
            if ($reductionThreshold >= 0)
                break b;
            if (!cbggg_BitmapFont$BitmapFontData_isWhitespace($fontData, (cbgu_Array_get($glyphs2, $secondStart)).$id0 & 65535))
                break;
            $secondStart = $secondStart + 1 | 0;
        }
    }
    $second = null;
    if ($reductionThreshold >= 0) {
        cbgu_Array_truncate($glyphs2, $firstEnd);
        cbgu_FloatArray_truncate($xAdvances2, $firstEnd + 1 | 0);
        $droppedGlyphCount = $secondStart - $firstEnd | 0;
        if ($droppedGlyphCount > 0) {
            $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled) {
                $xAdvances1 = $this.$colors;
                if (cbgu_IntArray_get($xAdvances1, $xAdvances1.$size1 - 2 | 0) > $this.$glyphCount) {
                    $lastColor = cbgu_IntArray_peek($this.$colors);
                    while (true) {
                        $xAdvances1 = $this.$colors;
                        $secondStart = cbgu_IntArray_get($xAdvances1, $xAdvances1.$size1 - 2 | 0);
                        $droppedGlyphCount = $this.$glyphCount;
                        if ($secondStart <= $droppedGlyphCount)
                            break;
                        $xAdvances1 = $this.$colors;
                        $xAdvances1.$size1 = $xAdvances1.$size1 - 2 | 0;
                    }
                    $xAdvances1 = $this.$colors;
                    cbgu_IntArray_set($xAdvances1, $xAdvances1.$size1 - 2 | 0, $droppedGlyphCount);
                    $xAdvances1 = $this.$colors;
                    cbgu_IntArray_set($xAdvances1, $xAdvances1.$size1 - 1 | 0, $lastColor);
                }
            }
        }
    } else {
        cbggg_GlyphLayout_$callClinit();
        $second = cbgu_Pool_obtain(cbggg_GlyphLayout_glyphRunPool);
        $glyphs1 = $second.$glyphs;
        if ((0 + $firstEnd | 0) > $glyphs2.$size0) {
            $fontData = new jl_IllegalArgumentException;
            $first = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($first);
            jl_AbstractStringBuilder_append($first, $rt_s(1));
            $first = jl_StringBuilder_append1($first, 0);
            jl_AbstractStringBuilder_append($first, $rt_s(2));
            $first = jl_StringBuilder_append1($first, $firstEnd);
            jl_AbstractStringBuilder_append($first, $rt_s(3));
            jl_Exception__init_($fontData, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($first, $glyphs2.$size0)));
            $rt_throw($fontData);
        }
        cbgu_Array_addAll0($glyphs1, $glyphs2.$items, 0, $firstEnd);
        $secondGlyphCount = $secondStart - 1 | 0;
        $reductionThreshold = $glyphs2.$size0;
        if ($secondGlyphCount >= $reductionThreshold) {
            $fontData = new jl_IndexOutOfBoundsException;
            $first = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($first);
            jl_AbstractStringBuilder_append($first, $rt_s(4));
            $first = jl_StringBuilder_append1($first, $secondGlyphCount);
            jl_AbstractStringBuilder_append($first, $rt_s(5));
            jl_Exception__init_($fontData, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($first, $glyphs2.$size0)));
            $rt_throw($fontData);
        }
        if (0 > $secondGlyphCount) {
            $fontData = new jl_IndexOutOfBoundsException;
            $first = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($first);
            jl_AbstractStringBuilder_append($first, $rt_s(6));
            $first = jl_StringBuilder_append1($first, 0);
            jl_AbstractStringBuilder_append($first, $rt_s(7));
            jl_Exception__init_($fontData, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($first, $secondGlyphCount)));
            $rt_throw($fontData);
        }
        var$15 = $glyphs2.$items;
        $droppedGlyphCount = ($secondGlyphCount - 0 | 0) + 1 | 0;
        $i = $reductionThreshold - $droppedGlyphCount | 0;
        if ($glyphs2.$ordered) {
            $droppedGlyphCount = 0 + $droppedGlyphCount | 0;
            jl_System_fastArraycopy(var$15, $droppedGlyphCount, var$15, 0, $reductionThreshold - $droppedGlyphCount | 0);
        } else {
            $droppedGlyphCount = jl_Math_max($i, $secondGlyphCount + 1 | 0);
            jl_System_fastArraycopy(var$15, $droppedGlyphCount, var$15, 0, $reductionThreshold - $droppedGlyphCount | 0);
        }
        $droppedGlyphCount = $i;
        while ($droppedGlyphCount < $reductionThreshold) {
            var$15.data[$droppedGlyphCount] = null;
            $droppedGlyphCount = $droppedGlyphCount + 1 | 0;
        }
        $glyphs2.$size0 = $i;
        $first.$glyphs = $glyphs1;
        $second.$glyphs = $glyphs2;
        $xAdvances1 = $second.$xAdvances;
        cbgu_FloatArray_addAll1($xAdvances1, $xAdvances2, 0, $firstEnd + 1 | 0);
        $colorChangeIndex = $xAdvances2.$size2;
        if ($secondStart >= $colorChangeIndex)
            $rt_throw(jl_IndexOutOfBoundsException__init_(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(4)), $secondStart), $rt_s(5)), $xAdvances2.$size2))));
        if (1 > $secondStart)
            $rt_throw(jl_IndexOutOfBoundsException__init_(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(6)), 1), $rt_s(7)), $secondStart))));
        $droppedGlyphCount = $secondGlyphCount + 1 | 0;
        $reductionThreshold = $colorChangeIndex - $droppedGlyphCount | 0;
        if ($xAdvances2.$ordered1) {
            var$15 = $xAdvances2.$items0;
            $secondStart = 1 + $droppedGlyphCount | 0;
            jl_System_fastArraycopy(var$15, $secondStart, var$15, 1, $colorChangeIndex - $secondStart | 0);
        } else {
            $secondStart = jl_Math_max($reductionThreshold, $secondStart + 1 | 0);
            var$15 = $xAdvances2.$items0;
            jl_System_fastArraycopy(var$15, $secondStart, var$15, 1, $colorChangeIndex - $secondStart | 0);
        }
        c: {
            $xAdvances2.$size2 = $reductionThreshold;
            $xAdvances2.$items0.data[0] = cbggg_GlyphLayout_getLineOffset($this, $glyphs2, $fontData);
            $first.$xAdvances = $xAdvances1;
            $second.$xAdvances = $xAdvances2;
            $firstGlyphCount = $first.$glyphs.$size0;
            $secondGlyphCount = $second.$glyphs.$size0;
            $droppedGlyphCount = ($glyphCount - $firstGlyphCount | 0) - $secondGlyphCount | 0;
            $secondStart = $this.$glyphCount - $droppedGlyphCount | 0;
            $this.$glyphCount = $secondStart;
            if ($fontData.$markupEnabled && $droppedGlyphCount > 0) {
                $reductionThreshold = $secondStart - $secondGlyphCount | 0;
                $i = $this.$colors.$size1 - 2 | 0;
                while (true) {
                    if ($i < 2)
                        break c;
                    $colorChangeIndex = cbgu_IntArray_get($this.$colors, $i);
                    if ($colorChangeIndex <= $reductionThreshold)
                        break;
                    cbgu_IntArray_set($this.$colors, $i, $colorChangeIndex - $droppedGlyphCount | 0);
                    $i = $i + (-2) | 0;
                }
            }
        }
    }
    if ($firstEnd)
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $first);
    else {
        cbggg_GlyphLayout_$callClinit();
        cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $first);
        cbgu_Array_pop($this.$runs);
    }
    return $second;
},
cbggg_GlyphLayout_setLastGlyphXAdvance = ($this, $fontData, $run) => {
    let $last;
    $last = cbgu_Array_peek($run.$glyphs);
    if (!$last.$fixedWidth) {
        $run = $run.$xAdvances;
        $run.$items0.data[$run.$size2 - 1 | 0] = cbggg_GlyphLayout_getGlyphWidth($this, $last, $fontData);
    }
},
cbggg_GlyphLayout_getGlyphWidth = ($this, $glyph, $fontData) => {
    return ($glyph.$fixedWidth ? $glyph.$xadvance : $glyph.$width + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight;
},
cbggg_GlyphLayout_getLineOffset = ($this, $glyphs, $fontData) => {
    let $first;
    $first = cbgu_Array_first($glyphs);
    return ($first.$fixedWidth ? 0.0 : ( -$first.$xoffset | 0) * $fontData.$scaleX) - $fontData.$padLeft;
},
cbggg_GlyphLayout_parseColorMarkup = ($this, $str, $start, $end) => {
    let $color, $i, $ch, $color_0;
    if ($start == $end)
        return (-1);
    $str = $str;
    switch (jl_String_charAt($str, $start)) {
        case 35:
            $color = 0;
            $i = $start + 1 | 0;
            a: {
                while (true) {
                    if ($i >= $end)
                        break a;
                    $ch = jl_String_charAt($str, $i);
                    if ($ch == 93)
                        break;
                    $color = ($color << 4) + $ch | 0;
                    if ($ch >= 48 && $ch <= 57)
                        $color = $color + (-48) | 0;
                    else if ($ch >= 65 && $ch <= 70)
                        $color = $color + (-55) | 0;
                    else {
                        if ($ch < 97)
                            break a;
                        if ($ch > 102)
                            break a;
                        $color = $color + (-87) | 0;
                    }
                    $i = $i + 1 | 0;
                }
                if ($i >= ($start + 2 | 0) && $i <= ($start + 9 | 0)) {
                    $start = $i - $start | 0;
                    if ($start < 8)
                        $color = $color << ((9 - $start | 0) << 2) | 255;
                    cbggg_GlyphLayout_$callClinit();
                    $str = cbggg_GlyphLayout_colorStack;
                    $end = (($color & (-16711936)) >>> 8 | 0) | ($color & 16711935) << 8;
                    cbgu_IntArray_add($str, ($end >>> 16 | 0) | $end << 16);
                    return $start;
                }
            }
            return (-1);
        case 91:
            break;
        case 93:
            cbggg_GlyphLayout_$callClinit();
            $str = cbggg_GlyphLayout_colorStack;
            $start = $str.$size1;
            if ($start > 1)
                $str.$size1 = $start - 1 | 0;
            return 0;
        default:
            $i = $start + 1 | 0;
            while ($i < $end) {
                if (jl_String_charAt($str, $i) == 93) {
                    $color_0 = jl_String_substring($str, $start, $i);
                    cbgg_Colors_$callClinit();
                    $color_0 = cbgu_ObjectMap_get(cbgg_Colors_map, $color_0);
                    if ($color_0 === null)
                        return (-1);
                    cbggg_GlyphLayout_$callClinit();
                    cbgu_IntArray_add(cbggg_GlyphLayout_colorStack, cbgg_Color_toIntBits($color_0));
                    return $i - $start | 0;
                }
                $i = $i + 1 | 0;
            }
            return (-1);
    }
    return (-2);
},
cbggg_GlyphLayout_reset = $this => {
    cbggg_GlyphLayout_$callClinit();
    cbgu_Pool_freeAll(cbggg_GlyphLayout_glyphRunPool, $this.$runs);
    cbgu_Array_clear($this.$runs);
    cbgu_IntArray_clear($this.$colors);
    $this.$glyphCount = 0;
    $this.$width5 = 0.0;
    $this.$height2 = 0.0;
},
cbggg_GlyphLayout_toString = $this => {
    let $buffer, $i, $n;
    if (!$this.$runs.$size0)
        return $rt_s(8);
    $buffer = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0($buffer, 128);
    jl_StringBuilder_append2($buffer, $this.$width5);
    jl_AbstractStringBuilder_append0($buffer, 120);
    jl_StringBuilder_append2($buffer, $this.$height2);
    jl_AbstractStringBuilder_append0($buffer, 10);
    $i = 0;
    $n = $this.$runs.$size0;
    while ($i < $n) {
        jl_AbstractStringBuilder_append($buffer, cbggg_GlyphLayout$GlyphRun_toString(cbgu_Array_get($this.$runs, $i)));
        jl_AbstractStringBuilder_append0($buffer, 10);
        $i = $i + 1 | 0;
    }
    $buffer.$length1 = $buffer.$length1 - 1 | 0;
    return jl_AbstractStringBuilder_toString($buffer);
},
cbggg_GlyphLayout__clinit_ = () => {
    cbggg_GlyphLayout_glyphRunPool = cbgu_Pools_get(new cbggg_GlyphLayout$_clinit_$lambda$_17_0);
    cbggg_GlyphLayout_colorStack = cbgu_IntArray__init_1(4);
};
function cbggg_TextureRegion() {
    let a = this; jl_Object.call(a);
    a.$texture0 = null;
    a.$u0 = 0.0;
    a.$v0 = 0.0;
    a.$u20 = 0.0;
    a.$v20 = 0.0;
    a.$regionWidth = 0;
    a.$regionHeight = 0;
}
let cbggg_TextureRegion__init_0 = ($this, $texture) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    if ($texture === null) {
        $texture = new jl_IllegalArgumentException;
        jl_Exception__init_($texture, $rt_s(9));
        $rt_throw($texture);
    }
    $this.$texture0 = $texture;
    var$2 = cbgg_Texture_getWidth($texture);
    var$3 = cbgg_Texture_getHeight($texture);
    var$4 = 1.0 / cbgg_Texture_getWidth($this.$texture0);
    var$5 = 1.0 / cbgg_Texture_getHeight($this.$texture0);
    var$6 = 0.0 * var$4;
    var$7 = 0.0 * var$5;
    var$8 = (0 + var$2 | 0) * var$4;
    var$9 = (0 + var$3 | 0) * var$5;
    var$10 = cbgg_Texture_getWidth($this.$texture0);
    var$11 = cbgg_Texture_getHeight($this.$texture0);
    var$4 = jl_Math_abs(var$8 - var$6);
    var$5 = var$10;
    $this.$regionWidth = jl_Math_round(var$4 * var$5);
    var$4 = jl_Math_abs(var$9 - var$7);
    var$12 = var$11;
    var$11 = jl_Math_round(var$4 * var$12);
    $this.$regionHeight = var$11;
    if ($this.$regionWidth == 1 && var$11 == 1) {
        var$4 = 0.25 / var$5;
        var$6 = var$6 + var$4;
        var$8 = var$8 - var$4;
        var$4 = 0.25 / var$12;
        var$7 = var$7 + var$4;
        var$9 = var$9 - var$4;
    }
    $this.$u0 = var$6;
    $this.$v0 = var$7;
    $this.$u20 = var$8;
    $this.$v20 = var$9;
    $this.$regionWidth = jl_Math_abs0(var$2);
    $this.$regionHeight = jl_Math_abs0(var$3);
},
cbggg_TextureRegion__init_ = var_0 => {
    let var_1 = new cbggg_TextureRegion();
    cbggg_TextureRegion__init_0(var_1, var_0);
    return var_1;
},
cbggg_Sprite = $rt_classWithoutFields(cbggg_TextureRegion),
cbgu_Disposable = $rt_classWithoutFields(0);
function cbggg_BitmapFont() {
    let a = this; jl_Object.call(a);
    a.$data10 = null;
    a.$regions = null;
    a.$cache = null;
    a.$flipped0 = 0;
    a.$integer0 = 0;
    a.$ownsTexture = 0;
}
let cbggg_BitmapFont_draw = ($this, $batch, $str, $x, $y) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20, var$21, var$22, var$23, var$24;
    var$5 = $this.$cache;
    var$5.$x3 = 0.0;
    var$5.$y3 = 0.0;
    var$6 = var$5.$pooledLayouts;
    cbgu_Pools_$callClinit();
    if (var$6 === null) {
        $str = new jl_IllegalArgumentException;
        jl_Exception__init_($str, $rt_s(10));
        $rt_throw($str);
    }
    var$7 = null;
    var$8 = 0;
    var$9 = var$6.$size0;
    while (var$8 < var$9) {
        a: {
            var$10 = cbgu_Array_get(var$6, var$8);
            if (var$10 !== null) {
                if (var$7 === null) {
                    var$7 = cbgu_ObjectMap_get(cbgu_Pools_typePools, jl_Object_getClass(var$10));
                    if (var$7 === null)
                        break a;
                }
                cbgu_Pool_free(var$7, var$10);
            }
        }
        var$8 = var$8 + 1 | 0;
    }
    cbgu_Array_clear(var$5.$pooledLayouts);
    cbgu_Array_clear(var$5.$layouts);
    var$9 = 0;
    var$11 = var$5.$idx0.data.length;
    while (var$9 < var$11) {
        var$12 = var$5.$pageGlyphIndices;
        if (var$12 !== null)
            cbgu_IntArray_clear(var$12.data[var$9]);
        var$5.$idx0.data[var$9] = 0;
        var$9 = var$9 + 1 | 0;
    }
    var$13 = $this.$cache;
    var$14 = $str.$nativeString.length;
    var$5 = null;
    var$6 = cbgu_Pool_obtain(cbgu_Pools_get(new cbggg_BitmapFontCache$addText$lambda$_31_0));
    cbgu_Array_add(var$13.$pooledLayouts, var$6);
    cbggg_GlyphLayout_setText(var$6, var$13.$font0, $str, 0, var$14, var$13.$color8, 0.0, 8, 0, var$5);
    $str = var$13.$font0;
    $y = $y + $str.$data10.$ascent;
    var$15 = var$6.$runs.$size0;
    if (var$15) {
        var$12 = var$13.$pageVertices;
        var$8 = var$12.data.length;
        var$9 = $str.$regions.$size0;
        if (var$8 < var$9) {
            var$16 = $rt_createArray($rt_arraycls($rt_floatcls), var$9);
            jl_System_fastArraycopy(var$12, 0, var$16, 0, var$8);
            var$13.$pageVertices = var$16;
            var$12 = $rt_createIntArray(var$9);
            var$16 = var$13.$idx0;
            jl_System_fastArraycopy(var$16, 0, var$12, 0, var$16.data.length);
            var$13.$idx0 = var$12;
            var$12 = $rt_createArray(cbgu_IntArray, var$9);
            var$8 = 0;
            var$16 = var$13.$pageGlyphIndices;
            if (var$16 !== null) {
                var$8 = var$16.data.length;
                jl_System_fastArraycopy(var$16, 0, var$12, 0, var$8);
            }
            var$16 = var$12.data;
            while (var$8 < var$9) {
                var$16[var$8] = cbgu_IntArray__init_();
                var$8 = var$8 + 1 | 0;
            }
            var$13.$pageGlyphIndices = var$12;
            var$13.$tempGlyphCount = $rt_createIntArray(var$9);
        }
        b: {
            cbgu_Array_add(var$13.$layouts, var$6);
            if (var$13.$pageVertices.data.length == 1)
                cbggg_BitmapFontCache_requirePageGlyphs(var$13, 0, var$6.$glyphCount);
            else {
                var$12 = var$13.$tempGlyphCount;
                ju_Arrays_fill(var$12, 0);
                var$8 = 0;
                var$9 = var$6.$runs.$size0;
                while (var$8 < var$9) {
                    $str = (cbgu_Array_get(var$6.$runs, var$8)).$glyphs;
                    var$16 = $str.$items;
                    var$11 = 0;
                    var$14 = $str.$size0;
                    while (var$11 < var$14) {
                        var$17 = var$16.data;
                        var$18 = var$12.data;
                        var$19 = var$17[var$11].$page;
                        var$18[var$19] = var$18[var$19] + 1 | 0;
                        var$11 = var$11 + 1 | 0;
                    }
                    var$8 = var$8 + 1 | 0;
                }
                var$12 = var$12.data;
                var$8 = 0;
                var$9 = var$12.length;
                while (true) {
                    if (var$8 >= var$9)
                        break b;
                    cbggg_BitmapFontCache_requirePageGlyphs(var$13, var$8, var$12[var$8]);
                    var$8 = var$8 + 1 | 0;
                }
            }
        }
        var$10 = var$6.$colors;
        var$19 = 0;
        var$8 = 0;
        var$9 = 0;
        var$20 = 0.0;
        var$11 = 0;
        while (var$11 < var$15) {
            $str = cbgu_Array_get(var$6.$runs, var$11);
            var$5 = $str.$glyphs;
            var$12 = var$5.$items;
            var$16 = $str.$xAdvances.$items0;
            var$21 = $x + $str.$x1;
            var$22 = $y + $str.$y2;
            var$14 = 0;
            var$23 = var$5.$size0;
            while (var$14 < var$23) {
                var$24 = var$9 + 1 | 0;
                if (var$9 == var$8) {
                    var$8 = var$19 + 1 | 0;
                    var$20 = cbgu_NumberUtils_intToFloatColor(cbgu_IntArray_get(var$10, var$8));
                    var$19 = var$8 + 1 | 0;
                    var$8 = var$19 >= var$10.$size1 ? (-1) : cbgu_IntArray_get(var$10, var$19);
                }
                var$17 = var$16.data;
                var$18 = var$12.data;
                var$21 = var$21 + var$17[var$14];
                cbggg_BitmapFontCache_addGlyph(var$13, var$18[var$14], var$21, var$22, var$20);
                var$14 = var$14 + 1 | 0;
                var$9 = var$24;
            }
            var$11 = var$11 + 1 | 0;
        }
        var$13.$currentTint = cbgg_Color_WHITE_FLOAT_BITS;
    }
    $str = $this.$cache;
    var$7 = $str.$font0.$regions;
    var$9 = 0;
    var$11 = $str.$pageVertices.data.length;
    var$5 = $batch;
    while (var$9 < var$11) {
        if ($str.$idx0.data[var$9] > 0) {
            var$12 = $str.$pageVertices.data[var$9];
            cbggg_SpriteBatch_draw(var$5, (cbgu_Array_get(var$7, var$9)).$texture0, var$12, 0, $str.$idx0.data[var$9]);
        }
        var$9 = var$9 + 1 | 0;
    }
    return var$6;
},
cbggg_NinePatch = $rt_classWithoutFields(),
cbggg_NinePatch_tmpDrawColor = null,
cbggg_NinePatch__clinit_ = () => {
    cbggg_NinePatch_tmpDrawColor = new cbgg_Color;
};
function cbgg_Color() {
    let a = this; jl_Object.call(a);
    a.$r = 0.0;
    a.$g = 0.0;
    a.$b = 0.0;
    a.$a = 0.0;
}
let cbgg_Color_WHITE = null,
cbgg_Color_LIGHT_GRAY = null,
cbgg_Color_GRAY = null,
cbgg_Color_DARK_GRAY = null,
cbgg_Color_BLACK = null,
cbgg_Color_WHITE_FLOAT_BITS = 0.0,
cbgg_Color_CLEAR = null,
cbgg_Color_CLEAR_WHITE = null,
cbgg_Color_BLUE = null,
cbgg_Color_NAVY = null,
cbgg_Color_ROYAL = null,
cbgg_Color_SLATE = null,
cbgg_Color_SKY = null,
cbgg_Color_CYAN = null,
cbgg_Color_TEAL = null,
cbgg_Color_GREEN = null,
cbgg_Color_CHARTREUSE = null,
cbgg_Color_LIME = null,
cbgg_Color_FOREST = null,
cbgg_Color_OLIVE = null,
cbgg_Color_YELLOW = null,
cbgg_Color_GOLD = null,
cbgg_Color_GOLDENROD = null,
cbgg_Color_ORANGE = null,
cbgg_Color_BROWN = null,
cbgg_Color_TAN = null,
cbgg_Color_FIREBRICK = null,
cbgg_Color_RED = null,
cbgg_Color_SCARLET = null,
cbgg_Color_CORAL = null,
cbgg_Color_SALMON = null,
cbgg_Color_PINK = null,
cbgg_Color_MAGENTA = null,
cbgg_Color_PURPLE = null,
cbgg_Color_VIOLET = null,
cbgg_Color_MAROON = null,
cbgg_Color__init_4 = ($this, $rgba8888) => {
    $this.$r = (($rgba8888 & (-16777216)) >>> 24 | 0) / 255.0;
    $this.$g = (($rgba8888 & 16711680) >>> 16 | 0) / 255.0;
    $this.$b = (($rgba8888 & 65280) >>> 8 | 0) / 255.0;
    $this.$a = ($rgba8888 & 255) / 255.0;
},
cbgg_Color__init_ = var_0 => {
    let var_1 = new cbgg_Color();
    cbgg_Color__init_4(var_1, var_0);
    return var_1;
},
cbgg_Color__init_2 = ($this, $r, $g, $b, $a) => {
    $this.$r = $r;
    $this.$g = $g;
    $this.$b = $b;
    $this.$a = $a;
    cbgg_Color_clamp($this);
},
cbgg_Color__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgg_Color();
    cbgg_Color__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgg_Color__init_3 = ($this, $color) => {
    cbgg_Color_set0($this, $color);
},
cbgg_Color__init_1 = var_0 => {
    let var_1 = new cbgg_Color();
    cbgg_Color__init_3(var_1, var_0);
    return var_1;
},
cbgg_Color_set0 = ($this, $color) => {
    $this.$r = $color.$r;
    $this.$g = $color.$g;
    $this.$b = $color.$b;
    $this.$a = $color.$a;
    return $this;
},
cbgg_Color_clamp = $this => {
    let var$1, var$2;
    var$1 = $this.$r;
    if (var$1 < 0.0)
        $this.$r = 0.0;
    else if (var$1 > 1.0)
        $this.$r = 1.0;
    var$2 = $this.$g;
    if (var$2 < 0.0)
        $this.$g = 0.0;
    else if (var$2 > 1.0)
        $this.$g = 1.0;
    var$2 = $this.$b;
    if (var$2 < 0.0)
        $this.$b = 0.0;
    else if (var$2 > 1.0)
        $this.$b = 1.0;
    var$2 = $this.$a;
    if (var$2 < 0.0)
        $this.$a = 0.0;
    else if (var$2 > 1.0)
        $this.$a = 1.0;
    return $this;
},
cbgg_Color_set = ($this, $r, $g, $b, $a) => {
    $this.$r = $r;
    $this.$g = $g;
    $this.$b = $b;
    $this.$a = $a;
    return cbgg_Color_clamp($this);
},
cbgg_Color_lerp = ($this, $target, $t) => {
    let var$3, var$4;
    var$3 = $this.$r;
    $this.$r = var$3 + $t * ($target.$r - var$3);
    var$4 = $this.$g;
    $this.$g = var$4 + $t * ($target.$g - var$4);
    var$4 = $this.$b;
    $this.$b = var$4 + $t * ($target.$b - var$4);
    var$3 = $this.$a;
    $this.$a = var$3 + $t * ($target.$a - var$3);
    return cbgg_Color_clamp($this);
},
cbgg_Color_equals = ($this, $o) => {
    let $color;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $color = $o;
        return cbgg_Color_toIntBits($this) != cbgg_Color_toIntBits($color) ? 0 : 1;
    }
    return 0;
},
cbgg_Color_hashCode = $this => {
    let var$1, $result, var$3;
    var$1 = $this.$r;
    $result = 31 * (var$1 === 0.0 ? 0 : jl_Float_floatToIntBits(var$1)) | 0;
    var$1 = $this.$g;
    $result = 31 * ($result + (var$1 === 0.0 ? 0 : jl_Float_floatToIntBits(var$1)) | 0) | 0;
    var$3 = $this.$b;
    $result = 31 * ($result + (var$3 === 0.0 ? 0 : jl_Float_floatToIntBits(var$3)) | 0) | 0;
    var$3 = $this.$a;
    return $result + (var$3 === 0.0 ? 0 : jl_Float_floatToIntBits(var$3)) | 0;
},
cbgg_Color_toFloatBits = $this => {
    return cbgu_NumberUtils_intToFloatColor((255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0);
},
cbgg_Color_toIntBits = $this => {
    return (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0;
};
let cbgg_Color_toString = $this => {
    let $value, var$2;
    $value = jl_Integer_toHexString((255.0 * $this.$r | 0) << 24 | (255.0 * $this.$g | 0) << 16 | (255.0 * $this.$b | 0) << 8 | 255.0 * $this.$a | 0);
    while ($value.$nativeString.length < 8) {
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_AbstractStringBuilder_append(var$2, $rt_s(11));
        jl_AbstractStringBuilder_append(var$2, $value);
        $value = jl_AbstractStringBuilder_toString(var$2);
    }
    return $value;
},
cbgg_Color_abgr8888ToColor = ($color, $value) => {
    let $c;
    $c = $rt_floatToRawIntBits($value);
    $c = $c | (($c >>> 24 | 0) * 1.003937005996704 | 0) << 24;
    $color.$a = (($c & (-16777216)) >>> 24 | 0) / 255.0;
    $color.$b = (($c & 16711680) >>> 16 | 0) / 255.0;
    $color.$g = (($c & 65280) >>> 8 | 0) / 255.0;
    $color.$r = ($c & 255) / 255.0;
},
cbgg_Color_cpy = $this => {
    return cbgg_Color__init_1($this);
},
cbgg_Color__clinit_ = () => {
    cbgg_Color_WHITE = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    cbgg_Color_LIGHT_GRAY = cbgg_Color__init_((-1077952513));
    cbgg_Color_GRAY = cbgg_Color__init_(2139062271);
    cbgg_Color_DARK_GRAY = cbgg_Color__init_(1061109759);
    cbgg_Color_BLACK = cbgg_Color__init_0(0.0, 0.0, 0.0, 1.0);
    cbgg_Color_WHITE_FLOAT_BITS = cbgg_Color_toFloatBits(cbgg_Color_WHITE);
    cbgg_Color_CLEAR = cbgg_Color__init_0(0.0, 0.0, 0.0, 0.0);
    cbgg_Color_CLEAR_WHITE = cbgg_Color__init_0(1.0, 1.0, 1.0, 0.0);
    cbgg_Color_BLUE = cbgg_Color__init_0(0.0, 0.0, 1.0, 1.0);
    cbgg_Color_NAVY = cbgg_Color__init_0(0.0, 0.0, 0.5, 1.0);
    cbgg_Color_ROYAL = cbgg_Color__init_(1097458175);
    cbgg_Color_SLATE = cbgg_Color__init_(1887473919);
    cbgg_Color_SKY = cbgg_Color__init_((-2016482305));
    cbgg_Color_CYAN = cbgg_Color__init_0(0.0, 1.0, 1.0, 1.0);
    cbgg_Color_TEAL = cbgg_Color__init_0(0.0, 0.5, 0.5, 1.0);
    cbgg_Color_GREEN = cbgg_Color__init_(16711935);
    cbgg_Color_CHARTREUSE = cbgg_Color__init_(2147418367);
    cbgg_Color_LIME = cbgg_Color__init_(852308735);
    cbgg_Color_FOREST = cbgg_Color__init_(579543807);
    cbgg_Color_OLIVE = cbgg_Color__init_(1804477439);
    cbgg_Color_YELLOW = cbgg_Color__init_((-65281));
    cbgg_Color_GOLD = cbgg_Color__init_((-2686721));
    cbgg_Color_GOLDENROD = cbgg_Color__init_((-626712321));
    cbgg_Color_ORANGE = cbgg_Color__init_((-5963521));
    cbgg_Color_BROWN = cbgg_Color__init_((-1958407169));
    cbgg_Color_TAN = cbgg_Color__init_((-759919361));
    cbgg_Color_FIREBRICK = cbgg_Color__init_((-1306385665));
    cbgg_Color_RED = cbgg_Color__init_((-16776961));
    cbgg_Color_SCARLET = cbgg_Color__init_((-13361921));
    cbgg_Color_CORAL = cbgg_Color__init_((-8433409));
    cbgg_Color_SALMON = cbgg_Color__init_((-92245249));
    cbgg_Color_PINK = cbgg_Color__init_((-9849601));
    cbgg_Color_MAGENTA = cbgg_Color__init_0(1.0, 0.0, 1.0, 1.0);
    cbgg_Color_PURPLE = cbgg_Color__init_((-1608453889));
    cbgg_Color_VIOLET = cbgg_Color__init_((-293409025));
    cbgg_Color_MAROON = cbgg_Color__init_((-1339006721));
};
function cbgg_GLTexture() {
    let a = this; jl_Object.call(a);
    a.$glTarget = 0;
    a.$glHandle = 0;
    a.$minFilter = null;
    a.$magFilter = null;
    a.$uWrap = null;
    a.$vWrap = null;
    a.$anisotropicFilterLevel = 0.0;
}
let cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0,
cbgg_GLTexture__init_ = ($this, $glTarget, $glHandle) => {
    let var$3;
    var$3 = cbgg_Texture$TextureFilter_Nearest;
    $this.$minFilter = var$3;
    $this.$magFilter = var$3;
    var$3 = cbgg_Texture$TextureWrap_ClampToEdge;
    $this.$uWrap = var$3;
    $this.$vWrap = var$3;
    $this.$anisotropicFilterLevel = 1.0;
    $this.$glTarget = $glTarget;
    $this.$glHandle = $glHandle;
},
cbgg_GLTexture_bind = $this => {
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
},
cbgg_GLTexture_bind0 = ($this, $unit) => {
    cbg_Gdx_gl.$glActiveTexture(33984 + $unit | 0);
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
},
cbgg_GLTexture_getMinFilter = $this => {
    return $this.$minFilter;
},
cbgg_GLTexture_getTextureObjectHandle = $this => {
    return $this.$glHandle;
},
cbgg_GLTexture_unsafeSetWrap0 = ($this, $u, $v) => {
    cbgg_GLTexture_unsafeSetWrap($this, $u, $v, 0);
},
cbgg_GLTexture_unsafeSetWrap = ($this, $u, $v, $force) => {
    if ($u !== null && !(!$force && $this.$uWrap === $u)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10242, $u.$glEnum);
        $this.$uWrap = $u;
    }
    if ($v !== null && !(!$force && $this.$vWrap === $v)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10243, $v.$glEnum);
        $this.$vWrap = $v;
    }
},
cbgg_GLTexture_setWrap = ($this, $u, $v) => {
    $this.$uWrap = $u;
    $this.$vWrap = $v;
    cbgg_GLTexture_bind($this);
    cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10242, $u.$glEnum);
    cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10243, $v.$glEnum);
},
cbgg_GLTexture_unsafeSetFilter0 = ($this, $minFilter, $magFilter) => {
    cbgg_GLTexture_unsafeSetFilter($this, $minFilter, $magFilter, 0);
},
cbgg_GLTexture_unsafeSetFilter = ($this, $minFilter, $magFilter, $force) => {
    if ($minFilter !== null && !(!$force && $this.$minFilter === $minFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, $minFilter.$glEnum0);
        $this.$minFilter = $minFilter;
    }
    if ($magFilter !== null && !(!$force && $this.$magFilter === $magFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, $magFilter.$glEnum0);
        $this.$magFilter = $magFilter;
    }
},
cbgg_GLTexture_setFilter = ($this, $minFilter, $magFilter) => {
    $this.$minFilter = $minFilter;
    $this.$magFilter = $magFilter;
    cbgg_GLTexture_bind($this);
    cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, $minFilter.$glEnum0);
    cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, $magFilter.$glEnum0);
},
cbgg_GLTexture_unsafeSetAnisotropicFilter = ($this, $level, $force) => {
    let $max, var$4, var$5;
    $max = cbgg_GLTexture_maxAnisotropicFilterLevel;
    if ($max <= 0.0) {
        if (!cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(12))) {
            $max = 1.0;
            cbgg_GLTexture_maxAnisotropicFilterLevel = $max;
        } else {
            var$4 = cbgu_BufferUtils_newFloatBuffer(16);
            var$5 = var$4;
            jn_Buffer_position(var$5, 0);
            jn_Buffer_limit(var$5, var$4.$capacityImpl());
            cbg_Gdx_gl20.$glGetFloatv(34047, var$4);
            $max = jn_FloatBufferImpl_get(var$4, 0);
            cbgg_GLTexture_maxAnisotropicFilterLevel = $max;
        }
    }
    if ($max === 1.0)
        return 1.0;
    $level = jl_Math_min0($level, $max);
    if (!$force && (jl_Math_abs($level - $this.$anisotropicFilterLevel) > 0.10000000149011612 ? 0 : 1))
        return $this.$anisotropicFilterLevel;
    cbg_Gdx_gl20.$glTexParameterf(3553, 34046, $level);
    $this.$anisotropicFilterLevel = $level;
    return $level;
},
cbgg_GLTexture__clinit_ = () => {
    cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
};
function cbgg_Texture() {
    cbgg_GLTexture.call(this);
    this.$data4 = null;
}
let cbgg_Texture_managedTextures = null,
cbgg_Texture_$callClinit = () => {
    cbgg_Texture_$callClinit = $rt_eraseClinit(cbgg_Texture);
    cbgg_Texture__clinit_();
},
cbgg_Texture__init_4 = ($this, $file) => {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_($this, $file, null, 0);
},
cbgg_Texture__init_2 = var_0 => {
    let var_1 = new cbgg_Texture();
    cbgg_Texture__init_4(var_1, var_0);
    return var_1;
},
cbgg_Texture__init_5 = ($this, $file, $useMipMaps) => {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_($this, $file, null, $useMipMaps);
},
cbgg_Texture__init_1 = (var_0, var_1) => {
    let var_2 = new cbgg_Texture();
    cbgg_Texture__init_5(var_2, var_0, var_1);
    return var_2;
},
cbgg_Texture__init_ = ($this, $file, $format, $useMipMaps) => {
    let var$4, var$5;
    cbgg_Texture_$callClinit();
    if ($file === null)
        var$4 = null;
    else {
        var$4 = new cbggg_FileTextureData;
        var$5 = cbgg_Pixmap__init_0($file);
        var$4.$width3 = 0;
        var$4.$height4 = 0;
        var$4.$isPrepared0 = 0;
        var$4.$file0 = $file;
        var$4.$pixmap = var$5;
        var$4.$format = $format;
        var$4.$useMipMaps1 = $useMipMaps;
        $file = cbggg_FileTextureData_ensurePot(var$4, var$5);
        var$4.$pixmap = $file;
        var$4.$width3 = cbgg_Pixmap_getWidth($file);
        var$4.$height4 = cbgg_Pixmap_getHeight(var$4.$pixmap);
        if ($format === null)
            var$4.$format = cbgg_Pixmap_getFormat(var$4.$pixmap);
    }
    cbgg_Texture__init_0($this, var$4);
},
cbgg_Texture__init_6 = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Texture();
    cbgg_Texture__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Texture__init_0 = ($this, $data) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    cbgg_Texture_$callClinit();
    cbgg_GLTexture__init_($this, 3553, cgxgbt_TeaGL20_glGenTexture(cbg_Gdx_gl));
    if ($this.$data4 !== null && $data.$isManaged() != $this.$data4.$isManaged()) {
        $data = new cbgu_GdxRuntimeException;
        jl_Exception__init_($data, $rt_s(13));
        $rt_throw($data);
    }
    $this.$data4 = $data;
    if (!$data.$isPrepared())
        $data.$prepare();
    var$2 = $this;
    cbgg_GLTexture_bind(var$2);
    if (!$data.$isPrepared())
        $data.$prepare();
    if ($data.$getType() === cbgg_TextureData$TextureDataType_Custom)
        $data.$consumeCustomData(3553);
    else {
        var$3 = $data.$consumePixmap();
        var$4 = $data.$disposePixmap();
        if ($data.$getFormat() === cbgg_Pixmap_getFormat(var$3))
            var$5 = var$3;
        else {
            var$5 = cbgg_Pixmap__init_(cbgg_Pixmap_getWidth(var$3), cbgg_Pixmap_getHeight(var$3), $data.$getFormat());
            cbgg_Pixmap_setBlending(var$5, cbgg_Pixmap$Blending_None);
            cbgg_Pixmap_drawPixmap(var$5, var$3, 0, 0, 0, 0, cbgg_Pixmap_getWidth(var$3), cbgg_Pixmap_getHeight(var$3));
            if ($data.$disposePixmap())
                cbgg_Pixmap_dispose(var$3);
            var$4 = 1;
        }
        cbg_Gdx_gl.$glPixelStorei(3317, 1);
        if (!$data.$useMipMaps())
            cbg_Gdx_gl.$glTexImage2D(3553, 0, cbgg_Pixmap_getGLInternalFormat(var$5), cbgg_Pixmap_getWidth(var$5), cbgg_Pixmap_getHeight(var$5), 0, cbgg_Pixmap_getGLFormat(var$5), cbgg_Pixmap_getGLType(var$5), cbgg_Pixmap_getPixels(var$5));
        else {
            var$6 = cbgg_Pixmap_getWidth(var$5);
            var$7 = cbgg_Pixmap_getHeight(var$5);
            if (!cbggg_MipMapGenerator_useHWMipMap)
                cbggg_MipMapGenerator_generateMipMapCPU(3553, var$5, var$6, var$7);
            else {
                var$3 = cbg_Application$ApplicationType_WebGL;
                if (var$3 !== cbg_Application$ApplicationType_Android && var$3 !== var$3 && var$3 !== cbg_Application$ApplicationType_iOS) {
                    if (!cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(14)) && !cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(15)) && !jl_String_equals(jl_Class_getName(jl_Object_getClass(cbg_Gdx_gl20)), $rt_s(16)) && cbg_Gdx_gl30 === null)
                        cbggg_MipMapGenerator_generateMipMapCPU(3553, var$5, var$6, var$7);
                    else {
                        cbg_Gdx_gl.$glTexImage2D(3553, 0, cbgg_Pixmap_getGLInternalFormat(var$5), cbgg_Pixmap_getWidth(var$5), cbgg_Pixmap_getHeight(var$5), 0, cbgg_Pixmap_getGLFormat(var$5), cbgg_Pixmap_getGLType(var$5), cbgg_Pixmap_getPixels(var$5));
                        cbg_Gdx_gl20.$glGenerateMipmap(3553);
                    }
                } else {
                    cbg_Gdx_gl.$glTexImage2D(3553, 0, cbgg_Pixmap_getGLInternalFormat(var$5), cbgg_Pixmap_getWidth(var$5), cbgg_Pixmap_getHeight(var$5), 0, cbgg_Pixmap_getGLFormat(var$5), cbgg_Pixmap_getGLType(var$5), cbgg_Pixmap_getPixels(var$5));
                    cbg_Gdx_gl20.$glGenerateMipmap(3553);
                }
            }
        }
        if (var$4)
            cbgg_Pixmap_dispose(var$5);
    }
    cbgg_GLTexture_unsafeSetFilter(var$2, $this.$minFilter, $this.$magFilter, 1);
    cbgg_GLTexture_unsafeSetWrap(var$2, $this.$uWrap, $this.$vWrap, 1);
    cbgg_GLTexture_unsafeSetAnisotropicFilter(var$2, $this.$anisotropicFilterLevel, 1);
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, 0);
    if ($data.$isManaged()) {
        $data = cbg_Gdx_app;
        var$8 = ju_HashMap_get(cbgg_Texture_managedTextures, $data);
        if (var$8 === null)
            var$8 = cbgu_Array__init_();
        cbgu_Array_add(var$8, $this);
        ju_HashMap_put(cbgg_Texture_managedTextures, $data, var$8);
    }
},
cbgg_Texture__init_3 = var_0 => {
    let var_1 = new cbgg_Texture();
    cbgg_Texture__init_0(var_1, var_0);
    return var_1;
},
cbgg_Texture_getWidth = $this => {
    return $this.$data4.$getWidth();
},
cbgg_Texture_getHeight = $this => {
    return $this.$data4.$getHeight();
},
cbgg_Texture_toString = $this => {
    let var$1;
    var$1 = $this.$data4;
    if (!(var$1 instanceof cbggg_FileTextureData))
        return jl_Object_toString($this);
    return jl_Object_toString(var$1);
},
cbgg_Texture__clinit_ = () => {
    cbgg_Texture_managedTextures = ju_HashMap__init_();
},
jl_Iterable = $rt_classWithoutFields(0);
function cbgu_Array() {
    let a = this; jl_Object.call(a);
    a.$items = null;
    a.$size0 = 0;
    a.$ordered = 0;
    a.$iterable0 = null;
}
let cbgu_Array__init_2 = $this => {
    cbgu_Array__init_1($this, 1, 16);
},
cbgu_Array__init_ = () => {
    let var_0 = new cbgu_Array();
    cbgu_Array__init_2(var_0);
    return var_0;
},
cbgu_Array__init_4 = ($this, $capacity) => {
    cbgu_Array__init_1($this, 1, $capacity);
},
cbgu_Array__init_0 = var_0 => {
    let var_1 = new cbgu_Array();
    cbgu_Array__init_4(var_1, var_0);
    return var_1;
},
cbgu_Array__init_1 = ($this, $ordered, $capacity) => {
    $this.$ordered = $ordered;
    $this.$items = $rt_createArray(jl_Object, $capacity);
},
cbgu_Array__init_3 = (var_0, var_1) => {
    let var_2 = new cbgu_Array();
    cbgu_Array__init_1(var_2, var_0, var_1);
    return var_2;
},
cbgu_Array_add = ($this, $value) => {
    let $items, var$3, var$4, var$5;
    $items = $this.$items;
    var$3 = $items.data;
    var$4 = $this.$size0;
    if (var$4 == var$3.length)
        $items = cbgu_Array_resize($this, jl_Math_max(8, var$4 * 1.75 | 0));
    $items = $items.data;
    var$5 = $this.$size0;
    $this.$size0 = var$5 + 1 | 0;
    $items[var$5] = $value;
},
cbgu_Array_addAll = ($this, $array) => {
    cbgu_Array_addAll0($this, $array.$items, 0, $array.$size0);
},
cbgu_Array_addAll0 = ($this, $array, $start, $count) => {
    let $items, var$5, $sizeNeeded;
    $items = $this.$items;
    var$5 = $items.data;
    $sizeNeeded = $this.$size0 + $count | 0;
    if ($sizeNeeded > var$5.length)
        $items = cbgu_Array_resize($this, jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size0 * 1.75 | 0));
    jl_System_fastArraycopy($array, $start, $items, $this.$size0, $count);
    $this.$size0 = $sizeNeeded;
},
cbgu_Array_get = ($this, $index) => {
    let var$2, var$3;
    if ($index < $this.$size0)
        return $this.$items.data[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append(var$3, $rt_s(17));
    var$3 = jl_StringBuilder_append1(var$3, $index);
    jl_AbstractStringBuilder_append(var$3, $rt_s(5));
    jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$3, $this.$size0)));
    $rt_throw(var$2);
},
cbgu_Array_set = ($this, $index, $value) => {
    let var$3;
    if ($index < $this.$size0) {
        $this.$items.data[$index] = $value;
        return;
    }
    $value = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append(var$3, $rt_s(17));
    var$3 = jl_StringBuilder_append1(var$3, $index);
    jl_AbstractStringBuilder_append(var$3, $rt_s(5));
    jl_Exception__init_($value, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$3, $this.$size0)));
    $rt_throw($value);
},
cbgu_Array_insert = ($this, $index, $value) => {
    let var$3, var$4, $items, var$6;
    var$3 = $this.$size0;
    if ($index > var$3) {
        $value = new jl_IndexOutOfBoundsException;
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_append(var$4, $rt_s(18));
        var$4 = jl_StringBuilder_append1(var$4, $index);
        jl_AbstractStringBuilder_append(var$4, $rt_s(7));
        jl_Exception__init_($value, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$4, $this.$size0)));
        $rt_throw($value);
    }
    $items = $this.$items;
    if (var$3 == $items.data.length)
        $items = cbgu_Array_resize($this, jl_Math_max(8, var$3 * 1.75 | 0));
    if (!$this.$ordered) {
        var$6 = $items.data;
        var$6[$this.$size0] = var$6[$index];
    } else
        jl_System_fastArraycopy($items, $index, $items, $index + 1 | 0, $this.$size0 - $index | 0);
    $items = $items.data;
    $this.$size0 = $this.$size0 + 1 | 0;
    $items[$index] = $value;
},
cbgu_Array_contains = ($this, $value, $identity) => {
    let $items, $i, var$5;
    a: {
        $items = $this.$items;
        $i = $this.$size0 - 1 | 0;
        if (!(!$identity && $value !== null)) {
            while (true) {
                if ($i < 0)
                    break a;
                var$5 = $items.data;
                $identity = $i + (-1) | 0;
                if (var$5[$i] === $value)
                    break;
                $i = $identity;
            }
            return 1;
        }
        while (true) {
            if ($i < 0)
                break a;
            var$5 = $items.data;
            $identity = $i + (-1) | 0;
            if ($value.$equals(var$5[$i]))
                return 1;
            $i = $identity;
        }
    }
    return 0;
},
cbgu_Array_removeValue = ($this, $value, $identity) => {
    let $items, $i, $n;
    a: {
        $items = $this.$items;
        if (!(!$identity && $value !== null)) {
            $i = 0;
            $n = $this.$size0;
            while ($i < $n) {
                if ($items.data[$i] === $value) {
                    cbgu_Array_removeIndex($this, $i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            $n = $this.$size0;
            while (true) {
                if ($i >= $n)
                    break a;
                if ($value.$equals($items.data[$i])) {
                    cbgu_Array_removeIndex($this, $i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
},
cbgu_Array_removeIndex = ($this, $index) => {
    let var$2, var$3, $value, $items, var$6, var$7;
    var$2 = $this.$size0;
    if ($index >= var$2) {
        var$3 = new jl_IndexOutOfBoundsException;
        $value = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($value);
        jl_AbstractStringBuilder_append($value, $rt_s(17));
        $value = jl_StringBuilder_append1($value, $index);
        jl_AbstractStringBuilder_append($value, $rt_s(5));
        jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($value, $this.$size0)));
        $rt_throw(var$3);
    }
    $items = $this.$items;
    var$6 = $items.data;
    $value = var$6[$index];
    var$7 = var$2 - 1 | 0;
    $this.$size0 = var$7;
    if (!$this.$ordered)
        var$6[$index] = var$6[var$7];
    else
        jl_System_fastArraycopy($items, $index + 1 | 0, $items, $index, var$7 - $index | 0);
    var$6[$this.$size0] = null;
    return $value;
},
cbgu_Array_pop = $this => {
    let var$1, $item, var$3, var$4;
    var$1 = $this.$size0;
    if (!var$1) {
        $item = new jl_IllegalStateException;
        jl_Exception__init_($item, $rt_s(19));
        $rt_throw($item);
    }
    var$3 = var$1 - 1 | 0;
    $this.$size0 = var$3;
    var$4 = $this.$items.data;
    $item = var$4[var$3];
    var$4[var$3] = null;
    return $item;
},
cbgu_Array_peek = $this => {
    let var$1, var$2;
    var$1 = $this.$size0;
    if (var$1)
        return $this.$items.data[var$1 - 1 | 0];
    var$2 = new jl_IllegalStateException;
    jl_Exception__init_(var$2, $rt_s(19));
    $rt_throw(var$2);
},
cbgu_Array_first = $this => {
    let var$1;
    if ($this.$size0)
        return $this.$items.data[0];
    var$1 = new jl_IllegalStateException;
    jl_Exception__init_(var$1, $rt_s(19));
    $rt_throw(var$1);
},
cbgu_Array_clear = $this => {
    ju_Arrays_fill0($this.$items, 0, $this.$size0, null);
    $this.$size0 = 0;
},
cbgu_Array_resize = ($this, $newSize) => {
    let var$2;
    var$2 = ju_Arrays_copyOf($this.$items, $newSize);
    $this.$items = var$2;
    return var$2;
},
cbgu_Array_sort = ($this, $comparator) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
    if (cbgu_Sort_instance === null)
        cbgu_Sort_instance = new cbgu_Sort;
    var$2 = cbgu_Sort_instance;
    var$3 = $this.$items;
    var$4 = 0;
    var$5 = $this.$size0;
    if (var$2.$timSort === null) {
        var$6 = new cbgu_TimSort;
        var$6.$minGallop = 7;
        var$6.$stackSize = 0;
        var$6.$tmp = $rt_createArray(jl_Object, 256);
        var$6.$runBase = $rt_createIntArray(40);
        var$6.$runLen = $rt_createIntArray(40);
        var$2.$timSort = var$6;
    }
    var$7 = var$3.data;
    var$2 = var$2.$timSort;
    var$2.$stackSize = 0;
    var$8 = var$7.length;
    if (var$4 > var$5) {
        $comparator = new jl_IllegalArgumentException;
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_AbstractStringBuilder_append(var$2, $rt_s(20));
        var$2 = jl_StringBuilder_append1(var$2, var$4);
        jl_AbstractStringBuilder_append(var$2, $rt_s(21));
        var$2 = jl_StringBuilder_append1(var$2, var$5);
        jl_AbstractStringBuilder_append(var$2, $rt_s(22));
        jl_Exception__init_($comparator, jl_AbstractStringBuilder_toString(var$2));
        $rt_throw($comparator);
    }
    if (var$5 > var$8)
        $rt_throw(jl_ArrayIndexOutOfBoundsException__init_0(var$5));
    var$9 = var$5 - var$4 | 0;
    if (var$9 >= 2) {
        if (var$9 < 32)
            cbgu_TimSort_binarySort(var$3, var$4, var$5, var$4 + cbgu_TimSort_countRunAndMakeAscending(var$3, var$4, var$5, $comparator) | 0, $comparator);
        else {
            var$2.$a0 = var$3;
            var$2.$c = $comparator;
            var$2.$tmpCount = 0;
            var$10 = 0;
            var$11 = var$9;
            while (var$11 >= 32) {
                var$10 = var$10 | var$11 & 1;
                var$11 = var$11 >> 1;
            }
            var$11 = var$11 + var$10 | 0;
            while (true) {
                var$10 = cbgu_TimSort_countRunAndMakeAscending(var$3, var$4, var$5, $comparator);
                if (var$10 >= var$11)
                    var$12 = var$10;
                else {
                    var$12 = var$9 > var$11 ? var$11 : var$9;
                    cbgu_TimSort_binarySort(var$3, var$4, var$4 + var$12 | 0, var$4 + var$10 | 0, $comparator);
                }
                var$7 = var$2.$runBase.data;
                var$10 = var$2.$stackSize;
                var$7[var$10] = var$4;
                var$2.$runLen.data[var$10] = var$12;
                var$2.$stackSize = var$10 + 1 | 0;
                a: {
                    b: while (true) {
                        var$8 = var$2.$stackSize;
                        if (var$8 <= 1)
                            break a;
                        c: {
                            d: {
                                e: {
                                    var$13 = var$8 - 2 | 0;
                                    if (var$13 >= 1) {
                                        var$7 = var$2.$runLen.data;
                                        if (var$7[var$13 - 1 | 0] <= (var$7[var$13] + var$7[var$13 + 1 | 0] | 0))
                                            break e;
                                    }
                                    if (var$13 < 2)
                                        break d;
                                    var$7 = var$2.$runLen.data;
                                    if (var$7[var$13 - 2 | 0] > (var$7[var$13] + var$7[var$13 - 1 | 0] | 0))
                                        break d;
                                }
                                var$7 = var$2.$runLen.data;
                                if (var$7[var$13 - 1 | 0] >= var$7[var$13 + 1 | 0])
                                    break c;
                                var$13 = var$13 + (-1) | 0;
                                break c;
                            }
                            var$7 = var$2.$runLen.data;
                            if (var$7[var$13] > var$7[var$13 + 1 | 0])
                                break b;
                        }
                        cbgu_TimSort_mergeAt(var$2, var$13);
                    }
                }
                var$4 = var$4 + var$12 | 0;
                var$9 = var$9 - var$12 | 0;
                if (!var$9)
                    break;
            }
            while (true) {
                var$10 = var$2.$stackSize;
                if (var$10 <= 1)
                    break;
                var$10 = var$10 - 2 | 0;
                if (var$10 > 0) {
                    var$3 = var$2.$runLen.data;
                    if (var$3[var$10 - 1 | 0] < var$3[var$10 + 1 | 0])
                        var$10 = var$10 + (-1) | 0;
                }
                cbgu_TimSort_mergeAt(var$2, var$10);
            }
            var$2.$a0 = null;
            var$2.$c = null;
            var$3 = var$2.$tmp;
            var$4 = 0;
            var$10 = var$2.$tmpCount;
            while (var$4 < var$10) {
                var$3.data[var$4] = null;
                var$4 = var$4 + 1 | 0;
            }
        }
    }
},
cbgu_Array_iterator = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = cbgu_Collections_allocateIterators;
    if (var$1)
        return cbgu_Array$ArrayIterator__init_($this, 1);
    if ($this.$iterable0 === null) {
        var$2 = new cbgu_Array$ArrayIterable;
        var$2.$array2 = $this;
        var$2.$allowRemove = 1;
        $this.$iterable0 = var$2;
    }
    var$2 = $this.$iterable0;
    if (var$1)
        var$3 = cbgu_Array$ArrayIterator__init_(var$2.$array2, var$2.$allowRemove);
    else {
        if (var$2.$iterator10 === null) {
            var$2.$iterator10 = cbgu_Array$ArrayIterator__init_(var$2.$array2, var$2.$allowRemove);
            var$2.$iterator20 = cbgu_Array$ArrayIterator__init_(var$2.$array2, var$2.$allowRemove);
        }
        var$4 = var$2.$iterator10;
        if (var$4.$valid) {
            var$3 = var$2.$iterator20;
            var$3.$index3 = 0;
            var$3.$valid = 1;
            var$4.$valid = 0;
        } else {
            var$4.$index3 = 0;
            var$4.$valid = 1;
            var$2.$iterator20.$valid = 0;
            var$3 = var$4;
        }
    }
    return var$3;
},
cbgu_Array_truncate = ($this, $newSize) => {
    let var$2, var$3, var$4, $i;
    if ($newSize < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append(var$3, $rt_s(23));
        jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$3, $newSize)));
        $rt_throw(var$2);
    }
    var$4 = $this.$size0;
    if (var$4 <= $newSize)
        return;
    $i = $newSize;
    while ($i < var$4) {
        $this.$items.data[$i] = null;
        $i = $i + 1 | 0;
    }
    $this.$size0 = $newSize;
},
cbgu_Array_hashCode = $this => {
    let $items, $h, $i, $n, var$5, $item;
    if (!$this.$ordered)
        return jl_Object_identity($this);
    $items = $this.$items;
    $h = 1;
    $i = 0;
    $n = $this.$size0;
    while ($i < $n) {
        var$5 = $items.data;
        $h = $h * 31 | 0;
        $item = var$5[$i];
        if ($item !== null)
            $h = $h + $item.$hashCode() | 0;
        $i = $i + 1 | 0;
    }
    return $h;
},
cbgu_Array_equals = ($this, $object) => {
    let $array, $n, $items1, $items2, $i, var$7, $o1, $o2;
    if ($object === $this)
        return 1;
    if (!$this.$ordered)
        return 0;
    if (!($object instanceof cbgu_Array))
        return 0;
    $array = $object;
    if (!$array.$ordered)
        return 0;
    $n = $this.$size0;
    if ($n != $array.$size0)
        return 0;
    $items1 = $this.$items;
    $items2 = $array.$items;
    $i = 0;
    a: {
        while ($i < $n) {
            b: {
                var$7 = $items2.data;
                $o1 = $items1.data[$i];
                $o2 = var$7[$i];
                if ($o1 !== null) {
                    if ($o1.$equals($o2))
                        break b;
                    else
                        break a;
                }
                if ($o2 !== null)
                    break a;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
},
cbgu_Array_toString = $this => {
    let $items, $buffer, $i;
    if (!$this.$size0)
        return $rt_s(24);
    $items = $this.$items.data;
    $buffer = cbgu_StringBuilder__init_(32);
    cbgu_StringBuilder_append0($buffer, 91);
    cbgu_StringBuilder_append1($buffer, $items[0]);
    $i = 1;
    while ($i < $this.$size0) {
        cbgu_StringBuilder_append00($buffer, $rt_s(25));
        cbgu_StringBuilder_append1($buffer, $items[$i]);
        $i = $i + 1 | 0;
    }
    cbgu_StringBuilder_append0($buffer, 93);
    return cbgu_StringBuilder_toString($buffer);
},
cbgu_Json = $rt_classWithoutFields();
function cbgu_ObjectMap() {
    let a = this; jl_Object.call(a);
    a.$size8 = 0;
    a.$keyTable = null;
    a.$valueTable = null;
    a.$loadFactor2 = 0.0;
    a.$threshold = 0;
    a.$shift2 = 0;
    a.$mask0 = 0;
}
let cbgu_ObjectMap_dummy = null,
cbgu_ObjectMap__init_0 = $this => {
    let var$1, var$2;
    $this.$loadFactor2 = 0.800000011920929;
    var$1 = cbgu_ObjectSet_tableSize(51, 0.800000011920929);
    $this.$threshold = var$1 * 0.800000011920929 | 0;
    var$2 = var$1 - 1 | 0;
    $this.$mask0 = var$2;
    $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$2));
    $this.$keyTable = $rt_createArray(jl_Object, var$1);
    $this.$valueTable = $rt_createArray(jl_Object, var$1);
},
cbgu_ObjectMap__init_ = () => {
    let var_0 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_0(var_0);
    return var_0;
},
cbgu_ObjectMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift2));
},
cbgu_ObjectMap_locateKey = ($this, $key) => {
    let $other, $keyTable, $i;
    if ($key === null) {
        $other = new jl_IllegalArgumentException;
        jl_Exception__init_($other, $rt_s(26));
        $rt_throw($other);
    }
    $keyTable = $this.$keyTable;
    $i = cbgu_ObjectMap_place($this, $key);
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if ($other.$equals($key))
            break;
        $i = ($i + 1 | 0) & $this.$mask0;
    }
    return $i;
},
cbgu_ObjectMap_put = ($this, $key, $value) => {
    let $i, var$4, $oldValue;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    if ($i >= 0) {
        var$4 = $this.$valueTable.data;
        $oldValue = var$4[$i];
        var$4[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    var$4 = $this.$keyTable.data;
    var$4[$i] = $key;
    $this.$valueTable.data[$i] = $value;
    $i = $this.$size8 + 1 | 0;
    $this.$size8 = $i;
    if ($i >= $this.$threshold)
        cbgu_ObjectMap_resize($this, var$4.length << 1);
    return null;
},
cbgu_ObjectMap_get = ($this, $key) => {
    let $i;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    return $i < 0 ? null : $this.$valueTable.data[$i];
},
cbgu_ObjectMap_containsKey = ($this, $key) => {
    return cbgu_ObjectMap_locateKey($this, $key) < 0 ? 0 : 1;
},
cbgu_ObjectMap_resize = ($this, $newSize) => {
    let $oldCapacity, var$3, $oldKeyTable, $oldValueTable, $i, $key, var$8, var$9, var$10;
    a: {
        $oldCapacity = $this.$keyTable.data.length;
        $this.$threshold = $newSize * $this.$loadFactor2 | 0;
        var$3 = $newSize - 1 | 0;
        $this.$mask0 = var$3;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
        $oldKeyTable = $this.$keyTable;
        $oldValueTable = $this.$valueTable;
        $this.$keyTable = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable = $rt_createArray(jl_Object, $newSize);
        if ($this.$size8 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null) {
                    var$8 = $oldValueTable.data[$i];
                    var$9 = $this.$keyTable;
                    $newSize = cbgu_ObjectMap_place($this, $key);
                    while (true) {
                        var$10 = var$9.data;
                        if (var$10[$newSize] === null)
                            break;
                        $newSize = ($newSize + 1 | 0) & $this.$mask0;
                    }
                    var$10[$newSize] = $key;
                    $this.$valueTable.data[$newSize] = var$8;
                }
                $i = $i + 1 | 0;
            }
        }
    }
},
cbgu_ObjectMap__clinit_ = () => {
    cbgu_ObjectMap_dummy = new jl_Object;
};
function cbgu_OrderedMap() {
    cbgu_ObjectMap.call(this);
    this.$keys0 = null;
}
let cbgu_OrderedMap_put = ($this, $key, $value) => {
    let $i, var$4, $oldValue;
    $i = cbgu_ObjectMap_locateKey($this, $key);
    if ($i >= 0) {
        var$4 = $this.$valueTable.data;
        $oldValue = var$4[$i];
        var$4[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    $this.$keyTable.data[$i] = $key;
    $this.$valueTable.data[$i] = $value;
    cbgu_Array_add($this.$keys0, $key);
    $i = $this.$size8 + 1 | 0;
    $this.$size8 = $i;
    if ($i >= $this.$threshold)
        cbgu_ObjectMap_resize($this, $this.$keyTable.data.length << 1);
    return null;
},
cbgu_Queue = $rt_classWithoutFields(),
cbgu_Predicate = $rt_classWithoutFields(0);
function cbgg_VertexAttribute() {
    let a = this; jl_Object.call(a);
    a.$usage = 0;
    a.$numComponents = 0;
    a.$normalized = 0;
    a.$type2 = 0;
    a.$offset = 0;
    a.$alias = null;
    a.$unit = 0;
    a.$usageIndex = 0;
}
let cbgg_VertexAttribute__init_0 = ($this, $usage, $numComponents, $alias) => {
    let var$4, var$5;
    var$4 = $rt_compare($usage, 4);
    var$5 = var$4 ? 5126 : 5121;
    var$4 = var$4 ? 0 : 1;
    $this.$usage = $usage;
    $this.$numComponents = $numComponents;
    $this.$type2 = var$5;
    $this.$normalized = var$4;
    $this.$alias = $alias;
    $this.$unit = 0;
    $this.$usageIndex = jl_Integer_numberOfTrailingZeros($usage);
},
cbgg_VertexAttribute__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_VertexAttribute_equals0 = ($this, $obj) => {
    if (!($obj instanceof cbgg_VertexAttribute))
        return 0;
    return cbgg_VertexAttribute_equals($this, $obj);
},
cbgg_VertexAttribute_equals = ($this, $other) => {
    return $other !== null && $this.$usage == $other.$usage && $this.$numComponents == $other.$numComponents && $this.$type2 == $other.$type2 && $this.$normalized == $other.$normalized && jl_String_equals($this.$alias, $other.$alias) && $this.$unit == $other.$unit ? 1 : 0;
},
cbgg_VertexAttribute_getKey = $this => {
    return ($this.$usageIndex << 8) + ($this.$unit & 255) | 0;
},
cbgg_VertexAttribute_hashCode = $this => {
    return (541 * ((541 * cbgg_VertexAttribute_getKey($this) | 0) + $this.$numComponents | 0) | 0) + jl_String_hashCode($this.$alias) | 0;
},
cbg_Net = $rt_classWithoutFields(0),
cbgm_MapObject = $rt_classWithoutFields(),
cbgggp_ResourceData$Configurable = $rt_classWithoutFields(0),
cbgggp_ParticleEffect = $rt_classWithoutFields(),
cbgu_Json$Serializable = $rt_classWithoutFields(0),
cbgggp_ParticleController = $rt_classWithoutFields(),
cbgggp_ResourceData = $rt_classWithoutFields(),
cbgggp_ParallelArray = $rt_classWithoutFields(),
cbgm_Interpolation = $rt_classWithoutFields(),
cbgm_Interpolation_linear = null,
cbgm_Interpolation_smooth = null,
cbgm_Interpolation_smooth2 = null,
cbgm_Interpolation_smoother = null,
cbgm_Interpolation_fade = null,
cbgm_Interpolation_pow2 = null,
cbgm_Interpolation_pow2In = null,
cbgm_Interpolation_slowFast = null,
cbgm_Interpolation_pow2Out = null,
cbgm_Interpolation_fastSlow = null,
cbgm_Interpolation_pow2InInverse = null,
cbgm_Interpolation_pow2OutInverse = null,
cbgm_Interpolation_pow3 = null,
cbgm_Interpolation_pow3In = null,
cbgm_Interpolation_pow3Out = null,
cbgm_Interpolation_pow3InInverse = null,
cbgm_Interpolation_pow3OutInverse = null,
cbgm_Interpolation_pow4 = null,
cbgm_Interpolation_pow4In = null,
cbgm_Interpolation_pow4Out = null,
cbgm_Interpolation_pow5 = null,
cbgm_Interpolation_pow5In = null,
cbgm_Interpolation_pow5Out = null,
cbgm_Interpolation_sine = null,
cbgm_Interpolation_sineIn = null,
cbgm_Interpolation_sineOut = null,
cbgm_Interpolation_exp10 = null,
cbgm_Interpolation_exp10In = null,
cbgm_Interpolation_exp10Out = null,
cbgm_Interpolation_exp5 = null,
cbgm_Interpolation_exp5In = null,
cbgm_Interpolation_exp5Out = null,
cbgm_Interpolation_circle = null,
cbgm_Interpolation_circleIn = null,
cbgm_Interpolation_circleOut = null;
let cbgm_Interpolation_elastic = null,
cbgm_Interpolation_elasticIn = null,
cbgm_Interpolation_elasticOut = null,
cbgm_Interpolation_swing = null,
cbgm_Interpolation_swingIn = null,
cbgm_Interpolation_swingOut = null,
cbgm_Interpolation_bounce = null,
cbgm_Interpolation_bounceIn = null,
cbgm_Interpolation_bounceOut = null,
cbgm_Interpolation_$callClinit = () => {
    cbgm_Interpolation_$callClinit = $rt_eraseClinit(cbgm_Interpolation);
    cbgm_Interpolation__clinit_();
},
cbgm_Interpolation__init_ = $this => {
    cbgm_Interpolation_$callClinit();
},
cbgm_Interpolation__clinit_ = () => {
    let var$1;
    var$1 = new cbgm_Interpolation$1;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_linear = var$1;
    var$1 = new cbgm_Interpolation$2;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_smooth = var$1;
    var$1 = new cbgm_Interpolation$3;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_smooth2 = var$1;
    var$1 = new cbgm_Interpolation$4;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_smoother = var$1;
    cbgm_Interpolation_fade = var$1;
    cbgm_Interpolation_pow2 = cbgm_Interpolation$Pow__init_0(2);
    var$1 = new cbgm_Interpolation$PowIn;
    cbgm_Interpolation$Pow__init_(var$1, 2);
    cbgm_Interpolation_pow2In = var$1;
    cbgm_Interpolation_slowFast = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    cbgm_Interpolation$Pow__init_(var$1, 2);
    cbgm_Interpolation_pow2Out = var$1;
    cbgm_Interpolation_fastSlow = var$1;
    var$1 = new cbgm_Interpolation$5;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_pow2InInverse = var$1;
    var$1 = new cbgm_Interpolation$6;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_pow2OutInverse = var$1;
    cbgm_Interpolation_pow3 = cbgm_Interpolation$Pow__init_0(3);
    var$1 = new cbgm_Interpolation$PowIn;
    cbgm_Interpolation$Pow__init_(var$1, 3);
    cbgm_Interpolation_pow3In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    cbgm_Interpolation$Pow__init_(var$1, 3);
    cbgm_Interpolation_pow3Out = var$1;
    var$1 = new cbgm_Interpolation$7;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_pow3InInverse = var$1;
    var$1 = new cbgm_Interpolation$8;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_pow3OutInverse = var$1;
    cbgm_Interpolation_pow4 = cbgm_Interpolation$Pow__init_0(4);
    var$1 = new cbgm_Interpolation$PowIn;
    cbgm_Interpolation$Pow__init_(var$1, 4);
    cbgm_Interpolation_pow4In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    cbgm_Interpolation$Pow__init_(var$1, 4);
    cbgm_Interpolation_pow4Out = var$1;
    cbgm_Interpolation_pow5 = cbgm_Interpolation$Pow__init_0(5);
    var$1 = new cbgm_Interpolation$PowIn;
    cbgm_Interpolation$Pow__init_(var$1, 5);
    cbgm_Interpolation_pow5In = var$1;
    var$1 = new cbgm_Interpolation$PowOut;
    cbgm_Interpolation$Pow__init_(var$1, 5);
    cbgm_Interpolation_pow5Out = var$1;
    var$1 = new cbgm_Interpolation$9;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_sine = var$1;
    var$1 = new cbgm_Interpolation$10;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_sineIn = var$1;
    var$1 = new cbgm_Interpolation$11;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_sineOut = var$1;
    cbgm_Interpolation_exp10 = cbgm_Interpolation$Exp__init_0(2.0, 10.0);
    var$1 = new cbgm_Interpolation$ExpIn;
    cbgm_Interpolation$Exp__init_(var$1, 2.0, 10.0);
    cbgm_Interpolation_exp10In = var$1;
    var$1 = new cbgm_Interpolation$ExpOut;
    cbgm_Interpolation$Exp__init_(var$1, 2.0, 10.0);
    cbgm_Interpolation_exp10Out = var$1;
    cbgm_Interpolation_exp5 = cbgm_Interpolation$Exp__init_0(2.0, 5.0);
    var$1 = new cbgm_Interpolation$ExpIn;
    cbgm_Interpolation$Exp__init_(var$1, 2.0, 5.0);
    cbgm_Interpolation_exp5In = var$1;
    var$1 = new cbgm_Interpolation$ExpOut;
    cbgm_Interpolation$Exp__init_(var$1, 2.0, 5.0);
    cbgm_Interpolation_exp5Out = var$1;
    var$1 = new cbgm_Interpolation$12;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_circle = var$1;
    var$1 = new cbgm_Interpolation$13;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_circleIn = var$1;
    var$1 = new cbgm_Interpolation$14;
    cbgm_Interpolation__init_(var$1);
    cbgm_Interpolation_circleOut = var$1;
    cbgm_Interpolation_elastic = cbgm_Interpolation$Elastic__init_0(2.0, 10.0, 7, 1.0);
    var$1 = new cbgm_Interpolation$ElasticIn;
    cbgm_Interpolation$Elastic__init_(var$1, 2.0, 10.0, 6, 1.0);
    cbgm_Interpolation_elasticIn = var$1;
    var$1 = new cbgm_Interpolation$ElasticOut;
    cbgm_Interpolation$Elastic__init_(var$1, 2.0, 10.0, 7, 1.0);
    cbgm_Interpolation_elasticOut = var$1;
    var$1 = new cbgm_Interpolation$Swing;
    cbgm_Interpolation__init_(var$1);
    var$1.$scale4 = 3.0;
    cbgm_Interpolation_swing = var$1;
    var$1 = new cbgm_Interpolation$SwingIn;
    cbgm_Interpolation__init_(var$1);
    var$1.$scale5 = 2.0;
    cbgm_Interpolation_swingIn = var$1;
    var$1 = new cbgm_Interpolation$SwingOut;
    cbgm_Interpolation__init_(var$1);
    var$1.$scale2 = 2.0;
    cbgm_Interpolation_swingOut = var$1;
    var$1 = new cbgm_Interpolation$Bounce;
    cbgm_Interpolation$BounceOut__init_(var$1, 4);
    cbgm_Interpolation_bounce = var$1;
    var$1 = new cbgm_Interpolation$BounceIn;
    cbgm_Interpolation$BounceOut__init_(var$1, 4);
    cbgm_Interpolation_bounceIn = var$1;
    cbgm_Interpolation_bounceOut = cbgm_Interpolation$BounceOut__init_0(4);
},
jlr_AnnotatedElement = $rt_classWithoutFields(0),
jlr_Type = $rt_classWithoutFields(0);
function jl_Class() {
    let a = this; jl_Object.call(a);
    a.$name = null;
    a.$simpleName = null;
    a.$platformClass = null;
}
let jl_Class_getClass = $cls => {
    let $result;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null) {
        $result = new jl_Class;
        $result.$platformClass = $cls;
        $cls.classObject = $result;
    }
    return $result;
},
jl_Class_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = (!($this.$platformClass.$meta.flags & 2) ? 0 : 1) ? $rt_s(27) : !jl_Class_isPrimitive($this) ? $rt_s(28) : $rt_s(8);
    var$2 = jl_Class_getName($this);
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jl_Class_isInstance = ($this, $obj) => {
    let var$2;
    $obj = $obj;
    var$2 = $this.$platformClass;
    return $obj !== null && !(typeof $obj.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable($obj.constructor, var$2) ? 1 : 0;
},
jl_Class_getName = $this => {
    if ($this.$name === null)
        $this.$name = otp_Platform_getName($this.$platformClass);
    return $this.$name;
},
jl_Class_getSimpleName = $this => {
    let $simpleName, var$2, $lastDollar, $lastDot;
    $simpleName = $this.$simpleName;
    if ($simpleName === null) {
        if (otp_Platform_getArrayItem($this.$platformClass) === null ? 0 : 1) {
            $simpleName = jl_Class_getSimpleName(jl_Class_getComponentType($this));
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            jl_StringBuilder_append(jl_StringBuilder_append(var$2, $simpleName), $rt_s(24));
            $simpleName = jl_AbstractStringBuilder_toString(var$2);
        } else {
            $simpleName = $this.$platformClass.$meta.enclosingClass;
            if (($simpleName === null ? null : jl_Class_getClass($simpleName)) !== null) {
                $simpleName = $rt_str($this.$platformClass.$meta.simpleName);
                if ($simpleName === null)
                    $simpleName = $rt_s(8);
            } else {
                $simpleName = otp_Platform_getName($this.$platformClass);
                $lastDollar = jl_String_lastIndexOf0($simpleName, 36);
                if ($lastDollar == (-1)) {
                    $lastDot = jl_String_lastIndexOf0($simpleName, 46);
                    if ($lastDot != (-1))
                        $simpleName = jl_String_substring0($simpleName, $lastDot + 1 | 0);
                } else {
                    $simpleName = jl_String_substring0($simpleName, $lastDollar + 1 | 0);
                    if (jl_String_charAt($simpleName, 0) >= 48 && jl_String_charAt($simpleName, 0) <= 57)
                        $simpleName = $rt_s(8);
                }
            }
        }
        $this.$simpleName = $simpleName;
    }
    return $simpleName;
},
jl_Class_isPrimitive = $this => {
    return $this.$platformClass.$meta.primitive ? 1 : 0;
},
jl_Class_getComponentType = $this => {
    return jl_Class_getClass(otp_Platform_getArrayItem($this.$platformClass));
},
otji_JS = $rt_classWithoutFields(),
otji_JS_wrap = $array => {
    let var$2, $result, $i, var$5;
    if ($array === null)
        return null;
    $array = $array.data;
    var$2 = $array.length;
    $result = new Int8Array(var$2);
    $i = 0;
    while ($i < var$2) {
        var$5 = $array[$i];
        $result[$i] = var$5;
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_function = (var$1, var$2) => {
    let name = 'jso$functor$' + var$2;
    let result = var$1[name];
    if (typeof result !== 'function') {
        let fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        result = () => fn;
        var$1[name] = result;
    }
    return result();
},
otji_JS_functionAsObject = (var$1, var$2) => {
    if (typeof var$1 !== 'function') return var$1;
    let result = {  };
    result[var$2] = var$1;
    return result;
},
otp_Platform = $rt_classWithoutFields(),
otp_Platform_clone = var$1 => {
    let copy = new var$1.constructor();
    for (let field in var$1) {
        if (var$1.hasOwnProperty(field)) {
            copy[field] = var$1[field];
        }
    }
    return copy;
},
otp_Platform_isAssignable = (var$1, var$2) => {
    let $supertypes, $i;
    if (var$1 === var$2)
        return 1;
    $supertypes = var$1.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], var$2))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
},
otp_Platform_launchThread = $runnable => {
    let var$2, var$3, var$4;
    $runnable = $runnable.$_020;
    if (!jl_Object_isEmptyMonitor($runnable)) {
        var$2 = $runnable.$monitor;
        if (var$2.$owner === null) {
            $runnable = var$2.$enteringThreads;
            if ($runnable !== null && !otp_PlatformQueue_isEmpty$static($runnable)) {
                $runnable = var$2.$enteringThreads.shift();
                if ($runnable !== null && !($runnable instanceof $rt_objcls()))
                    $runnable = otji_JSWrapper_wrap($runnable);
                var$3 = $runnable;
                var$2.$enteringThreads = null;
                $runnable = var$3;
                var$2 = $runnable.$_06;
                var$3 = $runnable.$_13;
                var$4 = $runnable.$_22;
                $runnable = $runnable.$_31;
                jl_Thread_setCurrentThread(var$2);
                var$3 = var$3.$monitor;
                var$3.$owner = var$2;
                var$3.$count = var$3.$count + var$4 | 0;
                var$2 = null;
                otpp_AsyncCallbackWrapper_complete($runnable, var$2);
            }
        }
    }
},
otp_Platform_schedule = (var$1, var$2) => {
    setTimeout(() => {
        otp_Platform_launchThread(var$1);
    }, var$2);
},
otp_Platform_getArrayItem = var$1 => {
    return var$1.$meta.item;
},
otp_Platform_getName = $cls => {
    return $rt_str($cls.$meta.name);
},
otp_Platform_createQueueJs$js_body$_30 = () => {
    return [];
};
function jl_Throwable() {
    let a = this; jl_Object.call(a);
    a.$message = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
    a.$stackTrace = null;
}
let jl_Throwable__init_ = ($this, $message, $cause) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
    $this.$cause = $cause;
},
jl_Throwable__init_0 = (var_0, var_1) => {
    let var_2 = new jl_Throwable();
    jl_Throwable__init_(var_2, var_0, var_1);
    return var_2;
},
jl_Throwable_fillInStackTrace = $this => {
    return $this;
},
jl_Throwable_initNativeException = $this => {
    $rt_fillNativeException($this);
},
jl_Throwable_getMessage = $this => {
    return $this.$message;
},
jl_Throwable_getLocalizedMessage = $this => {
    return $this.$getMessage();
},
jl_Throwable_getCause = $this => {
    let var$1;
    var$1 = $this.$cause;
    if (var$1 === $this)
        var$1 = null;
    return var$1;
},
jl_Throwable_printStackTrace0 = $this => {
    jl_Throwable_printStackTrace($this, jl_System_err());
},
jl_Throwable_printStackTrace = ($this, $stream) => {
    let var$2, var$3, $message, var$5, var$6, var$7, $element, var$9;
    var$2 = jl_Class_getName(jl_Object_getClass($this));
    var$3 = $stream;
    otcic_JSStderrPrintStream_print(var$3, var$2);
    $message = $this.$getMessage();
    if ($message !== null) {
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(29)), $message);
        otcic_JSStderrPrintStream_print(var$3, jl_AbstractStringBuilder_toString(var$2));
    }
    a: {
        var$2 = $stream;
        otcic_JSStderrPrintStream_print(var$2, $rt_s(30));
        var$5 = $this.$stackTrace;
        if (var$5 !== null) {
            var$5 = var$5.data;
            var$6 = var$5.length;
            var$7 = 0;
            while (true) {
                if (var$7 >= var$6)
                    break a;
                $element = var$5[var$7];
                otcic_JSStderrPrintStream_print(var$3, $rt_s(31));
                var$9 = $rt_s(32);
                if ($element !== null)
                    var$9 = $element.$toString();
                otcic_JsConsolePrintStream_println(var$2, var$9);
                var$7 = var$7 + 1 | 0;
            }
        }
    }
    var$2 = $this.$cause;
    if (var$2 !== null && var$2 !== $this) {
        otcic_JSStderrPrintStream_print(var$3, $rt_s(33));
        jl_Throwable_printStackTrace($this.$cause, $stream);
    }
},
jl_Exception = $rt_classWithoutFields(jl_Throwable),
jl_Exception__init_0 = $this => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
},
jl_Exception__init_1 = () => {
    let var_0 = new jl_Exception();
    jl_Exception__init_0(var_0);
    return var_0;
},
jl_Exception__init_ = ($this, $message) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$message = $message;
},
jl_Exception__init_2 = var_0 => {
    let var_1 = new jl_Exception();
    jl_Exception__init_(var_1, var_0);
    return var_1;
},
jl_RuntimeException = $rt_classWithoutFields(jl_Exception),
jl_RuntimeException__init_ = $this => {
    jl_Exception__init_0($this);
},
jl_RuntimeException__init_2 = () => {
    let var_0 = new jl_RuntimeException();
    jl_RuntimeException__init_(var_0);
    return var_0;
},
jl_RuntimeException__init_1 = ($this, $message) => {
    jl_Exception__init_($this, $message);
},
jl_RuntimeException__init_0 = var_0 => {
    let var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_1(var_1, var_0);
    return var_1;
},
jl_ClassCastException = $rt_classWithoutFields(jl_RuntimeException),
ji_Serializable = $rt_classWithoutFields(0),
jl_Comparable = $rt_classWithoutFields(0),
jl_CharSequence = $rt_classWithoutFields(0);
function jl_String() {
    jl_Object.call(this);
    this.$hashCode0 = 0;
}
let jl_String_EMPTY_CHARS = null,
jl_String_EMPTY = null,
jl_String_CASE_INSENSITIVE_ORDER = null,
jl_String__init_5 = $this => {
    $this.$nativeString = "";
},
jl_String__init_2 = () => {
    let var_0 = new jl_String();
    jl_String__init_5(var_0);
    return var_0;
},
jl_String__init_1 = ($this, $characters) => {
    $this.$nativeString = $rt_charArrayToString($characters.data, 0, $characters.data.length);
},
jl_String__init_0 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_1(var_1, var_0);
    return var_1;
},
jl_String__init_6 = (var$0, var$1) => {
    var$0.$nativeString = var$1;
},
jl_String__init_3 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_6(var_1, var_0);
    return var_1;
},
jl_String__init_4 = (var$0, var$1, $offset, $count) => {
    ju_Objects_checkFromIndexSize($offset, $count, var$1.data.length);
    var$0.$nativeString = $rt_charArrayToString(var$1.data, $offset, $count);
},
jl_String__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jl_String();
    jl_String__init_4(var_3, var_0, var_1, var_2);
    return var_3;
},
jl_String_charAt = ($this, $index) => {
    let var$2;
    if ($index >= 0 && $index < $this.$nativeString.length)
        return $this.$nativeString.charCodeAt($index);
    var$2 = new jl_StringIndexOutOfBoundsException;
    jl_Exception__init_0(var$2);
    $rt_throw(var$2);
},
jl_String_length = $this => {
    return $this.$nativeString.length;
},
jl_String_isEmpty = $this => {
    return $this.$nativeString.length ? 0 : 1;
},
jl_String_startsWith0 = ($this, $prefix, $toffset) => {
    let $i, var$4, var$5;
    if (($toffset + $prefix.$nativeString.length | 0) > $this.$nativeString.length)
        return 0;
    $i = 0;
    while ($i < $prefix.$nativeString.length) {
        var$4 = jl_String_charAt($prefix, $i);
        var$5 = $toffset + 1 | 0;
        if (var$4 != jl_String_charAt($this, $toffset))
            return 0;
        $i = $i + 1 | 0;
        $toffset = var$5;
    }
    return 1;
},
jl_String_startsWith = ($this, $prefix) => {
    if ($this === $prefix)
        return 1;
    return jl_String_startsWith0($this, $prefix, 0);
},
jl_String_endsWith = ($this, $suffix) => {
    let $j, $i, var$4, var$5;
    if ($this === $suffix)
        return 1;
    if ($suffix.$nativeString.length > $this.$nativeString.length)
        return 0;
    $j = 0;
    $i = $this.$nativeString.length - $suffix.$nativeString.length | 0;
    while ($i < $this.$nativeString.length) {
        var$4 = jl_String_charAt($this, $i);
        var$5 = $j + 1 | 0;
        if (var$4 != jl_String_charAt($suffix, $j))
            return 0;
        $i = $i + 1 | 0;
        $j = var$5;
    }
    return 1;
},
jl_String_indexOf = ($this, $ch, $fromIndex) => {
    let $i, $bmpChar, $hi, $lo;
    $i = jl_Math_max(0, $fromIndex);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i >= $this.$nativeString.length)
                return (-1);
            if ($this.$nativeString.charCodeAt($i) == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i >= ($this.$nativeString.length - 1 | 0))
            return (-1);
        if ($this.$nativeString.charCodeAt($i) == $hi && $this.$nativeString.charCodeAt(($i + 1 | 0)) == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
jl_String_indexOf1 = ($this, $ch) => {
    return jl_String_indexOf($this, $ch, 0);
},
jl_String_lastIndexOf = ($this, $ch, $fromIndex) => {
    let $i, $bmpChar, $hi, $lo;
    $i = jl_Math_min($fromIndex, $this.$nativeString.length - 1 | 0);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if ($this.$nativeString.charCodeAt($i) == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i < 1)
            return (-1);
        if ($this.$nativeString.charCodeAt($i) == $lo) {
            $fromIndex = $i - 1 | 0;
            if ($this.$nativeString.charCodeAt($fromIndex) == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return $fromIndex;
},
jl_String_lastIndexOf0 = ($this, $ch) => {
    return jl_String_lastIndexOf($this, $ch, $this.$nativeString.length - 1 | 0);
},
jl_String_indexOf0 = ($this, $str, $fromIndex) => {
    let $i, $toIndex, $j;
    $i = jl_Math_max(0, $fromIndex);
    $toIndex = $this.$nativeString.length - $str.$nativeString.length | 0;
    a: while (true) {
        if ($i > $toIndex)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$nativeString.length)
                break a;
            if (jl_String_charAt($this, $i + $j | 0) != jl_String_charAt($str, $j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return $i;
},
jl_String_indexOf2 = ($this, $str) => {
    return jl_String_indexOf0($this, $str, 0);
},
jl_String_lastIndexOf1 = ($this, $str, $fromIndex) => {
    let $i, $j;
    $i = jl_Math_min($fromIndex, $this.$nativeString.length - $str.$nativeString.length | 0);
    a: while (true) {
        if ($i < 0)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$nativeString.length)
                break a;
            if (jl_String_charAt($this, $i + $j | 0) != jl_String_charAt($str, $j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + (-1) | 0;
    }
    return $i;
},
jl_String_substring = ($this, $beginIndex, $endIndex) => {
    let $length, var$4, var$5;
    $length = $this.$nativeString.length;
    var$4 = $rt_compare($beginIndex, $endIndex);
    if (!var$4)
        return jl_String_EMPTY;
    if (!$beginIndex && $endIndex == $length)
        return $this;
    if ($beginIndex >= 0 && var$4 <= 0 && $endIndex <= $length)
        return jl_String__init_3($this.$nativeString.substring($beginIndex, $endIndex));
    var$5 = new jl_StringIndexOutOfBoundsException;
    jl_Exception__init_0(var$5);
    $rt_throw(var$5);
},
jl_String_substring0 = ($this, $beginIndex) => {
    return jl_String_substring($this, $beginIndex, $this.$nativeString.length);
},
jl_String_replace = ($this, $target, $replacement) => {
    let $sb, $i, $sz, var$6, var$7, $i_0, $j;
    if ($target === $replacement)
        return $this;
    $target = $target;
    if (jl_String_isEmpty($target)) {
        $sb = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($sb);
        $i = 0;
        while ($i < $this.$nativeString.length) {
            jl_StringBuilder_append($sb, $replacement);
            jl_AbstractStringBuilder_append0($sb, jl_String_charAt($this, $i));
            $i = $i + 1 | 0;
        }
        jl_StringBuilder_append($sb, $replacement);
        return jl_AbstractStringBuilder_toString($sb);
    }
    if ($target.$nativeString.length == 1) {
        $sb = $replacement;
        if ($sb.$nativeString.length == 1) {
            $i = jl_String_charAt($target, 0);
            $sz = jl_String_charAt($sb, 0);
            if ($i != $sz) {
                var$6 = $rt_createCharArray($this.$nativeString.length);
                var$7 = var$6.data;
                $i_0 = 0;
                while ($i_0 < $this.$nativeString.length) {
                    var$7[$i_0] = jl_String_charAt($this, $i_0) != $i ? jl_String_charAt($this, $i_0) : $sz;
                    $i_0 = $i_0 + 1 | 0;
                }
                $this = jl_String__init_2();
                $this.$nativeString = $rt_fullArrayToString(var$6.data);
            }
            return $this;
        }
    }
    $sb = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($sb);
    $sz = $this.$nativeString.length - $target.$nativeString.length | 0;
    $i_0 = 0;
    while ($i_0 <= $sz) {
        $j = 0;
        a: {
            while (true) {
                if ($j >= $target.$nativeString.length) {
                    jl_StringBuilder_append($sb, $replacement);
                    $i_0 = $i_0 + ($target.$nativeString.length - 1 | 0) | 0;
                    break a;
                }
                if (jl_String_charAt($this, $i_0 + $j | 0) != jl_String_charAt($target, $j))
                    break;
                $j = $j + 1 | 0;
            }
            jl_AbstractStringBuilder_append0($sb, jl_String_charAt($this, $i_0));
        }
        $i_0 = $i_0 + 1 | 0;
    }
    jl_StringBuilder_append($sb, jl_String_substring0($this, $i_0));
    return jl_AbstractStringBuilder_toString($sb);
},
jl_String_trim = $this => {
    let $lower, $upper;
    $lower = 0;
    $upper = $this.$nativeString.length - 1 | 0;
    a: {
        while ($lower <= $upper) {
            if (jl_String_charAt($this, $lower) > 32)
                break a;
            $lower = $lower + 1 | 0;
        }
    }
    while ($lower <= $upper && jl_String_charAt($this, $upper) <= 32) {
        $upper = $upper + (-1) | 0;
    }
    return jl_String_substring($this, $lower, $upper + 1 | 0);
},
jl_String_toString = $this => {
    return $this;
},
jl_String_toCharArray = $this => {
    let $array, var$2, $i, var$4;
    $array = $rt_createCharArray($this.$nativeString.length);
    var$2 = $array.data;
    $i = 0;
    var$4 = var$2.length;
    while ($i < var$4) {
        var$2[$i] = jl_String_charAt($this, $i);
        $i = $i + 1 | 0;
    }
    return $array;
},
jl_String_valueOf = $obj => {
    return $obj === null ? $rt_s(32) : $obj.$toString();
},
jl_String_valueOf0 = $i => {
    let var$2;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    return jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$2, $i));
},
jl_String_equals = ($this, $other) => {
    let $str;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    $str = $other;
    return $this.$nativeString !== $str.$nativeString ? 0 : 1;
},
jl_String_hashCode = $this => {
    let $i;
    a: {
        if (!$this.$hashCode0) {
            $i = 0;
            while (true) {
                if ($i >= $this.$nativeString.length)
                    break a;
                $this.$hashCode0 = (31 * $this.$hashCode0 | 0) + $this.$nativeString.charCodeAt($i) | 0;
                $i = $i + 1 | 0;
            }
        }
    }
    return $this.$hashCode0;
},
jl_String_split = ($this, $regex) => {
    return jur_Pattern_split(jur_Pattern_compile($regex), $this, 0);
},
jl_String_split0 = ($this, $regex, $limit) => {
    return jur_Pattern_split(jur_Pattern_compile($regex), $this, $limit);
},
jl_String_replaceAll = ($this, $regex, $replacement) => {
    let var$3;
    $regex = jur_Pattern_matcher(jur_Pattern_compile($regex), $this);
    var$3 = new jl_StringBuffer;
    jl_AbstractStringBuilder__init_(var$3);
    jur_Matcher_reset($regex);
    while (jur_Matcher_find($regex)) {
        jur_Matcher_appendReplacement($regex, var$3, $replacement);
    }
    return jl_AbstractStringBuilder_toString(jur_Matcher_appendTail($regex, var$3));
},
jl_String__clinit_ = () => {
    jl_String_EMPTY_CHARS = $rt_createCharArray(0);
    jl_String_EMPTY = jl_String__init_2();
    jl_String_CASE_INSENSITIVE_ORDER = new jl_String$_clinit_$lambda$_115_0;
},
jl_Number = $rt_classWithoutFields();
function jl_Integer() {
    jl_Number.call(this);
    this.$value1 = 0;
}
let jl_Integer_TYPE = null,
jl_Integer_integerCache = null,
jl_Integer__init_0 = ($this, $value) => {
    $this.$value1 = $value;
},
jl_Integer__init_ = var_0 => {
    let var_1 = new jl_Integer();
    jl_Integer__init_0(var_1, var_0);
    return var_1;
},
jl_Integer_toHexString = $i => {
    let var$2, var$3, var$4, var$5, var$6, var$7;
    if (!$i)
        var$2 = $rt_s(11);
    else {
        var$3 = (((32 - jl_Integer_numberOfLeadingZeros($i) | 0) + 4 | 0) - 1 | 0) / 4 | 0;
        var$4 = $rt_createCharArray(var$3);
        var$5 = var$4.data;
        var$6 = (var$3 - 1 | 0) * 4 | 0;
        var$3 = 0;
        while (var$6 >= 0) {
            var$7 = var$3 + 1 | 0;
            var$5[var$3] = jl_Character_forDigit(($i >>> var$6 | 0) & 15, 16);
            var$6 = var$6 - 4 | 0;
            var$3 = var$7;
        }
        var$2 = jl_String__init_0(var$4);
    }
    return var$2;
},
jl_Integer_toString = $i => {
    return (jl_AbstractStringBuilder_append3(jl_AbstractStringBuilder__init_1(20), $i, 10)).$toString();
},
jl_Integer_parseInt0 = ($s, $radix) => {
    if ($s !== null)
        return jl_Integer_parseIntImpl($s, 0, $s.$nativeString.length, $radix);
    $s = new jl_NumberFormatException;
    jl_Exception__init_($s, $rt_s(34));
    $rt_throw($s);
},
jl_Integer_parseIntImpl = ($s, $beginIndex, $endIndex, $radix) => {
    let $negative, var$6, $value, $maxValue, var$9, $digit, var$11, var$12;
    if ($beginIndex == $endIndex) {
        $s = new jl_NumberFormatException;
        jl_Exception__init_($s, $rt_s(35));
        $rt_throw($s);
    }
    if ($radix >= 2 && $radix <= 36) {
        a: {
            $negative = 0;
            $s = $s;
            switch (jl_String_charAt($s, $beginIndex)) {
                case 43:
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                case 45:
                    $negative = 1;
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                default:
            }
            var$6 = $beginIndex;
        }
        $value = 0;
        $maxValue = 1 + (2147483647 / $radix | 0) | 0;
        if (var$6 == $endIndex) {
            $s = new jl_NumberFormatException;
            jl_Exception__init_0($s);
            $rt_throw($s);
        }
        while (var$6 < $endIndex) {
            var$9 = var$6 + 1 | 0;
            $digit = jl_String_charAt($s, var$6);
            $digit = $digit >= 48 && $digit <= 57 ? $digit - 48 | 0 : $digit >= 97 && $digit <= 122 ? ($digit - 97 | 0) + 10 | 0 : $digit >= 65 && $digit <= 90 ? ($digit - 65 | 0) + 10 | 0 : (-1);
            if ($digit < 0) {
                var$11 = new jl_NumberFormatException;
                $s = jl_String_valueOf(jl_String_substring($s, $beginIndex, $endIndex));
                var$12 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$12);
                jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(36)), $s);
                jl_Exception__init_(var$11, jl_AbstractStringBuilder_toString(var$12));
                $rt_throw(var$11);
            }
            if ($digit >= $radix) {
                var$11 = new jl_NumberFormatException;
                $s = jl_String_valueOf(jl_String_substring($s, $beginIndex, $endIndex));
                var$12 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$12);
                jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$12, $rt_s(37)), $radix), $rt_s(29)), $s);
                jl_Exception__init_(var$11, jl_AbstractStringBuilder_toString(var$12));
                $rt_throw(var$11);
            }
            if ($value > $maxValue) {
                $s = new jl_NumberFormatException;
                jl_Exception__init_($s, $rt_s(38));
                $rt_throw($s);
            }
            $value = $rt_imul($radix, $value) + $digit | 0;
            if ($value < 0) {
                if (var$9 == $endIndex && $value == (-2147483648) && $negative)
                    return (-2147483648);
                var$11 = new jl_NumberFormatException;
                $s = jl_String_valueOf(jl_String_substring($s, $beginIndex, $endIndex));
                var$12 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$12);
                jl_StringBuilder_append(jl_StringBuilder_append(var$12, $rt_s(39)), $s);
                jl_Exception__init_(var$11, jl_AbstractStringBuilder_toString(var$12));
                $rt_throw(var$11);
            }
            var$6 = var$9;
        }
        if ($negative)
            $value =  -$value | 0;
        return $value;
    }
    $s = new jl_NumberFormatException;
    var$11 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$11);
    jl_StringBuilder_append1(jl_StringBuilder_append(var$11, $rt_s(40)), $radix);
    jl_Exception__init_($s, jl_AbstractStringBuilder_toString(var$11));
    $rt_throw($s);
},
jl_Integer_parseInt = $s => {
    return jl_Integer_parseInt0($s, 10);
},
jl_Integer_valueOf = $i => {
    let var$2, var$3;
    if ($i >= (-128) && $i <= 127) {
        a: {
            if (jl_Integer_integerCache === null) {
                jl_Integer_integerCache = $rt_createArray(jl_Integer, 256);
                var$2 = 0;
                while (true) {
                    var$3 = jl_Integer_integerCache.data;
                    if (var$2 >= var$3.length)
                        break a;
                    var$3[var$2] = jl_Integer__init_(var$2 - 128 | 0);
                    var$2 = var$2 + 1 | 0;
                }
            }
        }
        return jl_Integer_integerCache.data[$i + 128 | 0];
    }
    return jl_Integer__init_($i);
},
jl_Integer_intValue = $this => {
    return $this.$value1;
},
jl_Integer_hashCode = $this => {
    return $this.$value1;
},
jl_Integer_equals = ($this, $other) => {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Integer && $other.$value1 == $this.$value1 ? 1 : 0;
},
jl_Integer_numberOfLeadingZeros = $i => {
    let $n, var$3;
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16 | 0;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    $i = var$3 >>> 8 | 0;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 8;
    var$3 = $i >>> 4 | 0;
    if (!var$3)
        var$3 = $i;
    else
        $n = $n | 4;
    $i = var$3 >>> 2 | 0;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 2;
    if ($i >>> 1 | 0)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
},
jl_Integer_numberOfTrailingZeros = $i => {
    let $n, var$3;
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    $i = var$3 << 8;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 8;
    var$3 = $i << 4;
    if (!var$3)
        var$3 = $i;
    else
        $n = $n | 4;
    $i = var$3 << 2;
    if (!$i)
        $i = var$3;
    else
        $n = $n | 2;
    if ($i << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
},
jl_Integer__clinit_ = () => {
    jl_Integer_TYPE = $rt_cls($rt_intcls);
};
function jl_AbstractStringBuilder() {
    let a = this; jl_Object.call(a);
    a.$buffer = null;
    a.$length1 = 0;
}
let jl_AbstractStringBuilder__init_ = $this => {
    jl_AbstractStringBuilder__init_0($this, 16);
},
jl_AbstractStringBuilder__init_2 = () => {
    let var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_(var_0);
    return var_0;
},
jl_AbstractStringBuilder__init_0 = ($this, $capacity) => {
    $this.$buffer = $rt_createCharArray($capacity);
},
jl_AbstractStringBuilder__init_1 = var_0 => {
    let var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_0(var_1, var_0);
    return var_1;
},
jl_AbstractStringBuilder_append = ($this, $string) => {
    return $this.$insert($this.$length1, $string);
},
jl_AbstractStringBuilder_insert = ($this, $index, $string) => {
    let $i, $i_0, var$5, var$6;
    if ($index >= 0 && $index <= $this.$length1) {
        if ($string === null)
            $string = $rt_s(32);
        else if (jl_String_isEmpty($string))
            return $this;
        $this.$ensureCapacity($this.$length1 + $string.$nativeString.length | 0);
        $i = $this.$length1 - 1 | 0;
        while ($i >= $index) {
            $this.$buffer.data[$i + $string.$nativeString.length | 0] = $this.$buffer.data[$i];
            $i = $i + (-1) | 0;
        }
        $this.$length1 = $this.$length1 + $string.$nativeString.length | 0;
        $i_0 = 0;
        while ($i_0 < $string.$nativeString.length) {
            var$5 = $this.$buffer.data;
            var$6 = $index + 1 | 0;
            var$5[$index] = jl_String_charAt($string, $i_0);
            $i_0 = $i_0 + 1 | 0;
            $index = var$6;
        }
        return $this;
    }
    $string = new jl_StringIndexOutOfBoundsException;
    jl_Exception__init_0($string);
    $rt_throw($string);
},
jl_AbstractStringBuilder_append3 = ($this, $value, $radix) => {
    return jl_AbstractStringBuilder_insert2($this, $this.$length1, $value, $radix);
},
jl_AbstractStringBuilder_insert2 = ($this, $target, $value, $radix) => {
    let $positive, var$5, var$6, $pos, $sz, $posLimit, var$10;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value | 0;
    }
    a: {
        if ($rt_ucmp($value, $radix) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = $rt_udiv((-1), $radix);
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if ($rt_ucmp(var$10, $value) > 0) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if ($rt_ucmp(var$10, $posLimit) > 0)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                $positive = $target;
            else {
                var$5 = $this.$buffer.data;
                $positive = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (!var$10)
                    break a;
                var$5 = $this.$buffer.data;
                $target = $positive + 1 | 0;
                var$5[$positive] = jl_Character_forDigit($rt_udiv($value, var$10), $radix);
                $value = $rt_umod($value, var$10);
                var$10 = $rt_udiv(var$10, $radix);
                $positive = $target;
            }
        }
    }
    return $this;
},
jl_AbstractStringBuilder_insert3 = ($this, $target, $value) => {
    let $mantissa, var$4, $number, $exp, $negative, $intPart, $sz, $digits, $zeros, $leadingZeros, $leadingZero, $pos, $intDigit, $i;
    $mantissa = $rt_compare($value, 0.0);
    if (!$mantissa) {
        if (1.0 / $value === Infinity) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 48;
            $target = $mantissa + 1 | 0;
            var$4[$mantissa] = 46;
            var$4[$target] = 48;
            return $this;
        }
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 45;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 48;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 46;
        var$4[$mantissa] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 78;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 97;
        var$4[$target] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if ($mantissa > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            $mantissa = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 73;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 110;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 102;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 105;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 110;
        $mantissa = $target + 1 | 0;
        var$4[$target] = 105;
        $target = $mantissa + 1 | 0;
        var$4[$mantissa] = 116;
        var$4[$target] = 121;
        return $this;
    }
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent0;
    $negative = $number.$sign1;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    $leadingZeros = 0;
    $leadingZero = 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else {
            $intPart = 0;
            $leadingZeros = ( -$exp | 0) - 1 | 0;
            $leadingZero = 1;
            $sz = $sz + 1 | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + ($sz + ($digits + $leadingZeros | 0) | 0) | 0);
    if (!$negative)
        $negative = $target;
    else {
        var$4 = $this.$buffer.data;
        $negative = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    if ($leadingZero) {
        var$4 = $this.$buffer.data;
        $target = $negative + 1 | 0;
        var$4[$negative] = 48;
        $negative = $target + 1 | 0;
        var$4[$target] = 46;
        while (true) {
            $target = $leadingZeros + (-1) | 0;
            if ($leadingZeros <= 0)
                break;
            $intDigit = $negative + 1 | 0;
            var$4[$negative] = 48;
            $leadingZeros = $target;
            $negative = $intDigit;
        }
    }
    $i = 0;
    while ($i < $digits) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer.data;
        $target = $negative + 1 | 0;
        var$4[$negative] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            $negative = $target;
        else {
            $negative = $target + 1 | 0;
            var$4[$target] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        $target = $negative + 1 | 0;
        var$4[$negative] = 69;
        if ($exp >= 0)
            $mantissa = $target;
        else {
            $exp =  -$exp | 0;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 45;
        }
        if ($exp < 10)
            $intDigit = $mantissa;
        else {
            $intDigit = $mantissa + 1 | 0;
            var$4[$mantissa] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        var$4[$intDigit] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
},
jl_AbstractStringBuilder_trailingDecimalZeros = $n => {
    let $result, $zeros, var$4;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    $zeros = var$4 * 100 | 0;
    if ($n % $zeros | 0)
        $zeros = var$4;
    else
        $result = $result | 2;
    if (!($n % ($zeros * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
},
jl_AbstractStringBuilder_append0 = ($this, $c) => {
    return $this.$insert1($this.$length1, $c);
},
jl_AbstractStringBuilder_insert1 = ($this, $index, $c) => {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer.data[$index] = $c;
    return $this;
},
jl_AbstractStringBuilder_ensureCapacity = ($this, $capacity) => {
    let var$2, $newLength;
    var$2 = $this.$buffer.data.length;
    if (var$2 >= $capacity)
        return;
    $newLength = var$2 >= 1073741823 ? 2147483647 : jl_Math_max($capacity, jl_Math_max(var$2 * 2 | 0, 5));
    $this.$buffer = ju_Arrays_copyOf1($this.$buffer, $newLength);
},
jl_AbstractStringBuilder_toString = $this => {
    return jl_String__init_($this.$buffer, 0, $this.$length1);
},
jl_AbstractStringBuilder_append2 = ($this, $chars, $offset, $len) => {
    return $this.$insert2($this.$length1, $chars, $offset, $len);
},
jl_AbstractStringBuilder_insert0 = ($this, $index, $chars, $offset, $len) => {
    let var$5, var$6, var$7, var$8;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer.data;
        $len = $index + 1 | 0;
        var$8 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = $len;
        $offset = var$8;
    }
    return $this;
},
jl_AbstractStringBuilder_append1 = ($this, $chars) => {
    return $this.$append7($chars, 0, $chars.data.length);
},
jl_AbstractStringBuilder_insertSpace = ($this, $start, $end) => {
    let var$3, $sz, $i, var$6;
    var$3 = $this.$length1;
    $sz = var$3 - $start | 0;
    $this.$ensureCapacity((var$3 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        var$6 = $this.$buffer.data;
        var$6[$end + $i | 0] = var$6[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length1 = $this.$length1 + ($end - $start | 0) | 0;
},
jl_Appendable = $rt_classWithoutFields(0),
jl_StringBuilder = $rt_classWithoutFields(jl_AbstractStringBuilder),
jl_StringBuilder__init_0 = $this => {
    jl_AbstractStringBuilder__init_($this);
},
jl_StringBuilder__init_ = () => {
    let var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_0(var_0);
    return var_0;
},
jl_StringBuilder_append = ($this, $obj) => {
    let var$2, var$3;
    var$2 = $this.$length1;
    var$3 = $this;
    $obj = $obj === null ? $rt_s(32) : $obj.$toString();
    jl_AbstractStringBuilder_insert(var$3, var$2, $obj);
    return $this;
},
jl_StringBuilder_append0 = ($this, $string) => {
    jl_AbstractStringBuilder_append($this, $string);
    return $this;
},
jl_StringBuilder_append1 = ($this, $value) => {
    jl_AbstractStringBuilder_append3($this, $value, 10);
    return $this;
},
jl_StringBuilder_append5 = ($this, $value) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$2 = $this.$length1;
    var$3 = $this;
    var$4 = 1;
    if (Long_lt($value, Long_ZERO)) {
        var$4 = 0;
        $value = Long_neg($value);
    }
    a: {
        if (jl_Long_compareUnsigned($value, Long_fromInt(10)) < 0) {
            if (var$4)
                jl_AbstractStringBuilder_insertSpace(var$3, var$2, var$2 + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace(var$3, var$2, var$2 + 2 | 0);
                var$5 = var$3.$buffer.data;
                var$6 = var$2 + 1 | 0;
                var$5[var$2] = 45;
                var$2 = var$6;
            }
            var$3.$buffer.data[var$2] = jl_Character_forDigit(Long_lo($value), 10);
        } else {
            var$6 = 1;
            var$7 = Long_fromInt(1);
            var$8 = jl_Long_divideUnsigned(Long_fromInt(-1), Long_fromInt(10));
            b: {
                while (true) {
                    var$9 = Long_mul(var$7, Long_fromInt(10));
                    if (jl_Long_compareUnsigned(var$9, $value) > 0) {
                        var$9 = var$7;
                        break b;
                    }
                    var$6 = var$6 + 1 | 0;
                    if (jl_Long_compareUnsigned(var$9, var$8) > 0)
                        break;
                    var$7 = var$9;
                }
            }
            if (!var$4)
                var$6 = var$6 + 1 | 0;
            jl_AbstractStringBuilder_insertSpace(var$3, var$2, var$2 + var$6 | 0);
            if (var$4)
                var$6 = var$2;
            else {
                var$5 = var$3.$buffer.data;
                var$6 = var$2 + 1 | 0;
                var$5[var$2] = 45;
            }
            while (true) {
                if (Long_eq(var$9, Long_ZERO))
                    break a;
                var$5 = var$3.$buffer.data;
                var$2 = var$6 + 1 | 0;
                var$5[var$6] = jl_Character_forDigit(Long_lo((jl_Long_divideUnsigned($value, var$9))), 10);
                $value = jl_Long_remainderUnsigned($value, var$9);
                var$9 = jl_Long_divideUnsigned(var$9, Long_fromInt(10));
                var$6 = var$2;
            }
        }
    }
    return $this;
},
jl_StringBuilder_append2 = ($this, $value) => {
    let var$2;
    var$2 = $this.$length1;
    jl_AbstractStringBuilder_insert3($this, var$2, $value);
    return $this;
},
jl_StringBuilder_append4 = ($this, $c) => {
    jl_AbstractStringBuilder_append0($this, $c);
    return $this;
},
jl_StringBuilder_append6 = ($this, $chars, $offset, $len) => {
    jl_AbstractStringBuilder_append2($this, $chars, $offset, $len);
    return $this;
},
jl_StringBuilder_append3 = ($this, $b) => {
    let var$2, var$3, var$4;
    var$2 = $this.$length1;
    var$3 = $this;
    var$4 = !$b ? $rt_s(41) : $rt_s(42);
    jl_AbstractStringBuilder_insert(var$3, var$2, var$4);
    return $this;
},
jl_StringBuilder_delete = ($this, $start, $end) => {
    let var$3, var$4, var$5, var$6, var$7, var$8;
    if ($start >= 0) {
        var$3 = $rt_compare($start, $end);
        if (var$3 <= 0) {
            var$4 = $this.$length1;
            if ($start <= var$4) {
                if (var$3) {
                    if ($end > var$4)
                        $end = var$4;
                    var$5 = var$4 - $end | 0;
                    $this.$length1 = var$4 - ($end - $start | 0) | 0;
                    var$4 = 0;
                    while (var$4 < var$5) {
                        var$6 = $this.$buffer.data;
                        var$3 = $start + 1 | 0;
                        var$7 = $end + 1 | 0;
                        var$6[$start] = var$6[$end];
                        var$4 = var$4 + 1 | 0;
                        $start = var$3;
                        $end = var$7;
                    }
                }
                return $this;
            }
        }
    }
    var$8 = new jl_StringIndexOutOfBoundsException;
    jl_Exception__init_0(var$8);
    $rt_throw(var$8);
},
jl_StringBuilder_deleteCharAt = ($this, $index) => {
    let var$2, var$3, var$4, var$5;
    if ($index >= 0) {
        var$2 = $this.$length1;
        if ($index < var$2) {
            var$2 = var$2 - 1 | 0;
            $this.$length1 = var$2;
            while ($index < var$2) {
                var$3 = $this.$buffer.data;
                var$4 = $index + 1 | 0;
                var$3[$index] = var$3[var$4];
                $index = var$4;
            }
            return $this;
        }
    }
    var$5 = new jl_StringIndexOutOfBoundsException;
    jl_Exception__init_0(var$5);
    $rt_throw(var$5);
},
jl_StringBuilder_subSequence = ($this, var$1, var$2) => {
    let var$3;
    var$3 = $this;
    if (var$1 <= var$2 && var$1 >= 0 && var$2 <= var$3.$length1)
        return jl_String__init_(var$3.$buffer, var$1, var$2 - var$1 | 0);
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$3);
    $rt_throw(var$3);
},
jl_StringBuilder_insert0 = ($this, var$1, var$2, var$3, var$4) => {
    jl_AbstractStringBuilder_insert0($this, var$1, var$2, var$3, var$4);
    return $this;
},
jl_StringBuilder_append7 = ($this, var$1, var$2, var$3) => {
    jl_AbstractStringBuilder_append2($this, var$1, var$2, var$3);
    return $this;
},
jl_StringBuilder_length = $this => {
    return $this.$length1;
},
jl_StringBuilder_toString = $this => {
    return jl_AbstractStringBuilder_toString($this);
},
jl_StringBuilder_ensureCapacity = ($this, var$1) => {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
},
jl_StringBuilder_insert1 = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insert1($this, var$1, var$2);
    return $this;
},
jl_StringBuilder_insert = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insert($this, var$1, var$2);
    return $this;
},
otcir_FieldInfo = $rt_classWithoutFields(),
otcir_MethodInfo = $rt_classWithoutFields(),
otcir_ClassList = $rt_classWithoutFields(),
cajt_TeaVMLauncher = $rt_classWithoutFields(),
cajt_TeaVMLauncher_$callClinit = () => {
    cajt_TeaVMLauncher_$callClinit = $rt_eraseClinit(cajt_TeaVMLauncher);
    cajt_TeaVMLauncher__clinit_();
},
cajt_TeaVMLauncher_main = $args => {
    let $config, var$3, var$4;
    cajt_TeaVMLauncher_$callClinit();
    $config = new cgxgbt_TeaApplicationConfiguration;
    $config.$useGL30 = 0;
    $config.$preloadAssets = 1;
    $config.$storagePrefix = $rt_s(43);
    $config.$localStoragePrefix = $rt_s(44);
    $config.$shouldEncodePreference = 0;
    $config.$showDownloadLogs = 0;
    $config.$width2 = (-1);
    $config.$height0 = (-1);
    $config.$padHorizontal = 0;
    $config.$padVertical = 0;
    $config.$stencil = 0;
    $config.$antialiasing = 0;
    $config.$alpha = 0;
    $config.$premultipliedAlpha = 0;
    $config.$preserveDrawingBuffer = 0;
    $config.$useDebugGL = 0;
    $config.$usePhysicalPixels = 0;
    $config.$powerPreference = $rt_s(45);
    $config.$baseUrlProvider = new cgxgbtu_TeaDefaultBaseUrlProvider;
    $config.$canvasID = $rt_s(46);
    $config.$width2 = 0;
    $config.$height0 = 0;
    var$3 = new cgxgbt_TeaApplication;
    var$4 = new caj_Main;
    caj_Main_threads = 1;
    var$3.$lifecycleListeners = cbgu_Array__init_0(4);
    var$3.$initState = cgxgbt_TeaApplication$AppState_INIT;
    var$3.$lastWidth = (-1);
    var$3.$lastHeight = 1;
    var$3.$logLevel = 2;
    var$3.$prefs = cbgu_ObjectMap__init_();
    var$3.$runnables = cbgu_Array__init_();
    var$3.$runnablesHelper = cbgu_Array__init_();
    var$3.$window = cgxgbtdi_TeaWindow_get();
    var$3.$config = $config;
    var$3.$queueAppListener = var$4;
    cgxgbt_TeaApplication_init(var$3);
},
cajt_TeaVMLauncher__clinit_ = () => {
    cbgu_ObjectMap__clinit_();
    jl_String__clinit_();
    jl_Float__clinit_();
    jl_AbstractStringBuilder$Constants__clinit_();
    jl_Integer__clinit_();
    otcit_FloatAnalyzer__clinit_();
    jl_Long__clinit_();
    cbgm_MathUtils__clinit_();
    jl_Character__clinit_();
    cbgu_ArraySupplier__clinit_();
    cbgg_GLTexture__clinit_();
    cbgg_Texture$TextureFilter__clinit_();
    cbgg_Texture$TextureWrap__clinit_();
    nmgss_SceneRenderableSorter$Hints__clinit_();
    cbgm_Quaternion__clinit_();
    cbgg_Color__clinit_();
    cbggg_NinePatch__clinit_();
    cgxgbt_TeaApplication__clinit_();
    cgxgbt_TeaApplication$AppState__clinit_();
    cbg_Application$ApplicationType__clinit_();
    ju_Hashtable__clinit_();
    cbggg_GLVersion$Type__clinit_();
    jur_AbstractSet__clinit_();
    jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
    jur_AbstractCharClass__clinit_();
    jl_Thread__clinit_();
    cgxgbta_AssetType__clinit_();
    cbgg_Mesh$VertexDataType__clinit_();
    cgxgbt_TeaTool__clinit_();
    cbgu_StringBuilder__clinit_();
    jn_ByteOrder__clinit_();
    cbgg_Pixmap$Blending__clinit_();
    cbgg_Pixmap$Filter__clinit_();
    cbgg_Pixmap$Format__clinit_();
    ji_IDLBase__clinit_();
    j_Jolt__clinit_();
    jm_Quat__clinit_();
    cbg_Files$FileType__clinit_();
    cbgu_StreamUtils__clinit_();
    cbggg_BitmapFontCache__clinit_();
    cbggg_ModelInstance__clinit_();
    jpc_ObjectLayerPairFilterTable__clinit_();
    caju_JoltLayers__clinit_();
    jpcb_BroadPhaseLayerInterface__clinit_();
    jpcb_BroadPhaseLayerInterfaceTable__clinit_();
    jpcb_BroadPhaseLayer__clinit_();
    jpcb_ObjectVsBroadPhaseLayerFilter__clinit_();
    jpcb_ObjectVsBroadPhaseLayerFilterTable__clinit_();
    jc_Factory__clinit_();
    cbggg_Material__clinit_();
    otcit_FloatSynthesizer__clinit_();
    jp_PhysicsSystem__clinit_();
    jpb_Body__clinit_();
    jpb_BodyInterface__clinit_();
    jpcs_Shape__clinit_();
    jpcs_ConvexShape__clinit_();
    jpcs_BoxShape__clinit_();
    jc_TempAllocator__clinit_();
    jc_TempAllocatorImpl__clinit_();
    jc_JobSystem__clinit_();
    jc_JobSystemWithBarrier__clinit_();
    jc_JobSystemThreadPool__clinit_();
    nmgss_PBRShaderProvider__clinit_();
    nmgss_PBRShaderConfig$SRGB__clinit_();
    jnc_CodingErrorAction__clinit_();
    cbgg_TextureData$TextureDataType__clinit_();
    cbggg_MipMapGenerator__clinit_();
    jpb_MassProperties__clinit_();
    jpb_BodyCreationSettings__clinit_();
    jm_Mat44__clinit_();
    jm_Vec4__clinit_();
    cbgm_Vector2__clinit_();
    nmgss_PBRDepthShaderProvider__clinit_();
    cbggg_ShapeRenderer$ShapeType__clinit_();
    jl_Boolean__clinit_();
    jnc_CoderResult__clinit_();
    cbggg_HdpiMode__clinit_();
    nmgsl_DirectionalShadowLight__clinit_();
    jpb_BodyID__clinit_();
},
otci_IntegerUtil = $rt_classWithoutFields();
function cgxgbt_TeaApplicationConfiguration() {
    let a = this; jl_Object.call(a);
    a.$useGL30 = 0;
    a.$windowListener = null;
    a.$preloadAssets = 0;
    a.$storagePrefix = null;
    a.$localStoragePrefix = null;
    a.$shouldEncodePreference = 0;
    a.$showDownloadLogs = 0;
    a.$canvasID = null;
    a.$width2 = 0;
    a.$height0 = 0;
    a.$padHorizontal = 0;
    a.$padVertical = 0;
    a.$stencil = 0;
    a.$antialiasing = 0;
    a.$alpha = 0;
    a.$premultipliedAlpha = 0;
    a.$preserveDrawingBuffer = 0;
    a.$useDebugGL = 0;
    a.$usePhysicalPixels = 0;
    a.$powerPreference = null;
    a.$preloadListener = null;
    a.$baseUrlProvider = null;
}
let cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication = $this => {
    return !$this.$width2 && !$this.$height0 ? 1 : 0;
},
cbg_Application = $rt_classWithoutFields(0),
jl_Runnable = $rt_classWithoutFields(0);
function cgxgbt_TeaApplication() {
    let a = this; jl_Object.call(a);
    a.$delayInitCount = 0;
    a.$graphics = null;
    a.$input = null;
    a.$files = null;
    a.$net = null;
    a.$audio = null;
    a.$config = null;
    a.$queueAppListener = null;
    a.$appListener = null;
    a.$lifecycleListeners = null;
    a.$window = null;
    a.$initState = null;
    a.$lastWidth = 0;
    a.$lastHeight = 0;
    a.$logger = null;
    a.$logLevel = 0;
    a.$assetLoader = null;
    a.$prefs = null;
    a.$clipboard = null;
    a.$runnables = null;
    a.$runnablesHelper = null;
}
let cgxgbt_TeaApplication_WEB_SCRIPT_PATH = null,
cgxgbt_TeaApplication_WEB_ASSET_PATH = null,
cgxgbt_TeaApplication_agentInfo = null,
cgxgbt_TeaApplication_init = $this => {
    let $assetDownload, $hostPageBaseURL, var$3, var$4, $map, $instance, var$7, var$8;
    cgxgbt_TeaApplication_agentInfo = cgxgbta_TeaWebAgent_createAgent$js_body$_1();
    jl_System_setProperty($rt_s(47), $rt_s(8));
    jl_System_setProperty($rt_s(48), $rt_str(cgxgbt_TeaApplication_agentInfo.userAgent));
    if (cgxgbt_TeaApplication_agentInfo.windows ? 1 : 0)
        jl_System_setProperty($rt_s(49), $rt_s(50));
    else if (cgxgbt_TeaApplication_agentInfo.macOS ? 1 : 0)
        jl_System_setProperty($rt_s(49), $rt_s(51));
    else if (!(cgxgbt_TeaApplication_agentInfo.linux ? 1 : 0))
        jl_System_setProperty($rt_s(49), $rt_s(52));
    else
        jl_System_setProperty($rt_s(49), $rt_s(53));
    $this.$graphics = cgxgbt_TeaGraphics__init_($this.$config);
    $assetDownload = new cgxgbta_AssetDownloadImpl;
    $assetDownload.$showLogs = $this.$config.$showDownloadLogs;
    cgxgbta_AssetInstance_downloaderInstance = $assetDownload;
    $hostPageBaseURL = $rt_str((cgxgbtdi_TeaWindow_get()).$window0.location.href);
    var$3 = $hostPageBaseURL.$nativeString.length - $rt_s(54).$nativeString.length | 0;
    var$4 = 0;
    $map = $rt_s(54);
    $instance = $rt_s(54);
    a: {
        while (var$4 <= var$3) {
            var$7 = 0;
            while (true) {
                if (var$7 >= $map.$nativeString.length) {
                    var$3 = 1;
                    break a;
                }
                if (jl_String_charAt($hostPageBaseURL, var$4 + var$7 | 0) != jl_String_charAt($instance, var$7))
                    break;
                var$7 = var$7 + 1 | 0;
            }
            var$4 = var$4 + 1 | 0;
        }
        var$3 = 0;
    }
    if (var$3)
        $hostPageBaseURL = jl_String_replace(jl_String_replace(jl_String_replace($hostPageBaseURL, $rt_s(55), $rt_s(8)), $rt_s(56), $rt_s(8)), $rt_s(57), $rt_s(8));
    var$3 = jl_String_indexOf1($hostPageBaseURL, 63);
    if (var$3 >= 0)
        $hostPageBaseURL = jl_String_substring($hostPageBaseURL, 0, var$3);
    $instance = new cgxgbta_AssetLoadImpl;
    $map = $this.$graphics.$canvas0;
    $instance.$assetTotal = (-1);
    $instance.$assetDownloader = $assetDownload;
    $instance.$baseUrl = $hostPageBaseURL;
    $instance.$assetInQueue = ju_HashSet__init_();
    var$8 = $this.$config;
    if (var$8.$windowListener !== null) {
        $hostPageBaseURL = $map.ownerDocument;
        $map = new cgxgbta_AssetLoadImpl$1;
        $map.$this$035 = $instance;
        $hostPageBaseURL.addEventListener("dragenter", otji_JS_function(otji_JSWrapper_unwrap($map), "handleEvent"), !!0);
        $map = new cgxgbta_AssetLoadImpl$2;
        $map.$this$047 = $instance;
        $hostPageBaseURL.addEventListener("dragover", otji_JS_function(otji_JSWrapper_unwrap($map), "handleEvent"), !!0);
        $map = new cgxgbta_AssetLoadImpl$3;
        $map.$this$09 = $instance;
        $map.$val$config0 = var$8;
        $hostPageBaseURL.addEventListener("drop", otji_JS_function(otji_JSWrapper_unwrap($map), "handleEvent"));
    }
    $this.$assetLoader = $instance;
    cgxgbta_AssetInstance_instance = $instance;
    $map = (cgxjc_JMultiplatform_getInstance()).$map;
    cgxjc_JPlatformMap_put($map, cgxgbt_TeaApplication_WEB_SCRIPT_PATH, cgxgbta_AssetLoadImpl_getScriptUrl($this.$assetLoader));
    cgxjc_JPlatformMap_put($map, cgxgbt_TeaApplication_WEB_ASSET_PATH, cgxgbta_AssetLoadImpl_getAssetUrl($this.$assetLoader));
    $this.$input = cgxgbt_TeaInput__init_($this, $this.$graphics.$canvas0);
    $assetDownload = new cgxgbt_TeaFiles;
    $instance = $this.$config;
    $map = new cgxgbtft_InternalStorage;
    cgxgbtf_MemoryFileStorage__init_($map);
    $assetDownload.$internalStorage = $map;
    $map = new cgxgbtft_ClasspathStorage;
    cgxgbtf_MemoryFileStorage__init_($map);
    $assetDownload.$classpathStorage = $map;
    $assetDownload.$localStorage = cgxgbtft_LocalDBStorage__init_($this);
    $assetDownload.$localStoragePrefix0 = $instance.$localStoragePrefix;
    $this.$files = $assetDownload;
    $this.$net = cgxgbt_TeaNet__init_();
    $this.$logger = new cgxgbt_TeaApplicationLogger;
    $this.$clipboard = cgxgbt_TeaClipboard__init_0();
    cgxgbt_TeaApplication_initGdx($this);
    cgxgbt_TeaApplication_initSound($this);
    $assetDownload = $this.$config.$preloadListener;
    if ($assetDownload !== null)
        $assetDownload.$onPreload($this.$assetLoader);
    cbg_Gdx_app = $this;
    $assetDownload = $this.$graphics;
    cbg_Gdx_graphics = $assetDownload;
    $instance = $assetDownload.$gl20;
    cbg_Gdx_gl = $instance;
    cbg_Gdx_gl20 = $instance;
    cbg_Gdx_gl30 = cgxgbt_TeaGraphics_getGL30($assetDownload);
    cbg_Gdx_input = $this.$input;
    cbg_Gdx_files = $this.$files;
    cbg_Gdx_net = $this.$net;
    $assetDownload = cgxgbt_DefaultTeaAudio__init_0();
    $this.$audio = $assetDownload;
    cbg_Gdx_audio = $assetDownload;
    cgxgbtdi_TeaWindow_addEventListener($this.$window, $rt_s(58), otji_JSWrapper_unwrap(cgxgbt_TeaApplication$1__init_0($this)));
    $assetDownload = cgxgbtdi_TeaWindow_getDocument($this.$window);
    $map = cgxgbt_TeaApplication$2__init_0($this);
    $assetDownload.addEventListener("visibilitychange", otji_JS_function(otji_JSWrapper_unwrap($map), "handleEvent"));
    if (cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication($this.$config))
        cgxgbtdi_TeaWindow_addEventListener($this.$window, $rt_s(59), otji_JSWrapper_unwrap(cgxgbt_TeaApplication$3__init_0($this)));
    cgxgbtdi_TeaWindow_requestAnimationFrame($this.$window, $this);
},
cgxgbt_TeaApplication_run = $this => {
    let $state, $queue, $element, $total, $percentage, $progressBar, $t, $$je;
    $state = $this.$initState;
    a: {
        try {
            b: {
                c: {
                    d: {
                        cgxgbt_TeaApplication$6_$callClinit();
                        switch (cgxgbt_TeaApplication$6_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal($state)]) {
                            case 1:
                                if ($this.$delayInitCount)
                                    break b;
                                $this.$initState = cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS;
                                break b;
                            case 2:
                                break;
                            case 3:
                                break c;
                            case 4:
                                break d;
                            default:
                                break b;
                        }
                        cgxgbta_AssetLoadImpl_preload($this.$assetLoader, $this.$config, $rt_s(60));
                        $this.$initState = cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS;
                        break b;
                    }
                    if ($this.$queueAppListener !== null) {
                        $state = $this.$appListener;
                        if ($state !== null) {
                            cbg_Game_pause($state);
                            cbg_Game_dispose($this.$appListener);
                        }
                        cgxgbt_TeaInput_setInputProcessor($this.$input, null);
                        cgxgbt_TeaInput_reset($this.$input);
                        cbgu_Array_clear($this.$runnables);
                        $this.$appListener = $this.$queueAppListener;
                        $this.$queueAppListener = null;
                        $this.$initState = cgxgbt_TeaApplication$AppState_APP_CREATE;
                        $this.$graphics.$frameId = Long_ZERO;
                    }
                    $state = $this.$appListener;
                    if ($state === null)
                        break b;
                    cgxgbt_TeaApplication_step($this, $state);
                    break b;
                }
                $queue = cgxgbta_AssetLoadImpl_getQueue($this.$assetLoader);
                if (!$queue) {
                    $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
                    $element = window.document.getElementById("progress");
                    if ($element !== null)
                        $element.style.setProperty("display", "none");
                } else {
                    $total = $this.$assetLoader.$assetTotal;
                    if ($total > 0) {
                        $percentage = 25 + ((75 * ($total - $queue | 0) | 0) / $total | 0) | 0;
                        $progressBar = window.document.getElementById("progress-bar");
                        if ($progressBar !== null) {
                            $t = $progressBar.style;
                            $element = jl_StringBuilder__init_();
                            jl_StringBuilder_append4(jl_StringBuilder_append1($element, $percentage), 37);
                            $t.setProperty("width", $rt_ustr(jl_StringBuilder_toString($element)));
                        }
                    }
                }
            }
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_Throwable) {
                $t = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        cgxgbtdi_TeaWindow_requestAnimationFrame($this.$window, $this);
        return;
    }
    jl_Throwable_printStackTrace0($t);
    $rt_throw($t);
},
cgxgbt_TeaApplication_step = ($this, $appListener) => {
    let var$2, var$3, var$4, var$5, $resizeBypass, $width, $height, var$9, $i;
    var$2 = $this.$graphics;
    var$3 = jl_System_currentTimeMillis();
    var$4 = Long_toNumber(Long_sub(var$3, var$2.$lastTimeStamp)) / 1000.0;
    var$2.$deltaTime = var$4;
    var$2.$lastTimeStamp = var$3;
    var$5 = var$2.$time + var$4;
    var$2.$time = var$5;
    $resizeBypass = var$2.$frames + 1 | 0;
    var$2.$frames = $resizeBypass;
    if (var$5 > 1.0) {
        var$2.$fps0 = $resizeBypass;
        var$2.$time = 0.0;
        var$2.$frames = 0;
    }
    $width = cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics);
    $height = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
    $resizeBypass = 0;
    if ($this.$initState === cgxgbt_TeaApplication$AppState_APP_CREATE) {
        $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
        var$2 = $appListener;
        caj_Main_main = var$2;
        var$9 = new cajs_InitScreen;
        var$9.$init1 = 0;
        cbg_Game_setScreen(var$2, var$9);
        cbg_Game_resume($appListener);
        $resizeBypass = 1;
    }
    if (!($width == $this.$lastWidth && $height == $this.$lastHeight && !$resizeBypass)) {
        $this.$lastWidth = $width;
        $this.$lastHeight = $height;
        cbg_Gdx_gl.$glViewport(0, 0, $width, $height);
        var$2 = $appListener.$screen;
        if (var$2 !== null)
            var$2.$resize2($width, $height);
    }
    cbgu_Array_addAll($this.$runnablesHelper, $this.$runnables);
    cbgu_Array_clear($this.$runnables);
    $i = 0;
    while (true) {
        var$2 = $this.$runnablesHelper;
        if ($i >= var$2.$size0)
            break;
        cgxgbt_TeaApplication_run(cbgu_Array_get(var$2, $i));
        $i = $i + 1 | 0;
    }
    cbgu_Array_clear(var$2);
    var$2 = $this.$graphics;
    var$3 = Long_add(var$2.$frameId, Long_fromInt(1));
    var$2.$frameId = var$3;
    if (Long_gt(var$3, Long_fromInt(60))) {
        var$2 = $appListener.$screen;
        if (var$2 !== null)
            var$2.$render(cbg_Gdx_graphics.$deltaTime);
    }
    cgxgbt_TeaInput_reset($this.$input);
},
cgxgbt_TeaApplication_log = ($this, $tag, $message) => {
    let var$3, var$4;
    if ($this.$logLevel >= 2) {
        var$3 = jl_System_out();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $tag), $rt_s(29)), $message);
        $tag = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$3, $tag);
    }
},
cgxgbt_TeaApplication_error = ($this, $tag, $message) => {
    let var$3, var$4;
    if ($this.$logLevel >= 1) {
        var$3 = jl_System_err();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $tag), $rt_s(29)), $message);
        $tag = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$3, $tag);
    }
},
cgxgbt_TeaApplication_getType = $this => {
    return cbg_Application$ApplicationType_WebGL;
},
cgxgbt_TeaApplication_initGdx = $this => {
    let var$1, var$2;
    var$1 = $this.$assetLoader;
    var$2 = new cgxgbt_TeaApplication$4;
    var$2.$this$052 = $this;
    cgxgbta_AssetLoadImpl_loadScript(var$1, $rt_s(61), var$2);
},
cgxgbt_TeaApplication_initSound = $this => {
    let var$1, var$2;
    var$1 = $this.$assetLoader;
    var$2 = new cgxgbt_TeaApplication$5;
    var$2.$this$026 = $this;
    cgxgbta_AssetLoadImpl_loadScript(var$1, $rt_s(62), var$2);
},
cgxgbt_TeaApplication__clinit_ = () => {
    cgxgbt_TeaApplication_WEB_SCRIPT_PATH = $rt_s(63);
    cgxgbt_TeaApplication_WEB_ASSET_PATH = $rt_s(64);
},
cbg_ApplicationListener = $rt_classWithoutFields(0);
function cbg_Game() {
    jl_Object.call(this);
    this.$screen = null;
}
let cbg_Game_dispose = $this => {
    let var$1;
    var$1 = $this.$screen;
    if (var$1 !== null)
        var$1.$hide();
},
cbg_Game_pause = $this => {
    let var$1;
    var$1 = $this.$screen;
    if (var$1 !== null)
        var$1.$pause();
},
cbg_Game_resume = $this => {
    let var$1;
    var$1 = $this.$screen;
    if (var$1 !== null)
        var$1.$resume();
},
cbg_Game_setScreen = ($this, $screen) => {
    let var$2;
    var$2 = $this.$screen;
    if (var$2 !== null)
        var$2.$hide();
    $this.$screen = $screen;
    if ($screen !== null) {
        $screen.$show();
        $this.$screen.$resize2(cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics), cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics));
    }
},
caj_Main = $rt_classWithoutFields(cbg_Game),
caj_Main_main = null,
caj_Main_threads = 0,
cbgu_DefaultPool$PoolSupplier = $rt_classWithoutFields(0),
cbggg_GlyphLayout$_clinit_$lambda$_17_0 = $rt_classWithoutFields(),
cbggg_GlyphLayout$_clinit_$lambda$_17_0_get = var$0 => {
    let var$1;
    var$1 = new cbggg_GlyphLayout$GlyphRun;
    var$1.$glyphs = cbgu_Array__init_();
    var$1.$xAdvances = cbgu_FloatArray__init_();
    return var$1;
},
cbgu_Pools = $rt_classWithoutFields(),
cbgu_Pools_typePools = null,
cbgu_Pools_supplierPoolsCache = null,
cbgu_Pools_$callClinit = () => {
    cbgu_Pools_$callClinit = $rt_eraseClinit(cbgu_Pools);
    cbgu_Pools__clinit_();
},
cbgu_Pools_get = $poolTypeSupplier => {
    let var$2, var$3;
    cbgu_Pools_$callClinit();
    var$2 = cbgu_ObjectMap_get(cbgu_Pools_supplierPoolsCache, jl_Object_getClass($poolTypeSupplier));
    if (var$2 === null) {
        var$3 = jl_Object_getClass($poolTypeSupplier.$get5());
        var$2 = cbgu_ObjectMap_get(cbgu_Pools_typePools, var$3);
        if (var$2 === null) {
            var$2 = new cbgu_DefaultPool;
            cbgu_Pool__init_(var$2, 4, 100);
            var$2.$poolTypeSupplier = $poolTypeSupplier;
            cbgu_ObjectMap_put(cbgu_Pools_typePools, var$3, var$2);
        }
        cbgu_ObjectMap_put(cbgu_Pools_supplierPoolsCache, jl_Object_getClass($poolTypeSupplier), var$2);
    }
    return var$2;
},
cbgu_Pools__clinit_ = () => {
    cbgu_Pools_typePools = cbgu_ObjectMap__init_();
    cbgu_Pools_supplierPoolsCache = cbgu_ObjectMap__init_();
};
function cbgu_IntArray() {
    let a = this; jl_Object.call(a);
    a.$items1 = null;
    a.$size1 = 0;
    a.$ordered0 = 0;
}
let cbgu_IntArray__init_2 = $this => {
    cbgu_IntArray__init_0($this, 1, 16);
},
cbgu_IntArray__init_ = () => {
    let var_0 = new cbgu_IntArray();
    cbgu_IntArray__init_2(var_0);
    return var_0;
},
cbgu_IntArray__init_3 = ($this, $capacity) => {
    cbgu_IntArray__init_0($this, 1, $capacity);
},
cbgu_IntArray__init_1 = var_0 => {
    let var_1 = new cbgu_IntArray();
    cbgu_IntArray__init_3(var_1, var_0);
    return var_1;
},
cbgu_IntArray__init_0 = ($this, $ordered, $capacity) => {
    $this.$ordered0 = $ordered;
    $this.$items1 = $rt_createIntArray($capacity);
},
cbgu_IntArray__init_4 = (var_0, var_1) => {
    let var_2 = new cbgu_IntArray();
    cbgu_IntArray__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_IntArray_add = ($this, $value) => {
    let $items, var$3, var$4, var$5;
    $items = $this.$items1;
    var$3 = $items.data;
    var$4 = $this.$size1;
    if (var$4 == var$3.length)
        $items = cbgu_IntArray_resize($this, jl_Math_max(8, var$4 * 1.75 | 0));
    $items = $items.data;
    var$5 = $this.$size1;
    $this.$size1 = var$5 + 1 | 0;
    $items[var$5] = $value;
},
cbgu_IntArray_get = ($this, $index) => {
    let var$2, var$3;
    if ($index < $this.$size1)
        return $this.$items1.data[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append(var$3, $rt_s(17));
    var$3 = jl_StringBuilder_append1(var$3, $index);
    jl_AbstractStringBuilder_append(var$3, $rt_s(5));
    jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$3, $this.$size1)));
    $rt_throw(var$2);
},
cbgu_IntArray_set = ($this, $index, $value) => {
    let var$3, var$4;
    if ($index < $this.$size1) {
        $this.$items1.data[$index] = $value;
        return;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append(var$4, $rt_s(17));
    var$4 = jl_StringBuilder_append1(var$4, $index);
    jl_AbstractStringBuilder_append(var$4, $rt_s(5));
    jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$4, $this.$size1)));
    $rt_throw(var$3);
},
cbgu_IntArray_peek = $this => {
    return $this.$items1.data[$this.$size1 - 1 | 0];
},
cbgu_IntArray_clear = $this => {
    $this.$size1 = 0;
},
cbgu_IntArray_shrink = $this => {
    let var$1, var$2;
    var$1 = $this.$items1.data.length;
    var$2 = $this.$size1;
    if (var$1 != var$2)
        cbgu_IntArray_resize($this, var$2);
    return $this.$items1;
},
cbgu_IntArray_resize = ($this, $newSize) => {
    let $newItems, var$3;
    $newItems = $rt_createIntArray($newSize);
    var$3 = $newItems.data;
    jl_System_fastArraycopy($this.$items1, 0, $newItems, 0, jl_Math_min($this.$size1, var$3.length));
    $this.$items1 = $newItems;
    return $newItems;
},
cbgu_IntArray_hashCode = $this => {
    let $items, $h, $i, $n, var$5;
    if (!$this.$ordered0)
        return jl_Object_identity($this);
    $items = $this.$items1;
    $h = 1;
    $i = 0;
    $n = $this.$size1;
    while ($i < $n) {
        var$5 = $items.data;
        $h = ($h * 31 | 0) + var$5[$i] | 0;
        $i = $i + 1 | 0;
    }
    return $h;
},
cbgu_IntArray_equals = ($this, $object) => {
    let $array, $n, $items1, $items2, $i, var$7;
    if ($object === $this)
        return 1;
    if (!$this.$ordered0)
        return 0;
    if (!($object instanceof cbgu_IntArray))
        return 0;
    $array = $object;
    if (!$array.$ordered0)
        return 0;
    $n = $this.$size1;
    if ($n != $array.$size1)
        return 0;
    $items1 = $this.$items1;
    $items2 = $array.$items1;
    $i = 0;
    while ($i < $n) {
        var$7 = $items2.data;
        if ($items1.data[$i] != var$7[$i])
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
cbgu_IntArray_toString = $this => {
    let $items, $buffer, $i;
    if (!$this.$size1)
        return $rt_s(24);
    $items = $this.$items1.data;
    $buffer = cbgu_StringBuilder__init_(32);
    cbgu_StringBuilder_append0($buffer, 91);
    cbgu_StringBuilder_append($buffer, $items[0]);
    $i = 1;
    while ($i < $this.$size1) {
        cbgu_StringBuilder_append00($buffer, $rt_s(25));
        cbgu_StringBuilder_append($buffer, $items[$i]);
        $i = $i + 1 | 0;
    }
    cbgu_StringBuilder_append0($buffer, 93);
    return cbgu_StringBuilder_toString($buffer);
},
ju_Map = $rt_classWithoutFields(0),
ju_AbstractMap = $rt_classWithoutFields(),
jl_Cloneable = $rt_classWithoutFields(0);
function ju_HashMap() {
    let a = this; ju_AbstractMap.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$modCount0 = 0;
    a.$loadFactor5 = 0.0;
    a.$threshold2 = 0;
}
let ju_HashMap__init_2 = $this => {
    ju_HashMap__init_0($this, 16);
},
ju_HashMap__init_ = () => {
    let var_0 = new ju_HashMap();
    ju_HashMap__init_2(var_0);
    return var_0;
},
ju_HashMap__init_0 = ($this, $capacity) => {
    let var$2;
    if ($capacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        jl_Exception__init_0(var$2);
        $rt_throw(var$2);
    }
    $capacity = ju_HashMap_calculateCapacity($capacity);
    $this.$elementCount = 0;
    $this.$elementData = $rt_createArray(ju_HashMap$HashEntry, $capacity);
    $this.$loadFactor5 = 0.75;
    ju_HashMap_computeThreshold($this);
},
ju_HashMap__init_1 = var_0 => {
    let var_1 = new ju_HashMap();
    ju_HashMap__init_0(var_1, var_0);
    return var_1;
},
ju_HashMap_calculateCapacity = $x => {
    let var$2;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    $x = var$2 | var$2 >> 1;
    $x = $x | $x >> 2;
    $x = $x | $x >> 4;
    $x = $x | $x >> 8;
    return ($x | $x >> 16) + 1 | 0;
},
ju_HashMap_computeThreshold = $this => {
    $this.$threshold2 = $this.$elementData.data.length * $this.$loadFactor5 | 0;
},
ju_HashMap_get = ($this, $key) => {
    let $m;
    $m = ju_HashMap_entryByKey($this, $key);
    if ($m === null)
        return null;
    return $m.$value0;
},
ju_HashMap_entryByKey = ($this, $key) => {
    let $m, $hash;
    if ($key === null)
        $m = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = $key.$hashCode();
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $hash & ($this.$elementData.data.length - 1 | 0), $hash);
    }
    return $m;
},
ju_HashMap_findNonNullKeyEntry = ($this, $key, $index, $keyHash) => {
    let $m;
    $m = $this.$elementData.data[$index];
    while ($m !== null && !($m.$origKeyHash == $keyHash && ju_HashMap_areEqualKeys($key, $m.$key))) {
        $m = $m.$next2;
    }
    return $m;
},
ju_HashMap_findNullKeyEntry = $this => {
    let $m;
    $m = $this.$elementData.data[0];
    while ($m !== null && $m.$key !== null) {
        $m = $m.$next2;
    }
    return $m;
},
ju_HashMap_put = ($this, $key, $value) => {
    let var$3, var$4, var$5;
    if ($key === null) {
        var$3 = ju_HashMap_findNullKeyEntry($this);
        if (var$3 === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            var$3 = ju_HashMap_createHashedEntry($this, null, 0, 0);
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold2)
                ju_HashMap_rehash($this);
        }
    } else {
        var$4 = $key.$hashCode();
        var$5 = var$4 & ($this.$elementData.data.length - 1 | 0);
        var$3 = ju_HashMap_findNonNullKeyEntry($this, $key, var$5, var$4);
        if (var$3 === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            var$3 = ju_HashMap_createHashedEntry($this, $key, var$5, var$4);
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold2)
                ju_HashMap_rehash($this);
        }
    }
    $key = var$3.$value0;
    var$3.$value0 = $value;
    return $key;
},
ju_HashMap_createHashedEntry = ($this, $key, $index, $hash) => {
    let $entry, var$5;
    $entry = new ju_HashMap$HashEntry;
    ju_MapEntry__init_($entry, $key, null);
    $entry.$origKeyHash = $hash;
    var$5 = $this.$elementData.data;
    $entry.$next2 = var$5[$index];
    var$5[$index] = $entry;
    return $entry;
},
ju_HashMap_rehash = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = $this.$elementData.data.length;
    var$1 = ju_HashMap_calculateCapacity(!var$1 ? 1 : var$1 << 1);
    var$2 = $rt_createArray(ju_HashMap$HashEntry, var$1);
    var$3 = var$2.data;
    var$4 = 0;
    var$5 = var$1 - 1 | 0;
    while (true) {
        var$6 = $this.$elementData.data;
        if (var$4 >= var$6.length)
            break;
        var$7 = var$6[var$4];
        var$6[var$4] = null;
        while (var$7 !== null) {
            var$1 = var$7.$origKeyHash & var$5;
            var$8 = var$7.$next2;
            var$7.$next2 = var$3[var$1];
            var$3[var$1] = var$7;
            var$7 = var$8;
        }
        var$4 = var$4 + 1 | 0;
    }
    $this.$elementData = var$2;
    ju_HashMap_computeThreshold($this);
},
ju_HashMap_areEqualKeys = ($key1, $key2) => {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
},
cbgm_Interpolation$1 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$2 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$3 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$4 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$Pow() {
    cbgm_Interpolation.call(this);
    this.$power1 = 0;
}
let cbgm_Interpolation$Pow__init_ = ($this, $power) => {
    cbgm_Interpolation__init_($this);
    $this.$power1 = $power;
},
cbgm_Interpolation$Pow__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$Pow();
    cbgm_Interpolation$Pow__init_(var_1, var_0);
    return var_1;
},
cbgm_Interpolation$PowIn = $rt_classWithoutFields(cbgm_Interpolation$Pow),
cbgm_Interpolation$PowOut = $rt_classWithoutFields(cbgm_Interpolation$Pow),
cbgm_Interpolation$5 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$6 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$7 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$8 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$9 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$10 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$11 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$Exp() {
    let a = this; cbgm_Interpolation.call(a);
    a.$value9 = 0.0;
    a.$power0 = 0.0;
    a.$min5 = 0.0;
    a.$scale3 = 0.0;
}
let cbgm_Interpolation$Exp__init_ = ($this, $value, $power) => {
    cbgm_Interpolation__init_($this);
    $this.$value9 = $value;
    $this.$power0 = $power;
    $power = jl_Math_pow($value,  -$power);
    $this.$min5 = $power;
    $this.$scale3 = 1.0 / (1.0 - $power);
},
cbgm_Interpolation$Exp__init_0 = (var_0, var_1) => {
    let var_2 = new cbgm_Interpolation$Exp();
    cbgm_Interpolation$Exp__init_(var_2, var_0, var_1);
    return var_2;
},
cbgm_Interpolation$ExpIn = $rt_classWithoutFields(cbgm_Interpolation$Exp),
cbgm_Interpolation$ExpOut = $rt_classWithoutFields(cbgm_Interpolation$Exp),
cbgm_Interpolation$12 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$13 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$14 = $rt_classWithoutFields(cbgm_Interpolation);
function cbgm_Interpolation$Elastic() {
    let a = this; cbgm_Interpolation.call(a);
    a.$value8 = 0.0;
    a.$power = 0.0;
    a.$scale1 = 0.0;
    a.$bounces = 0.0;
}
let cbgm_Interpolation$Elastic__init_ = ($this, $value, $power, $bounces, $scale) => {
    cbgm_Interpolation__init_($this);
    $this.$value8 = $value;
    $this.$power = $power;
    $this.$scale1 = $scale;
    $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
},
cbgm_Interpolation$Elastic__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgm_Interpolation$Elastic();
    cbgm_Interpolation$Elastic__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgm_Interpolation$ElasticIn = $rt_classWithoutFields(cbgm_Interpolation$Elastic),
cbgm_Interpolation$ElasticOut = $rt_classWithoutFields(cbgm_Interpolation$Elastic);
function cbgm_Interpolation$Swing() {
    cbgm_Interpolation.call(this);
    this.$scale4 = 0.0;
}
function cbgm_Interpolation$SwingIn() {
    cbgm_Interpolation.call(this);
    this.$scale5 = 0.0;
}
function cbgm_Interpolation$SwingOut() {
    cbgm_Interpolation.call(this);
    this.$scale2 = 0.0;
}
function cbgm_Interpolation$BounceOut() {
    let a = this; cbgm_Interpolation.call(a);
    a.$widths = null;
    a.$heights = null;
}
let cbgm_Interpolation$BounceOut__init_ = ($this, $bounces) => {
    let var$2, var$3, var$4, var$5, var$6;
    cbgm_Interpolation__init_($this);
    if ($bounces >= 2 && $bounces <= 5) {
        a: {
            var$2 = $rt_createFloatArray($bounces);
            $this.$widths = var$2;
            var$3 = $rt_createFloatArray($bounces);
            var$4 = var$3.data;
            $this.$heights = var$3;
            var$4[0] = 1.0;
            switch ($bounces) {
                case 2:
                    break;
                case 3:
                    var$3 = var$2.data;
                    var$3[0] = 0.4000000059604645;
                    var$3[1] = 0.4000000059604645;
                    var$3[2] = 0.20000000298023224;
                    var$4[1] = 0.33000001311302185;
                    var$4[2] = 0.10000000149011612;
                    break a;
                case 4:
                    var$3 = var$2.data;
                    var$3[0] = 0.3400000035762787;
                    var$3[1] = 0.3400000035762787;
                    var$3[2] = 0.20000000298023224;
                    var$3[3] = 0.15000000596046448;
                    var$4[1] = 0.25999999046325684;
                    var$4[2] = 0.10999999940395355;
                    var$4[3] = 0.029999999329447746;
                    break a;
                case 5:
                    var$3 = var$2.data;
                    var$3[0] = 0.30000001192092896;
                    var$3[1] = 0.30000001192092896;
                    var$3[2] = 0.20000000298023224;
                    var$3[3] = 0.10000000149011612;
                    var$3[4] = 0.10000000149011612;
                    var$4[1] = 0.44999998807907104;
                    var$4[2] = 0.30000001192092896;
                    var$4[3] = 0.15000000596046448;
                    var$4[4] = 0.05999999865889549;
                    break a;
                default:
                    break a;
            }
            var$3 = var$2.data;
            var$3[0] = 0.6000000238418579;
            var$3[1] = 0.4000000059604645;
            var$4[1] = 0.33000001311302185;
        }
        var$2 = var$2.data;
        var$2[0] = var$2[0] * 2.0;
        return;
    }
    var$5 = new jl_IllegalArgumentException;
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_AbstractStringBuilder_append(var$6, $rt_s(65));
    jl_Exception__init_(var$5, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$6, $bounces)));
    $rt_throw(var$5);
},
cbgm_Interpolation$BounceOut__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$BounceOut();
    cbgm_Interpolation$BounceOut__init_(var_1, var_0);
    return var_1;
},
cbgm_Interpolation$Bounce = $rt_classWithoutFields(cbgm_Interpolation$BounceOut),
cbgm_Interpolation$BounceIn = $rt_classWithoutFields(cbgm_Interpolation$BounceOut),
ju_Comparator = $rt_classWithoutFields(0),
jl_String$_clinit_$lambda$_115_0 = $rt_classWithoutFields(),
jl_Character = $rt_classWithoutFields(),
jl_Character_TYPE = null,
jl_Character_digitMapping = null,
jl_Character_upperCaseMapping = null,
jl_Character_lowerCaseMapping = null,
jl_Character_classMapping = null,
jl_Character_characterCache = null,
jl_Character_$$metadata$$0 = null,
jl_Character_$$metadata$$1 = null,
jl_Character_$$metadata$$3 = null,
jl_Character_$$metadata$$4 = null,
jl_Character_toString = $c => {
    let var$2, var$3;
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_1(var$2, var$3);
    return var$2;
},
jl_Character_isSupplementaryCodePoint = $codePoint => {
    return $codePoint >= 65536 && $codePoint <= 1114111 ? 1 : 0;
},
jl_Character_isHighSurrogate = $ch => {
    return ($ch & 64512) != 55296 ? 0 : 1;
},
jl_Character_isLowSurrogate = $ch => {
    return ($ch & 64512) != 56320 ? 0 : 1;
},
jl_Character_isSurrogate = $ch => {
    return !jl_Character_isHighSurrogate($ch) && !jl_Character_isLowSurrogate($ch) ? 0 : 1;
},
jl_Character_isSurrogatePair = ($high, $low) => {
    return jl_Character_isHighSurrogate($high) && jl_Character_isLowSurrogate($low) ? 1 : 0;
},
jl_Character_toCodePoint = ($high, $low) => {
    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
},
jl_Character_highSurrogate = $codePoint => {
    return (55296 | ($codePoint - 65536 | 0) >> 10 & 1023) & 65535;
},
jl_Character_lowSurrogate = $codePoint => {
    return (56320 | $codePoint & 1023) & 65535;
},
jl_Character_toLowerCase = $ch => {
    return jl_Character_toLowerCase0($ch) & 65535;
},
jl_Character_toLowerCase0 = $ch => {
    if (jl_Character_lowerCaseMapping === null) {
        if (jl_Character_$$metadata$$0 === null)
            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
    }
    return jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch);
},
jl_Character_toUpperCase = $ch => {
    return jl_Character_toUpperCase0($ch) & 65535;
},
jl_Character_toUpperCase0 = $codePoint => {
    if (jl_Character_upperCaseMapping === null) {
        if (jl_Character_$$metadata$$1 === null)
            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
    }
    return jl_Character_mapChar(jl_Character_upperCaseMapping, $codePoint);
},
jl_Character_mapChar = ($table, $codePoint) => {
    let $binSearchTable, var$4, var$5, var$6, $index, var$8;
    $binSearchTable = $table.$fastTable.data;
    if ($codePoint < $binSearchTable.length)
        return $codePoint + $binSearchTable[$codePoint] | 0;
    $binSearchTable = $table.$binarySearchTable.data;
    var$4 = 0;
    var$5 = $binSearchTable.length;
    var$6 = (var$5 / 2 | 0) - 1 | 0;
    a: {
        while (true) {
            $index = (var$4 + var$6 | 0) / 2 | 0;
            var$8 = $rt_compare($binSearchTable[$index * 2 | 0], $codePoint);
            if (!var$8)
                break;
            if (var$8 <= 0) {
                var$4 = $index + 1 | 0;
                if (var$4 > var$6)
                    break a;
            } else {
                $index = $index - 1 | 0;
                if ($index < var$4)
                    break a;
                var$6 = $index;
            }
        }
    }
    if ($index >= 0) {
        $index = $index * 2 | 0;
        if ($index < var$5)
            return $codePoint + $binSearchTable[$index + 1 | 0] | 0;
    }
    return 0;
},
jl_Character_digit = ($ch, $radix) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    if ($radix >= 2 && $radix <= 36) {
        if (jl_Character_digitMapping === null) {
            if (jl_Character_$$metadata$$3 === null)
                jl_Character_$$metadata$$3 = jl_Character_obtainDigitMapping$$create();
            var$3 = (jl_Character_$$metadata$$3.value !== null ? $rt_str(jl_Character_$$metadata$$3.value) : null);
            var$4 = otci_CharFlow__init_(jl_String_toCharArray(var$3));
            var$5 = otci_Base46_decodeUnsigned(var$4);
            var$6 = $rt_createIntArray(var$5 * 2 | 0);
            var$7 = var$6.data;
            var$8 = 0;
            var$9 = 0;
            var$10 = 0;
            var$11 = 0;
            while (var$11 < var$5) {
                var$9 = var$9 + otci_Base46_decode(var$4) | 0;
                var$10 = var$10 + otci_Base46_decode(var$4) | 0;
                var$12 = var$8 + 1 | 0;
                var$7[var$8] = var$9;
                var$8 = var$12 + 1 | 0;
                var$7[var$12] = var$10;
                var$11 = var$11 + 1 | 0;
            }
            jl_Character_digitMapping = var$6;
        }
        var$6 = jl_Character_digitMapping.data;
        var$8 = 0;
        var$9 = (var$6.length / 2 | 0) - 1 | 0;
        a: {
            while (var$9 >= var$8) {
                var$10 = (var$8 + var$9 | 0) / 2 | 0;
                var$11 = var$10 * 2 | 0;
                var$5 = $rt_compare($ch, var$6[var$11]);
                if (var$5 > 0)
                    var$8 = var$10 + 1 | 0;
                else {
                    if (var$5 >= 0) {
                        $ch = var$6[var$11 + 1 | 0];
                        break a;
                    }
                    var$9 = var$10 - 1 | 0;
                }
            }
            $ch = (-1);
        }
        if ($ch >= $radix)
            $ch = (-1);
    } else
        $ch = (-1);
    return $ch;
},
jl_Character_forDigit = ($digit, $radix) => {
    if ($radix >= 2 && $radix <= 36 && $digit >= 0 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
},
jl_Character_toChars = $codePoint => {
    let var$2, var$3, var$4;
    if (!($codePoint >= 0 && $codePoint <= 1114111 ? 1 : 0)) {
        var$2 = new jl_IllegalArgumentException;
        jl_Exception__init_0(var$2);
        $rt_throw(var$2);
    }
    if ($codePoint < 65536) {
        var$3 = $rt_createCharArray(1);
        var$3.data[0] = $codePoint & 65535;
        return var$3;
    }
    var$3 = $rt_createCharArray(2);
    var$4 = var$3.data;
    var$4[0] = jl_Character_highSurrogate($codePoint);
    var$4[1] = jl_Character_lowSurrogate($codePoint);
    return var$3;
},
jl_Character_getType = $codePoint => {
    let $u, $range, $classes, var$5, var$6, var$7, var$8, var$9, $i, var$11, var$12, var$13, var$14, $l;
    $u = $codePoint > 0 && $codePoint <= 65535 ? 1 : 0;
    if ($u && jl_Character_isSurrogate($codePoint & 65535))
        return 19;
    if (jl_Character_classMapping === null) {
        if (jl_Character_$$metadata$$4 === null)
            jl_Character_$$metadata$$4 = jl_Character_obtainClasses$$create();
        $range = (jl_Character_$$metadata$$4.value !== null ? $rt_str(jl_Character_$$metadata$$4.value) : null);
        $classes = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
        var$5 = $classes.data;
        var$6 = $rt_createByteArray(16384);
        var$7 = var$6.data;
        var$8 = 0;
        var$9 = 0;
        $i = 0;
        var$11 = 0;
        while (var$11 < $range.$nativeString.length) {
            var$12 = otciu_UnicodeHelper_decodeByte(jl_String_charAt($range, var$11));
            if (var$12 == 64) {
                var$11 = var$11 + 1 | 0;
                var$12 = otciu_UnicodeHelper_decodeByte(jl_String_charAt($range, var$11));
                var$13 = 0;
                var$14 = 1;
                $u = 0;
                while ($u < 3) {
                    var$11 = var$11 + 1 | 0;
                    var$13 = var$13 | $rt_imul(var$14, otciu_UnicodeHelper_decodeByte(jl_String_charAt($range, var$11)));
                    var$14 = var$14 * 64 | 0;
                    $u = $u + 1 | 0;
                }
            } else if (var$12 < 32)
                var$13 = 1;
            else {
                var$12 = (var$12 - 32 | 0) << 24 >> 24;
                var$11 = var$11 + 1 | 0;
                var$13 = otciu_UnicodeHelper_decodeByte(jl_String_charAt($range, var$11));
            }
            if (!var$12 && var$13 >= 128) {
                if (var$8 > 0) {
                    $u = var$9 + 1 | 0;
                    var$5[var$9] = otciu_UnicodeHelper$Range__init_($i, $i + var$8 | 0, ju_Arrays_copyOf0(var$6, var$8));
                    var$9 = $u;
                }
                $i = $i + (var$8 + var$13 | 0) | 0;
                var$8 = 0;
            } else {
                $u = var$8 + var$13 | 0;
                if ($u < var$7.length)
                    $l = var$9;
                else {
                    $l = var$9 + 1 | 0;
                    var$5[var$9] = otciu_UnicodeHelper$Range__init_($i, $i + var$8 | 0, ju_Arrays_copyOf0(var$6, var$8));
                    $i = $i + $u | 0;
                    var$8 = 0;
                }
                while (true) {
                    $u = var$13 + (-1) | 0;
                    if (var$13 <= 0)
                        break;
                    var$13 = var$8 + 1 | 0;
                    var$7[var$8] = var$12;
                    var$8 = var$13;
                    var$13 = $u;
                }
                var$9 = $l;
            }
            var$11 = var$11 + 1 | 0;
        }
        jl_Character_classMapping = ju_Arrays_copyOf($classes, var$9);
    }
    $classes = jl_Character_classMapping.data;
    $l = 0;
    $u = $classes.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = $classes[$i];
        if ($codePoint >= $range.$end4)
            $l = $i + 1 | 0;
        else {
            $u = $range.$start3;
            if ($codePoint >= $u)
                return $range.$data14.data[$codePoint - $u | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
},
jl_Character_isLetterOrDigit = $codePoint => {
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 9:
                break;
            case 6:
            case 7:
            case 8:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return 0;
},
jl_Character_isIdentifierIgnorable = $codePoint => {
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return jl_Character_getType($codePoint) != 16 ? 0 : 1;
},
jl_Character_isSpaceChar = $codePoint => {
    switch (jl_Character_getType($codePoint)) {
        case 12:
        case 13:
        case 14:
            break;
        default:
            return 0;
    }
    return 1;
},
jl_Character_isWhitespace = $codePoint => {
    switch ($codePoint) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 28:
        case 29:
        case 30:
        case 31:
            break;
        case 160:
        case 8199:
        case 8239:
            return 0;
        default:
            return jl_Character_isSpaceChar($codePoint);
    }
    return 1;
},
jl_Character__clinit_ = () => {
    jl_Character_TYPE = $rt_cls($rt_charcls);
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
},
jl_Character_acquireLowerCaseMapping$$create = () => {
    return {"value" : "TW  H#F#U 4%F#O #F#/ d%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a1# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #<+#%# #%# #%# \'.3#%# #%# #{1#%# #w1%%# %J\'#k1#o1#%# #w1#!3# #23#*3#%# \'23#:3# #>3#%# #%# #%# #N3#%# #N3# %%# #N3#%# #J3%%# #%# #R3#%# \'%# /)#%# #)#%# #)#%# #%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# %)#%# #%# #8)#L%#%# #%# #%# #"
    + "%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a+# #%# #%# #%# #%# #%# #%# #%# #%# #%# /B45#%# #,/#645# %%# #P1#!\'#*\'#%# #%# #%# #%# #%# <-%# #%# \'%# 1&++ %_## #Z#)k%%g%% #F#W hA# 1%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# +]%# %%# #?#%# %a+\'N\'AF#b &#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #^#%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# %*%r iB#oq-&# _?gejg#A1 a$#%# -mo%&# {-%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3,4/# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3C1 1C1 1C1 1C1 1C1 3C/ 1C1 QC1 1C1 1C1 1C%8\'%G# 7i\')G# 7C%D)\' 7C%u)%?# 7X+%P+%G# L-q*/# \'Pw/#8m/# -6## |bA G%# kC.#U !r*%&# &#%# #,05#qX\'#H.5# %%# #%# #%# #e25#D05#q25#m25# #%# %%# 1865%%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# "
    + "#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 1%# #%# )%# (a=%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# G%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# y%%# #%# #%# #%# #%# #%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 5%# #%# #4Fd#%# #%# #%# #%# #%# )%# #<{p# %%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #P}p#}}p#m}p#D}p#P}p# #@yp#D{p#Lyp#Br#%# #%# #%"
    + "# #%# #%# #%# #%# #%# #,%#L}p#LJd#%# #%# #$$r#%# \'%# +%# #%# #%# #P6rM \'%# ,T5F#U TUg#r {%g#r >\'c#p Lnk%F# .\'F#S HB#F#b o@5F#b Jo=N#f "};
},
jl_Character_acquireUpperCaseMapping$$create = () => {
    return {"value" : "NY  ,%H#U :#>b# vH#O #H#/:+# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #,5# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'#(;#N1# %\'# #\'# %\'# \'\'# +\'# %6)# \'\'#*/#N6r# %_+# %\'# #\'# #\'# %\'# )\'# %\'# \'\'# #\'# %\'# \'\'# #J%# +\'#+# #\'#+# #\'#+# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#L\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'#+# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
    + " #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# %665% #\'# )\'# #\'# #\'# #\'# #\'#o25#c25#k25#03#}1# #y1% #m1# #q1#{}p# \'y1#k}p# #$3#!$r#:{p#N}p# #,3#43#N}p#*05#B}p# %43# #B05#<3# %@3# /F.5# %P3# #J}p#P3# \'B{p#P3#$\'#L3%,\'# +T3# 5Jyp#>yp# Z\'_\'# x\'# #\'# \'\'\' #_+\' !#a##]#\' #H#CD##H#3m%#i%% #e%#P%# \'(%#D%#C# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#i\'#P\'#=#(+# #4)# %\'# %\'# .#H#bP\'A #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 3\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'"
    + "# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'#`# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'% &#,%n mB#ko%x %ko%\' RAC1 >$#yu+#uu+#Pu+#Hu+%Lu+#0u+#io+#>@d# #\'- (+2Fd# \'oX\'# AJJd# N%\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
g\')B)%V+%s)%N+)A1 1A1 1A1 1A% #E# 5<m-# )E# 9A% =A% \'=# ;E# R/8## ddA )\'# @E0#U Nr,%&# #\'# \'D45#845# #\'#"
    + " #\'# #\'# -\'# %\'# 5\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# #\'# )\'- /qq-&# i]=\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# G\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# y%\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #"
    + "\'# #\'# #\'# #\'# #\'# #\'# #\'# 5\'# #\'# %\'# #\'# #\'# #\'# #\'# )\'# )\'# #\'#*%# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 7\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# )\'# #\'# %\'\' #\'% )\'# #\'# #\'# U\'# cEDr# Yiejg# e*5H#U eUi#r {%i#r <\'e#t {nm%:# V%H#^ >B#H#b o@5H#b No=P#f "};
},
jl_Character_obtainDigitMapping$$create = () => {
    return {"value" : "kE*% %%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%_H#T#%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%{CG%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%6)G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%!i#G"
    + "%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%*;G%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%:/G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%{/G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%R@dG%%%%%%%%%%%%%%%%%%R[G%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%!#G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%cCG%%%%%%%%%%%%%%%%%%o*IG%%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%c:#T#%%%%%%%%%%%%%%%%%%w&%G%%%%%"
    + "%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%_fG%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%_%G%%%%%%%%%%%%%%%%%%>-G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%w=G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%>AG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%B\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%oYG%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%g5G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%ow?G%%%%%%%%%%%%%%%%%%s4%G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%"
    + "%%%%:OG%%%%%%%%%%%%%%%%%%V*OG%%%%%%%%%%%%%%%%%%VZ%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%!8%G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%sKG%%%%%%%%%%%%%%%%%%k5G%%%%%%%%%%%%%%%%%%.lG%%%%%%%%%%%%%%%%%%wN)G%%%%%%%%%%%%%%%%%%"};
},
jl_Character_obtainClasses$$create = () => {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91Y$FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,A&F9<F\' Q#A&G*FJ%G91GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F#"

    + "L+=\'=\'=\'6767I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F3G$)A*F4G#)Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1\'J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(G1ARG%)FP\')G&)\'I&\'I#F) Y#J+Y(^+G*^*Y$G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%"
    + "FEI)G)I#G#A$Y&J+A$F$J+F?E\'Y#C*!#A&BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFGb!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[BA0"
    + "G.H%\'H$G-A0^#!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^jA7^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^A b=J! BQCQ!#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?6767676"
    + "7Y&%Y+U#Y%596Y.^#Y$676767675AC^; b=:! A-b=7$ A;^1-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+FA^GA*=F1^@ L+^?L)=L0^AL+^HL0b= & &b `G!&^b&b   %b `(!F7%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#!#!#B%#!#B##A#!# # #!#!#!#!A6E$!#&"
    + "E##F(\'F$\'F%\'F8I#G#)^%\'A$L\'^#;=A\'FUY%A)I#FSI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C*%]#A%b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]2A1b&L& 76^1FbA#FWA(=AAF-;^$G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F"
    + "\'A#F\'A#F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^.A$=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9B, B0 B( B# C, C0 C( C#A$FUA-b&X% A*F7A+F)A9E\' EK E*AgF\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+A\'J+F%%&B7A$G&5%C7A)Z#b 1$ L@ FK G#5A#F#A1F$AXG%F>L+&A)F7G,L%Y&A7F3G%Y%AGF6L(A5F8A*)\')FVG0Y(A%L5J+\'"
    + "F#G#&A*G$)FNI$G%I#G#Y#1Y%\'A+1A#F:A(J+A\'G$FEG&)G) J+Y%&I#&A)FD\'Y#&A*G#)FQI$G*I#F%Y%G%9)\'J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'F#\'A`F( & F% F0 F+9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&A,F+ &A#& FG &I$G\' )A#) I% I#\')\'&\'&Y# Y#A)G#A>FVI$G)I#G$)\'F%Y&J+Y# 9\'F$A?FQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&9A\'J+A\'J5A=F<A#\')\'I#G%)G&A%J+L#Y$=F(b Z# FMI$G*)G#9b E! BACAJ+L*A-F)A#&A#F) F# F9I\' I#A#G#)\'&)&)\'Y$A*J+AhF)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%"
    + "Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A.FkA(Y+b W# FB9A/J+A\'F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF( F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#A(G#&)F. FCI#G&A$I#\')\'Y.J+\'b 6! &A0L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b -J b&B! Y#A.b&Q1 Q1\'F\'G0A+b&<` A&b&(* b ZK!F?G-I$G$J+b \'< b&Z) A(F@ J+A%Y#Fq J+A\'F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q\' E$FIE#Y$J+b \'$ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%\'A,I#A/&b W@!&A)b&74 AJF#A(&b H,#E% E( E# b&D% A0&A>F$A#&A/F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =_ b=Q$ J+A\'b=U\'"
    + " AnGOA#G8A*b=U! A^b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^_A6^dG$=b [! L5A-L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 12 C+&C5A\'C\'b 6$ G( G2A#G( G# G&A&E`AB\'b Q! FNA$G(E(A#J+A%&=b  & F?\'A2FMG%J+A&;b 1( F<%G%J+b 7$ F?G#&J+A%9b A( F( F% F# F0 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN=L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% "
    + "F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.b=B# AY^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=9, A%^2A$^.A$b=X! A%b=@! A\'^-A%=A0^-A%^YA)^+A\'^IA)^?A#^-A%^#A`b=5& A-^/A#^.A$^+A&^YA(^0A#^,A\'^*A(b=4#  b==! J+b \'1 &b   %b   %b ?<#&AA&b Y !&A\'&b =$ &A#&b  ;!&A/&b PU!&A0&b M* &b CG b&?) b C8 &b *.!&A&&b ?!!&b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   "
    + "%b   %b 2R!1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
},
cgxgbtu_TeaBaseUrlProvider = $rt_classWithoutFields(0),
cgxgbtu_TeaDefaultBaseUrlProvider = $rt_classWithoutFields();
function jl_Enum() {
    let a = this; jl_Object.call(a);
    a.$name0 = null;
    a.$ordinal0 = 0;
}
let jl_Enum__init_ = ($this, $name, $ordinal) => {
    $this.$name0 = $name;
    $this.$ordinal0 = $ordinal;
},
jl_Enum_ordinal = $this => {
    return $this.$ordinal0;
},
jl_Enum_toString = $this => {
    return $this.$name0;
},
jl_Enum_equals = ($this, $other) => {
    return $this !== $other ? 0 : 1;
},
cgxgbt_TeaApplication$AppState = $rt_classWithoutFields(jl_Enum),
cgxgbt_TeaApplication$AppState_INIT = null,
cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS = null,
cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS = null,
cgxgbt_TeaApplication$AppState_APP_CREATE = null,
cgxgbt_TeaApplication$AppState_APP_LOOP = null,
cgxgbt_TeaApplication$AppState_$VALUES = null,
cgxgbt_TeaApplication$AppState__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cgxgbt_TeaApplication$AppState;
    jl_Enum__init_(var$1, $rt_s(66), 0);
    cgxgbt_TeaApplication$AppState_INIT = var$1;
    var$1 = new cgxgbt_TeaApplication$AppState;
    jl_Enum__init_(var$1, $rt_s(67), 1);
    cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS = var$1;
    var$1 = new cgxgbt_TeaApplication$AppState;
    jl_Enum__init_(var$1, $rt_s(68), 2);
    cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS = var$1;
    var$1 = new cgxgbt_TeaApplication$AppState;
    jl_Enum__init_(var$1, $rt_s(69), 3);
    cgxgbt_TeaApplication$AppState_APP_CREATE = var$1;
    var$1 = new cgxgbt_TeaApplication$AppState;
    jl_Enum__init_(var$1, $rt_s(70), 4);
    cgxgbt_TeaApplication$AppState_APP_LOOP = var$1;
    var$2 = $rt_createArray(cgxgbt_TeaApplication$AppState, 5);
    var$3 = var$2.data;
    var$3[0] = cgxgbt_TeaApplication$AppState_INIT;
    var$3[1] = cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS;
    var$3[2] = cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS;
    var$3[3] = cgxgbt_TeaApplication$AppState_APP_CREATE;
    var$3[4] = var$1;
    cgxgbt_TeaApplication$AppState_$VALUES = var$2;
},
cgxgbtd_WindowWrapper = $rt_classWithoutFields(0),
otj_JSObject = $rt_classWithoutFields(0),
otjb_AnimationFrameCallback = $rt_classWithoutFields(0);
function cgxgbtdi_TeaWindow() {
    let a = this; jl_Object.call(a);
    a.$window0 = null;
    a.$runnable = null;
}
let cgxgbtdi_TeaWindow_TEA_WINDOW = null,
cgxgbtdi_TeaWindow_$callClinit = () => {
    cgxgbtdi_TeaWindow_$callClinit = $rt_eraseClinit(cgxgbtdi_TeaWindow);
    cgxgbtdi_TeaWindow__clinit_();
},
cgxgbtdi_TeaWindow_get = () => {
    cgxgbtdi_TeaWindow_$callClinit();
    return cgxgbtdi_TeaWindow_TEA_WINDOW;
},
cgxgbtdi_TeaWindow__init_0 = $this => {
    cgxgbtdi_TeaWindow_$callClinit();
    $this.$window0 = window;
},
cgxgbtdi_TeaWindow__init_ = () => {
    let var_0 = new cgxgbtdi_TeaWindow();
    cgxgbtdi_TeaWindow__init_0(var_0);
    return var_0;
},
cgxgbtdi_TeaWindow_getDocument = $this => {
    return $this.$window0.document;
},
cgxgbtdi_TeaWindow_requestAnimationFrame = ($this, $runnable) => {
    $this.$runnable = $runnable;
    requestAnimationFrame(otji_JS_function(otji_JSWrapper_unwrap($this), "onAnimationFrame"));
},
cgxgbtdi_TeaWindow_getClientWidth = $this => {
    return $this.$window0.innerWidth;
},
cgxgbtdi_TeaWindow_getClientHeight = $this => {
    return $this.$window0.innerHeight;
},
cgxgbtdi_TeaWindow_addEventListener = ($this, $type, $listener) => {
    $this.$window0.addEventListener($rt_ustr($type), otji_JS_function($listener, "handleEvent"));
},
cgxgbtdi_TeaWindow__clinit_ = () => {
    cgxgbtdi_TeaWindow_TEA_WINDOW = cgxgbtdi_TeaWindow__init_();
},
cgxgbtdi_TeaWindow_onAnimationFrame$exported$0 = (var$1, var$2) => {
    let var$3;
    cgxgbtdi_TeaWindow_$callClinit();
    var$2;
    var$1 = var$1;
    var$3 = var$1.$runnable;
    var$1.$runnable = null;
    cgxgbt_TeaApplication_run(var$3);
},
jl_Math = $rt_classWithoutFields(),
jl_Math_sin = var$1 => {
    return Math.sin(var$1);
},
jl_Math_cos = var$1 => {
    return Math.cos(var$1);
},
jl_Math_tan = var$1 => {
    return Math.tan(var$1);
},
jl_Math_log = var$1 => {
    return Math.log(var$1);
},
jl_Math_sqrt = var$1 => {
    return Math.sqrt(var$1);
},
jl_Math_ceil = var$1 => {
    return Math.ceil(var$1);
},
jl_Math_pow = (var$1, $y) => {
    return jl_Math_powImpl(var$1, $y);
},
jl_Math_powImpl = (var$1, var$2) => {
    return Math.pow(var$1, var$2);
},
jl_Math_round = var$1 => {
    return var$1 + jl_Math_sign0(var$1) * 0.5 | 0;
},
jl_Math_randomImpl = () => {
    return Math.random();
},
jl_Math_min = ($a, $b) => {
    if ($a < $b)
        $b = $a;
    return $b;
},
jl_Math_max = ($a, $b) => {
    if ($a > $b)
        $b = $a;
    return $b;
},
jl_Math_minImpl = (var$1, var$2) => {
    return Math.min(var$1, var$2);
},
jl_Math_min0 = (var$1, var$2) => {
    return jl_Math_minImpl(var$1, var$2);
},
jl_Math_maxImpl = (var$1, var$2) => {
    return Math.max(var$1, var$2);
},
jl_Math_max0 = (var$1, var$2) => {
    return jl_Math_maxImpl(var$1, var$2);
},
jl_Math_abs0 = $n => {
    if ($n < 0)
        $n =  -$n | 0;
    return $n;
},
jl_Math_absImpl = var$1 => {
    return Math.abs(var$1);
},
jl_Math_abs = var$1 => {
    return jl_Math_absImpl(var$1);
},
jl_Math_sign = var$1 => {
    return Math.sign(var$1);
},
jl_Math_sign0 = var$1 => {
    return Math.sign(var$1);
},
jl_IllegalArgumentException = $rt_classWithoutFields(jl_RuntimeException),
ju_Objects = $rt_classWithoutFields(),
ju_Objects_checkFromIndexSize = (var$1, $size, $length) => {
    let var$4;
    if (var$1 >= 0 && $size >= 0 && $size <= ($length - var$1 | 0))
        return var$1;
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$4);
    $rt_throw(var$4);
};
function otji_JSWrapper() {
    jl_Object.call(this);
    this.$js = null;
}
let otji_JSWrapper__init_0 = ($this, $js) => {
    $this.$js = $js;
},
otji_JSWrapper__init_ = var_0 => {
    let var_1 = new otji_JSWrapper();
    otji_JSWrapper__init_0(var_1, var_0);
    return var_1;
},
otji_JSWrapper_wrap = $jsNumber => {
    let $type, $isObject, $wrappers, $existingRef, $existing, $wrapper, $stringWrappers, $stringFinalizationRegistry, $wrapperAsJs, $numberWrappers, $numberFinalizationRegistry;
    if ($jsNumber === null)
        return null;
    $type = $rt_str(typeof $jsNumber);
    $isObject = !jl_String_equals($type, $rt_s(71)) && !jl_String_equals($type, $rt_s(72)) ? 0 : 1;
    otji_JSWrapper$Helper_$callClinit();
    $wrappers = otji_JSWrapper$Helper_wrappers;
    if ($wrappers !== null) {
        if ($isObject) {
            $existingRef = $wrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($jsNumber);
            $wrappers.set($jsNumber, new WeakRef($wrapper));
            return $wrapper;
        }
        if (jl_String_equals($type, $rt_s(73))) {
            $stringWrappers = otji_JSWrapper$Helper_stringWrappers;
            $stringFinalizationRegistry = otji_JSWrapper$Helper_stringFinalizationRegistry;
            $existingRef = $stringWrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($jsNumber);
            $wrapperAsJs = $wrapper;
            $stringWrappers.set($jsNumber, new WeakRef($wrapperAsJs));
            otji_JSWrapper_register$js_body$_4($stringFinalizationRegistry, $wrapperAsJs, $jsNumber);
            return $wrapper;
        }
        if (jl_String_equals($type, $rt_s(74))) {
            $numberWrappers = otji_JSWrapper$Helper_numberWrappers;
            $numberFinalizationRegistry = otji_JSWrapper$Helper_numberFinalizationRegistry;
            $existingRef = $numberWrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($jsNumber);
            $wrapperAsJs = $wrapper;
            $numberWrappers.set($jsNumber, new WeakRef($wrapperAsJs));
            otji_JSWrapper_register$js_body$_4($numberFinalizationRegistry, $wrapperAsJs, $jsNumber);
            return $wrapper;
        }
        if (jl_String_equals($type, $rt_s(75))) {
            $existingRef = otji_JSWrapper$Helper_undefinedWrapper;
            $existing = $existingRef === null ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($jsNumber);
            otji_JSWrapper$Helper_undefinedWrapper = new WeakRef($wrapper);
            return $wrapper;
        }
    }
    return otji_JSWrapper__init_($jsNumber);
},
otji_JSWrapper_unwrap = $o => {
    if ($o === null)
        return null;
    return !($o instanceof otji_JSWrapper) ? $o : $o.$js;
},
otji_JSWrapper_javaToJs = $o => {
    if ($o === null)
        return null;
    return $o instanceof $rt_objcls() && $o instanceof otji_JSWrapper ? otji_JSWrapper_unwrap($o) : $o;
},
otji_JSWrapper_jsToJava = $o => {
    if ($o === null)
        return null;
    return $o instanceof $rt_objcls() ? $o : otji_JSWrapper_wrap($o);
},
otji_JSWrapper_register$js_body$_4 = (var$1, var$2, var$3) => {
    return var$1.register(var$2, var$3);
},
cgxgbta_TeaWebAgent = $rt_classWithoutFields(),
cgxgbta_TeaWebAgent_createAgent$js_body$_1 = () => {
    var userAgent = navigator.userAgent.toLowerCase();
    return { firefox : userAgent.indexOf('firefox') !=  -1, chrome : userAgent.indexOf('chrome') !=  -1, safari : userAgent.indexOf('safari') !=  -1, opera : userAgent.indexOf('opera') !=  -1, IE : userAgent.indexOf('msie') !=  -1, macOS : userAgent.indexOf('mac') !=  -1, linux : userAgent.indexOf('linux') !=  -1, windows : userAgent.indexOf('win') !=  -1, userAgent : userAgent };
},
jl_System = $rt_classWithoutFields(),
jl_System_outCache = null,
jl_System_errCache = null,
jl_System_properties = null,
jl_System_out = () => {
    let var$1;
    if (jl_System_outCache === null) {
        var$1 = new otcic_JSStdoutPrintStream;
        otcic_JsConsolePrintStream__init_(var$1);
        jl_System_outCache = var$1;
    }
    return jl_System_outCache;
},
jl_System_err = () => {
    let var$1;
    if (jl_System_errCache === null) {
        var$1 = new otcic_JSStderrPrintStream;
        otcic_JsConsolePrintStream__init_(var$1);
        jl_System_errCache = var$1;
    }
    return jl_System_errCache;
},
jl_System_arraycopy = ($src, $srcPos, $dest, $destPos, $length) => {
    let $srcType, $targetType, $srcArray, $i, var$10, var$11, var$12;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src) && ($destPos + $length | 0) <= jlr_Array_getLength($dest)) {
            a: {
                b: {
                    if ($src !== $dest) {
                        $srcType = jl_Class_getComponentType(jl_Object_getClass($src));
                        $targetType = jl_Class_getComponentType(jl_Object_getClass($dest));
                        if ($srcType !== null && $targetType !== null) {
                            if ($srcType === $targetType)
                                break b;
                            if (!jl_Class_isPrimitive($srcType) && !jl_Class_isPrimitive($targetType)) {
                                $srcArray = $src;
                                $i = 0;
                                var$10 = $srcPos;
                                while ($i < $length) {
                                    var$11 = $srcArray.data;
                                    var$12 = var$10 + 1 | 0;
                                    if (!jl_Class_isInstance($targetType, var$11[var$10])) {
                                        jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                        $src = new jl_ArrayStoreException;
                                        jl_Exception__init_0($src);
                                        $rt_throw($src);
                                    }
                                    $i = $i + 1 | 0;
                                    var$10 = var$12;
                                }
                                jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                return;
                            }
                            if (!jl_Class_isPrimitive($srcType))
                                break a;
                            if (jl_Class_isPrimitive($targetType))
                                break b;
                            else
                                break a;
                        }
                        $src = new jl_ArrayStoreException;
                        jl_Exception__init_0($src);
                        $rt_throw($src);
                    }
                }
                jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                return;
            }
            $src = new jl_ArrayStoreException;
            jl_Exception__init_0($src);
            $rt_throw($src);
        }
        $src = new jl_IndexOutOfBoundsException;
        jl_Exception__init_0($src);
        $rt_throw($src);
    }
    $dest = new jl_NullPointerException;
    jl_Exception__init_($dest, $rt_s(76));
    $rt_throw($dest);
},
jl_System_fastArraycopy = ($src, $srcPos, $dest, $destPos, $length) => {
    if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src) && ($destPos + $length | 0) <= jlr_Array_getLength($dest)) {
        jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
        return;
    }
    $src = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0($src);
    $rt_throw($src);
},
jl_System_doArrayCopy = (var$1, var$2, var$3, var$4, var$5) => {
    if (var$5 !== 0) {
        if (typeof var$1.data.buffer !== 'undefined') {
            var$3.data.set(var$1.data.subarray(var$2, var$2 + var$5), var$4);
        } else if (var$1 !== var$3 || var$4 < var$2) {
            for (let i = 0;i < var$5;i = i + 1 | 0) {
                var$3.data[var$4++] = var$1.data[var$2++];
            }
        } else {
            var$2 = var$2 + var$5 | 0;
            var$4 = var$4 + var$5 | 0;
            for (let i = 0;i < var$5;i = i + 1 | 0) {
                var$3.data[ --var$4] = var$1.data[ --var$2];
            }
        }
    }
},
jl_System_currentTimeMillis = () => {
    return Long_fromNumber((new Date()).getTime());
},
jl_System_setProperty = (var$1, var$2) => {
    let var$3, var$4, var$5;
    if (jl_System_properties === null) {
        var$3 = new ju_Properties;
        ju_Hashtable__init_(var$3);
        var$4 = var$3;
        ju_Hashtable_put(var$4, $rt_s(77), $rt_s(78));
        ju_Hashtable_put(var$4, $rt_s(49), $rt_s(79));
        ju_Hashtable_put(var$4, $rt_s(80), $rt_s(81));
        ju_Hashtable_put(var$4, $rt_s(82), $rt_s(83));
        ju_Hashtable_put(var$4, $rt_s(84), $rt_s(30));
        ju_Hashtable_put(var$4, $rt_s(85), $rt_s(86));
        ju_Hashtable_put(var$4, $rt_s(87), $rt_s(78));
        ju_Hashtable_put(var$4, $rt_s(88), $rt_s(81));
        var$5 = new ju_Properties;
        ju_Hashtable__init_(var$5);
        var$5.$defaults = var$3;
        jl_System_properties = var$5;
    }
    return ju_Hashtable_put(jl_System_properties, var$1, var$2);
},
cbg_Graphics = $rt_classWithoutFields(0);
function cgxgbt_TeaGraphics() {
    let a = this; jl_Object.call(a);
    a.$context0 = null;
    a.$canvas0 = null;
    a.$config3 = null;
    a.$gl20 = null;
    a.$gl30 = null;
    a.$glVersion = null;
    a.$fps0 = 0.0;
    a.$lastTimeStamp = Long_ZERO;
    a.$frameId = Long_ZERO;
    a.$deltaTime = 0.0;
    a.$time = 0.0;
    a.$frames = 0;
}
let cgxgbt_TeaGraphics__init_0 = ($this, $config) => {
    let $attr, $canvas1, $window, $document, $versionString, $vendorString, $rendererString, $width, $currentWindow, var$11, var$12;
    $this.$fps0 = 0.0;
    $this.$lastTimeStamp = jl_System_currentTimeMillis();
    $this.$frameId = Long_fromInt(-1);
    $this.$deltaTime = 0.0;
    $this.$time = 0.0;
    $this.$config3 = $config;
    $this.$canvas0 = (cgxgbtdi_TeaWindow_getDocument(cgxgbtdi_TeaWindow__init_())).getElementById($rt_ustr($config.$canvasID));
    $attr = cgxgbtg_WebGLContextAttributesWrapper_create$js_body$_14();
    $attr.alpha = !!$config.$alpha;
    $attr.antialias = !!$config.$antialiasing;
    $attr.stencil = !!$config.$stencil;
    $attr.premultipliedAlpha = !!$config.$premultipliedAlpha;
    $attr.preserveDrawingBuffer = !!$config.$preserveDrawingBuffer;
    $attr.powerPreference = $rt_ustr($config.$powerPreference);
    $canvas1 = $this.$canvas0;
    if ($config.$useGL30)
        $this.$context0 = $canvas1.getContext("webgl2", $attr);
    a: {
        if ($config.$useGL30) {
            $window = $this.$context0;
            if ($window !== null) {
                if (!$config.$useDebugGL)
                    $document = cgxgbt_TeaGL30__init_0($window);
                else {
                    $document = new cgxgbt_TeaGL30Debug;
                    cgxgbt_TeaGL30__init_($document, $window);
                }
                $this.$gl30 = $document;
                $this.$gl20 = $document;
                break a;
            }
        }
        $document = $canvas1.getContext("webgl", $attr);
        $this.$context0 = $document;
        if (!$config.$useDebugGL)
            $window = cgxgbt_TeaGL20__init_0($document);
        else {
            $window = new cgxgbt_TeaGL20Debug;
            cgxgbt_TeaGL20__init_($window, $document);
        }
        $this.$gl20 = $window;
    }
    $versionString = $this.$gl20.$glGetString(7938);
    $vendorString = $this.$gl20.$glGetString(7936);
    $rendererString = $this.$gl20.$glGetString(7937);
    $canvas1 = new cbggg_GLVersion;
    $window = cbg_Application$ApplicationType_WebGL;
    $canvas1.$TAG = $rt_s(89);
    if ($window === cbg_Application$ApplicationType_Android)
        $canvas1.$type3 = cbggg_GLVersion$Type_GLES;
    else if ($window === cbg_Application$ApplicationType_iOS)
        $canvas1.$type3 = cbggg_GLVersion$Type_GLES;
    else if ($window === cbg_Application$ApplicationType_Desktop)
        $canvas1.$type3 = cbggg_GLVersion$Type_OpenGL;
    else if ($window === cbg_Application$ApplicationType_Applet)
        $canvas1.$type3 = cbggg_GLVersion$Type_OpenGL;
    else if ($window !== $window)
        $canvas1.$type3 = cbggg_GLVersion$Type_NONE;
    else
        $canvas1.$type3 = cbggg_GLVersion$Type_WebGL;
    $window = $canvas1.$type3;
    if ($window === cbggg_GLVersion$Type_GLES)
        cbggg_GLVersion_extractVersion($canvas1, $rt_s(90), $versionString);
    else if ($window === cbggg_GLVersion$Type_WebGL)
        cbggg_GLVersion_extractVersion($canvas1, $rt_s(91), $versionString);
    else if ($window === cbggg_GLVersion$Type_OpenGL)
        cbggg_GLVersion_extractVersion($canvas1, $rt_s(92), $versionString);
    else {
        $canvas1.$majorVersion = (-1);
        $canvas1.$minorVersion = (-1);
        $canvas1.$releaseVersion = (-1);
        $vendorString = $rt_s(8);
        $rendererString = $rt_s(8);
    }
    $canvas1.$versionString = $versionString;
    $canvas1.$vendorString = $vendorString;
    $canvas1.$rendererString = $rendererString;
    $this.$glVersion = $canvas1;
    $width = $config.$width2;
    if (!($width < 0 && $config.$height0 < 0)) {
        if ($width && $config.$height0 ? 1 : 0)
            cgxgbt_TeaGraphics_setCanvasSize($this, $width, $config.$height0, 0);
        else {
            $currentWindow = cgxgbtdi_TeaWindow_get();
            cgxgbt_TeaGraphics_setCanvasSize($this, cgxgbtdi_TeaWindow_getClientWidth($currentWindow) - $config.$padHorizontal | 0, cgxgbtdi_TeaWindow_getClientHeight($currentWindow) - $config.$padVertical | 0, $config.$usePhysicalPixels);
        }
    }
    $config = $this.$context0;
    var$11 = cgxgbt_TeaGraphics_getWidth($this);
    var$12 = cgxgbt_TeaGraphics_getHeight($this);
    $config.viewport(0, 0, var$11, var$12);
    $config = $this.$canvas0;
    $window = new cgxgbt_TeaGraphics$1;
    $window.$this$022 = $this;
    cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61($config, otji_JS_function(otji_JSWrapper_unwrap($window), "fullscreenChanged"));
},
cgxgbt_TeaGraphics__init_ = var_0 => {
    let var_1 = new cgxgbt_TeaGraphics();
    cgxgbt_TeaGraphics__init_0(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGraphics_getGL30 = $this => {
    return $this.$gl30;
},
cgxgbt_TeaGraphics_getWidth = $this => {
    return $this.$canvas0.width;
},
cgxgbt_TeaGraphics_getHeight = $this => {
    return $this.$canvas0.height;
},
cgxgbt_TeaGraphics_getBackBufferWidth = $this => {
    return $this.$canvas0.width;
},
cgxgbt_TeaGraphics_getBackBufferHeight = $this => {
    return $this.$canvas0.height;
},
cgxgbt_TeaGraphics_setCanvasSize = ($this, $width, $height, $usePhysicalPixels) => {
    let $density, $w, $h, $style, var$8;
    $density = 1.0;
    if ($usePhysicalPixels)
        $density = devicePixelRatio || 1;
    $w = $width * $density | 0;
    $h = $height * $density | 0;
    $this.$canvas0.width = $w;
    $this.$canvas0.height = $h;
    if ($usePhysicalPixels) {
        $style = $this.$canvas0.style;
        cgxgbtd_StyleWrapper$Unit_$callClinit();
        var$8 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$8);
        jl_StringBuilder_append(jl_StringBuilder_append1(var$8, $width), $rt_s(93));
        $style.setProperty("width", $rt_ustr(jl_AbstractStringBuilder_toString(var$8)));
        var$8 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$8);
        jl_StringBuilder_append(jl_StringBuilder_append1(var$8, $height), $rt_s(93));
        $style.setProperty("height", $rt_ustr(jl_AbstractStringBuilder_toString(var$8)));
    }
},
cgxgbt_TeaGraphics_supportsExtension = ($this, $extensionName) => {
    return $this.$context0.getExtension($rt_ustr($extensionName)) === null ? 0 : 1;
},
cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61 = (var$1, var$2) => {
    if (var$1.requestFullscreen) {
        document.addEventListener("fullscreenchange", var$2, false);
    }
    if (var$1.webkitRequestFullScreen) {
        document.addEventListener("webkitfullscreenchange", var$2, false);
    }
    if (var$1.mozRequestFullScreen) {
        document.addEventListener("mozfullscreenchange", var$2, false);
    }
    if (var$1.msRequestFullscreen) {
        document.addEventListener("msfullscreenchange", var$2, false);
    }
},
cgxgbta_AssetDownloader = $rt_classWithoutFields(0);
function cgxgbta_AssetDownloadImpl() {
    let a = this; jl_Object.call(a);
    a.$queue = 0;
    a.$showLogs = 0;
}
let cgxgbta_AssetDownloadImpl_subtractQueue = $this => {
    $this.$queue = $this.$queue - 1 | 0;
},
cgxgbta_AssetDownloadImpl_addQueue = $this => {
    $this.$queue = $this.$queue + 1 | 0;
},
cgxgbta_AssetDownloadImpl_load = ($this, $async, $url, $type, $listener) => {
    let $internalListener, var$6;
    $internalListener = new cgxgbta_AssetDownloadImpl$1;
    $internalListener.$this$07 = $this;
    $internalListener.$val$listener = $listener;
    if ($this.$showLogs) {
        $listener = jl_System_out();
        var$6 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$6);
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(94)), $url);
        var$6 = jl_AbstractStringBuilder_toString(var$6);
        otcic_JsConsolePrintStream_println($listener, var$6);
    }
    a: {
        cgxgbta_AssetDownloadImpl$3_$callClinit();
        switch (cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType.data[$type.$ordinal0]) {
            case 1:
                break;
            case 2:
                $type = null;
                cgxgbta_AssetDownloadImpl$1_onSuccess($internalListener, $url, $type);
                break a;
            default:
                $url = new cbgu_GdxRuntimeException;
                $type = jl_String_valueOf($type);
                $listener = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($listener);
                jl_StringBuilder_append(jl_StringBuilder_append($listener, $rt_s(95)), $type);
                jl_Exception__init_($url, jl_AbstractStringBuilder_toString($listener));
                $rt_throw($url);
        }
        cgxgbta_AssetDownloadImpl_loadBinary($this, $async, $url, $internalListener, 0);
    }
},
cgxgbta_AssetDownloadImpl_loadBinary = ($this, $async, $url, $listener, $count) => {
    let var$5;
    if ($count == 3) {
        if ($listener !== null)
            cgxgbta_AssetDownloadImpl$1_onFailure($listener, $url);
        return;
    }
    cgxgbta_AssetDownloadImpl_addQueue($this);
    if (!$async)
        cgxgbta_AssetDownloadImpl_loadBinaryInternally($this, 0, $url, $listener, $count);
    else {
        var$5 = new cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0;
        var$5.$_02 = $this;
        var$5.$_10 = $url;
        var$5.$_20 = $listener;
        var$5.$_30 = $count;
        setTimeout(otji_JS_function(otji_JSWrapper_unwrap(var$5), "onTimer"), 0);
    }
},
cgxgbta_AssetDownloadImpl_loadBinaryInternally = ($this, $async, $url, $listener, $count) => {
    let $request, var$6;
    $request = new XMLHttpRequest();
    var$6 = new cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0;
    var$6.$_09 = $this;
    var$6.$_15 = $request;
    var$6.$_24 = $listener;
    var$6.$_32 = $url;
    var$6.$_40 = $count;
    var$6.$_5 = $async;
    $request.onreadystatechange = otji_JS_function(otji_JSWrapper_unwrap(var$6), "handleEvent");
    var$6 = new cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0;
    var$6.$_022 = $listener;
    $listener = otji_JSWrapper_unwrap(var$6);
    $request.addEventListener("progress", otji_JS_function($listener, "handleEvent"));
    $request.open("GET", $rt_ustr($url), !!$async);
    if ($async)
        $request.responseType = "arraybuffer";
    $request.send();
},
cgxgbta_AssetInstance = $rt_classWithoutFields(),
cgxgbta_AssetInstance_downloaderInstance = null,
cgxgbta_AssetInstance_instance = null,
cgxgbta_AssetLoader = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl() {
    let a = this; jl_Object.call(a);
    a.$assetTotal = 0;
    a.$baseUrl = null;
    a.$assetInQueue = null;
    a.$assetDownloader = null;
}
let cgxgbta_AssetLoadImpl_getAssetUrl = $this => {
    let var$1, var$2;
    var$1 = $this.$baseUrl;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, var$1), $rt_s(96));
    return jl_AbstractStringBuilder_toString(var$2);
},
cgxgbta_AssetLoadImpl_getScriptUrl = $this => {
    let var$1, var$2;
    var$1 = $this.$baseUrl;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, var$1), $rt_s(97));
    return jl_AbstractStringBuilder_toString(var$2);
},
cgxgbta_AssetLoadImpl_preload = ($this, $config, $assetFileUrl) => {
    let $listener, var$4, var$5;
    $listener = new cgxgbta_AssetLoadImpl$5;
    $listener.$this$03 = $this;
    $listener.$val$config = $config;
    $listener.$val$assetFileUrl = $assetFileUrl;
    $config = $this.$assetDownloader;
    var$4 = cgxgbta_AssetLoadImpl_getAssetUrl($this);
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$4), $assetFileUrl);
    $assetFileUrl = jl_AbstractStringBuilder_toString(var$5);
    var$5 = cgxgbta_AssetType_Binary;
    cgxgbta_AssetDownloadImpl_load($config, 1, $assetFileUrl, var$5, $listener);
},
cgxgbta_AssetLoadImpl_loadScript = ($this, $path, $listener) => {
    let var$3, var$4, var$5, var$6, var$7;
    var$3 = $this.$assetDownloader;
    var$4 = cgxgbta_AssetLoadImpl_getScriptUrl($this);
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$4), $path);
    var$6 = jl_AbstractStringBuilder_toString(var$5);
    $path = var$3;
    if ($path.$showLogs) {
        var$3 = jl_System_out();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(98)), var$6);
        var$4 = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$3, var$4);
    }
    cgxgbta_AssetDownloadImpl_addQueue($path);
    var$5 = window.document;
    var$7 = var$5.createElement("script");
    var$3 = new cgxgbta_AssetDownloadImpl$2;
    var$3.$this$05 = $path;
    var$3.$val$url = var$6;
    var$3.$val$listener2 = $listener;
    var$7.addEventListener("load", otji_JS_function(otji_JSWrapper_unwrap(var$3), "handleEvent"));
    var$4 = new cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0;
    var$4.$_04 = $path;
    var$4.$_11 = var$6;
    var$4.$_21 = $listener;
    var$7.addEventListener("error", otji_JS_function(otji_JSWrapper_unwrap(var$4), "handleEvent"));
    $path = $rt_ustr(var$6);
    var$7.src = $path;
    var$5.body.appendChild(var$7);
},
cgxgbta_AssetLoadImpl_getQueue = $this => {
    return $this.$assetDownloader.$queue;
};
function cgxjc_JMultiplatform() {
    jl_Object.call(this);
    this.$map = null;
}
let cgxjc_JMultiplatform_platformMap = null,
cgxjc_JMultiplatform_getInstance = () => {
    let var$1, var$2;
    if (cgxjc_JMultiplatform_platformMap === null) {
        var$1 = new cgxjc_JMultiplatform;
        var$2 = new cgxjc_JPlatformMap;
        var$2.$map0 = ju_HashMap__init_();
        var$1.$map = var$2;
        cgxjc_JMultiplatform_platformMap = var$1;
    }
    return cgxjc_JMultiplatform_platformMap;
};
function cgxjc_JPlatformMap() {
    jl_Object.call(this);
    this.$map0 = null;
}
let cgxjc_JPlatformMap_put = ($this, $key, $value) => {
    ju_HashMap_put($this.$map0, $key, $value);
},
cbg_Input = $rt_classWithoutFields(0);
function cbg_AbstractInput() {
    let a = this; jl_Object.call(a);
    a.$pressedKeys = null;
    a.$justPressedKeys = null;
    a.$keysToCatch = null;
    a.$keyJustPressed0 = 0;
}
let cbg_AbstractInput_isCatchKey = ($this, $keycode) => {
    let var$2;
    var$2 = $this.$keysToCatch;
    return !$keycode ? var$2.$hasZeroValue0 : cbgu_IntSet_locateKey(var$2, $keycode) < 0 ? 0 : 1;
},
cgxgbtd_EventListenerWrapper = $rt_classWithoutFields(0);
function cgxgbt_TeaInput() {
    let a = this; cbg_AbstractInput.call(a);
    a.$canvas = null;
    a.$justTouched = 0;
    a.$touchMap = null;
    a.$touched = null;
    a.$touchX = null;
    a.$touchY = null;
    a.$deltaX = null;
    a.$deltaY = null;
    a.$pressedButtons = null;
    a.$pressedKeyCount = 0;
    a.$keyJustPressed = 0;
    a.$justPressedButtons = null;
    a.$processor = null;
    a.$currentEventTimeStamp = Long_ZERO;
    a.$hasFocus = 0;
    a.$application = null;
}
let cgxgbt_TeaInput_getMouseWheelVelocity = $event => {
    let $agent, $delta, $detail, $wheelDelta;
    $agent = cgxgbt_TeaApplication_agentInfo;
    $delta = 0.0;
    $detail = $event.detail;
    $wheelDelta = $event.wheelDelta;
    if ($agent.firefox ? 1 : 0)
        $delta = ($agent.macOS ? 1 : 0) ? 1.0 * $detail : 1.0 * $detail / 3.0;
    else if ($agent.opera ? 1 : 0)
        $delta = !($agent.linux ? 1 : 0) ? (-1.0) * $wheelDelta / 40.0 : (-1.0) * $wheelDelta / 80.0;
    else if (!(!($agent.chrome ? 1 : 0) && !($agent.safari ? 1 : 0) && !($agent.IE ? 1 : 0))) {
        $delta = (-1.0) * $wheelDelta;
        $detail = $delta / 120.0;
        if (jl_Math_abs($detail) >= 1.0)
            $delta = $detail;
        else if (!($agent.windows ? 1 : 0))
            $delta = !($agent.macOS ? 1 : 0) ? $detail : $delta / 3.0;
    }
    return $delta;
},
cgxgbt_TeaInput__init_0 = ($this, $application, $canvas) => {
    let var$3, var$4, var$5;
    $this.$keysToCatch = cbgu_IntSet__init_();
    $this.$pressedKeys = $rt_createBooleanArray(256);
    $this.$justPressedKeys = $rt_createBooleanArray(256);
    $this.$justTouched = 0;
    var$3 = new cbgu_IntMap;
    var$3.$loadFactor1 = 0.800000011920929;
    var$4 = cbgu_ObjectSet_tableSize(20, 0.800000011920929);
    var$3.$threshold0 = var$4 * 0.800000011920929 | 0;
    var$5 = var$4 - 1 | 0;
    var$3.$mask3 = var$5;
    var$3.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$5));
    var$3.$keyTable0 = $rt_createIntArray(var$4);
    var$3.$valueTable0 = $rt_createArray(jl_Object, var$4);
    $this.$touchMap = var$3;
    $this.$touched = $rt_createBooleanArray(20);
    $this.$touchX = $rt_createIntArray(20);
    $this.$touchY = $rt_createIntArray(20);
    $this.$deltaX = $rt_createIntArray(20);
    $this.$deltaY = $rt_createIntArray(20);
    $this.$pressedButtons = cbgu_IntSet__init_();
    $this.$pressedKeyCount = 0;
    $this.$keyJustPressed = 0;
    $this.$justPressedButtons = $rt_createBooleanArray(5);
    $this.$hasFocus = 1;
    $this.$application = $application;
    $this.$canvas = $canvas;
    cgxgbt_TeaInput_hookEvents($this);
},
cgxgbt_TeaInput__init_ = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaInput();
    cgxgbt_TeaInput__init_0(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaInput_hookEvents = $this => {
    let $document;
    $document = $this.$canvas.ownerDocument;
    $document.addEventListener("mousedown", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("mouseup", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("mousemove", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("wheel", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("keydown", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("keyup", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("keypress", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $this.$canvas.addEventListener("touchstart", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchmove", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchcancel", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchend", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
},
cgxgbt_TeaInput_handleMouseEvents = ($this, $touchEvent) => {
    let $type, $target, $canvas2, var$5, $button, $relativeX, $relativeY, $touch, $mouseX, $mouseY, $wheelDelta, $touches, $i, $j, $real, $equals, $touch_0, $touchId, $j_0, var$21;
    a: {
        $type = $rt_str($touchEvent.type);
        if (jl_String_equals($type, $rt_s(99))) {
            window.focus();
            $target = $touchEvent.target;
            $canvas2 = $this.$canvas;
            if ($target !== $canvas2 ? 0 : 1) {
                var$5 = $this.$touched.data;
                if (!var$5[0]) {
                    $this.$hasFocus = 1;
                    $this.$justTouched = 1;
                    var$5[0] = 1;
                    $button = cgxgbtu_KeyCodes_getButton($touchEvent.button);
                    cbgu_IntSet_add($this.$pressedButtons, $button);
                    $this.$justPressedButtons.data[$button] = 1;
                    $this.$deltaX.data[0] = 0;
                    $this.$deltaY.data[0] = 0;
                    if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                        $relativeX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas);
                        $relativeY = cgxgbt_TeaInput_getRelativeY0($this, $touchEvent, $this.$canvas);
                        $this.$touchX.data[0] = $relativeX;
                        $this.$touchY.data[0] = $relativeY;
                    } else {
                        var$5 = $this.$touchX.data;
                        var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                        var$5 = $this.$touchY.data;
                        var$5[0] = var$5[0] + $touchEvent.movementY | 0;
                    }
                    $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                    $touch = $this.$processor;
                    if ($touch !== null)
                        $touch.$touchDown($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($touchEvent.button));
                    $touchEvent.preventDefault();
                    $touchEvent.stopPropagation();
                    break a;
                }
            }
            $mouseX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $canvas2);
            $mouseY = cgxgbt_TeaInput_getRelativeY0($this, $touchEvent, $this.$canvas);
            if (!($mouseX >= 0.0 && $mouseX <= cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics) && $mouseY >= 0.0 && $mouseY <= cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics)))
                $this.$hasFocus = 0;
            return;
        }
        if (jl_String_equals($type, $rt_s(100))) {
            if (!$this.$touched.data[0])
                return;
            cbgu_IntSet_remove($this.$pressedButtons, cgxgbtu_KeyCodes_getButton($touchEvent.button));
            var$5 = $this.$touched;
            var$5.data[0] = $this.$pressedButtons.$size6 <= 0 ? 0 : 1;
            if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                cgxgbt_TeaInput_setDelta($this, 0, cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas) - $this.$touchX.data[0] | 0, cgxgbt_TeaInput_getRelativeY0($this, $touchEvent, $this.$canvas) - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas);
                $this.$touchY.data[0] = cgxgbt_TeaInput_getRelativeY0($this, $touchEvent, $this.$canvas);
            } else {
                cgxgbt_TeaInput_setDelta($this, 0, $touchEvent.movementX | 0, $touchEvent.movementY | 0);
                var$5 = $this.$touchX.data;
                var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                var$5 = $this.$touchY.data;
                var$5[0] = var$5[0] + $touchEvent.movementY | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $this.$touched.data[0] = 0;
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchUp($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($touchEvent.button));
        } else if (!jl_String_equals($type, $rt_s(101))) {
            if (jl_String_equals($type, $rt_s(102))) {
                if ($this.$processor !== null) {
                    $wheelDelta = cgxgbt_TeaInput_getMouseWheelVelocity($touchEvent);
                    $this.$processor.$scrolled(0.0, $wheelDelta | 0);
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            } else if (jl_String_equals($type, $rt_s(103))) {
                $this.$justTouched = 1;
                $touches = $touchEvent.changedTouches;
                $i = 0;
                $j = $touches.length;
                while ($i < $j) {
                    $touch = $touches.item($i);
                    $real = $touch.identifier;
                    $canvas2 = $this.$touchMap;
                    $equals = cgxgbt_TeaInput_getAvailablePointer($this);
                    cbgu_IntMap_put($canvas2, $real, jl_Integer_valueOf($equals));
                    $this.$touched.data[$equals] = 1;
                    $this.$touchX.data[$equals] = cgxgbt_TeaInput_getRelativeX0($this, $touch, $this.$canvas);
                    $this.$touchY.data[$equals] = cgxgbt_TeaInput_getRelativeY($this, $touch, $this.$canvas);
                    $this.$deltaX.data[$equals] = 0;
                    $this.$deltaY.data[$equals] = 0;
                    $touch = $this.$processor;
                    if ($touch !== null)
                        $touch.$touchDown($this.$touchX.data[$equals], $this.$touchY.data[$equals], $equals, 0);
                    $i = $i + 1 | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                $touchEvent.preventDefault();
            }
        } else {
            if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                $relativeX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas);
                $relativeY = cgxgbt_TeaInput_getRelativeY0($this, $touchEvent, $this.$canvas);
                cgxgbt_TeaInput_setDelta($this, 0, $relativeX - $this.$touchX.data[0] | 0, $relativeY - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = $relativeX;
                $this.$touchY.data[0] = $relativeY;
            } else {
                cgxgbt_TeaInput_setDelta($this, 0, $touchEvent.movementX | 0, $touchEvent.movementY | 0);
                var$5 = $this.$touchX.data;
                var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                var$5 = $this.$touchY.data;
                var$5[0] = var$5[0] + $touchEvent.movementY | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $touch = $this.$processor;
            if ($touch !== null) {
                if (!$this.$touched.data[0])
                    $touch.$mouseMoved($this.$touchX.data[0], $this.$touchY.data[0]);
                else
                    $touch.$touchDragged($this.$touchX.data[0], $this.$touchY.data[0], 0);
            }
        }
    }
    if (jl_String_equals($type, $rt_s(104))) {
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch_0 = $touches.item($i);
            $real = $touch_0.identifier;
            $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
            cgxgbt_TeaInput_setDelta($this, $touchId, cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas) - $this.$touchX.data[$touchId] | 0, cgxgbt_TeaInput_getRelativeY($this, $touch_0, $this.$canvas) - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas);
            $this.$touchY.data[$touchId] = cgxgbt_TeaInput_getRelativeY($this, $touch_0, $this.$canvas);
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchDragged($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $touchEvent.preventDefault();
    }
    if (jl_String_equals($type, $rt_s(105))) {
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j_0 = $touches.length;
        while ($i < $j_0) {
            $touch_0 = $touches.item($i);
            $real = $touch_0.identifier;
            $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
            cbgu_IntMap_remove($this.$touchMap, $real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas);
            $relativeY = cgxgbt_TeaInput_getRelativeY($this, $touch_0, $this.$canvas);
            cgxgbt_TeaInput_setDelta($this, $touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            var$5 = $this.$touchX.data;
            var$5[$touchId] = $relativeX;
            var$21 = $this.$touchY.data;
            var$21[$touchId] = $relativeY;
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchUp(var$5[$touchId], var$21[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $touchEvent.preventDefault();
    }
    if (jl_String_equals($type, $rt_s(106))) {
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j_0 = $touches.length;
        while ($i < $j_0) {
            $touch_0 = $touches.item($i);
            $real = $touch_0.identifier;
            $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
            cbgu_IntMap_remove($this.$touchMap, $real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas);
            $relativeY = cgxgbt_TeaInput_getRelativeY($this, $touch_0, $this.$canvas);
            cgxgbt_TeaInput_setDelta($this, $touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            var$5 = $this.$touchX.data;
            var$5[$touchId] = $relativeX;
            var$21 = $this.$touchY.data;
            var$21[$touchId] = $relativeY;
            $touch = $this.$processor;
            if ($touch !== null)
                $touch.$touchUp(var$5[$touchId], var$21[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $touchEvent.preventDefault();
    }
},
cgxgbt_TeaInput_handleKeyboardEvents = ($this, $keyboardEvent) => {
    let $type, $c, var$4, $code, var$6, $keyChar;
    $type = $rt_str($keyboardEvent.type);
    if (!(jl_String_equals($type, $rt_s(107)) && $this.$hasFocus)) {
        if (jl_String_equals($type, $rt_s(108)) && $this.$hasFocus) {
            $c = $keyboardEvent.charCode & 65535;
            var$4 = $this.$processor;
            if (var$4 !== null)
                var$4.$keyTyped($c);
            if ($c == 9) {
                $keyboardEvent.preventDefault();
                $keyboardEvent.stopPropagation();
            }
        } else if (jl_String_equals($type, $rt_s(109)) && $this.$hasFocus) {
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            if (cbg_AbstractInput_isCatchKey($this, $code))
                $keyboardEvent.preventDefault();
            var$6 = $this.$pressedKeys.data;
            if (var$6[$code]) {
                $this.$pressedKeyCount = $this.$pressedKeyCount - 1 | 0;
                var$6[$code] = 0;
            }
            var$4 = $this.$processor;
            if (var$4 !== null)
                var$4.$keyUp($code);
            if ($code == 61) {
                $keyboardEvent.preventDefault();
                $keyboardEvent.stopPropagation();
            }
        }
    } else {
        a: {
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            $keyChar = 0;
            switch ($code) {
                case 67:
                    $keyChar = 8;
                    break a;
                case 112:
                    $keyChar = 127;
                    break a;
                default:
            }
        }
        if (cbg_AbstractInput_isCatchKey($this, $code))
            $keyboardEvent.preventDefault();
        if (!($code != 67 && $code != 112)) {
            $keyboardEvent.preventDefault();
            var$4 = $this.$processor;
            if (var$4 !== null) {
                var$4.$keyDown($code);
                $this.$processor.$keyTyped($keyChar);
            }
        } else {
            var$6 = $this.$pressedKeys.data;
            if (!var$6[$code]) {
                $this.$pressedKeyCount = $this.$pressedKeyCount + 1 | 0;
                var$6[$code] = 1;
                $this.$keyJustPressed = 1;
                $this.$justPressedKeys.data[$code] = 1;
                var$4 = $this.$processor;
                if (var$4 !== null)
                    var$4.$keyDown($code);
            }
        }
        if ($code == 61) {
            $keyboardEvent.preventDefault();
            $keyboardEvent.stopPropagation();
        }
    }
},
cgxgbt_TeaInput_getAvailablePointer = $this => {
    let $i, var$2, var$3, var$4, var$5, var$6;
    $i = 0;
    while (true) {
        if ($i >= 20)
            return (-1);
        a: {
            b: {
                var$2 = $this.$touchMap;
                var$3 = jl_Integer_valueOf($i);
                var$4 = var$2.$valueTable0;
                if (var$3 !== null) {
                    if (var$2.$hasZeroValue) {
                        var$2 = var$2.$zeroValue;
                        if (jl_Integer_equals(var$3, var$2)) {
                            var$5 = 1;
                            break a;
                        }
                    }
                    var$4 = var$4.data;
                    var$5 = var$4.length - 1 | 0;
                    while (true) {
                        if (var$5 < 0)
                            break b;
                        var$2 = var$4[var$5];
                        if (jl_Integer_equals(var$3, var$2))
                            break;
                        var$5 = var$5 + (-1) | 0;
                    }
                    var$5 = 1;
                    break a;
                }
                if (var$2.$hasZeroValue && var$2.$zeroValue === null) {
                    var$5 = 1;
                    break a;
                }
                var$6 = var$4.data;
                var$4 = var$2.$keyTable0;
                var$5 = var$6.length - 1 | 0;
                while (true) {
                    if (var$5 < 0)
                        break b;
                    if (var$4.data[var$5] && var$6[var$5] === null)
                        break;
                    var$5 = var$5 + (-1) | 0;
                }
                var$5 = 1;
                break a;
            }
            var$5 = 0;
        }
        if (!var$5)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
cgxgbt_TeaInput_reset = $this => {
    let $i, var$2, $i_0;
    a: {
        if ($this.$justTouched) {
            $this.$justTouched = 0;
            $i = 0;
            while (true) {
                var$2 = $this.$justPressedButtons.data;
                if ($i >= var$2.length)
                    break a;
                var$2[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
    b: {
        if ($this.$keyJustPressed) {
            $this.$keyJustPressed = 0;
            $i = 0;
            while (true) {
                var$2 = $this.$justPressedKeys.data;
                if ($i >= var$2.length)
                    break b;
                var$2[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
    $i_0 = 0;
    while ($i_0 < $this.$touchX.data.length) {
        $this.$deltaX.data[$i_0] = 0;
        $this.$deltaY.data[$i_0] = 0;
        $i_0 = $i_0 + 1 | 0;
    }
},
cgxgbt_TeaInput_setDelta = ($this, $touchId, $x, $y) => {
    $this.$deltaX.data[$touchId] = $x;
    $this.$deltaY.data[$touchId] = $y;
},
cgxgbt_TeaInput_getCompatMode = ($this, $element) => {
    if (jl_String_equals($rt_str($element.compatMode), $rt_s(110)))
        $element = $element.documentElement;
    return $element;
},
cgxgbt_TeaInput_getScrollTop = ($this, $target) => {
    return $target.scrollTop | 0;
},
cgxgbt_TeaInput_getScrollTop0 = ($this, $target) => {
    return cgxgbt_TeaInput_getScrollTop($this, cgxgbt_TeaInput_getCompatMode($this, $target));
},
cgxgbt_TeaInput_getScrollLeft = ($this, $target) => {
    return $target.scrollLeft | 0;
},
cgxgbt_TeaInput_getScrollLeft0 = ($this, $target) => {
    return cgxgbt_TeaInput_getScrollLeft($this, cgxgbt_TeaInput_getCompatMode($this, $target));
},
cgxgbt_TeaInput_getRelativeX = ($this, $e, $target) => {
    return jl_Math_round($target.width * 1.0 / cgxgbt_TeaInput_getClientWidth($this, $target) * ((($e.clientX - cgxgbt_TeaInput_getAbsoluteLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft0($this, $target.ownerDocument) | 0));
},
cgxgbt_TeaInput_getRelativeY0 = ($this, $e, $target) => {
    return jl_Math_round($target.height * 1.0 / cgxgbt_TeaInput_getClientHeight($this, $target) * ((($e.clientY - cgxgbt_TeaInput_getAbsoluteTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop0($this, $target.ownerDocument) | 0));
},
cgxgbt_TeaInput_getRelativeX0 = ($this, $touch, $target) => {
    return jl_Math_round($target.width * 1.0 / cgxgbt_TeaInput_getClientWidth($this, $target) * ((($touch.clientX - cgxgbt_TeaInput_getAbsoluteLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft0($this, $target.ownerDocument) | 0));
},
cgxgbt_TeaInput_getRelativeY = ($this, $touch, $target) => {
    return jl_Math_round($target.height * 1.0 / cgxgbt_TeaInput_getClientHeight($this, $target) * ((($touch.clientY - cgxgbt_TeaInput_getAbsoluteTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop0($this, $target.ownerDocument) | 0));
},
cgxgbt_TeaInput_getClientWidth = ($this, $target) => {
    return $target.clientWidth;
},
cgxgbt_TeaInput_getClientHeight = ($this, $target) => {
    return $target.clientHeight;
},
cgxgbt_TeaInput_getAbsoluteTop = ($this, $target) => {
    let var$2, var$3;
    var$2 = 0.0;
    var$3 = $target;
    while (var$3.offsetParent !== null) {
        var$2 = var$2 - var$3.scrollTop;
        var$3 = var$3.parentNode;
    }
    while ($target !== null) {
        var$2 = var$2 + $target.offsetTop;
        $target = var$3.offsetParent;
    }
    return var$2 | 0;
},
cgxgbt_TeaInput_getAbsoluteLeft = ($this, $target) => {
    let var$2, var$3;
    var$2 = 0.0;
    var$3 = $target;
    while (var$3.offsetParent !== null) {
        var$2 = var$2 - var$3.scrollLeft;
        var$3 = var$3.parentNode;
    }
    while ($target !== null) {
        var$2 = var$2 + $target.offsetLeft;
        $target = var$3.offsetParent;
    }
    return var$2 | 0;
},
cgxgbt_TeaInput_setInputProcessor = ($this, $processor) => {
    $this.$processor = $processor;
},
cgxgbt_TeaInput_isCursorCatched = $this => {
    return cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_75($this.$canvas) ? 1 : 0;
},
cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_75 = var$1 => {
    if (document.pointerLockElement === canvas || document.mozPointerLockElement === canvas) {
        return true;
    }
    return false;
},
cgxgbt_TeaInput_handleEvent$exported$0 = (var$1, var$2) => {
    var$1 = var$1;
    if (var$1.$application.$appListener !== null) {
        cgxgbt_TeaInput_handleMouseEvents(var$1, var$2);
        cgxgbt_TeaInput_handleKeyboardEvents(var$1, var$2);
    }
},
cbg_Files = $rt_classWithoutFields(0);
function cgxgbt_TeaFiles() {
    let a = this; jl_Object.call(a);
    a.$internalStorage = null;
    a.$classpathStorage = null;
    a.$localStorage = null;
    a.$localStoragePrefix0 = null;
}
let cgxgbt_TeaFiles_getFileDB = ($this, $type) => {
    if ($type === cbg_Files$FileType_Internal)
        return $this.$internalStorage;
    if ($type === cbg_Files$FileType_Classpath)
        return $this.$classpathStorage;
    if ($type !== cbg_Files$FileType_Local)
        return null;
    return $this.$localStorage;
},
cgxgbt_TeaFiles_getFileHandle = ($this, $path, $type) => {
    let var$3;
    if ($type === cbg_Files$FileType_Internal)
        return cgxgbt_TeaFiles_internal($this, $path);
    if ($type === cbg_Files$FileType_Classpath)
        return cgxgbt_TeaFiles_classpath($this, $path);
    var$3 = cbg_Files$FileType_Local;
    if ($type === var$3)
        return cgxgbt_TeaFileHandle__init_($this, $path, var$3);
    $path = new cbgu_GdxRuntimeException;
    $type = jl_String_valueOf($type);
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(111)), $type), $rt_s(112));
    jl_Exception__init_($path, jl_AbstractStringBuilder_toString(var$3));
    $rt_throw($path);
},
cgxgbt_TeaFiles_classpath = ($this, $path) => {
    return cgxgbt_TeaFileHandle__init_($this, $path, cbg_Files$FileType_Classpath);
},
cgxgbt_TeaFiles_internal = ($this, $path) => {
    return cgxgbt_TeaFileHandle__init_($this, $path, cbg_Files$FileType_Internal);
};
function cgxgbt_TeaNet() {
    jl_Object.call(this);
    this.$httpResponseListeners = null;
}
let cgxgbt_TeaNet__init_0 = $this => {
    $this.$httpResponseListeners = ju_HashMap__init_1(16);
},
cgxgbt_TeaNet__init_ = () => {
    let var_0 = new cgxgbt_TeaNet();
    cgxgbt_TeaNet__init_0(var_0);
    return var_0;
},
cbg_ApplicationLogger = $rt_classWithoutFields(0),
cgxgbt_TeaApplicationLogger = $rt_classWithoutFields(),
cbgu_Clipboard = $rt_classWithoutFields(0);
function cgxgbt_TeaClipboard() {
    let a = this; jl_Object.call(a);
    a.$requestedWritePermissions = 0;
    a.$hasWritePermissions = 0;
    a.$writeHandler = null;
    a.$content = null;
}
let cgxgbt_TeaClipboard__init_ = $this => {
    let var$1, var$2;
    $this.$requestedWritePermissions = 0;
    $this.$hasWritePermissions = 1;
    var$1 = new cgxgbt_TeaClipboard$ClipboardWriteHandler;
    var$1.$this$01 = $this;
    $this.$writeHandler = var$1;
    $this.$content = $rt_s(8);
    var$1 = cgxgbtdi_TeaWindow_getDocument(cgxgbtdi_TeaWindow_get());
    var$2 = new cgxgbt_TeaClipboard$_init_$lambda$_0_0;
    var$2.$_019 = $this;
    var$1.addEventListener("copy", otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent"));
    var$1 = cgxgbtdi_TeaWindow_getDocument(cgxgbtdi_TeaWindow_get());
    var$2 = new cgxgbt_TeaClipboard$_init_$lambda$_0_1;
    var$2.$_015 = $this;
    var$1.addEventListener("cut", otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent"));
    var$1 = cgxgbtdi_TeaWindow_getDocument(cgxgbtdi_TeaWindow_get());
    var$2 = new cgxgbt_TeaClipboard$_init_$lambda$_0_2;
    var$2.$_08 = $this;
    var$1.addEventListener("paste", otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent"));
},
cgxgbt_TeaClipboard__init_0 = () => {
    let var_0 = new cgxgbt_TeaClipboard();
    cgxgbt_TeaClipboard__init_(var_0);
    return var_0;
},
cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4 = var$1 => {
    if ("clipboard" in navigator) {
        navigator.clipboard.writeText(var$1);
    }
},
cbg_Gdx = $rt_classWithoutFields(),
cbg_Gdx_app = null,
cbg_Gdx_graphics = null,
cbg_Gdx_audio = null,
cbg_Gdx_input = null,
cbg_Gdx_files = null,
cbg_Gdx_net = null,
cbg_Gdx_gl = null,
cbg_Gdx_gl20 = null,
cbg_Gdx_gl30 = null,
cbg_Gdx_gl31 = null,
cbg_Audio = $rt_classWithoutFields(0),
cgxgbt_TeaAudio = $rt_classWithoutFields(0);
function cgxgbt_DefaultTeaAudio() {
    jl_Object.call(this);
    this.$webAudioAPIManager = null;
}
let cgxgbt_DefaultTeaAudio__init_ = $this => {
    $this.$webAudioAPIManager = null;
    $this.$webAudioAPIManager = new cgxgbtwh_HowlerAudioManager;
},
cgxgbt_DefaultTeaAudio__init_0 = () => {
    let var_0 = new cgxgbt_DefaultTeaAudio();
    cgxgbt_DefaultTeaAudio__init_(var_0);
    return var_0;
},
otjde_EventListener = $rt_classWithoutFields(0);
function cgxgbt_TeaApplication$1() {
    jl_Object.call(this);
    this.$this$02 = null;
}
let cgxgbt_TeaApplication$1__init_ = ($this, $this$0) => {
    $this.$this$02 = $this$0;
},
cgxgbt_TeaApplication$1__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$1();
    cgxgbt_TeaApplication$1__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$1_handleEvent$exported$0 = (var$1, var$2) => {
    var$1 = var$1;
    var$2 = var$1.$this$02.$appListener;
    if (var$2 !== null) {
        cbg_Game_pause(var$2);
        cbg_Game_dispose(var$1.$this$02.$appListener);
        var$1.$this$02.$appListener = null;
    }
};
function cgxgbt_TeaApplication$2() {
    jl_Object.call(this);
    this.$this$0 = null;
}
let cgxgbt_TeaApplication$2__init_ = ($this, $this$0) => {
    $this.$this$0 = $this$0;
},
cgxgbt_TeaApplication$2__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$2();
    cgxgbt_TeaApplication$2__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$2_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4, $$je;
    var$1 = var$1;
    var$3 = var$1.$this$0;
    if (var$3.$initState === cgxgbt_TeaApplication$AppState_APP_LOOP) {
        var$3 = $rt_str((cgxgbtdi_TeaWindow_getDocument(var$3.$window)).visibilityState);
        if (jl_String_equals(var$3, $rt_s(113))) {
            var$2 = var$1.$this$0.$lifecycleListeners;
            jl_Object_monitorEnterSync(var$2);
            a: {
                b: {
                    try {
                        var$3 = cbgu_Array_iterator(var$2);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$1 = $$je;
                        break b;

                    }
                    var$4 = var$3;
                    while (true) {
                        try {
                            if (!cbgu_Array$ArrayIterator_hasNext(var$4))
                                break;
                            (cbgu_Array$ArrayIterator_next(var$4)).$pause();
                            continue;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$1 = $$je;
                            break b;

                        }
                    }
                    try {
                        jl_Object_monitorExitSync(var$2);
                        break a;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$1 = $$je;

                    }
                }
                jl_Object_monitorExitSync(var$2);
                $rt_throw(var$1);
            }
            cbg_Game_pause(var$1.$this$0.$appListener);
        } else if (jl_String_equals(var$3, $rt_s(114))) {
            var$2 = var$1.$this$0.$lifecycleListeners;
            jl_Object_monitorEnterSync(var$2);
            c: {
                d: {
                    try {
                        var$3 = cbgu_Array_iterator(var$2);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$1 = $$je;
                        break d;

                    }
                    var$4 = var$3;
                    while (true) {
                        try {
                            if (!cbgu_Array$ArrayIterator_hasNext(var$4))
                                break;
                            (cbgu_Array$ArrayIterator_next(var$4)).$resume();
                            continue;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            var$1 = $$je;
                            break d;

                        }
                    }
                    try {
                        jl_Object_monitorExitSync(var$2);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        var$1 = $$je;

                    }
                }
                jl_Object_monitorExitSync(var$2);
                $rt_throw(var$1);
            }
            cbg_Game_resume(var$1.$this$0.$appListener);
        }
    }
};
function cgxgbt_TeaApplication$3() {
    jl_Object.call(this);
    this.$this$00 = null;
}
let cgxgbt_TeaApplication$3__init_ = ($this, $this$0) => {
    $this.$this$00 = $this$0;
},
cgxgbt_TeaApplication$3__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$3();
    cgxgbt_TeaApplication$3__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$3_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4;
    var$1 = var$1;
    var$3 = cgxgbtdi_TeaWindow_getClientWidth(var$1.$this$00.$window);
    var$2 = var$1.$this$00;
    var$3 = var$3 - var$2.$config.$padHorizontal | 0;
    var$4 = cgxgbtdi_TeaWindow_getClientHeight(var$2.$window);
    var$1 = var$1.$this$00;
    var$2 = var$1.$config;
    var$4 = var$4 - var$2.$padVertical | 0;
    if (var$3 > 0 && var$4 > 0) {
        var$1 = var$1.$graphics;
        if (var$1 !== null)
            cgxgbt_TeaGraphics_setCanvasSize(var$1, var$3, var$4, var$2.$usePhysicalPixels);
    }
};
function cbgu_Pool() {
    let a = this; jl_Object.call(a);
    a.$max4 = 0;
    a.$peak = 0;
    a.$freeObjects = null;
}
let cbgu_Pool__init_ = ($this, $initialCapacity, $max) => {
    $this.$freeObjects = cbgu_Array__init_3(0, $initialCapacity);
    $this.$max4 = $max;
},
cbgu_Pool_obtain = $this => {
    let var$1;
    var$1 = $this.$freeObjects;
    return var$1.$size0 ? cbgu_Array_pop(var$1) : $this.$newObject();
},
cbgu_Pool_free = ($this, $object) => {
    let var$2;
    if ($object === null) {
        $object = new jl_IllegalArgumentException;
        jl_Exception__init_($object, $rt_s(115));
        $rt_throw($object);
    }
    var$2 = $this.$freeObjects;
    if (var$2.$size0 >= $this.$max4)
        cbgu_Pool_reset($this, $object);
    else {
        cbgu_Array_add(var$2, $object);
        $this.$peak = jl_Math_max($this.$peak, $this.$freeObjects.$size0);
        cbgu_Pool_reset($this, $object);
    }
},
cbgu_Pool_reset = ($this, $object) => {
    if ($rt_isInstance($object, cbgu_Pool$Poolable))
        $object.$reset();
},
cbgu_Pool_discard = ($this, $object) => {
    cbgu_Pool_reset($this, $object);
},
cbgu_Pool_freeAll = ($this, $objects) => {
    let $freeObjects, $max, $i, $n, $object;
    if ($objects === null) {
        $objects = new jl_IllegalArgumentException;
        jl_Exception__init_($objects, $rt_s(10));
        $rt_throw($objects);
    }
    $freeObjects = $this.$freeObjects;
    $max = $this.$max4;
    $i = 0;
    $n = $objects.$size0;
    while ($i < $n) {
        $object = cbgu_Array_get($objects, $i);
        if ($object !== null) {
            if ($freeObjects.$size0 >= $max)
                cbgu_Pool_reset($this, $object);
            else {
                cbgu_Array_add($freeObjects, $object);
                cbgu_Pool_reset($this, $object);
            }
        }
        $i = $i + 1 | 0;
    }
    $this.$peak = jl_Math_max($this.$peak, $freeObjects.$size0);
};
function cbgu_DefaultPool() {
    cbgu_Pool.call(this);
    this.$poolTypeSupplier = null;
}
let cbgu_DefaultPool_newObject = $this => {
    return $this.$poolTypeSupplier.$get5();
},
jl_IndexOutOfBoundsException = $rt_classWithoutFields(jl_RuntimeException),
jl_IndexOutOfBoundsException__init_0 = ($this, $message) => {
    jl_Exception__init_($this, $message);
},
jl_IndexOutOfBoundsException__init_ = var_0 => {
    let var_1 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_0(var_1, var_0);
    return var_1;
},
cbgu_ArraySupplier = $rt_classWithoutFields(0),
cbgu_ArraySupplier_ANY = null,
cbgu_ArraySupplier__clinit_ = () => {
    cbgu_ArraySupplier_ANY = new cbgu_ArraySupplier$_clinit_$lambda$_3_0;
},
cbgu_ObjectSet = $rt_classWithoutFields(),
cbgu_ObjectSet_tableSize = ($capacity, $loadFactor) => {
    let var$3, var$4, $tableSize;
    if ($capacity < 0) {
        var$3 = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_append(var$4, $rt_s(116));
        jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$4, $capacity)));
        $rt_throw(var$3);
    }
    $tableSize = cbgm_MathUtils_nextPowerOfTwo(jl_Math_max(2, jl_Math_ceil($capacity / $loadFactor) | 0));
    if ($tableSize <= 1073741824)
        return $tableSize;
    var$3 = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append(var$4, $rt_s(117));
    jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$4, $capacity)));
    $rt_throw(var$3);
},
jl_Long = $rt_classWithoutFields(jl_Number),
jl_Long_TYPE = null,
jl_Long_numberOfLeadingZeros = $i => {
    let $n, var$3;
    if (Long_eq($i, Long_ZERO))
        return 64;
    $n = 0;
    var$3 = Long_shru($i, 32);
    if (Long_ne(var$3, Long_ZERO))
        $n = 32;
    else
        var$3 = $i;
    $i = Long_shru(var$3, 16);
    if (Long_eq($i, Long_ZERO))
        $i = var$3;
    else
        $n = $n | 16;
    var$3 = Long_shru($i, 8);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = $i;
    else
        $n = $n | 8;
    $i = Long_shru(var$3, 4);
    if (Long_eq($i, Long_ZERO))
        $i = var$3;
    else
        $n = $n | 4;
    var$3 = Long_shru($i, 2);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = $i;
    else
        $n = $n | 2;
    if (Long_ne(Long_shru(var$3, 1), Long_ZERO))
        $n = $n | 1;
    return (64 - $n | 0) - 1 | 0;
},
jl_Long_divideUnsigned = (var$1, var$2) => {
    return Long_udiv(var$1, var$2);
},
jl_Long_remainderUnsigned = (var$1, var$2) => {
    return Long_urem(var$1, var$2);
},
jl_Long_compareUnsigned = (var$1, var$2) => {
    return Long_ucompare(var$1, var$2);
},
jl_Long__clinit_ = () => {
    jl_Long_TYPE = $rt_cls($rt_longcls);
},
cgxgbtg_WebGLContextAttributesWrapper = $rt_classWithoutFields(),
cgxgbtg_WebGLContextAttributesWrapper_create$js_body$_14 = () => {
    return {  };
},
cbgg_GL20 = $rt_classWithoutFields(0);
function cgxgbt_TeaGL20() {
    let a = this; jl_Object.call(a);
    a.$gl = null;
    a.$programs = null;
    a.$shaders = null;
    a.$buffers = null;
    a.$frameBuffers = null;
    a.$renderBuffers = null;
    a.$textures = null;
    a.$uniforms0 = null;
    a.$currProgram = 0;
}
let cgxgbt_TeaGL20__init_ = ($this, $gl) => {
    $this.$programs = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$shaders = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$buffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$frameBuffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$renderBuffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$textures = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$uniforms0 = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$currProgram = 0;
    $this.$gl = $gl;
    $gl.pixelStorei(37441, 0);
},
cgxgbt_TeaGL20__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGL20();
    cgxgbt_TeaGL20__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGL20_getUniformLocation = ($this, $location) => {
    return cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms0, $this.$currProgram), $location);
},
cgxgbt_TeaGL20_glActiveTexture = ($this, $texture) => {
    $this.$gl.activeTexture($texture);
},
cgxgbt_TeaGL20_glAttachShader = ($this, $program, $shader) => {
    let var$3, var$4;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.attachShader(var$3, var$4);
},
cgxgbt_TeaGL20_glBindBuffer = ($this, $target, $buffer) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$buffers, $buffer);
    var$3.bindBuffer($target, var$4);
},
cgxgbt_TeaGL20_glBindFramebuffer = ($this, $target, $framebuffer) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$frameBuffers, $framebuffer);
    var$3.bindFramebuffer($target, var$4);
},
cgxgbt_TeaGL20_glBindRenderbuffer = ($this, $target, $renderbuffer) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$renderBuffers, $renderbuffer);
    var$3.bindRenderbuffer($target, var$4);
},
cgxgbt_TeaGL20_glBindTexture = ($this, $target, $texture) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$textures, $texture);
    var$3.bindTexture($target, var$4);
},
cgxgbt_TeaGL20_glBlendFunc = ($this, $sfactor, $dfactor) => {
    $this.$gl.blendFunc($sfactor, $dfactor);
},
cgxgbt_TeaGL20_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
},
cgxgbt_TeaGL20_glBufferData = ($this, $target, $size, $data, $usage) => {
    let $typedArray;
    if ($data === null)
        $this.$gl.bufferData($target, $size, $usage);
    else {
        $typedArray = cgxgbtdt_TypedArrays_getTypedArray($data);
        $this.$gl.bufferData($target, $typedArray, $usage);
    }
},
cgxgbt_TeaGL20_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    let $typedArray;
    $typedArray = cgxgbtdt_TypedArrays_getTypedArray($data);
    $this.$gl.bufferSubData($target, $offset, $typedArray);
},
cgxgbt_TeaGL20_glCheckFramebufferStatus = ($this, $target) => {
    return $this.$gl.checkFramebufferStatus($target);
},
cgxgbt_TeaGL20_glClear = ($this, $mask) => {
    $this.$gl.clear($mask);
},
cgxgbt_TeaGL20_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    $this.$gl.clearColor($red, $green, $blue, $alpha);
},
cgxgbt_TeaGL20_glCompileShader = ($this, $shader) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.compileShader(var$2);
},
cgxgbt_TeaGL20_glCreateProgram = $this => {
    let $program;
    $program = $this.$gl.createProgram();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$programs, $program);
},
cgxgbt_TeaGL20_glCreateShader = ($this, $type) => {
    let $shader;
    $shader = $this.$gl.createShader($type);
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$shaders, $shader);
},
cgxgbt_TeaGL20_glCullFace = ($this, $mode) => {
    $this.$gl.cullFace($mode);
},
cgxgbt_TeaGL20_glDeleteBuffer = ($this, $id) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$buffers, $id);
    $this.$gl.deleteBuffer(var$2);
},
cgxgbt_TeaGL20_glDeleteFramebuffer = ($this, $id) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$frameBuffers, $id);
    $this.$gl.deleteFramebuffer(var$2);
},
cgxgbt_TeaGL20_glDeleteProgram = ($this, $program) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$programs, $program);
    cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$uniforms0, $program);
    $this.$gl.deleteProgram(var$2);
},
cgxgbt_TeaGL20_glDeleteRenderbuffer = ($this, $id) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$renderBuffers, $id);
    $this.$gl.deleteRenderbuffer(var$2);
},
cgxgbt_TeaGL20_glDeleteShader = ($this, $shader) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$shaders, $shader);
    $this.$gl.deleteShader(var$2);
},
cgxgbt_TeaGL20_glDeleteTexture = ($this, $id) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$textures, $id);
    $this.$gl.deleteTexture(var$2);
},
cgxgbt_TeaGL20_glDepthFunc = ($this, $func) => {
    $this.$gl.depthFunc($func);
},
cgxgbt_TeaGL20_glDepthMask = ($this, $flag) => {
    $this.$gl.depthMask(!!$flag);
},
cgxgbt_TeaGL20_glDepthRangef = ($this, $zNear, $zFar) => {
    $this.$gl.depthRange($zNear, $zFar);
},
cgxgbt_TeaGL20_glDisable = ($this, $cap) => {
    $this.$gl.disable($cap);
},
cgxgbt_TeaGL20_glDisableVertexAttribArray = ($this, $index) => {
    $this.$gl.disableVertexAttribArray($index);
},
cgxgbt_TeaGL20_glDrawArrays = ($this, $mode, $first, $count) => {
    $this.$gl.drawArrays($mode, $first, $count);
},
cgxgbt_TeaGL20_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    let var$5, var$6;
    var$5 = $this.$gl;
    var$6 = $indices.$position0;
    var$5.drawElements($mode, $count, $type, var$6);
},
cgxgbt_TeaGL20_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    $this.$gl.drawElements($mode, $count, $type, $indices);
},
cgxgbt_TeaGL20_glEnable = ($this, $cap) => {
    $this.$gl.enable($cap);
},
cgxgbt_TeaGL20_glEnableVertexAttribArray = ($this, $index) => {
    $this.$gl.enableVertexAttribArray($index);
},
cgxgbt_TeaGL20_glFramebufferRenderbuffer = ($this, $target, $attachment, $renderbuffertarget, $renderbuffer) => {
    let var$5, var$6;
    var$5 = $this.$gl;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$renderBuffers, $renderbuffer);
    var$5.framebufferRenderbuffer($target, $attachment, $renderbuffertarget, var$6);
},
cgxgbt_TeaGL20_glFramebufferTexture2D = ($this, $target, $attachment, $textarget, $texture, $level) => {
    let var$6, var$7;
    var$6 = $this.$gl;
    var$7 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$textures, $texture);
    var$6.framebufferTexture2D($target, $attachment, $textarget, var$7, $level);
},
cgxgbt_TeaGL20_glGenBuffer = $this => {
    let $buffer;
    $buffer = $this.$gl.createBuffer();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$buffers, $buffer);
},
cgxgbt_TeaGL20_glGenerateMipmap = ($this, $target) => {
    $this.$gl.generateMipmap($target);
},
cgxgbt_TeaGL20_glGenFramebuffer = $this => {
    let $fb;
    $fb = $this.$gl.createFramebuffer();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$frameBuffers, $fb);
},
cgxgbt_TeaGL20_glGenRenderbuffer = $this => {
    let $rb;
    $rb = $this.$gl.createRenderbuffer();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$renderBuffers, $rb);
},
cgxgbt_TeaGL20_glGenTexture = $this => {
    let $texture;
    $texture = $this.$gl.createTexture();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$textures, $texture);
},
cgxgbt_TeaGL20_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $activeUniform, var$6;
    $activeUniform = $this.$gl;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    $activeUniform = $activeUniform.getActiveAttrib(var$6, $index);
    $index = $activeUniform.size;
    jn_IntBufferImpl_put($size, 0, $index);
    $index = $activeUniform.type;
    jn_IntBufferImpl_put($type, 0, $index);
    return $rt_str($activeUniform.name);
},
cgxgbt_TeaGL20_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $activeUniform, var$6;
    $activeUniform = $this.$gl;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    $activeUniform = $activeUniform.getActiveUniform(var$6, $index);
    $index = $activeUniform.size;
    jn_IntBufferImpl_put($size, 0, $index);
    $index = $activeUniform.type;
    jn_IntBufferImpl_put($type, 0, $index);
    return $rt_str($activeUniform.name);
},
cgxgbt_TeaGL20_glGetAttribLocation = ($this, $program, $name) => {
    let var$3;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    return $this.$gl.getAttribLocation(var$3, $rt_ustr($name));
},
cgxgbt_TeaGL20_glGetFloatv = ($this, $pname, $params) => {
    let var$3;
    if ($pname != 2931 && $pname != 2849 && $pname != 32824 && $pname != 10752 && $pname != 32938) {
        $params = new cbgu_GdxRuntimeException;
        jl_Exception__init_($params, $rt_s(118));
        $rt_throw($params);
    }
    var$3 = $this.$gl.getParameter($pname);
    jn_FloatBufferImpl_put($params, 0, var$3);
},
cgxgbt_TeaGL20_glGetIntegerv = ($this, $pname, $params) => {
    let var$3, var$4, var$5;
    a: {
        b: {
            if ($pname == 34016)
                break b;
            if ($pname == 3413)
                break b;
            if ($pname == 32970)
                break b;
            if ($pname == 32968)
                break b;
            if ($pname == 34877)
                break b;
            if ($pname == 32777)
                break b;
            if ($pname == 32971)
                break b;
            if ($pname == 32969)
                break b;
            if ($pname == 3412)
                break b;
            if ($pname == 2885)
                break b;
            if ($pname == 3414)
                break b;
            if ($pname == 2932)
                break b;
            if ($pname == 2886)
                break b;
            if ($pname == 33170)
                break b;
            if ($pname == 3411)
                break b;
            if ($pname == 35739)
                break b;
            if ($pname == 35738)
                break b;
            if ($pname == 35661)
                break b;
            if ($pname == 34076)
                break b;
            if ($pname == 36349)
                break b;
            if ($pname == 34024)
                break b;
            if ($pname == 34930)
                break b;
            if ($pname == 3379)
                break b;
            if ($pname == 36348)
                break b;
            if ($pname == 34921)
                break b;
            if ($pname == 35660)
                break b;
            if ($pname == 36347)
                break b;
            if ($pname == 34466)
                break b;
            if ($pname == 3333)
                break b;
            if ($pname == 3410)
                break b;
            if ($pname == 32936)
                break b;
            if ($pname == 32937)
                break b;
            if ($pname == 34817)
                break b;
            if ($pname == 34816)
                break b;
            if ($pname == 34818)
                break b;
            if ($pname == 34819)
                break b;
            if ($pname == 36003)
                break b;
            if ($pname == 36004)
                break b;
            if ($pname == 36005)
                break b;
            if ($pname == 3415)
                break b;
            if ($pname == 2961)
                break b;
            if ($pname == 2964)
                break b;
            if ($pname == 2962)
                break b;
            if ($pname == 2965)
                break b;
            if ($pname == 2966)
                break b;
            if ($pname == 2967)
                break b;
            if ($pname == 2963)
                break b;
            if ($pname == 2968)
                break b;
            if ($pname == 3408)
                break b;
            if ($pname != 3317) {
                if ($pname != 2978) {
                    if ($pname != 36006) {
                        $params = new cbgu_GdxRuntimeException;
                        jl_Exception__init_($params, $rt_s(119));
                        $rt_throw($params);
                    }
                    var$3 = $this.$gl.getParameter($pname);
                    if (var$3 === null)
                        jn_IntBufferImpl_put($params, 0, 0);
                    else {
                        var$4 = cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$frameBuffers, var$3);
                        jn_IntBufferImpl_put($params, 0, var$4);
                    }
                    break a;
                }
                var$5 = $this.$gl.getParameter($pname);
                var$4 = var$5[0];
                $params = $params;
                jn_IntBufferImpl_put($params, 0, var$4);
                jn_IntBufferImpl_put($params, 1, var$5[1]);
                jn_IntBufferImpl_put($params, 2, var$5[2]);
                jn_IntBufferImpl_put($params, 3, var$5[3]);
                break a;
            }
        }
        $pname = $this.$gl.getParameter($pname);
        jn_IntBufferImpl_put($params, 0, $pname);
    }
},
cgxgbt_TeaGL20_glGetProgramInfoLog = ($this, $program) => {
    return $rt_str($this.$gl.getProgramInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program)));
},
cgxgbt_TeaGL20_glGetProgramiv = ($this, $program, $pname, $params) => {
    if ($pname != 35712 && $pname != 35714 && $pname != 35715) {
        $program = $this.$gl.getProgramParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $pname);
        jn_IntBufferImpl_put($params, 0, $program);
    } else {
        $pname = !($this.$gl.getProgramParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $pname) ? 1 : 0) ? 0 : 1;
        jn_IntBufferImpl_put($params, 0, $pname);
    }
};
let cgxgbt_TeaGL20_glGetShaderInfoLog = ($this, $shader) => {
    return $rt_str($this.$gl.getShaderInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader)));
},
cgxgbt_TeaGL20_glGetShaderiv = ($this, $shader, $pname, $params) => {
    let $result;
    if ($pname != 35713 && $pname != 35712) {
        $result = $this.$gl.getShaderParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader), $pname);
        jn_IntBufferImpl_put($params, 0, $result);
    } else {
        $pname = !($this.$gl.getShaderParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader), $pname) ? 1 : 0) ? 0 : 1;
        jn_IntBufferImpl_put($params, 0, $pname);
    }
},
cgxgbt_TeaGL20_glGetString = ($this, $name) => {
    return $rt_str($this.$gl.getParameter($name));
},
cgxgbt_TeaGL20_glGetUniformLocation = ($this, $program, $name) => {
    let $location;
    $location = $this.$gl.getUniformLocation(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $rt_ustr($name));
    if ($location === null)
        return (-1);
    $name = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms0, $program);
    if ($name === null) {
        $name = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
        $this.$uniforms0[$program] = $name;
    }
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($name, $location);
},
cgxgbt_TeaGL20_glLinkProgram = ($this, $program) => {
    let var$2, var$3;
    var$2 = $this.$gl;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$2.linkProgram(var$3);
},
cgxgbt_TeaGL20_glPixelStorei = ($this, $pname, $param) => {
    $this.$gl.pixelStorei($pname, $param);
},
cgxgbt_TeaGL20_glReadPixels = ($this, $x, $y, $width, $height, $format, $type, $pixels) => {
    let $byteBuffer, $size, $array, $ar;
    if ($format == 6408 && $type == 5121) {
        $byteBuffer = $pixels;
        $size = $rt_imul(4 * $width | 0, $height);
        $array = new Uint8Array($size);
        $this.$gl.readPixels($x, $y, $width, $height, $format, $type, $array);
        jn_ByteBuffer_put($byteBuffer, $rt_wrapArray($rt_bytecls, new Int8Array($array)));
        jn_Buffer_position($byteBuffer, 0);
        jn_Buffer_limit($byteBuffer, $size);
        return;
    }
    $ar = new cbgu_GdxRuntimeException;
    jl_Exception__init_($ar, $rt_s(120));
    $rt_throw($ar);
},
cgxgbt_TeaGL20_glRenderbufferStorage = ($this, $target, $internalformat, $width, $height) => {
    $this.$gl.renderbufferStorage($target, $internalformat, $width, $height);
},
cgxgbt_TeaGL20_glShaderSource = ($this, $shader, $source) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    var$3.shaderSource(var$4, $rt_ustr($source));
},
cgxgbt_TeaGL20_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    let $arrayBuffer;
    if ($pixels === null) {
        $this.$gl.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, null);
        return;
    }
    $arrayBuffer = $type == 5121 ? cgxgbtdt_TypedArrays_getUint8Array($pixels) : $type != 5123 && $type != 33635 && $type != 32819 ? ($type != 5126 ? cgxgbtdt_TypedArrays_getTypedArray($pixels) : cgxgbtdt_TypedArrays_getFloat32Array($pixels)) : cgxgbtdt_TypedArrays_getUint16Array($pixels);
    $this.$gl.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $arrayBuffer);
},
cgxgbt_TeaGL20_glTexParameterf = ($this, $target, $pname, $param) => {
    $this.$gl.texParameterf($target, $pname, $param);
},
cgxgbt_TeaGL20_glTexParameteri = ($this, $target, $pname, $param) => {
    let var$4, var$5;
    var$4 = $this.$gl;
    var$5 = $param;
    var$4.texParameterf($target, $pname, var$5);
},
cgxgbt_TeaGL20_glUniform1f = ($this, $location, $x) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform1f($loc, $x);
},
cgxgbt_TeaGL20_glUniform1i = ($this, $location, $x) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform1i($loc, $x);
},
cgxgbt_TeaGL20_glUniform2f = ($this, $location, $x, $y) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform2f($loc, $x, $y);
},
cgxgbt_TeaGL20_glUniform2fv = ($this, $location, $count, $v, $offset) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform2fv($loc, $v.data);
},
cgxgbt_TeaGL20_glUniform3f = ($this, $location, $x, $y, $z) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform3f($loc, $x, $y, $z);
},
cgxgbt_TeaGL20_glUniform3fv = ($this, $location, $count, $v, $offset) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform3fv($loc, $v.data);
},
cgxgbt_TeaGL20_glUniform4f = ($this, $location, $x, $y, $z, $w) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniform4f($loc, $x, $y, $z, $w);
},
cgxgbt_TeaGL20_glUniformMatrix3fv = ($this, $location, $count, $transpose, $value, $offset) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniformMatrix3fv($loc, !!$transpose, $value.data);
},
cgxgbt_TeaGL20_glUniformMatrix4fv = ($this, $location, $count, $transpose, $value, $offset) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_getUniformLocation($this, $location);
    $this.$gl.uniformMatrix4fv($loc, !!$transpose, $value.data);
},
cgxgbt_TeaGL20_glUseProgram = ($this, $program) => {
    let var$2, var$3;
    $this.$currProgram = $program;
    var$2 = $this.$gl;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$2.useProgram(var$3);
},
cgxgbt_TeaGL20_glVertexAttrib2f = ($this, $indx, $x, $y) => {
    $this.$gl.vertexAttrib2f($indx, $x, $y);
},
cgxgbt_TeaGL20_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
},
cgxgbt_TeaGL20_glViewport = ($this, $x, $y, $width, $height) => {
    $this.$gl.viewport($x, $y, $width, $height);
},
cbgg_GL30 = $rt_classWithoutFields(0);
function cgxgbt_TeaGL30() {
    let a = this; cgxgbt_TeaGL20.call(a);
    a.$gl0 = null;
    a.$queries = null;
    a.$samplers = null;
    a.$feedbacks = null;
    a.$vertexArrays = null;
}
let cgxgbt_TeaGL30__init_ = ($this, $gl) => {
    cgxgbt_TeaGL20__init_($this, $gl);
    $this.$queries = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$samplers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$feedbacks = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$vertexArrays = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$gl0 = $gl;
},
cgxgbt_TeaGL30__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGL30();
    cgxgbt_TeaGL30__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGL30_glBindVertexArray = ($this, $array) => {
    let var$2, var$3;
    var$2 = $this.$gl0;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$vertexArrays, $array);
    var$2.bindVertexArray(var$3);
},
cgxgbt_TeaGL30_glDeleteVertexArrays = ($this, $n, $ids) => {
    let $startPosition, $i, var$5, $id, var$7;
    $startPosition = $ids.$position0;
    $i = 0;
    var$5 = $ids;
    while ($i < $n) {
        $id = jn_IntBufferImpl_get0(var$5);
        var$7 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$vertexArrays, $id);
        cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$vertexArrays, $id);
        $this.$gl0.deleteVertexArray(var$7);
        $i = $i + 1 | 0;
    }
    jn_Buffer_position($ids, $startPosition);
},
cgxgbt_TeaGL30_glDrawArraysInstanced = ($this, $mode, $first, $count, $instanceCount) => {
    $this.$gl0.drawArraysInstanced($mode, $first, $count, $instanceCount);
},
cgxgbt_TeaGL30_glDrawBuffers = ($this, $n, $bufs) => {
    let $arrayBuffer;
    $arrayBuffer = cgxgbtdt_TypedArrays_getInt32Array($bufs);
    $this.$gl0.drawBuffers($arrayBuffer);
},
cgxgbt_TeaGL30_glDrawElementsInstanced = ($this, $mode, $count, $type, $indicesOffset, $instanceCount) => {
    $this.$gl0.drawElementsInstanced($mode, $count, $type, $indicesOffset, $instanceCount);
},
cgxgbt_TeaGL30_glGenVertexArrays = ($this, $n, $ids) => {
    let $i, var$4, $vArray;
    $i = 0;
    var$4 = $ids;
    while ($i < $n) {
        $vArray = $this.$gl0.createVertexArray();
        jn_IntBufferImpl_put(var$4, $i, cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$vertexArrays, $vArray));
        $i = $i + 1 | 0;
    }
},
cgxgbt_TeaGL30_glGetFloatv = ($this, $pname, $params) => {
    let var$3;
    if ($pname != 34045)
        cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    else {
        var$3 = $this.$gl0.getParameter($pname);
        jn_FloatBufferImpl_put($params, 0, var$3);
    }
},
cgxgbt_TeaGL30_glGetIntegerv = ($this, $pname, $params) => {
    let var$3, var$4;
    switch ($pname) {
        case 3074:
        case 3314:
        case 3315:
        case 3316:
        case 3330:
        case 3331:
        case 3332:
        case 32877:
        case 32878:
        case 32883:
        case 33000:
        case 33001:
        case 34852:
        case 34853:
        case 34854:
        case 34855:
        case 34856:
        case 34857:
        case 34858:
        case 34859:
        case 34860:
        case 34861:
        case 34862:
        case 34863:
        case 35071:
        case 35076:
        case 35077:
        case 35371:
        case 35373:
        case 35375:
        case 35657:
        case 35658:
        case 35659:
        case 35723:
        case 35968:
        case 35978:
        case 35979:
        case 36063:
        case 36183:
        case 37154:
        case 37157:
            $pname = $this.$gl0.getParameter($pname);
            jn_IntBufferImpl_put($params, 0, $pname);
            return;
        case 32874:
        case 35869:
            var$3 = $this.$gl0.getParameter($pname);
            if (var$3 === null)
                jn_IntBufferImpl_put($params, 0, 0);
            else {
                var$4 = cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$textures, var$3);
                jn_IntBufferImpl_put($params, 0, var$4);
            }
            return;
        case 34229:
            var$3 = $this.$gl0.getParameter($pname);
            if (var$3 === null)
                jn_IntBufferImpl_put($params, 0, 0);
            else {
                var$4 = cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$vertexArrays, var$3);
                jn_IntBufferImpl_put($params, 0, var$4);
            }
            return;
        case 36006:
        case 36010:
            var$3 = $this.$gl0.getParameter($pname);
            if (var$3 === null)
                jn_IntBufferImpl_put($params, 0, 0);
            else {
                var$4 = cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$frameBuffers, var$3);
                jn_IntBufferImpl_put($params, 0, var$4);
            }
            return;
        default:
    }
    cgxgbt_TeaGL20_glGetIntegerv($this, $pname, $params);
},
cgxgbt_TeaGL30Debug = $rt_classWithoutFields(cgxgbt_TeaGL30),
cgxgbt_TeaGL30Debug_checkError = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$gl0.getError();
    if (!var$1)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = jl_Integer_toHexString(var$1);
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(121)), var$1), $rt_s(25)), var$3);
    jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glBindVertexArray = ($this, $array) => {
    cgxgbt_TeaGL30_glBindVertexArray($this, $array);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDeleteVertexArrays = ($this, $n, $ids) => {
    cgxgbt_TeaGL30_glDeleteVertexArrays($this, $n, $ids);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawArraysInstanced = ($this, $mode, $first, $count, $instanceCount) => {
    cgxgbt_TeaGL30_glDrawArraysInstanced($this, $mode, $first, $count, $instanceCount);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawBuffers = ($this, $n, $bufs) => {
    cgxgbt_TeaGL30_glDrawBuffers($this, $n, $bufs);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawElementsInstanced = ($this, $mode, $count, $type, $indicesOffset, $instanceCount) => {
    cgxgbt_TeaGL30_glDrawElementsInstanced($this, $mode, $count, $type, $indicesOffset, $instanceCount);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGenVertexArrays = ($this, $n, $ids) => {
    cgxgbt_TeaGL30_glGenVertexArrays($this, $n, $ids);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glActiveTexture = ($this, $texture) => {
    cgxgbt_TeaGL20_glActiveTexture($this, $texture);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBindTexture = ($this, $target, $texture) => {
    cgxgbt_TeaGL20_glBindTexture($this, $target, $texture);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBlendFunc = ($this, $sfactor, $dfactor) => {
    cgxgbt_TeaGL20_glBlendFunc($this, $sfactor, $dfactor);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glClear = ($this, $mask) => {
    cgxgbt_TeaGL20_glClear($this, $mask);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    cgxgbt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glCullFace = ($this, $mode) => {
    cgxgbt_TeaGL20_glCullFace($this, $mode);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDepthFunc = ($this, $func) => {
    cgxgbt_TeaGL20_glDepthFunc($this, $func);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDepthMask = ($this, $flag) => {
    cgxgbt_TeaGL20_glDepthMask($this, $flag);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDepthRangef = ($this, $zNear, $zFar) => {
    cgxgbt_TeaGL20_glDepthRangef($this, $zNear, $zFar);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDisable = ($this, $cap) => {
    cgxgbt_TeaGL20_glDisable($this, $cap);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawArrays = ($this, $mode, $first, $count) => {
    cgxgbt_TeaGL20_glDrawArrays($this, $mode, $first, $count);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glEnable = ($this, $cap) => {
    cgxgbt_TeaGL20_glEnable($this, $cap);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetIntegerv = ($this, $pname, $params) => {
    cgxgbt_TeaGL30_glGetIntegerv($this, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetString = ($this, $name) => {
    return cgxgbt_TeaGL20_glGetString($this, $name);
},
cgxgbt_TeaGL30Debug_glPixelStorei = ($this, $pname, $param) => {
    cgxgbt_TeaGL20_glPixelStorei($this, $pname, $param);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glReadPixels = ($this, $x, $y, $width, $height, $format, $type, $pixels) => {
    cgxgbt_TeaGL20_glReadPixels($this, $x, $y, $width, $height, $format, $type, $pixels);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glTexParameterf = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameterf($this, $target, $pname, $param);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glViewport = ($this, $x, $y, $width, $height) => {
    cgxgbt_TeaGL20_glViewport($this, $x, $y, $width, $height);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glAttachShader = ($this, $program, $shader) => {
    cgxgbt_TeaGL20_glAttachShader($this, $program, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBindBuffer = ($this, $target, $buffer) => {
    cgxgbt_TeaGL20_glBindBuffer($this, $target, $buffer);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBindFramebuffer = ($this, $target, $framebuffer) => {
    cgxgbt_TeaGL20_glBindFramebuffer($this, $target, $framebuffer);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBindRenderbuffer = ($this, $target, $renderbuffer) => {
    cgxgbt_TeaGL20_glBindRenderbuffer($this, $target, $renderbuffer);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    cgxgbt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBufferData = ($this, $target, $size, $data, $usage) => {
    cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glCheckFramebufferStatus = ($this, $target) => {
    return cgxgbt_TeaGL20_glCheckFramebufferStatus($this, $target);
},
cgxgbt_TeaGL30Debug_glCompileShader = ($this, $shader) => {
    cgxgbt_TeaGL20_glCompileShader($this, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glCreateProgram = $this => {
    let $program;
    $program = cgxgbt_TeaGL20_glCreateProgram($this);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $program;
},
cgxgbt_TeaGL30Debug_glCreateShader = ($this, $type) => {
    let $shader;
    $shader = cgxgbt_TeaGL20_glCreateShader($this, $type);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $shader;
},
cgxgbt_TeaGL30Debug_glDeleteProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glDeleteProgram($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
};
let cgxgbt_TeaGL30Debug_glDeleteShader = ($this, $shader) => {
    cgxgbt_TeaGL20_glDeleteShader($this, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDisableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glDisableVertexAttribArray($this, $index);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glEnableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glEnableVertexAttribArray($this, $index);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glFramebufferRenderbuffer = ($this, $target, $attachment, $renderbuffertarget, $renderbuffer) => {
    cgxgbt_TeaGL20_glFramebufferRenderbuffer($this, $target, $attachment, $renderbuffertarget, $renderbuffer);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glFramebufferTexture2D = ($this, $target, $attachment, $textarget, $texture, $level) => {
    cgxgbt_TeaGL20_glFramebufferTexture2D($this, $target, $attachment, $textarget, $texture, $level);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGenerateMipmap = ($this, $target) => {
    cgxgbt_TeaGL20_glGenerateMipmap($this, $target);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $attrib;
    $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $attrib;
},
cgxgbt_TeaGL30Debug_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $uniform;
    $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $uniform;
},
cgxgbt_TeaGL30Debug_glGetAttribLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetAttribLocation($this, $program, $name);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL30Debug_glGetFloatv = ($this, $pname, $params) => {
    cgxgbt_TeaGL30_glGetFloatv($this, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetProgramiv = ($this, $program, $pname, $params) => {
    cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetProgramInfoLog = ($this, $program) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetProgramInfoLog($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $info;
},
cgxgbt_TeaGL30Debug_glGetShaderiv = ($this, $shader, $pname, $params) => {
    cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetShaderInfoLog = ($this, $shader) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetShaderInfoLog($this, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $info;
},
cgxgbt_TeaGL30Debug_glGetUniformLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL30Debug_glLinkProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glLinkProgram($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glRenderbufferStorage = ($this, $target, $internalformat, $width, $height) => {
    cgxgbt_TeaGL20_glRenderbufferStorage($this, $target, $internalformat, $width, $height);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glShaderSource = ($this, $shader, $source) => {
    cgxgbt_TeaGL20_glShaderSource($this, $shader, $source);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glTexParameteri = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameteri($this, $target, $pname, $param);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform1f = ($this, $location, $x) => {
    cgxgbt_TeaGL20_glUniform1f($this, $location, $x);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform1i = ($this, $location, $x) => {
    cgxgbt_TeaGL20_glUniform1i($this, $location, $x);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform2f = ($this, $location, $x, $y) => {
    cgxgbt_TeaGL20_glUniform2f($this, $location, $x, $y);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform3f = ($this, $location, $x, $y, $z) => {
    cgxgbt_TeaGL20_glUniform3f($this, $location, $x, $y, $z);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform4f = ($this, $location, $x, $y, $z, $w) => {
    cgxgbt_TeaGL20_glUniform4f($this, $location, $x, $y, $z, $w);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUseProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glUseProgram($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glVertexAttrib2f = ($this, $indx, $x, $y) => {
    cgxgbt_TeaGL20_glVertexAttrib2f($this, $indx, $x, $y);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    cgxgbt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0);
    cgxgbt_TeaGL30Debug_checkError($this);
};
function cbggg_GLVersion() {
    let a = this; jl_Object.call(a);
    a.$majorVersion = 0;
    a.$minorVersion = 0;
    a.$releaseVersion = 0;
    a.$versionString = null;
    a.$vendorString = null;
    a.$rendererString = null;
    a.$type3 = null;
    a.$TAG = $rt_s(89);
}
let cbggg_GLVersion_extractVersion = ($this, $patternString, $versionString) => {
    let $matcher, $pattern, $resultSplit, $found;
    $matcher = jur_Pattern_matcher(jur_Pattern_compile($patternString), $versionString);
    if (!jur_Matcher_find($matcher)) {
        $pattern = cbg_Gdx_app;
        $patternString = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($patternString);
        jl_AbstractStringBuilder_append($patternString, $rt_s(122));
        jl_AbstractStringBuilder_append($patternString, $versionString);
        $versionString = jl_AbstractStringBuilder_toString($patternString);
        cgxgbt_TeaApplication_log($pattern, $rt_s(89), $versionString);
        $this.$majorVersion = 2;
        $this.$minorVersion = 0;
        $this.$releaseVersion = 0;
    } else {
        $resultSplit = (jl_String_split(jur_Matcher_group($matcher, 1), $rt_s(123))).data;
        $this.$majorVersion = cbggg_GLVersion_parseInt($this, $resultSplit[0], 2);
        $found = $resultSplit.length;
        $this.$minorVersion = $found < 2 ? 0 : cbggg_GLVersion_parseInt($this, $resultSplit[1], 0);
        $this.$releaseVersion = $found < 3 ? 0 : cbggg_GLVersion_parseInt($this, $resultSplit[2], 0);
    }
},
cbggg_GLVersion_parseInt = ($this, $v, $defaultValue) => {
    let var$3, var$4, var$5, $$je;
    a: {
        try {
            var$3 = jl_Integer_parseInt($v);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NumberFormatException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    var$4 = cbg_Gdx_app;
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_AbstractStringBuilder_append(var$5, $rt_s(124));
    jl_AbstractStringBuilder_append(var$5, $v);
    jl_AbstractStringBuilder_append(var$5, $rt_s(125));
    var$5 = jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$5, $defaultValue));
    cgxgbt_TeaApplication_error(var$4, $rt_s(126), var$5);
    return $defaultValue;
},
cbggg_GLVersion_isVersionEqualToOrHigher = ($this, $testMajorVersion, $testMinorVersion) => {
    a: {
        b: {
            $testMajorVersion = $rt_compare($this.$majorVersion, $testMajorVersion);
            if ($testMajorVersion <= 0) {
                if ($testMajorVersion)
                    break b;
                if ($this.$minorVersion < $testMinorVersion)
                    break b;
            }
            $testMajorVersion = 1;
            break a;
        }
        $testMajorVersion = 0;
    }
    return $testMajorVersion;
},
cbg_Application$ApplicationType = $rt_classWithoutFields(jl_Enum),
cbg_Application$ApplicationType_Android = null,
cbg_Application$ApplicationType_Desktop = null,
cbg_Application$ApplicationType_HeadlessDesktop = null,
cbg_Application$ApplicationType_Applet = null,
cbg_Application$ApplicationType_WebGL = null,
cbg_Application$ApplicationType_iOS = null,
cbg_Application$ApplicationType_$VALUES = null,
cbg_Application$ApplicationType__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(127), 0);
    cbg_Application$ApplicationType_Android = var$1;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(128), 1);
    cbg_Application$ApplicationType_Desktop = var$1;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(129), 2);
    cbg_Application$ApplicationType_HeadlessDesktop = var$1;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(130), 3);
    cbg_Application$ApplicationType_Applet = var$1;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(131), 4);
    cbg_Application$ApplicationType_WebGL = var$1;
    var$1 = new cbg_Application$ApplicationType;
    jl_Enum__init_(var$1, $rt_s(132), 5);
    cbg_Application$ApplicationType_iOS = var$1;
    var$2 = $rt_createArray(cbg_Application$ApplicationType, 6);
    var$3 = var$2.data;
    var$3[0] = cbg_Application$ApplicationType_Android;
    var$3[1] = cbg_Application$ApplicationType_Desktop;
    var$3[2] = cbg_Application$ApplicationType_HeadlessDesktop;
    var$3[3] = cbg_Application$ApplicationType_Applet;
    var$3[4] = cbg_Application$ApplicationType_WebGL;
    var$3[5] = var$1;
    cbg_Application$ApplicationType_$VALUES = var$2;
},
cgxgbt_TeaGraphics$FullscreenChanged = $rt_classWithoutFields(0);
function cgxgbt_TeaGraphics$1() {
    jl_Object.call(this);
    this.$this$022 = null;
}
let cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0 = var$1 => {
    var$1;
},
cgxgbt_TeaGL20Debug = $rt_classWithoutFields(cgxgbt_TeaGL20),
cgxgbt_TeaGL20Debug_checkError = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$gl.getError();
    if (!var$1)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = jl_Integer_toHexString(var$1);
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(121)), var$1), $rt_s(25)), var$3);
    jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glActiveTexture = ($this, $texture) => {
    cgxgbt_TeaGL20_glActiveTexture($this, $texture);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBindTexture = ($this, $target, $texture) => {
    cgxgbt_TeaGL20_glBindTexture($this, $target, $texture);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBlendFunc = ($this, $sfactor, $dfactor) => {
    cgxgbt_TeaGL20_glBlendFunc($this, $sfactor, $dfactor);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glClear = ($this, $mask) => {
    cgxgbt_TeaGL20_glClear($this, $mask);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    cgxgbt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glCullFace = ($this, $mode) => {
    cgxgbt_TeaGL20_glCullFace($this, $mode);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDepthFunc = ($this, $func) => {
    cgxgbt_TeaGL20_glDepthFunc($this, $func);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDepthMask = ($this, $flag) => {
    cgxgbt_TeaGL20_glDepthMask($this, $flag);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDepthRangef = ($this, $zNear, $zFar) => {
    cgxgbt_TeaGL20_glDepthRangef($this, $zNear, $zFar);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDisable = ($this, $cap) => {
    cgxgbt_TeaGL20_glDisable($this, $cap);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDrawArrays = ($this, $mode, $first, $count) => {
    cgxgbt_TeaGL20_glDrawArrays($this, $mode, $first, $count);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glEnable = ($this, $cap) => {
    cgxgbt_TeaGL20_glEnable($this, $cap);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetIntegerv = ($this, $pname, $params) => {
    cgxgbt_TeaGL20_glGetIntegerv($this, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetString = ($this, $name) => {
    return cgxgbt_TeaGL20_glGetString($this, $name);
},
cgxgbt_TeaGL20Debug_glPixelStorei = ($this, $pname, $param) => {
    cgxgbt_TeaGL20_glPixelStorei($this, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glReadPixels = ($this, $x, $y, $width, $height, $format, $type, $pixels) => {
    cgxgbt_TeaGL20_glReadPixels($this, $x, $y, $width, $height, $format, $type, $pixels);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glTexParameterf = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameterf($this, $target, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glViewport = ($this, $x, $y, $width, $height) => {
    cgxgbt_TeaGL20_glViewport($this, $x, $y, $width, $height);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glAttachShader = ($this, $program, $shader) => {
    cgxgbt_TeaGL20_glAttachShader($this, $program, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBindBuffer = ($this, $target, $buffer) => {
    cgxgbt_TeaGL20_glBindBuffer($this, $target, $buffer);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBindFramebuffer = ($this, $target, $framebuffer) => {
    cgxgbt_TeaGL20_glBindFramebuffer($this, $target, $framebuffer);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBindRenderbuffer = ($this, $target, $renderbuffer) => {
    cgxgbt_TeaGL20_glBindRenderbuffer($this, $target, $renderbuffer);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    cgxgbt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBufferData = ($this, $target, $size, $data, $usage) => {
    cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glCheckFramebufferStatus = ($this, $target) => {
    return cgxgbt_TeaGL20_glCheckFramebufferStatus($this, $target);
},
cgxgbt_TeaGL20Debug_glCompileShader = ($this, $shader) => {
    cgxgbt_TeaGL20_glCompileShader($this, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glCreateProgram = $this => {
    let $program;
    $program = cgxgbt_TeaGL20_glCreateProgram($this);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $program;
},
cgxgbt_TeaGL20Debug_glCreateShader = ($this, $type) => {
    let $shader;
    $shader = cgxgbt_TeaGL20_glCreateShader($this, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $shader;
},
cgxgbt_TeaGL20Debug_glDeleteProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glDeleteProgram($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDeleteShader = ($this, $shader) => {
    cgxgbt_TeaGL20_glDeleteShader($this, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDisableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glDisableVertexAttribArray($this, $index);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glEnableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glEnableVertexAttribArray($this, $index);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glFramebufferRenderbuffer = ($this, $target, $attachment, $renderbuffertarget, $renderbuffer) => {
    cgxgbt_TeaGL20_glFramebufferRenderbuffer($this, $target, $attachment, $renderbuffertarget, $renderbuffer);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glFramebufferTexture2D = ($this, $target, $attachment, $textarget, $texture, $level) => {
    cgxgbt_TeaGL20_glFramebufferTexture2D($this, $target, $attachment, $textarget, $texture, $level);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGenerateMipmap = ($this, $target) => {
    cgxgbt_TeaGL20_glGenerateMipmap($this, $target);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $attrib;
    $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $attrib;
},
cgxgbt_TeaGL20Debug_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $uniform;
    $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $uniform;
},
cgxgbt_TeaGL20Debug_glGetAttribLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetAttribLocation($this, $program, $name);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL20Debug_glGetFloatv = ($this, $pname, $params) => {
    cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetProgramiv = ($this, $program, $pname, $params) => {
    cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetProgramInfoLog = ($this, $program) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetProgramInfoLog($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $info;
},
cgxgbt_TeaGL20Debug_glGetShaderiv = ($this, $shader, $pname, $params) => {
    cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetShaderInfoLog = ($this, $shader) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetShaderInfoLog($this, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $info;
};
let cgxgbt_TeaGL20Debug_glGetUniformLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL20Debug_glLinkProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glLinkProgram($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glRenderbufferStorage = ($this, $target, $internalformat, $width, $height) => {
    cgxgbt_TeaGL20_glRenderbufferStorage($this, $target, $internalformat, $width, $height);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glShaderSource = ($this, $shader, $source) => {
    cgxgbt_TeaGL20_glShaderSource($this, $shader, $source);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glTexParameteri = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameteri($this, $target, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform1f = ($this, $location, $x) => {
    cgxgbt_TeaGL20_glUniform1f($this, $location, $x);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform1i = ($this, $location, $x) => {
    cgxgbt_TeaGL20_glUniform1i($this, $location, $x);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform2f = ($this, $location, $x, $y) => {
    cgxgbt_TeaGL20_glUniform2f($this, $location, $x, $y);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform3f = ($this, $location, $x, $y, $z) => {
    cgxgbt_TeaGL20_glUniform3f($this, $location, $x, $y, $z);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform4f = ($this, $location, $x, $y, $z, $w) => {
    cgxgbt_TeaGL20_glUniform4f($this, $location, $x, $y, $z, $w);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUseProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glUseProgram($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glVertexAttrib2f = ($this, $indx, $x, $y) => {
    cgxgbt_TeaGL20_glVertexAttrib2f($this, $indx, $x, $y);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    cgxgbt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0);
    cgxgbt_TeaGL20Debug_checkError($this);
},
ju_Collection = $rt_classWithoutFields(0),
ju_AbstractCollection = $rt_classWithoutFields(),
ju_Set = $rt_classWithoutFields(0),
ju_AbstractSet = $rt_classWithoutFields(ju_AbstractCollection);
function ju_HashSet() {
    ju_AbstractSet.call(this);
    this.$backingMap = null;
}
let ju_HashSet__init_0 = $this => {
    $this.$backingMap = ju_HashMap__init_();
},
ju_HashSet__init_ = () => {
    let var_0 = new ju_HashSet();
    ju_HashSet__init_0(var_0);
    return var_0;
},
ju_HashSet_add = ($this, $object) => {
    return ju_HashMap_put($this.$backingMap, $object, $this) !== null ? 0 : 1;
},
ju_HashSet_contains = ($this, $object) => {
    return ju_HashMap_entryByKey($this.$backingMap, $object) === null ? 0 : 1;
};
function cbgu_IntMap() {
    let a = this; jl_Object.call(a);
    a.$size7 = 0;
    a.$keyTable0 = null;
    a.$valueTable0 = null;
    a.$zeroValue = null;
    a.$hasZeroValue = 0;
    a.$loadFactor1 = 0.0;
    a.$threshold0 = 0;
    a.$shift0 = 0;
    a.$mask3 = 0;
}
let cbgu_IntMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift0));
},
cbgu_IntMap_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    $keyTable = $this.$keyTable0;
    $i = cbgu_IntMap_place($this, $key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask3;
    }
    return $i;
},
cbgu_IntMap_put = ($this, $key, $value) => {
    let $oldValue, $i, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    if (!$key) {
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = $value;
        if (!$this.$hasZeroValue) {
            $this.$hasZeroValue = 1;
            $this.$size7 = $this.$size7 + 1 | 0;
        }
        return $oldValue;
    }
    $i = cbgu_IntMap_locateKey($this, $key);
    if ($i >= 0) {
        var$5 = $this.$valueTable0.data;
        $oldValue = var$5[$i];
        var$5[$i] = $value;
        return $oldValue;
    }
    $i =  -($i + 1 | 0) | 0;
    var$5 = $this.$keyTable0.data;
    var$5[$i] = $key;
    $this.$valueTable0.data[$i] = $value;
    $key = $this.$size7 + 1 | 0;
    $this.$size7 = $key;
    if ($key >= $this.$threshold0)
        a: {
            $key = var$5.length;
            $i = $key << 1;
            $this.$threshold0 = $i * $this.$loadFactor1 | 0;
            var$6 = $i - 1 | 0;
            $this.$mask3 = var$6;
            $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$6));
            var$5 = $this.$keyTable0;
            var$7 = $this.$valueTable0;
            $this.$keyTable0 = $rt_createIntArray($i);
            $this.$valueTable0 = $rt_createArray(jl_Object, $i);
            if ($this.$size7 > 0) {
                var$6 = 0;
                while (true) {
                    if (var$6 >= $key)
                        break a;
                    var$8 = var$5.data[var$6];
                    if (var$8) {
                        $value = var$7.data[var$6];
                        var$9 = $this.$keyTable0;
                        var$10 = cbgu_IntMap_place($this, var$8);
                        while (true) {
                            var$11 = var$9.data;
                            if (!var$11[var$10])
                                break;
                            var$10 = (var$10 + 1 | 0) & $this.$mask3;
                        }
                        var$11[var$10] = var$8;
                        $this.$valueTable0.data[var$10] = $value;
                    }
                    var$6 = var$6 + 1 | 0;
                }
            }
        }
    return null;
},
cbgu_IntMap_get = ($this, $key) => {
    let $i;
    if (!$key)
        return !$this.$hasZeroValue ? null : $this.$zeroValue;
    $i = cbgu_IntMap_locateKey($this, $key);
    return $i < 0 ? null : $this.$valueTable0.data[$i];
},
cbgu_IntMap_remove = ($this, $key) => {
    let $oldValue, $i, $keyTable, $valueTable, $oldValue_0, $mask, $next, var$9, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue)
            return null;
        $this.$hasZeroValue = 0;
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = null;
        $this.$size7 = $this.$size7 - 1 | 0;
        return $oldValue;
    }
    $i = cbgu_IntMap_locateKey($this, $key);
    if ($i < 0)
        return null;
    $keyTable = $this.$keyTable0;
    $valueTable = $this.$valueTable0.data;
    $oldValue_0 = $valueTable[$i];
    $mask = $this.$mask3;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$9 = $keyTable.data;
        $key = var$9[$next];
        if (!$key)
            break;
        $placement = cbgu_IntMap_place($this, $key);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$9[$i] = $key;
            $valueTable[$i] = $valueTable[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$9[$i] = 0;
    $valueTable[$i] = null;
    $this.$size7 = $this.$size7 - 1 | 0;
    return $oldValue_0;
};
function cbgu_IntSet() {
    let a = this; jl_Object.call(a);
    a.$size6 = 0;
    a.$keyTable1 = null;
    a.$hasZeroValue0 = 0;
    a.$loadFactor4 = 0.0;
    a.$threshold1 = 0;
    a.$shift = 0;
    a.$mask2 = 0;
}
let cbgu_IntSet__init_0 = $this => {
    let var$1, var$2;
    $this.$loadFactor4 = 0.800000011920929;
    var$1 = cbgu_ObjectSet_tableSize(51, 0.800000011920929);
    $this.$threshold1 = var$1 * 0.800000011920929 | 0;
    var$2 = var$1 - 1 | 0;
    $this.$mask2 = var$2;
    $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt(var$2));
    $this.$keyTable1 = $rt_createIntArray(var$1);
},
cbgu_IntSet__init_ = () => {
    let var_0 = new cbgu_IntSet();
    cbgu_IntSet__init_0(var_0);
    return var_0;
},
cbgu_IntSet_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift));
},
cbgu_IntSet_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    $keyTable = $this.$keyTable1;
    $i = cbgu_IntSet_place($this, $key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask2;
    }
    return $i;
},
cbgu_IntSet_add = ($this, $key) => {
    let $i, var$3, var$4, var$5, var$6, var$7;
    if (!$key) {
        if ($this.$hasZeroValue0)
            return 0;
        $this.$hasZeroValue0 = 1;
        $this.$size6 = $this.$size6 + 1 | 0;
        return 1;
    }
    $i = cbgu_IntSet_locateKey($this, $key);
    if ($i >= 0)
        return 0;
    $i =  -($i + 1 | 0) | 0;
    var$3 = $this.$keyTable1.data;
    var$3[$i] = $key;
    $key = $this.$size6 + 1 | 0;
    $this.$size6 = $key;
    if ($key >= $this.$threshold1)
        a: {
            $key = var$3.length;
            $i = $key << 1;
            $this.$threshold1 = $i * $this.$loadFactor4 | 0;
            var$4 = $i - 1 | 0;
            $this.$mask2 = var$4;
            $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt(var$4));
            var$3 = $this.$keyTable1;
            $this.$keyTable1 = $rt_createIntArray($i);
            if ($this.$size6 > 0) {
                $i = 0;
                while (true) {
                    if ($i >= $key)
                        break a;
                    var$4 = var$3.data[$i];
                    if (var$4) {
                        var$5 = $this.$keyTable1;
                        var$6 = cbgu_IntSet_place($this, var$4);
                        while (true) {
                            var$7 = var$5.data;
                            if (!var$7[var$6])
                                break;
                            var$6 = (var$6 + 1 | 0) & $this.$mask2;
                        }
                        var$7[var$6] = var$4;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
    return 1;
},
cbgu_IntSet_remove = ($this, $key) => {
    let $i, $keyTable, $mask, $next, var$6, var$7, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue0)
            return 0;
        $this.$hasZeroValue0 = 0;
        $this.$size6 = $this.$size6 - 1 | 0;
        return 1;
    }
    $i = cbgu_IntSet_locateKey($this, $key);
    if ($i < 0)
        return 0;
    $keyTable = $this.$keyTable1;
    $mask = $this.$mask2;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$6 = $keyTable.data;
        var$7 = var$6[$next];
        if (!var$7)
            break;
        $placement = cbgu_IntSet_place($this, var$7);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$6[$i] = var$7;
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$6[$i] = 0;
    $this.$size6 = $this.$size6 - 1 | 0;
    return 1;
},
cgxgbtf_FileDB = $rt_classWithoutFields();
function cgxgbtf_MemoryFileStorage() {
    let a = this; cgxgbtf_FileDB.call(a);
    a.$fileMap = null;
    a.$tmpPaths = null;
    a.$debug = 0;
}
let cgxgbtf_MemoryFileStorage__init_ = $this => {
    let var$1;
    $this.$tmpPaths = cbgu_Array__init_();
    $this.$debug = 0;
    var$1 = new cbgu_OrderedMap;
    cbgu_ObjectMap__init_0(var$1);
    var$1.$keys0 = cbgu_Array__init_();
    $this.$fileMap = var$1;
},
cgxgbtf_MemoryFileStorage__init_0 = () => {
    let var_0 = new cgxgbtf_MemoryFileStorage();
    cgxgbtf_MemoryFileStorage__init_(var_0);
    return var_0;
},
cgxgbtf_MemoryFileStorage_read = ($this, $file) => {
    let $path, $data, $byteArray, $e, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, $$je;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
    $data = cgxgbtf_MemoryFileStorage_getInternal($this, $path);
    if ($data === null)
        return null;
    $byteArray = $data.$bytes;
    a: {
        try {
            $file = ji_ByteArrayInputStream__init_0($byteArray);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $file;
    }
    var$6 = $this.$fileMap;
    cbgu_Array_removeValue(var$6.$keys0, $path, 0);
    var$7 = cbgu_ObjectMap_locateKey(var$6, $path);
    if (var$7 < 0)
        $file = null;
    else {
        $byteArray = var$6.$keyTable;
        var$8 = var$6.$valueTable.data;
        $file = var$8[var$7];
        var$9 = var$6.$mask0;
        var$10 = (var$7 + 1 | 0) & var$9;
        while (true) {
            var$11 = $byteArray.data;
            $data = var$11[var$10];
            if ($data === null)
                break;
            var$12 = cbgu_ObjectMap_place(var$6, $data);
            if (((var$10 - var$12 | 0) & var$9) > ((var$7 - var$12 | 0) & var$9)) {
                var$11[var$7] = $data;
                var$8[var$7] = var$8[var$10];
                var$7 = var$10;
            }
            var$10 = (var$10 + 1 | 0) & var$9;
        }
        var$11[var$7] = null;
        var$8[var$7] = null;
        var$6.$size8 = var$6.$size8 - 1 | 0;
    }
    var$13 = $file;
    if ($this.$debug) {
        $data = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($data);
        jl_AbstractStringBuilder_append0($data, 34);
        jl_AbstractStringBuilder_append0(jl_StringBuilder_append($data, $path), 34);
        var$14 = jl_AbstractStringBuilder_toString($data);
        var$6 = var$13 !== null && cgxgbtf_FileData_isDirectory(var$13) ? $rt_s(133) : $rt_s(134);
        var$15 = jl_System_out();
        $data = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$7 = var$13 === null ? 0 : 1;
        $file = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($file);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append($file, $data), var$6), var$7), $rt_s(135)), var$14);
        $data = jl_AbstractStringBuilder_toString($file);
        otcic_JsConsolePrintStream_println(var$15, $data);
    }
    if (var$13 !== null)
        $this.$removeFile($path);
    $file = new cbgu_GdxRuntimeException;
    $data = jl_Class_getSimpleName(jl_Object_getClass($this));
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $data), $rt_s(136)), $path);
    jl_Throwable__init_($file, jl_AbstractStringBuilder_toString(var$6), $e);
    $rt_throw($file);
},
cgxgbtf_MemoryFileStorage_writeInternal = ($this, $file, $data, $append, $expectedLength) => {
    let $path, $oldData, var$7, var$8, $newSize, $oldBytes, $i, $j, $cur, $parentPath;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
    $oldData = cbgu_ObjectMap_get($this.$fileMap, $path);
    if ($append && $oldData !== null) {
        var$7 = $data.data;
        var$8 = $oldData.$bytes.data;
        $append = var$7.length;
        $expectedLength = var$8.length;
        $newSize = $append + $expectedLength | 0;
        $data = $rt_createByteArray($newSize);
        $oldBytes = $data.data;
        $i = 0;
        while ($i < $expectedLength) {
            $oldBytes[$i] = var$8[$i];
            $i = $i + 1 | 0;
        }
        $j = 0;
        while ($expectedLength < $newSize) {
            $oldBytes[$expectedLength] = var$7[$j];
            $expectedLength = $expectedLength + 1 | 0;
            $j = $j + 1 | 0;
        }
    }
    cgxgbtf_MemoryFileStorage_putFileInternal($this, $path, $data, 1);
    $cur = cgxgbt_TeaFileHandle_parent($file);
    while (!cgxgbtf_MemoryFileStorage_isRootFolder($this, $cur)) {
        $oldData = $cur;
        $parentPath = cgxgbtf_MemoryFileStorage_fixPath($this, $oldData.$file);
        if (!cbgu_ObjectMap_containsKey($this.$fileMap, $parentPath))
            cgxgbtf_MemoryFileStorage_putFolderInternal($this, $parentPath);
        $cur = cgxgbt_TeaFileHandle_parent($oldData);
    }
},
cgxgbtf_MemoryFileStorage_mkdirs = ($this, $file) => {
    let $cur, $path, $parentPath;
    cgxgbtf_MemoryFileStorage_putFolderInternal($this, cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file));
    $cur = cgxgbt_TeaFileHandle_parent($file);
    while (!cgxgbtf_MemoryFileStorage_isRootFolder($this, $cur)) {
        $path = $cur;
        $parentPath = cgxgbtf_MemoryFileStorage_fixPath($this, $path.$file);
        if (!cbgu_ObjectMap_containsKey($this.$fileMap, $parentPath))
            cgxgbtf_MemoryFileStorage_putFolderInternal($this, $parentPath);
        $cur = cgxgbt_TeaFileHandle_parent($path);
    }
},
cgxgbtf_MemoryFileStorage_exists = ($this, $file) => {
    let $path, var$3, var$4, var$5, var$6;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file);
    if (cgxgbtf_MemoryFileStorage_isRootFolder($this, $file))
        return 1;
    $file = cbgu_ObjectMap_get($this.$fileMap, $path);
    var$3 = $file === null ? 0 : 1;
    if ($this.$debug) {
        $file = $file !== null && cgxgbtf_FileData_isDirectory($file) ? $rt_s(137) : $rt_s(138);
        var$4 = jl_System_out();
        var$5 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$6 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$6);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$5), $file), var$3), $rt_s(135)), $path);
        $file = jl_AbstractStringBuilder_toString(var$6);
        otcic_JsConsolePrintStream_println(var$4, $file);
    }
    return var$3;
},
cgxgbtf_MemoryFileStorage_length = ($this, $file) => {
    let $data;
    $data = cgxgbtf_MemoryFileStorage_getInternal($this, cgxgbtf_MemoryFileStorage_fixPath($this, $file.$file));
    if ($data !== null && !cgxgbtf_FileData_isDirectory($data))
        return Long_fromInt($data.$bytes.data.length);
    return Long_ZERO;
},
cgxgbtf_MemoryFileStorage_isRootFolder = ($this, $cur) => {
    let $path;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $cur.$file);
    if (!jl_String_isEmpty($path) && !jl_String_equals($path, $rt_s(139)) && !jl_String_equals($path, $rt_s(81)) && !jl_String_equals($path, $rt_s(140)))
        return 0;
    return 1;
},
cgxgbtf_MemoryFileStorage_putFile = ($this, $key, $data) => {
    return;
},
cgxgbtf_MemoryFileStorage_removeFile = ($this, $key) => {
    return;
},
cgxgbtf_MemoryFileStorage_getInternal = ($this, $path) => {
    let $fileData, $type, var$4, var$5, var$6, var$7, var$8, var$9;
    $fileData = cbgu_ObjectMap_get($this.$fileMap, $path);
    if ($this.$debug) {
        $type = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($type);
        jl_AbstractStringBuilder_append0($type, 34);
        jl_AbstractStringBuilder_append0(jl_StringBuilder_append($type, $path), 34);
        var$4 = jl_AbstractStringBuilder_toString($type);
        $type = $fileData !== null && cgxgbtf_FileData_isDirectory($fileData) ? $rt_s(141) : $rt_s(142);
        $path = jl_System_out();
        var$5 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$6 = $fileData === null ? 0 : 1;
        if ($fileData === null)
            var$7 = 0;
        else {
            var$8 = $fileData.$bytes;
            var$7 = var$8 === null ? 0 : var$8.data.length;
        }
        var$9 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$9);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append3(jl_StringBuilder_append(jl_StringBuilder_append(var$9, var$5), $type), var$6), $rt_s(143)), var$7), $rt_s(135)), var$4);
        $type = jl_AbstractStringBuilder_toString(var$9);
        otcic_JsConsolePrintStream_println($path, $type);
    }
    return $fileData;
},
cgxgbtf_MemoryFileStorage_putFileInternal = ($this, $path, $bytes, $callMethod) => {
    let var$4, $fileData, var$6, var$7, var$8, var$9;
    if ($this.$debug) {
        var$4 = $bytes.data;
        $fileData = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($fileData);
        jl_AbstractStringBuilder_append0($fileData, 34);
        jl_AbstractStringBuilder_append0(jl_StringBuilder_append($fileData, $path), 34);
        var$6 = jl_AbstractStringBuilder_toString($fileData);
        $fileData = jl_System_out();
        var$7 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$8 = var$4.length;
        var$9 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$9);
        jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$9, var$7), $rt_s(144)), var$6), $rt_s(145)), var$8);
        var$7 = jl_AbstractStringBuilder_toString(var$9);
        otcic_JsConsolePrintStream_println($fileData, var$7);
    }
    if (!jl_String_isEmpty($path) && !jl_String_equals($path, $rt_s(139)) && !jl_String_equals($path, $rt_s(81)) && !jl_String_equals($path, $rt_s(140))) {
        $fileData = cgxgbtf_FileData__init_0($path, $bytes);
        cbgu_OrderedMap_put($this.$fileMap, $path, $fileData);
        if ($callMethod)
            $this.$putFile($path, $fileData);
        return;
    }
    $fileData = new cbgu_GdxRuntimeException;
    jl_Exception__init_($fileData, $rt_s(146));
    $rt_throw($fileData);
},
cgxgbtf_MemoryFileStorage_putFolderInternal = ($this, $path) => {
    cgxgbtf_MemoryFileStorage_putFolderInternal0($this, $path, 1);
},
cgxgbtf_MemoryFileStorage_putFolderInternal0 = ($this, $path, $callMethod) => {
    let var$3, var$4, var$5, $fileData;
    if ($this.$debug) {
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append0(var$3, 34);
        jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$3, $path), 34);
        var$4 = jl_AbstractStringBuilder_toString(var$3);
        var$3 = jl_System_out();
        var$5 = jl_Class_getSimpleName(jl_Object_getClass($this));
        $fileData = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($fileData);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($fileData, var$5), $rt_s(147)), var$4);
        var$5 = jl_AbstractStringBuilder_toString($fileData);
        otcic_JsConsolePrintStream_println(var$3, var$5);
    }
    if (!jl_String_isEmpty($path) && !jl_String_equals($path, $rt_s(139)) && !jl_String_equals($path, $rt_s(81)) && !jl_String_equals($path, $rt_s(140))) {
        $fileData = cgxgbtf_FileData__init_1($path);
        cbgu_OrderedMap_put($this.$fileMap, $path, cgxgbtf_FileData__init_1($path));
        if ($callMethod)
            $this.$putFile($path, $fileData);
        return;
    }
    var$3 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$3, $rt_s(146));
    $rt_throw(var$3);
},
cgxgbtf_MemoryFileStorage_fixPath = ($this, $path) => {
    let var$2, var$3;
    var$2 = jl_String_trim($path);
    if (jl_String_startsWith(var$2, $rt_s(140)))
        var$2 = jl_String_replace(var$2, $rt_s(140), $rt_s(8));
    if (jl_String_startsWith(var$2, $rt_s(139))) {
        var$2 = jur_Pattern_matcher(jur_Pattern_compile($rt_s(139)), var$2);
        jur_Matcher_reset(var$2);
        if (!jur_Matcher_find(var$2))
            var$2 = var$2.$string1;
        else {
            var$3 = new jl_StringBuffer;
            jl_AbstractStringBuilder__init_(var$3);
            jur_Matcher_appendReplacement(var$2, var$3, $rt_s(8));
            var$2 = jl_AbstractStringBuilder_toString(jur_Matcher_appendTail(var$2, var$3));
        }
    }
    if (!jl_String_startsWith(var$2, $rt_s(81))) {
        $path = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($path);
        jl_AbstractStringBuilder_append0($path, 47);
        jl_StringBuilder_append($path, var$2);
        var$2 = jl_AbstractStringBuilder_toString($path);
    }
    if (!jl_String_endsWith(var$2, $rt_s(81))) {
        $path = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($path);
        jl_AbstractStringBuilder_append0(jl_StringBuilder_append($path, var$2), 47);
        var$2 = jl_AbstractStringBuilder_toString($path);
    }
    return var$2;
},
cgxgbtft_InternalStorage = $rt_classWithoutFields(cgxgbtf_MemoryFileStorage),
cgxgbtft_ClasspathStorage = $rt_classWithoutFields(cgxgbtf_MemoryFileStorage);
function cgxgbtft_LocalDBStorage() {
    cgxgbtf_MemoryFileStorage.call(this);
    this.$dataBase = null;
}
let cgxgbtft_LocalDBStorage__init_0 = ($this, $teaApplication) => {
    let var$2, var$3, var$4;
    cgxgbtf_MemoryFileStorage__init_($this);
    $this.$dataBase = null;
    if ($teaApplication !== null) {
        var$2 = $teaApplication.$config;
        $teaApplication.$delayInitCount = $teaApplication.$delayInitCount + 1 | 0;
        var$3 = indexedDB || mozIndexedDB || webkitIndexedDB || msIndexedDB;
        if (typeof var$3 === 'undefined' ? 1 : 0) {
            var$4 = new jl_IllegalStateException;
            jl_Exception__init_(var$4, $rt_s(148));
            $rt_throw(var$4);
        }
        var$4 = var$2.$localStoragePrefix;
        var$3 = var$3.open($rt_ustr(var$4), 1);
        var$2 = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0;
        var$2.$_03 = var$3;
        var$3.onupgradeneeded = otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent");
        var$2 = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1;
        var$2.$_011 = $this;
        var$2.$_17 = var$3;
        var$2.$_25 = $teaApplication;
        var$3.onsuccess = otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent");
        var$2 = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2;
        var$2.$_010 = var$4;
        var$2.$_16 = $teaApplication;
        var$3.onerror = otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent");
    }
},
cgxgbtft_LocalDBStorage__init_ = var_0 => {
    let var_1 = new cgxgbtft_LocalDBStorage();
    cgxgbtft_LocalDBStorage__init_0(var_1, var_0);
    return var_1;
},
cgxgbtft_LocalDBStorage_putFile = ($this, $key, $fileData) => {
    let $type, $transaction, $objectStore, $dbFileData, $request;
    if ($this.$debug) {
        $type = $fileData !== null && cgxgbtf_FileData_isDirectory($fileData) ? $rt_s(149) : $rt_s(150);
        $transaction = jl_System_out();
        $objectStore = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($objectStore);
        jl_StringBuilder_append(jl_StringBuilder_append($objectStore, $type), $key);
        $objectStore = jl_AbstractStringBuilder_toString($objectStore);
        otcic_JsConsolePrintStream_println($transaction, $objectStore);
    }
    $objectStore = $this.$dataBase.transaction("FILE_DATA", "readwrite").objectStore("FILE_DATA");
    $dbFileData = cgxgbtfi_IndexedDBFileData_create$js_body$_5($fileData.$type7, new Date());
    if (!cgxgbtf_FileData_isDirectory($fileData))
        $dbFileData.contents = otji_JS_wrap($fileData.$bytes);
    $type = $rt_ustr($key);
    $request = $objectStore.put($dbFileData, $type);
    $fileData = new cgxgbtft_LocalDBStorage$putFile$lambda$_2_0;
    $fileData.$_017 = $key;
    $key = otji_JS_function(otji_JSWrapper_unwrap($fileData), "handleEvent");
    $request.onerror = $key;
},
cgxgbtft_LocalDBStorage_removeFile = ($this, $key) => {
    let $objectStore, $transaction, $request;
    if ($this.$debug) {
        $objectStore = jl_System_out();
        $transaction = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($transaction);
        jl_StringBuilder_append(jl_StringBuilder_append($transaction, $rt_s(151)), $key);
        $transaction = jl_AbstractStringBuilder_toString($transaction);
        otcic_JsConsolePrintStream_println($objectStore, $transaction);
    }
    $objectStore = $this.$dataBase.transaction("FILE_DATA", "readwrite").objectStore("FILE_DATA");
    $transaction = $rt_ustr($key);
    $request = $objectStore.delete($transaction);
    $objectStore = new cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0;
    $objectStore.$_021 = $key;
    $key = otji_JS_function(otji_JSWrapper_unwrap($objectStore), "handleEvent");
    $request.onerror = $key;
},
cgxgbt_TeaPermissions$TeaPermissionResult = $rt_classWithoutFields(0);
function cgxgbt_TeaClipboard$ClipboardWriteHandler() {
    jl_Object.call(this);
    this.$this$01 = null;
}
let cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0 = var$1 => {
    var$1 = var$1.$this$01;
    var$1.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr(var$1.$content));
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1 = var$1 => {
    var$1 = var$1.$this$01;
    var$1.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr(var$1.$content));
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2 = var$1 => {
    var$1.$this$01.$hasWritePermissions = 0;
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_0() {
    jl_Object.call(this);
    this.$_019 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1.$_019;
    var$3 = var$2.clipboardData;
    if (var$3 !== null)
        var$3.setData("text/plain", $rt_ustr(var$1.$content));
    var$2.preventDefault();
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_1() {
    jl_Object.call(this);
    this.$_015 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_1_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1.$_015;
    var$3 = var$2.clipboardData;
    if (var$3 !== null)
        var$3.setData("text/plain", $rt_ustr(var$1.$content));
    var$2.preventDefault();
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_2() {
    jl_Object.call(this);
    this.$_08 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_2_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1.$_08;
    var$3 = var$2.clipboardData;
    if (var$3 !== null)
        var$1.$content = $rt_str(var$3.getData("text/plain"));
    var$2.preventDefault();
},
cgxgbta_AssetLoaderListener = $rt_classWithoutFields(0),
cgxgbta_AssetLoaderListener_onProgress = ($this, $total, $loaded) => {
    return;
},
cgxgbta_AssetLoaderListener_onFailure = ($this, $url) => {
    return;
},
cgxgbta_AssetLoaderListener_onSuccess = ($this, $url, $result) => {
    return;
};
function cgxgbt_TeaApplication$4() {
    jl_Object.call(this);
    this.$this$052 = null;
}
function cgxgbt_TeaApplication$5() {
    jl_Object.call(this);
    this.$this$026 = null;
}
let cbg_LifecycleListener = $rt_classWithoutFields(0),
cgxgbtwh_HowlerAudioManager = $rt_classWithoutFields(),
cbgm_MathUtils = $rt_classWithoutFields(),
cbgm_MathUtils_random = null,
cbgm_MathUtils_nextPowerOfTwo = $value => {
    let var$2;
    if (!$value)
        return 1;
    var$2 = $value + (-1) | 0;
    $value = var$2 | var$2 >> 1;
    $value = $value | $value >> 2;
    $value = $value | $value >> 4;
    $value = $value | $value >> 8;
    return ($value | $value >> 16) + 1 | 0;
},
cbgm_MathUtils_isZero = $value => {
    return jl_Math_abs($value) > 9.999999974752427E-7 ? 0 : 1;
},
cbgm_MathUtils_isEqual = ($a, $b) => {
    return jl_Math_abs($a - $b) > 9.999999974752427E-7 ? 0 : 1;
},
cbgm_MathUtils__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    var$1 = new cbgm_RandomXS128;
    var$2 = new ju_Random;
    var$3 = Long_or(Long_shl(Long_fromInt(ju_Random_nextInt(var$2)), 32), Long_fromInt(ju_Random_nextInt(var$2)));
    if (Long_eq(var$3, Long_ZERO))
        var$3 = Long_create(0, 2147483648);
    var$4 = cbgm_RandomXS128_murmurHash3(var$3);
    var$3 = cbgm_RandomXS128_murmurHash3(var$4);
    var$1.$seed0 = var$4;
    var$1.$seed1 = var$3;
    cbgm_MathUtils_random = var$1;
},
ju_Dictionary = $rt_classWithoutFields();
function ju_Hashtable() {
    let a = this; ju_Dictionary.call(a);
    a.$elementCount0 = 0;
    a.$elementData0 = null;
    a.$loadFactor3 = 0.0;
    a.$threshold5 = 0;
    a.$firstSlot = 0;
    a.$lastSlot = 0;
    a.$modCount2 = 0;
}
let ju_Hashtable_EMPTY_ENUMERATION = null,
ju_Hashtable_EMPTY_ITERATOR = null,
ju_Hashtable__init_ = $this => {
    let var$1, var$2;
    $this.$lastSlot = (-1);
    $this.$elementCount0 = 0;
    var$1 = $rt_createArray(ju_Hashtable$Entry, 11);
    var$2 = var$1.data;
    $this.$elementData0 = var$1;
    $this.$firstSlot = var$2.length;
    $this.$loadFactor3 = 0.75;
    ju_Hashtable_computeMaxSize($this);
},
ju_Hashtable__init_0 = () => {
    let var_0 = new ju_Hashtable();
    ju_Hashtable__init_(var_0);
    return var_0;
},
ju_Hashtable_computeMaxSize = $this => {
    $this.$threshold5 = $this.$elementData0.data.length * $this.$loadFactor3 | 0;
},
ju_Hashtable_put = ($this, $key, $value) => {
    let $result, var$4, var$5, $index, $entry, $hash, var$9, var$10, var$11, var$12, var$13;
    jl_Object_monitorEnterSync($this);
    try {
        if ($key !== null && $value !== null) {
            $result = $key;
            var$4 = jl_String_hashCode($result) & 2147483647;
            var$5 = $this.$elementData0.data;
            $index = var$4 % var$5.length | 0;
            $entry = var$5[$index];
            while ($entry !== null && !($entry.$hashcode == jl_String_hashCode($result) && $entry.$key.$equals($key) ? 1 : 0)) {
                $entry = $entry.$next3;
            }
            if ($entry !== null) {
                $result = $entry.$value0;
                $entry.$value0 = $value;
                return $result;
            }
            $this.$modCount2 = $this.$modCount2 + 1 | 0;
            $hash = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = $hash;
            if ($hash > $this.$threshold5) {
                $hash = ($this.$elementData0.data.length << 1) + 1 | 0;
                if (!$hash)
                    $hash = 1;
                $index = (-1);
                var$9 = $rt_createArray(ju_Hashtable$Entry, $hash);
                var$5 = var$9.data;
                var$10 = $this.$lastSlot + 1 | 0;
                var$11 = $hash;
                while (true) {
                    var$10 = var$10 + (-1) | 0;
                    if (var$10 < $this.$firstSlot)
                        break;
                    var$12 = $this.$elementData0.data[var$10];
                    while (var$12 !== null) {
                        var$13 = (var$12.$key.$hashCode() & 2147483647) % $hash | 0;
                        if (var$13 < var$11)
                            var$11 = var$13;
                        if (var$13 > $index)
                            $index = var$13;
                        $entry = var$12.$next3;
                        var$12.$next3 = var$5[var$13];
                        var$5[var$13] = var$12;
                        var$12 = $entry;
                    }
                }
                $this.$firstSlot = var$11;
                $this.$lastSlot = $index;
                $this.$elementData0 = var$9;
                ju_Hashtable_computeMaxSize($this);
                $index = var$4 % $this.$elementData0.data.length | 0;
            }
            if ($index < $this.$firstSlot)
                $this.$firstSlot = $index;
            if ($index > $this.$lastSlot)
                $this.$lastSlot = $index;
            $entry = new ju_Hashtable$Entry;
            ju_MapEntry__init_($entry, $key, $value);
            $entry.$hashcode = jl_String_hashCode($result);
            var$5 = $this.$elementData0.data;
            $entry.$next3 = var$5[$index];
            var$5[$index] = $entry;
            return null;
        }
        $key = new jl_NullPointerException;
        jl_Exception__init_0($key);
        $rt_throw($key);
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
ju_Hashtable__clinit_ = () => {
    ju_Hashtable_EMPTY_ENUMERATION = new ju_Hashtable$1;
    ju_Hashtable_EMPTY_ITERATOR = new ju_Hashtable$2;
};
function ju_Properties() {
    ju_Hashtable.call(this);
    this.$defaults = null;
}
let cgxgbt_TeaGL20$CustomIntMap = $rt_classWithoutFields(),
cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1 = () => {
    return [undefined];
},
cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2 = (var$1, var$2) => {
    if (var$1[var$2] === undefined) return null;
    return var$1[var$2];
},
cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4 = (var$1, var$2) => {
    var$1.push(var$2);
    return var$1.length - 1;
},
cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5 = (var$1, var$2) => {
    var value = var$1[var$2];
    delete var$1[var$2];
    return value;
},
cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6 = (var$1, var$2) => {
    for (var i = 0;i < var$1.length;i++) {
        if (var$2 === var$1[i]) {
            return i;
        }
    }
},
cbggg_GLVersion$Type = $rt_classWithoutFields(jl_Enum),
cbggg_GLVersion$Type_OpenGL = null,
cbggg_GLVersion$Type_GLES = null,
cbggg_GLVersion$Type_WebGL = null,
cbggg_GLVersion$Type_NONE = null,
cbggg_GLVersion$Type_$VALUES = null,
cbggg_GLVersion$Type__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbggg_GLVersion$Type;
    jl_Enum__init_(var$1, $rt_s(152), 0);
    cbggg_GLVersion$Type_OpenGL = var$1;
    var$1 = new cbggg_GLVersion$Type;
    jl_Enum__init_(var$1, $rt_s(153), 1);
    cbggg_GLVersion$Type_GLES = var$1;
    var$1 = new cbggg_GLVersion$Type;
    jl_Enum__init_(var$1, $rt_s(131), 2);
    cbggg_GLVersion$Type_WebGL = var$1;
    var$1 = new cbggg_GLVersion$Type;
    jl_Enum__init_(var$1, $rt_s(154), 3);
    cbggg_GLVersion$Type_NONE = var$1;
    var$2 = $rt_createArray(cbggg_GLVersion$Type, 4);
    var$3 = var$2.data;
    var$3[0] = cbggg_GLVersion$Type_OpenGL;
    var$3[1] = cbggg_GLVersion$Type_GLES;
    var$3[2] = cbggg_GLVersion$Type_WebGL;
    var$3[3] = var$1;
    cbggg_GLVersion$Type_$VALUES = var$2;
};
function cgxgbta_AssetLoadImpl$1() {
    jl_Object.call(this);
    this.$this$035 = null;
}
let cgxgbta_AssetLoadImpl$1_handleEvent$exported$0 = (var$1, var$2) => {
    var$1;
    var$2.preventDefault();
};
function cgxgbta_AssetLoadImpl$2() {
    jl_Object.call(this);
    this.$this$047 = null;
}
let cgxgbta_AssetLoadImpl$2_handleEvent$exported$0 = (var$1, var$2) => {
    var$1;
    var$2.preventDefault();
};
function cgxgbta_AssetLoadImpl$3() {
    let a = this; jl_Object.call(a);
    a.$val$config0 = null;
    a.$this$09 = null;
}
let cgxgbta_AssetLoadImpl$3_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$1 = var$1;
    var$2.preventDefault();
    var$3 = var$2.dataTransfer.files;
    var$2 = var$1.$this$09;
    var$1 = var$1.$val$config0;
    var$4 = var$3.length;
    if (var$4 > 0) {
        cbgu_Array__init_2(new cbgu_Array);
        var$5 = new Array();
        var$6 = 0;
        while (var$6 < var$4) {
            var$7 = var$3[var$6];
            var$8 = $rt_str(var$7.name);
            if (var$1.$windowListener.$acceptFileDropped(var$8)) {
                var$9 = new cgxgbta_AssetLoadImpl$getFile$lambda$_2_0;
                var$9.$_018 = var$2;
                var$9.$_18 = var$7;
                var$9.$_26 = var$8;
                var$5.push(new Promise(otji_JS_function(otji_JSWrapper_unwrap(var$9), "onExecute")));
            }
            var$6 = var$6 + 1 | 0;
        }
        var$3 = Promise.all(var$5);
        var$2 = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0;
        var$2.$_012 = var$1;
        var$1 = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1;
        var$2 = var$3.then(otji_JS_function(otji_JSWrapper_unwrap(var$2), "apply"), otji_JS_function(otji_JSWrapper_unwrap(var$1), "apply"));
        var$1 = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2;
        var$2.finally(otji_JS_function(otji_JSWrapper_unwrap(var$1), "get"));
    }
},
cbgu_ArraySupplier$_clinit_$lambda$_3_0 = $rt_classWithoutFields();
function jur_Pattern() {
    let a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount = 0;
    a.$consCount = 0;
    a.$start1 = null;
}
let jur_Pattern_matcher = ($this, $input) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    var$2 = new jur_Matcher;
    var$2.$leftBound0 = (-1);
    var$2.$rightBound0 = (-1);
    var$2.$pat = $this;
    var$2.$start4 = $this.$start1;
    var$2.$string1 = $input;
    var$2.$leftBound0 = 0;
    var$3 = $input.$nativeString.length;
    var$2.$rightBound0 = var$3;
    var$4 = new jur_MatchResultImpl;
    var$5 = var$2.$leftBound0;
    var$6 = $this.$globalGroupIndex;
    var$7 = $this.$compCount + 1 | 0;
    var$8 = $this.$consCount + 1 | 0;
    var$4.$previousMatch = (-1);
    var$6 = var$6 + 1 | 0;
    var$4.$groupCount = var$6;
    var$4.$groupBounds = $rt_createIntArray(var$6 * 2 | 0);
    var$9 = $rt_createIntArray(var$8);
    var$4.$consumers = var$9;
    ju_Arrays_fill(var$9, (-1));
    if (var$7 > 0)
        var$4.$compQuantCounters = $rt_createIntArray(var$7);
    ju_Arrays_fill(var$4.$groupBounds, (-1));
    jur_MatchResultImpl_reset(var$4, $input, var$5, var$3);
    var$2.$matchResult = var$4;
    var$4.$anchoringBounds = 1;
    return var$2;
},
jur_Pattern_split = ($this, $inputSeq, $limit) => {
    let $res, $mat, $index, $curPos, var$7, var$8, var$9;
    $res = ju_ArrayList__init_();
    $mat = jur_Pattern_matcher($this, $inputSeq);
    $index = 0;
    $curPos = 0;
    $inputSeq = $inputSeq;
    if (!$inputSeq.$nativeString.length) {
        var$7 = $rt_createArray(jl_String, 1);
        var$7.data[0] = $rt_s(8);
        return var$7;
    }
    while (jur_Matcher_find($mat)) {
        var$8 = $index + 1 | 0;
        if (var$8 >= $limit && $limit > 0)
            break;
        ju_ArrayList_add($res, jl_String_substring($inputSeq, $curPos, jur_Matcher_start($mat)));
        $curPos = jur_Matcher_end($mat);
        $index = var$8;
    }
    a: {
        ju_ArrayList_add($res, jl_String_substring($inputSeq, $curPos, $inputSeq.$nativeString.length));
        $index = $index + 1 | 0;
        if (!$limit)
            while (true) {
                $index = $index + (-1) | 0;
                if ($index < 0)
                    break;
                if ((ju_ArrayList_get($res, $index)).$nativeString.length)
                    break a;
                ju_ArrayList_remove($res, $index);
            }
    }
    if ($index < 0)
        $index = 0;
    var$7 = $rt_createArray(jl_String, $index);
    var$9 = var$7.data;
    $inputSeq = $res;
    $curPos = $inputSeq.$size3;
    $limit = var$9.length;
    if ($limit < $curPos)
        var$7 = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass(var$7)), $curPos);
    else
        while ($curPos < $limit) {
            var$9[$curPos] = null;
            $curPos = $curPos + 1 | 0;
        }
    $limit = 0;
    $res = ju_AbstractList_iterator($inputSeq);
    while (ju_AbstractList$1_hasNext($res)) {
        var$9 = var$7.data;
        $index = $limit + 1 | 0;
        var$9[$limit] = ju_AbstractList$1_next($res);
        $limit = $index;
    }
    return var$7;
},
jur_Pattern_pattern = $this => {
    return $this.$lexemes.$orig;
},
jur_Pattern_processExpression = ($this, $ch, $newFlags, $last) => {
    let $children, $saveFlags, $saveChangedFlags, $fSet, $child, var$9;
    $children = ju_ArrayList__init_();
    $saveFlags = $this.$flags;
    $saveChangedFlags = 0;
    if ($newFlags != $saveFlags)
        $this.$flags = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                $newFlags = $this.$consCount + 1 | 0;
                $this.$consCount = $newFlags;
                jur_FSet__init_($fSet, $newFlags);
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                $newFlags = $this.$consCount + 1 | 0;
                $this.$consCount = $newFlags;
                jur_FSet__init_($fSet, $newFlags);
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                $newFlags = $this.$consCount + 1 | 0;
                $this.$consCount = $newFlags;
                jur_FSet__init_($fSet, $newFlags);
                break a;
            default:
                $newFlags = $this.$globalGroupIndex + 1 | 0;
                $this.$globalGroupIndex = $newFlags;
                if ($last !== null)
                    $fSet = jur_FSet__init_0($newFlags);
                else {
                    $fSet = new jur_FinalSet;
                    jur_FSet__init_($fSet, 0);
                    $saveChangedFlags = 1;
                }
                $newFlags = $this.$globalGroupIndex;
                if ($newFlags <= (-1))
                    break a;
                if ($newFlags >= 10)
                    break a;
                $this.$backRefs.data[$newFlags] = $fSet;
                break a;
        }
        $fSet = new jur_AheadFSet;
        jur_FSet__init_($fSet, (-1));
    }
    while (true) {
        if (jur_Lexer_isLetter($this.$lexemes) && $this.$lexemes.$lookAhead == (-536870788)) {
            $last = jur_CharClass__init_0(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
            while (!jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes)) {
                $child = $this.$lexemes;
                var$9 = $child.$lookAhead;
                if (var$9 && var$9 != (-536870788) && var$9 != (-536870871))
                    break;
                jur_CharClass_add0($last, jur_Lexer_next($child));
                $child = $this.$lexemes;
                if ($child.$ch != (-536870788))
                    continue;
                jur_Lexer_next($child);
            }
            $child = jur_Pattern_processRangeSet($this, $last);
            $child.$setNext($fSet);
        } else if ($this.$lexemes.$ch == (-536870788)) {
            $child = jur_EmptySet__init_($fSet);
            jur_Lexer_next($this.$lexemes);
        } else {
            $child = jur_Pattern_processSubExpression($this, $fSet);
            $last = $this.$lexemes;
            if ($last.$ch == (-536870788))
                jur_Lexer_next($last);
        }
        if ($child !== null)
            ju_ArrayList_add($children, $child);
        if (jur_Lexer_isEmpty($this.$lexemes))
            break;
        if ($this.$lexemes.$ch == (-536870871))
            break;
    }
    if ($this.$lexemes.$lookBack == (-536870788))
        ju_ArrayList_add($children, jur_EmptySet__init_($fSet));
    if ($this.$flags != $saveFlags && !$saveChangedFlags) {
        $this.$flags = $saveFlags;
        $last = $this.$lexemes;
        $last.$flags0 = $saveFlags;
        $last.$lookAhead = $last.$ch;
        $last.$lookAheadST = $last.$curST;
        var$9 = $last.$curToc;
        $last.$index0 = var$9 + 1 | 0;
        $last.$lookAheadToc = var$9;
        jur_Lexer_movePointer($last);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            $last = new jur_PositiveLookAhead;
            jur_JointSet__init_($last, $children, $fSet);
            return $last;
        case -268435416:
            $last = new jur_NegativeLookAhead;
            jur_JointSet__init_($last, $children, $fSet);
            return $last;
        case -134217688:
            $last = new jur_PositiveLookBehind;
            jur_JointSet__init_($last, $children, $fSet);
            return $last;
        case -67108824:
            $last = new jur_NegativeLookBehind;
            jur_JointSet__init_($last, $children, $fSet);
            return $last;
        case -33554392:
            $last = new jur_AtomicJointSet;
            jur_JointSet__init_($last, $children, $fSet);
            return $last;
        default:
            switch ($children.$size3) {
                case 0:
                    break;
                case 1:
                    return jur_SingleSet__init_0(ju_ArrayList_get($children, 0), $fSet);
                default:
                    return jur_JointSet__init_0($children, $fSet);
            }
            return jur_EmptySet__init_($fSet);
    }
    $last = new jur_NonCapJointSet;
    jur_JointSet__init_($last, $children, $fSet);
    return $last;
},
jur_Pattern_processDecomposedChar = $this => {
    let $codePoints, $curSymb, $curSymbIndex, $codePointsHangul, var$5, var$6, $readCodePoints;
    $codePoints = $rt_createIntArray(4);
    $curSymb = (-1);
    $curSymbIndex = (-1);
    if (!jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes)) {
        $codePointsHangul = $codePoints.data;
        $curSymb = jur_Lexer_next($this.$lexemes);
        $codePointsHangul[0] = $curSymb;
        $curSymbIndex = $curSymb - 4352 | 0;
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        $codePoints = $codePointsHangul.data;
        $codePoints[0] = $curSymb & 65535;
        var$5 = $this.$lexemes;
        var$6 = var$5.$ch;
        $readCodePoints = var$6 - 4449 | 0;
        if ($readCodePoints >= 0 && $readCodePoints < 21) {
            $codePoints[1] = var$6 & 65535;
            jur_Lexer_next(var$5);
            var$5 = $this.$lexemes;
            var$6 = var$5.$ch;
            $curSymb = var$6 - 4519 | 0;
            if ($curSymb >= 0 && $curSymb < 28) {
                $codePoints[2] = var$6 & 65535;
                jur_Lexer_next(var$5);
                return jur_HangulDecomposedCharSet__init_($codePointsHangul, 3);
            }
            return jur_HangulDecomposedCharSet__init_($codePointsHangul, 2);
        }
        if (!jur_Pattern_hasFlag($this, 2))
            return jur_CharSet__init_($codePoints[0]);
        if (jur_Pattern_hasFlag($this, 64))
            return jur_UCICharSet__init_($codePoints[0]);
        return jur_CICharSet__init_($codePoints[0]);
    }
    $codePointsHangul = $codePoints.data;
    $curSymb = 1;
    while ($curSymb < 4 && !jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes)) {
        $readCodePoints = $curSymb + 1 | 0;
        $codePointsHangul[$curSymb] = jur_Lexer_next($this.$lexemes);
        $curSymb = $readCodePoints;
    }
    if ($curSymb == 1) {
        $readCodePoints = $codePointsHangul[0];
        if (!(jur_Lexer_singleDecompTable.$get($readCodePoints) == jur_Lexer_singleDecompTableSize ? 0 : 1))
            return jur_Pattern_processCharSet($this, $codePointsHangul[0]);
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_DecomposedCharSet__init_0($codePoints, $curSymb);
    if (jur_Pattern_hasFlag($this, 64)) {
        var$5 = new jur_UCIDecomposedCharSet;
        jur_DecomposedCharSet__init_(var$5, $codePoints, $curSymb);
        return var$5;
    }
    var$5 = new jur_CIDecomposedCharSet;
    jur_DecomposedCharSet__init_(var$5, $codePoints, $curSymb);
    return var$5;
},
jur_Pattern_processSubExpression = ($this, $last) => {
    let $cur, $term, var$4, var$5, var$6, $next, var$8;
    if (jur_Lexer_isLetter($this.$lexemes) && !jur_Lexer_isNextSpecial($this.$lexemes) && jur_Lexer_isLetter0($this.$lexemes.$lookAhead)) {
        if (jur_Pattern_hasFlag($this, 128)) {
            $cur = jur_Pattern_processDecomposedChar($this);
            if (!jur_Lexer_isEmpty($this.$lexemes)) {
                $term = $this.$lexemes;
                var$4 = $term.$ch;
                if (!(var$4 == (-536870871) && !($last instanceof jur_FinalSet)) && var$4 != (-536870788) && !jur_Lexer_isLetter($term))
                    $cur = jur_Pattern_processQuantifier($this, $last, $cur);
            }
        } else if (!jur_Lexer_isHighSurrogate0($this.$lexemes) && !jur_Lexer_isLowSurrogate0($this.$lexemes)) {
            $term = new jl_StringBuffer;
            jl_AbstractStringBuilder__init_($term);
            while (!jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes) && !jur_Lexer_isHighSurrogate0($this.$lexemes) && !jur_Lexer_isLowSurrogate0($this.$lexemes)) {
                if (!(!jur_Lexer_isNextSpecial($this.$lexemes) && !$this.$lexemes.$lookAhead) && !(!jur_Lexer_isNextSpecial($this.$lexemes) && jur_Lexer_isLetter0($this.$lexemes.$lookAhead))) {
                    var$5 = $this.$lexemes.$lookAhead;
                    if (var$5 != (-536870871) && (var$5 & (-2147418113)) != (-2147483608) && var$5 != (-536870788) && var$5 != (-536870876))
                        break;
                }
                var$4 = jur_Lexer_next($this.$lexemes);
                if (!jl_Character_isSupplementaryCodePoint(var$4))
                    jl_AbstractStringBuilder_append0($term, var$4 & 65535);
                else
                    jl_AbstractStringBuilder_append1($term, jl_Character_toChars(var$4));
            }
            if (!jur_Pattern_hasFlag($this, 2)) {
                $cur = new jur_SequenceSet;
                jur_LeafSet__init_($cur);
                $cur.$string = jl_AbstractStringBuilder_toString($term);
                var$4 = $term.$length1;
                $cur.$charCount0 = var$4;
                $cur.$leftToRight = jur_SequenceSet$IntHash__init_(var$4);
                $cur.$rightToLeft = jur_SequenceSet$IntHash__init_($cur.$charCount0);
                var$6 = 0;
                while (var$6 < ($cur.$charCount0 - 1 | 0)) {
                    jur_SequenceSet$IntHash_put($cur.$leftToRight, jl_String_charAt($cur.$string, var$6), ($cur.$charCount0 - var$6 | 0) - 1 | 0);
                    jur_SequenceSet$IntHash_put($cur.$rightToLeft, jl_String_charAt($cur.$string, ($cur.$charCount0 - var$6 | 0) - 1 | 0), ($cur.$charCount0 - var$6 | 0) - 1 | 0);
                    var$6 = var$6 + 1 | 0;
                }
            } else
                $cur = jur_Pattern_hasFlag($this, 64) ? jur_UCISequenceSet__init_0($term) : jur_CISequenceSet__init_0($term);
        } else
            $cur = jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
    } else {
        $term = $this.$lexemes;
        if ($term.$ch != (-536870871))
            $cur = jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
        else {
            if ($last instanceof jur_FinalSet)
                $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $term.$orig, $term.$curToc));
            $cur = jur_EmptySet__init_($last);
        }
    }
    a: {
        if (!jur_Lexer_isEmpty($this.$lexemes)) {
            var$4 = $this.$lexemes.$ch;
            if (!(var$4 == (-536870871) && !($last instanceof jur_FinalSet)) && var$4 != (-536870788)) {
                $next = jur_Pattern_processSubExpression($this, $last);
                if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
                    var$8 = $cur;
                    $term = var$8;
                    if (!$next.$first1($term.$innerSet)) {
                        $cur = new jur_UnifiedQuantifierSet;
                        $term = $term.$innerSet;
                        var$8 = var$8;
                        jur_LeafQuantifierSet__init_($cur, $term, var$8.$next1, var$8.$type5);
                        $cur.$innerSet.$setNext($cur);
                    }
                }
                if (($next.$getType1() & 65535) != 43)
                    $cur.$setNext($next);
                else
                    $cur.$setNext($next.$innerSet);
                break a;
            }
        }
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType1() & 65535) != 43)
        return $cur;
    return $cur.$innerSet;
},
jur_Pattern_processQuantifier = ($this, $last, $term) => {
    let $q, $quant, $q_0, var$6, $leaf;
    $q = $this.$lexemes;
    $quant = $q.$ch;
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                jur_Lexer_next($q);
                $q = new jur_PossessiveGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, $quant);
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483605:
                jur_Lexer_next($q);
                $q = new jur_PosPlusGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, (-2147483606));
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483585:
                jur_Lexer_next($q);
                $q = new jur_PosAltGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, (-536870849));
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q;
            case -2147483525:
                $q_0 = new jur_PosCompositeGroupQuantifierSet;
                $q = jur_Lexer_nextSpecial($q);
                var$6 = $this.$compCount + 1 | 0;
                $this.$compCount = var$6;
                jur_CompositeGroupQuantifierSet__init_($q_0, $q, $term, $last, (-536870849), var$6);
                jur_FSet_$callClinit();
                $term.$setNext(jur_FSet_posFSet);
                return $q_0;
            case -1073741782:
            case -1073741781:
                jur_Lexer_next($q);
                $q = new jur_ReluctantGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, $quant);
                $term.$setNext($q);
                return $q;
            case -1073741761:
                jur_Lexer_next($q);
                $q = new jur_RelAltGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q_0 = new jur_RelCompositeGroupQuantifierSet;
                $q = jur_Lexer_nextSpecial($q);
                $quant = $this.$compCount + 1 | 0;
                $this.$compCount = $quant;
                jur_CompositeGroupQuantifierSet__init_($q_0, $q, $term, $last, (-536870849), $quant);
                $term.$setNext($q_0);
                return $q_0;
            case -536870870:
            case -536870869:
                jur_Lexer_next($q);
                if ($term.$getType1() != (-2147483602)) {
                    $q = new jur_GroupQuantifierSet;
                    jur_QuantifierSet__init_($q, $term, $last, $quant);
                } else if (jur_Pattern_hasFlag($this, 32)) {
                    $q = new jur_DotAllQuantifierSet;
                    jur_QuantifierSet__init_($q, $term, $last, $quant);
                } else {
                    $q = new jur_DotQuantifierSet;
                    $q_0 = jur_AbstractLineTerminator_getInstance($this.$flags);
                    jur_QuantifierSet__init_($q, $term, $last, $quant);
                    $q.$lt = $q_0;
                }
                $term.$setNext($q);
                return $q;
            case -536870849:
                jur_Lexer_next($q);
                $q = new jur_AltGroupQuantifierSet;
                jur_QuantifierSet__init_($q, $term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q_0 = new jur_CompositeGroupQuantifierSet;
                $q = jur_Lexer_nextSpecial($q);
                $quant = $this.$compCount + 1 | 0;
                $this.$compCount = $quant;
                jur_CompositeGroupQuantifierSet__init_($q_0, $q, $term, $last, (-536870849), $quant);
                $term.$setNext($q_0);
                return $q_0;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            jur_Lexer_next($q);
            $q = new jur_PossessiveQuantifierSet;
            jur_LeafQuantifierSet__init_($q, $leaf, $last, $quant);
            $leaf.$next1 = $q;
            return $q;
        case -2147483585:
            jur_Lexer_next($q);
            $term = new jur_PossessiveAltQuantifierSet;
            jur_LeafQuantifierSet__init_($term, $leaf, $last, (-2147483585));
            return $term;
        case -2147483525:
            $term = new jur_PossessiveCompositeQuantifierSet;
            jur_CompositeQuantifierSet__init_($term, jur_Lexer_nextSpecial($q), $leaf, $last, (-2147483525));
            return $term;
        case -1073741782:
        case -1073741781:
            jur_Lexer_next($q);
            $q = new jur_ReluctantQuantifierSet;
            jur_LeafQuantifierSet__init_($q, $leaf, $last, $quant);
            $leaf.$next1 = $q;
            return $q;
        case -1073741761:
            jur_Lexer_next($q);
            $term = new jur_ReluctantAltQuantifierSet;
            jur_LeafQuantifierSet__init_($term, $leaf, $last, (-1073741761));
            return $term;
        case -1073741701:
            $term = new jur_ReluctantCompositeQuantifierSet;
            jur_CompositeQuantifierSet__init_($term, jur_Lexer_nextSpecial($q), $leaf, $last, (-1073741701));
            return $term;
        case -536870870:
        case -536870869:
            jur_Lexer_next($q);
            $q = jur_LeafQuantifierSet__init_0($leaf, $last, $quant);
            $leaf.$next1 = $q;
            return $q;
        case -536870849:
            jur_Lexer_next($q);
            $term = new jur_AltQuantifierSet;
            jur_LeafQuantifierSet__init_($term, $leaf, $last, (-536870849));
            return $term;
        case -536870789:
            return jur_CompositeQuantifierSet__init_0(jur_Lexer_nextSpecial($q), $leaf, $last, (-536870789));
        default:
    }
    return $term;
},
jur_Pattern_processTerminal = ($this, $last) => {
    let $term, var$3, var$4, $ch, $newFlags, $number, $negative, $cc;
    $term = null;
    var$3 = $last instanceof jur_FinalSet;
    while (true) {
        a: {
            var$4 = $this.$lexemes;
            $ch = var$4.$ch;
            if (($ch & (-2147418113)) == (-2147483608)) {
                jur_Lexer_next(var$4);
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags;
                    $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    var$4 = $this.$lexemes;
                    if (var$4.$ch != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), var$4.$orig, var$4.$curToc));
                    jur_Lexer_next(var$4);
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                break c;
                            case -2147483583:
                                break;
                            case -2147483582:
                                jur_Lexer_next(var$4);
                                $term = jur_WordBoundary__init_(0);
                                break a;
                            case -2147483577:
                                jur_Lexer_next(var$4);
                                $term = new jur_PreviousMatch;
                                jur_AbstractSet__init_($term);
                                break a;
                            case -2147483558:
                                jur_Lexer_next(var$4);
                                $term = new jur_EOLSet;
                                $number = $this.$consCount + 1 | 0;
                                $this.$consCount = $number;
                                jur_EOLSet__init_($term, $number);
                                break a;
                            case -2147483550:
                                jur_Lexer_next(var$4);
                                $term = jur_WordBoundary__init_(1);
                                break a;
                            case -2147483526:
                                jur_Lexer_next(var$4);
                                $term = new jur_EOISet;
                                jur_AbstractSet__init_($term);
                                break a;
                            case -536870876:
                                jur_Lexer_next(var$4);
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (jur_Pattern_hasFlag($this, 8)) {
                                    if (jur_Pattern_hasFlag($this, 1)) {
                                        $term = jur_UMultiLineEOLSet__init_($this.$consCount);
                                        break a;
                                    }
                                    $term = jur_MultiLineEOLSet__init_($this.$consCount);
                                    break a;
                                }
                                if (jur_Pattern_hasFlag($this, 1)) {
                                    $term = jur_UEOLSet__init_($this.$consCount);
                                    break a;
                                }
                                $term = jur_EOLSet__init_0($this.$consCount);
                                break a;
                            case -536870866:
                                jur_Lexer_next(var$4);
                                if (jur_Pattern_hasFlag($this, 32)) {
                                    $term = jur_DotAllSet__init_();
                                    break a;
                                }
                                $term = jur_DotSet__init_0(jur_AbstractLineTerminator_getInstance($this.$flags));
                                break a;
                            case -536870821:
                                jur_Lexer_next(var$4);
                                $negative = 0;
                                $term = $this.$lexemes;
                                if ($term.$ch == (-536870818)) {
                                    $negative = 1;
                                    jur_Lexer_next($term);
                                }
                                $term = jur_Pattern_processRangeSet($this, jur_Pattern_processRangeExpression($this, $negative));
                                $term.$setNext($last);
                                var$4 = $this.$lexemes;
                                if (var$4.$ch != (-536870819))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), var$4.$orig, var$4.$curToc));
                                jur_Lexer_setMode(var$4, 1);
                                jur_Lexer_next($this.$lexemes);
                                break a;
                            case -536870818:
                                jur_Lexer_next(var$4);
                                $this.$consCount = $this.$consCount + 1 | 0;
                                if (!jur_Pattern_hasFlag($this, 8)) {
                                    $term = new jur_SOLSet;
                                    jur_AbstractSet__init_($term);
                                    break a;
                                }
                                $term = new jur_MultiLineSOLSet;
                                var$4 = jur_AbstractLineTerminator_getInstance($this.$flags);
                                jur_AbstractSet__init_($term);
                                $term.$lt1 = var$4;
                                break a;
                            case 0:
                                $cc = var$4.$curST;
                                if ($cc !== null)
                                    $term = jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if (jur_Lexer_isEmpty(var$4)) {
                                        $term = jur_EmptySet__init_($last);
                                        break a;
                                    }
                                    $term = jur_CharSet__init_($ch & 65535);
                                }
                                jur_Lexer_next($this.$lexemes);
                                break a;
                            default:
                                break b;
                        }
                        jur_Lexer_next(var$4);
                        $term = new jur_SOLSet;
                        jur_AbstractSet__init_($term);
                        break a;
                    }
                    $number = ($ch & 2147483647) - 48 | 0;
                    if ($this.$globalGroupIndex < $number)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString(var$4), jur_Lexer_getIndex($this.$lexemes)));
                    jur_Lexer_next(var$4);
                    $this.$consCount = $this.$consCount + 1 | 0;
                    $term = !jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_($number, $this.$consCount) : jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_0($number, $this.$consCount) : jur_CIBackReferenceSet__init_0($number, $this.$consCount);
                    $this.$backRefs.data[$number].$isBackReferenced = 1;
                    $this.$needsBackRefReplacement = 1;
                    break a;
                }
                if ($ch >= 0 && !jur_Lexer_isSpecial(var$4)) {
                    $term = jur_Pattern_processCharSet($this, $ch);
                    jur_Lexer_next($this.$lexemes);
                } else if ($ch == (-536870788))
                    $term = jur_EmptySet__init_($last);
                else {
                    if ($ch != (-536870871)) {
                        $last = new jur_PatternSyntaxException;
                        $term = !jur_Lexer_isSpecial($this.$lexemes) ? jl_Character_toString($ch & 65535) : $this.$lexemes.$curST.$toString();
                        var$4 = $this.$lexemes;
                        jur_PatternSyntaxException__init_0($last, $term, var$4.$orig, var$4.$curToc);
                        $rt_throw($last);
                    }
                    if (var$3) {
                        $last = new jur_PatternSyntaxException;
                        var$4 = $this.$lexemes;
                        jur_PatternSyntaxException__init_0($last, $rt_s(8), var$4.$orig, var$4.$curToc);
                        $rt_throw($last);
                    }
                    $term = jur_EmptySet__init_($last);
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
},
jur_Pattern_processRangeExpression = ($this, $alt) => {
    let $res, $buffer, $intersection, $notClosed, $firstInClass, $cs, $cur, $negative, $$je;
    $res = jur_CharClass__init_0(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    jur_AbstractCharClass_setNegative($res, $alt);
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                if (jur_Lexer_isEmpty($this.$lexemes))
                    break a;
                $cs = $this.$lexemes;
                $alt = $cs.$ch;
                $notClosed = $alt == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($alt) {
                        case -536870874:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $buffer = jur_Lexer_next($this.$lexemes);
                            $cs = $this.$lexemes;
                            if ($cs.$ch != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if ($cs.$lookAhead == (-536870821)) {
                                jur_Lexer_next($cs);
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            jur_Lexer_next($cs);
                            if ($firstInClass) {
                                $res = jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if ($this.$lexemes.$ch == (-536870819))
                                break d;
                            jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass) {
                                $alt = $cs.$lookAhead;
                                if ($alt != (-536870819) && $alt != (-536870821) && $buffer >= 0) {
                                    jur_Lexer_next($cs);
                                    $cs = $this.$lexemes;
                                    $cur = $cs.$ch;
                                    if (jur_Lexer_isSpecial($cs))
                                        break c;
                                    if ($cur < 0) {
                                        $negative = $this.$lexemes.$lookAhead;
                                        if ($negative != (-536870819) && $negative != (-536870821) && $buffer >= 0)
                                            break c;
                                    }
                                    e: {
                                        try {
                                            if (jur_Lexer_isLetter0($cur))
                                                break e;
                                            $cur = $cur & 65535;
                                            break e;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_Exception) {
                                                break b;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                    try {
                                        jur_CharClass_add($res, $buffer, $cur);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    jur_Lexer_next($this.$lexemes);
                                    $buffer = (-1);
                                    break d;
                                }
                            }
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $buffer = 45;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                jur_CharClass_add0($res, $buffer);
                                $buffer = (-1);
                            }
                            jur_Lexer_next($this.$lexemes);
                            $negative = 0;
                            $cs = $this.$lexemes;
                            if ($cs.$ch == (-536870818)) {
                                jur_Lexer_next($cs);
                                $negative = 1;
                            }
                            if (!$intersection)
                                jur_CharClass_union($res, jur_Pattern_processRangeExpression($this, $negative));
                            else
                                jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870819:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $buffer = 93;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case -536870818:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $buffer = 94;
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                jur_CharClass_add0($res, $buffer);
                            $cs = $this.$lexemes.$curST;
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                jur_CharClass_add1($res, $cs);
                                $buffer = (-1);
                            }
                            jur_Lexer_next($this.$lexemes);
                            break d;
                        default:
                    }
                    if ($buffer >= 0)
                        jur_CharClass_add0($res, $buffer);
                    $buffer = jur_Lexer_next($this.$lexemes);
                }
                $firstInClass = 0;
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Pattern_pattern($this), $this.$lexemes.$curToc));
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Pattern_pattern($this), $this.$lexemes.$curToc));
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            jur_CharClass_add0($res, $buffer);
        return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Pattern_pattern($this), $this.$lexemes.$curToc - 1 | 0));
},
jur_Pattern_processCharSet = ($this, $ch) => {
    let $isSupplCodePoint, var$3, var$4;
    $isSupplCodePoint = jl_Character_isSupplementaryCodePoint($ch);
    if (jur_Pattern_hasFlag($this, 2)) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            return jur_CICharSet__init_($ch & 65535);
        }
        if (jur_Pattern_hasFlag($this, 64) && $ch > 128) {
            if ($isSupplCodePoint) {
                var$3 = new jur_UCISupplCharSet;
                jur_LeafSet__init_(var$3);
                var$3.$charCount0 = 2;
                var$3.$ch2 = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
                return var$3;
            }
            if (jur_Lexer_isLowSurrogate($ch))
                return jur_LowSurrogateCharSet__init_($ch & 65535);
            if (!jur_Lexer_isHighSurrogate($ch))
                return jur_UCICharSet__init_($ch & 65535);
            return jur_HighSurrogateCharSet__init_($ch & 65535);
        }
    }
    if (!$isSupplCodePoint) {
        if (jur_Lexer_isLowSurrogate($ch))
            return jur_LowSurrogateCharSet__init_($ch & 65535);
        if (!jur_Lexer_isHighSurrogate($ch))
            return jur_CharSet__init_($ch & 65535);
        return jur_HighSurrogateCharSet__init_($ch & 65535);
    }
    var$3 = new jur_SupplCharSet;
    jur_LeafSet__init_(var$3);
    var$3.$charCount0 = 2;
    var$3.$ch1 = $ch;
    var$4 = (jl_Character_toChars($ch)).data;
    var$3.$high0 = var$4[0];
    var$3.$low0 = var$4[1];
    return var$3;
},
jur_Pattern_processRangeSet = ($this, $charClass) => {
    let $surrogates, $lowHighSurrRangeSet, var$4;
    if (!jur_AbstractCharClass_hasLowHighSurrogates($charClass)) {
        if (!$charClass.$mayContainSupplCodepoints) {
            if ($charClass.$hasUCI())
                return jur_UCIRangeSet__init_($charClass);
            return jur_RangeSet__init_($charClass);
        }
        if (!$charClass.$hasUCI())
            return jur_SupplRangeSet__init_0($charClass);
        $surrogates = new jur_UCISupplRangeSet;
        jur_SupplRangeSet__init_($surrogates, $charClass);
        return $surrogates;
    }
    $surrogates = jur_AbstractCharClass_getSurrogates($charClass);
    $lowHighSurrRangeSet = new jur_LowHighSurrogateRangeSet;
    jur_AbstractSet__init_($lowHighSurrRangeSet);
    $lowHighSurrRangeSet.$surrChars = $surrogates;
    $lowHighSurrRangeSet.$alt3 = $surrogates.$alt;
    if (!$charClass.$mayContainSupplCodepoints) {
        if ($charClass.$hasUCI())
            return jur_CompositeRangeSet__init_(jur_UCIRangeSet__init_(jur_AbstractCharClass_getWithoutSurrogates($charClass)), $lowHighSurrRangeSet);
        return jur_CompositeRangeSet__init_(jur_RangeSet__init_(jur_AbstractCharClass_getWithoutSurrogates($charClass)), $lowHighSurrRangeSet);
    }
    if (!$charClass.$hasUCI())
        return jur_CompositeRangeSet__init_(jur_SupplRangeSet__init_0(jur_AbstractCharClass_getWithoutSurrogates($charClass)), $lowHighSurrRangeSet);
    $surrogates = new jur_CompositeRangeSet;
    var$4 = new jur_UCISupplRangeSet;
    jur_SupplRangeSet__init_(var$4, jur_AbstractCharClass_getWithoutSurrogates($charClass));
    jur_CompositeRangeSet__init_0($surrogates, var$4, $lowHighSurrRangeSet);
    return $surrogates;
},
jur_Pattern_compile = $pattern => {
    let var$2, var$3, var$4, var$5;
    if ($pattern === null) {
        $pattern = new jl_NullPointerException;
        jl_Exception__init_($pattern, $rt_s(155));
        $rt_throw($pattern);
    }
    jur_AbstractSet_counter = 1;
    var$2 = new jur_Pattern;
    var$2.$backRefs = $rt_createArray(jur_FSet, 10);
    var$2.$globalGroupIndex = (-1);
    var$2.$compCount = (-1);
    var$2.$consCount = (-1);
    var$3 = new jur_Lexer;
    var$3.$mode = 1;
    var$3.$orig = $pattern;
    var$3.$pattern0 = $rt_createCharArray($pattern.$nativeString.length + 2 | 0);
    jl_System_fastArraycopy(jl_String_toCharArray($pattern), 0, var$3.$pattern0, 0, $pattern.$nativeString.length);
    var$4 = var$3.$pattern0.data;
    var$5 = var$4.length;
    var$4[var$5 - 1 | 0] = 0;
    var$4[var$5 - 2 | 0] = 0;
    var$3.$patternFullLength = var$5;
    var$3.$flags0 = 0;
    jur_Lexer_movePointer(var$3);
    jur_Lexer_movePointer(var$3);
    var$2.$lexemes = var$3;
    var$2.$flags = 0;
    var$2.$start1 = jur_Pattern_processExpression(var$2, (-1), 0, null);
    if (jur_Lexer_isEmpty(var$2.$lexemes)) {
        if (var$2.$needsBackRefReplacement)
            var$2.$start1.$processSecondPass();
        return var$2;
    }
    $pattern = new jur_PatternSyntaxException;
    var$2 = var$2.$lexemes;
    jur_PatternSyntaxException__init_0($pattern, $rt_s(8), var$2.$orig, var$2.$curToc);
    $rt_throw($pattern);
},
jur_Pattern_getSupplement = $ch => {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
},
jur_Pattern_hasFlag = ($this, $flag) => {
    return ($this.$flags & $flag) != $flag ? 0 : 1;
},
jur_MatchResult = $rt_classWithoutFields(0);
function jur_Matcher() {
    let a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start4 = null;
    a.$string1 = null;
    a.$matchResult = null;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
    a.$appendPos = 0;
    a.$replacement0 = null;
    a.$processedRepl = null;
    a.$replacementParts = null;
}
let jur_Matcher_appendReplacement = ($this, $buffer, $replacement) => {
    let var$3, var$4;
    $this.$processedRepl = jur_Matcher_processReplacement($this, $replacement);
    $replacement = $this.$string1;
    var$3 = $this.$appendPos;
    var$4 = jur_Matcher_start($this);
    jl_StringBuffer_append($buffer, jl_String_substring($replacement, var$3, var$4));
    jl_AbstractStringBuilder_append($buffer, $this.$processedRepl);
    $this.$appendPos = jur_Matcher_end($this);
    return $this;
},
jur_Matcher_processReplacement = ($this, $replacement) => {
    let $res, $sb, $i, $repl, $index, $replacementPos, $nextBackSlashed, var$9, $gr, $group, $$je;
    $res = $this.$replacement0;
    if ($res !== null && jl_String_equals($res, $replacement)) {
        if ($this.$replacementParts === null)
            return $this.$processedRepl;
        $sb = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($sb);
        $i = 0;
        while (true) {
            $replacement = $this.$replacementParts;
            if ($i >= $replacement.$size3)
                break;
            jl_StringBuilder_append($sb, ju_ArrayList_get($replacement, $i));
            $i = $i + 1 | 0;
        }
        return jl_AbstractStringBuilder_toString($sb);
    }
    $this.$replacement0 = $replacement;
    $repl = jl_String_toCharArray($replacement);
    $res = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($res);
    $this.$replacementParts = null;
    $index = 0;
    $replacementPos = 0;
    $nextBackSlashed = 0;
    a: {
        b: while (true) {
            var$9 = $repl.data;
            $i = var$9.length;
            if ($index >= $i) {
                $replacement = $this.$replacementParts;
                if ($replacement !== null) {
                    $gr = $res.$length1;
                    if ($replacementPos != $gr)
                        ju_ArrayList_add($replacement, jl_StringBuilder_subSequence($res, $replacementPos, $gr));
                }
                return jl_AbstractStringBuilder_toString($res);
            }
            if (var$9[$index] == 92 && !$nextBackSlashed) {
                $nextBackSlashed = 1;
                $index = $index + 1 | 0;
            }
            c: {
                if ($nextBackSlashed) {
                    if ($index >= $i)
                        break b;
                    jl_AbstractStringBuilder_append0($res, var$9[$index]);
                    $nextBackSlashed = 0;
                } else if (var$9[$index] != 36)
                    jl_AbstractStringBuilder_append0($res, var$9[$index]);
                else {
                    if ($this.$replacementParts === null)
                        $this.$replacementParts = ju_ArrayList__init_();
                    d: {
                        try {
                            $replacement = new jl_String;
                            $index = $index + 1 | 0;
                            jl_String__init_4($replacement, $repl, $index, 1);
                            $gr = jl_Integer_parseInt($replacement);
                            if ($replacementPos == jl_StringBuilder_length($res))
                                break d;
                            ju_ArrayList_add($this.$replacementParts, jl_StringBuilder_subSequence($res, $replacementPos, jl_StringBuilder_length($res)));
                            $replacementPos = jl_StringBuilder_length($res);
                            break d;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    try {
                        ju_ArrayList_add($this.$replacementParts, jur_Matcher$1__init_0($this, $gr));
                        $group = jur_Matcher_group($this, $gr);
                        $replacementPos = $replacementPos + jl_String_length($group) | 0;
                        jl_StringBuilder_append0($res, $group);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            break a;
                        } else {
                            throw $$e;
                        }
                    }
                }
            }
            $index = $index + 1 | 0;
        }
        $replacement = new jl_IndexOutOfBoundsException;
        jl_Exception__init_0($replacement);
        $rt_throw($replacement);
    }
    $replacement = new jl_IllegalArgumentException;
    jl_Exception__init_($replacement, $rt_s(8));
    $rt_throw($replacement);
},
jur_Matcher_reset = $this => {
    let var$1;
    $this.$leftBound0 = 0;
    var$1 = $this.$string1.$nativeString.length;
    $this.$rightBound0 = var$1;
    jur_MatchResultImpl_reset($this.$matchResult, $this.$string1, $this.$leftBound0, var$1);
    $this.$appendPos = 0;
    $this.$replacement0 = null;
    $this.$matchResult.$previousMatch = (-1);
    return $this;
},
jur_Matcher_appendTail = ($this, $buffer) => {
    let var$2, var$3;
    var$2 = $this.$string1;
    var$3 = $this.$appendPos;
    var$2 = var$2;
    return jl_StringBuffer_append($buffer, jl_String_substring(var$2, var$3, var$2.$nativeString.length));
},
jur_Matcher_group = ($this, $group) => {
    let var$2, var$3, var$4;
    var$2 = $this.$matchResult;
    if (jur_MatchResultImpl_start(var$2, $group) < 0)
        var$2 = null;
    else {
        var$3 = var$2.$string4;
        var$4 = jur_MatchResultImpl_start(var$2, $group);
        $group = jur_MatchResultImpl_end(var$2, $group);
        var$2 = jl_String_substring(var$3, var$4, $group);
    }
    return var$2;
},
jur_Matcher_find0 = ($this, $start) => {
    let $stringLength, var$3, var$4;
    $stringLength = $this.$string1.$nativeString.length;
    if ($start >= 0 && $start <= $stringLength) {
        jur_MatchResultImpl_reset($this.$matchResult, null, (-1), (-1));
        var$3 = $this.$matchResult;
        var$3.$mode0 = 1;
        var$3.$startIndex = $start;
        $stringLength = var$3.$previousMatch;
        if ($stringLength < 0)
            $stringLength = $start;
        var$3.$previousMatch = $stringLength;
        $start = $this.$start4.$find0($start, $this.$string1, var$3);
        if ($start == (-1))
            $this.$matchResult.$hitEnd = 1;
        if ($start >= 0) {
            var$3 = $this.$matchResult;
            if (var$3.$valid1) {
                var$4 = var$3.$groupBounds.data;
                if (var$4[0] == (-1)) {
                    $stringLength = var$3.$startIndex;
                    var$4[0] = $stringLength;
                    var$4[1] = $stringLength;
                }
                var$3.$previousMatch = jur_MatchResultImpl_end0(var$3);
                return 1;
            }
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$3, jl_String_valueOf0($start));
    $rt_throw(var$3);
},
jur_Matcher_find = $this => {
    let $length, var$2, var$3;
    $length = $this.$string1.$nativeString.length;
    var$2 = $this.$matchResult;
    if (!var$2.$transparentBounds)
        $length = $this.$rightBound0;
    if (var$2.$startIndex >= 0 && var$2.$mode0 == 1) {
        var$2.$startIndex = jur_MatchResultImpl_end0(var$2);
        if (jur_MatchResultImpl_end0($this.$matchResult) == jur_MatchResultImpl_start($this.$matchResult, 0)) {
            var$2 = $this.$matchResult;
            var$2.$startIndex = var$2.$startIndex + 1 | 0;
        }
        var$3 = $this.$matchResult.$startIndex;
        return var$3 <= $length && jur_Matcher_find0($this, var$3) ? 1 : 0;
    }
    return jur_Matcher_find0($this, $this.$leftBound0);
},
jur_Matcher_start = $this => {
    return jur_MatchResultImpl_start($this.$matchResult, 0);
},
jur_Matcher_end = $this => {
    return jur_MatchResultImpl_end($this.$matchResult, 0);
},
otji_IDBFactory = $rt_classWithoutFields();
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0() {
    jl_Object.call(this);
    this.$_03 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$2 = var$1.$_03.result;
    var$3 = otji_IDBObjectStoreParameters_create$js_body$_1();
    var$2.createObjectStore("FILE_DATA", var$3);
},
otji_EventHandler = $rt_classWithoutFields(0);
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1() {
    let a = this; jl_Object.call(a);
    a.$_011 = null;
    a.$_17 = null;
    a.$_25 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1_handleEvent$exported$0 = var$1 => {
    let var$2, var$3, var$4, var$5;
    var$1 = var$1;
    var$2 = var$1.$_011;
    var$3 = var$1.$_17;
    var$1 = var$1.$_25;
    var$3 = var$3.result;
    var$2.$dataBase = var$3;
    var$4 = var$3.transaction("FILE_DATA", "readonly");
    var$5 = var$4.objectStore("FILE_DATA").openCursor();
    var$3 = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0;
    var$3.$_05 = var$2;
    var$3.$_12 = var$5;
    var$2 = otji_JS_function(otji_JSWrapper_unwrap(var$3), "handleEvent");
    var$5.onsuccess = var$2;
    var$2 = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1;
    var$2.$_014 = var$1;
    var$3 = otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent");
    var$4.oncomplete = var$3;
    var$2 = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2;
    var$2.$_016 = var$1;
    var$1 = otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent");
    var$5.onerror = var$1;
};
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2() {
    let a = this; jl_Object.call(a);
    a.$_010 = null;
    a.$_16 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2_handleEvent$exported$0 = var$1 => {
    let var$2, var$3, var$4;
    var$1 = var$1;
    var$2 = var$1.$_010;
    var$1 = var$1.$_16;
    var$3 = jl_System_err();
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(156)), var$2);
    var$4 = jl_AbstractStringBuilder_toString(var$4);
    otcic_JsConsolePrintStream_println(var$3, var$4);
    var$1.$delayInitCount = var$1.$delayInitCount - 1 | 0;
},
jur_RandomGenerator = $rt_classWithoutFields(0),
ju_Random = $rt_classWithoutFields(),
ju_Random_nextInt = $this => {
    return 4.294967296E9 * jl_Math_randomImpl() + (-2.147483648E9) | 0;
};
function cbgm_RandomXS128() {
    let a = this; ju_Random.call(a);
    a.$seed0 = Long_ZERO;
    a.$seed1 = Long_ZERO;
}
let cbgm_RandomXS128_murmurHash3 = $x => {
    $x = Long_mul(Long_xor($x, Long_shru($x, 33)), Long_create(3981806797, 4283543511));
    $x = Long_mul(Long_xor($x, Long_shru($x, 33)), Long_create(444984403, 3301882366));
    return Long_xor($x, Long_shru($x, 33));
},
ju_Enumeration = $rt_classWithoutFields(0),
ju_Hashtable$1 = $rt_classWithoutFields(),
ju_Iterator = $rt_classWithoutFields(0),
ju_Hashtable$2 = $rt_classWithoutFields();
function jur_MatchResultImpl() {
    let a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string4 = null;
    a.$groupCount = 0;
    a.$valid1 = 0;
    a.$leftBound = 0;
    a.$rightBound = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode0 = 0;
}
let jur_MatchResultImpl_setConsumed = ($this, $counter, $value) => {
    $this.$consumers.data[$counter] = $value;
},
jur_MatchResultImpl_getConsumed = ($this, $counter) => {
    return $this.$consumers.data[$counter];
},
jur_MatchResultImpl_end0 = $this => {
    return jur_MatchResultImpl_end($this, 0);
},
jur_MatchResultImpl_end = ($this, $group) => {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
},
jur_MatchResultImpl_setStart = ($this, $group, $offset) => {
    $this.$groupBounds.data[$group * 2 | 0] = $offset;
},
jur_MatchResultImpl_setEnd = ($this, $group, $offset) => {
    $this.$groupBounds.data[($group * 2 | 0) + 1 | 0] = $offset;
},
jur_MatchResultImpl_getStart = ($this, $group) => {
    return $this.$groupBounds.data[$group * 2 | 0];
},
jur_MatchResultImpl_getEnd = ($this, $group) => {
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
},
jur_MatchResultImpl_start = ($this, $group) => {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[$group * 2 | 0];
},
jur_MatchResultImpl_getEnterCounter = ($this, $setCounter) => {
    return $this.$compQuantCounters.data[$setCounter];
},
jur_MatchResultImpl_setEnterCounter = ($this, $setCounter, $value) => {
    $this.$compQuantCounters.data[$setCounter] = $value;
},
jur_MatchResultImpl_checkGroup = ($this, $group) => {
    let var$2;
    if (!$this.$valid1) {
        var$2 = new jl_IllegalStateException;
        jl_Exception__init_0(var$2);
        $rt_throw(var$2);
    }
    if ($group >= 0 && $group < $this.$groupCount)
        return;
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_(var$2, jl_String_valueOf0($group));
    $rt_throw(var$2);
},
jur_MatchResultImpl_reset = ($this, $newSequence, $leftBound, $rightBound) => {
    $this.$valid1 = 0;
    $this.$mode0 = 2;
    ju_Arrays_fill($this.$groupBounds, (-1));
    ju_Arrays_fill($this.$consumers, (-1));
    if ($newSequence !== null)
        $this.$string4 = $newSequence;
    if ($leftBound >= 0) {
        $this.$leftBound = $leftBound;
        $this.$rightBound = $rightBound;
    }
    $this.$startIndex = $this.$leftBound;
},
jl_NumberFormatException = $rt_classWithoutFields(jl_IllegalArgumentException),
jl_IllegalStateException = $rt_classWithoutFields(jl_RuntimeException),
jl_IllegalStateException__init_0 = ($this, $message) => {
    jl_Exception__init_($this, $message);
},
jl_IllegalStateException__init_ = var_0 => {
    let var_1 = new jl_IllegalStateException();
    jl_IllegalStateException__init_0(var_1, var_0);
    return var_1;
},
jl_NullPointerException = $rt_classWithoutFields(jl_RuntimeException);
function jur_AbstractSet() {
    let a = this; jl_Object.call(a);
    a.$next1 = null;
    a.$isSecondPassVisited = 0;
    a.$index6 = null;
    a.$type5 = 0;
}
let jur_AbstractSet_counter = 0,
jur_AbstractSet__init_ = $this => {
    let var$1;
    var$1 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$1 + 1 | 0;
    $this.$index6 = jl_Integer_toString(var$1);
},
jur_AbstractSet__init_0 = ($this, $n) => {
    let var$2;
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    $this.$index6 = jl_Integer_toString(var$2);
    $this.$next1 = $n;
},
jur_AbstractSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $length;
    $length = $matchResult.$rightBound;
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
},
jur_AbstractSet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
},
jur_AbstractSet_setType = ($this, $type) => {
    $this.$type5 = $type;
},
jur_AbstractSet_getType = $this => {
    return $this.$type5;
},
jur_AbstractSet_getQualifiedName = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$index6;
    var$2 = $this.$getName();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append0(var$3, 60);
    var$1 = jl_StringBuilder_append(var$3, var$1);
    jl_AbstractStringBuilder_append0(var$1, 58);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$1, var$2), 62);
    return jl_AbstractStringBuilder_toString(var$3);
},
jur_AbstractSet_toString = $this => {
    return jur_AbstractSet_getQualifiedName($this);
},
jur_AbstractSet_getNext = $this => {
    return $this.$next1;
},
jur_AbstractSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_AbstractSet_first = ($this, $set) => {
    return 1;
},
jur_AbstractSet_processBackRefReplacement = $this => {
    return null;
},
jur_AbstractSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$next1;
    if ($set !== null) {
        if (!$set.$isSecondPassVisited) {
            $set = $set.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next1.$isSecondPassVisited = 1;
                $this.$next1 = $set;
            }
            $this.$next1.$processSecondPass();
        } else if ($set instanceof jur_SingleSet && $set.$fSet.$isBackReferenced)
            $this.$next1 = $set.$next1;
    }
},
jur_AbstractSet__clinit_ = () => {
    jur_AbstractSet_counter = 1;
},
ju_Map$Entry = $rt_classWithoutFields(0);
function ju_MapEntry() {
    let a = this; jl_Object.call(a);
    a.$key = null;
    a.$value0 = null;
}
let ju_MapEntry__init_ = ($this, $theKey, $theValue) => {
    $this.$key = $theKey;
    $this.$value0 = $theValue;
},
ju_MapEntry__init_0 = (var_0, var_1) => {
    let var_2 = new ju_MapEntry();
    ju_MapEntry__init_(var_2, var_0, var_1);
    return var_2;
};
function ju_Hashtable$Entry() {
    let a = this; ju_MapEntry.call(a);
    a.$next3 = null;
    a.$hashcode = 0;
}
function jur_FSet() {
    let a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex0 = 0;
}
let jur_FSet_posFSet = null,
jur_FSet_$callClinit = () => {
    jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
    jur_FSet__clinit_();
},
jur_FSet__init_ = ($this, $groupIndex) => {
    jur_FSet_$callClinit();
    jur_AbstractSet__init_($this);
    $this.$groupIndex0 = $groupIndex;
},
jur_FSet__init_0 = var_0 => {
    let var_1 = new jur_FSet();
    jur_FSet__init_(var_1, var_0);
    return var_1;
},
jur_FSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $end, $shift;
    $end = jur_MatchResultImpl_getEnd($matchResult, $this.$groupIndex0);
    jur_MatchResultImpl_setEnd($matchResult, $this.$groupIndex0, $stringIndex);
    $shift = $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        jur_MatchResultImpl_setEnd($matchResult, $this.$groupIndex0, $end);
    return $shift;
},
jur_FSet_getGroupIndex = $this => {
    return $this.$groupIndex0;
},
jur_FSet_getName = $this => {
    return $rt_s(157);
},
jur_FSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_FSet__clinit_ = () => {
    let var$1;
    var$1 = new jur_FSet$PossessiveFSet;
    jur_AbstractSet__init_(var$1);
    jur_FSet_posFSet = var$1;
};
function jur_Lexer() {
    let a = this; jl_Object.call(a);
    a.$pattern0 = null;
    a.$flags0 = 0;
    a.$mode = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch = 0;
    a.$lookAhead = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index0 = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
let jur_Lexer_decompTable = null,
jur_Lexer_singleDecompTable = null,
jur_Lexer_singleDecompTableSize = 0,
jur_Lexer_setMode = ($this, $mode) => {
    if ($mode > 0 && $mode < 3)
        $this.$mode = $mode;
    if ($mode == 1) {
        $this.$lookAhead = $this.$ch;
        $this.$lookAheadST = $this.$curST;
        $this.$index0 = $this.$lookAheadToc;
        $this.$lookAheadToc = $this.$curToc;
        jur_Lexer_movePointer($this);
    }
},
jur_Lexer_isSpecial = $this => {
    return $this.$curST === null ? 0 : 1;
},
jur_Lexer_isNextSpecial = $this => {
    return $this.$lookAheadST === null ? 0 : 1;
},
jur_Lexer_next = $this => {
    jur_Lexer_movePointer($this);
    return $this.$lookBack;
},
jur_Lexer_nextSpecial = $this => {
    let $res;
    $res = $this.$curST;
    jur_Lexer_movePointer($this);
    return $res;
},
jur_Lexer_movePointer = $this => {
    let $reread, $nonCap, var$3, $behind, $mod, $cs, $negative, $$je;
    $this.$lookBack = $this.$ch;
    $this.$ch = $this.$lookAhead;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index0;
    while (true) {
        $reread = 0;
        $nonCap = $this.$index0 >= $this.$pattern0.data.length ? 0 : jur_Lexer_nextCodePoint($this);
        $this.$lookAhead = $nonCap;
        $this.$lookAheadST = null;
        if ($this.$mode == 4) {
            if ($nonCap != 92)
                return;
            $nonCap = $this.$index0;
            var$3 = $this.$pattern0.data;
            $nonCap = $nonCap >= var$3.length ? 0 : var$3[jur_Lexer_nextIndex($this)];
            $this.$lookAhead = $nonCap;
            switch ($nonCap) {
                case 69:
                    break;
                default:
                    $this.$lookAhead = 92;
                    $this.$index0 = $this.$prevNW;
                    return;
            }
            $this.$mode = $this.$savedMode;
            $this.$lookAhead = $this.$index0 > ($this.$pattern0.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
        }
        a: {
            $nonCap = $this.$lookAhead;
            if ($nonCap != 92) {
                $behind = $this.$mode;
                if ($behind == 1)
                    switch ($nonCap) {
                        case 36:
                            $this.$lookAhead = (-536870876);
                            break a;
                        case 40:
                            if ($this.$pattern0.data[$this.$index0] != 63) {
                                $this.$lookAhead = (-2147483608);
                                break a;
                            }
                            jur_Lexer_nextIndex($this);
                            $nonCap = $this.$pattern0.data[$this.$index0];
                            $behind = 0;
                            while (true) {
                                b: {
                                    if ($behind) {
                                        $behind = 0;
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 61:
                                                $this.$lookAhead = (-134217688);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString($this), $this.$index0));
                                        }
                                        $this.$lookAhead = (-67108824);
                                        jur_Lexer_nextIndex($this);
                                    } else {
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 60:
                                                jur_Lexer_nextIndex($this);
                                                $nonCap = $this.$pattern0.data[$this.$index0];
                                                $behind = 1;
                                                break b;
                                            case 61:
                                                $this.$lookAhead = (-536870872);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            case 62:
                                                $this.$lookAhead = (-33554392);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $mod = jur_Lexer_readFlags($this);
                                                $this.$lookAhead = $mod;
                                                if ($mod < 256) {
                                                    $this.$flags0 = $mod;
                                                    $mod = $mod << 16;
                                                    $this.$lookAhead = $mod;
                                                    $this.$lookAhead = (-1073741784) | $mod;
                                                    break b;
                                                }
                                                $mod = $mod & 255;
                                                $this.$lookAhead = $mod;
                                                $this.$flags0 = $mod;
                                                $mod = $mod << 16;
                                                $this.$lookAhead = $mod;
                                                $this.$lookAhead = (-16777176) | $mod;
                                                break b;
                                        }
                                        $this.$lookAhead = (-268435416);
                                        jur_Lexer_nextIndex($this);
                                    }
                                }
                                if (!$behind)
                                    break;
                            }
                            break a;
                        case 41:
                            $this.$lookAhead = (-536870871);
                            break a;
                        case 42:
                        case 43:
                        case 63:
                            $behind = $this.$index0;
                            var$3 = $this.$pattern0.data;
                            switch ($behind >= var$3.length ? 42 : var$3[$behind]) {
                                case 43:
                                    $this.$lookAhead = $nonCap | (-2147483648);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                case 63:
                                    $this.$lookAhead = $nonCap | (-1073741824);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                default:
                            }
                            $this.$lookAhead = $nonCap | (-536870912);
                            break a;
                        case 46:
                            $this.$lookAhead = (-536870866);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            jur_Lexer_setMode($this, 2);
                            break a;
                        case 93:
                            if ($behind != 2)
                                break a;
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        case 123:
                            $this.$lookAheadST = jur_Lexer_processQuantifier($this, $nonCap);
                            break a;
                        case 124:
                            $this.$lookAhead = (-536870788);
                            break a;
                        default:
                    }
                else if ($behind == 2)
                    switch ($nonCap) {
                        case 38:
                            $this.$lookAhead = (-536870874);
                            break a;
                        case 45:
                            $this.$lookAhead = (-536870867);
                            break a;
                        case 91:
                            $this.$lookAhead = (-536870821);
                            break a;
                        case 93:
                            $this.$lookAhead = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead = (-536870818);
                            break a;
                        default:
                    }
            } else {
                $nonCap = $this.$index0 >= ($this.$pattern0.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                c: {
                    $this.$lookAhead = $nonCap;
                    switch ($nonCap) {
                        case -1:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString($this), $this.$index0));
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 118:
                            break;
                        case 48:
                            $this.$lookAhead = jur_Lexer_readOctals($this);
                            break a;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            if ($this.$mode != 1)
                                break a;
                            $this.$lookAhead = (-2147483648) | $nonCap;
                            break a;
                        case 65:
                            $this.$lookAhead = (-2147483583);
                            break a;
                        case 66:
                            $this.$lookAhead = (-2147483582);
                            break a;
                        case 67:
                        case 69:
                        case 70:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 88:
                        case 89:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 109:
                        case 111:
                        case 113:
                        case 121:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString($this), $this.$index0));
                        case 68:
                        case 83:
                        case 87:
                        case 100:
                        case 115:
                        case 119:
                            $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_($this.$pattern0, $this.$prevNW, 1), 0);
                            $this.$lookAhead = 0;
                            break a;
                        case 71:
                            $this.$lookAhead = (-2147483577);
                            break a;
                        case 80:
                        case 112:
                            break c;
                        case 81:
                            $this.$savedMode = $this.$mode;
                            $this.$mode = 4;
                            $reread = 1;
                            break a;
                        case 90:
                            $this.$lookAhead = (-2147483558);
                            break a;
                        case 97:
                            $this.$lookAhead = 7;
                            break a;
                        case 98:
                            $this.$lookAhead = (-2147483550);
                            break a;
                        case 99:
                            $nonCap = $this.$index0;
                            var$3 = $this.$pattern0.data;
                            if ($nonCap >= (var$3.length - 2 | 0))
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString($this), $this.$index0));
                            $this.$lookAhead = var$3[jur_Lexer_nextIndex($this)] & 31;
                            break a;
                        case 101:
                            $this.$lookAhead = 27;
                            break a;
                        case 102:
                            $this.$lookAhead = 12;
                            break a;
                        case 110:
                            $this.$lookAhead = 10;
                            break a;
                        case 114:
                            $this.$lookAhead = 13;
                            break a;
                        case 116:
                            $this.$lookAhead = 9;
                            break a;
                        case 117:
                            $this.$lookAhead = jur_Lexer_readHex($this, 4);
                            break a;
                        case 120:
                            $this.$lookAhead = jur_Lexer_readHex($this, 2);
                            break a;
                        case 122:
                            $this.$lookAhead = (-2147483526);
                            break a;
                        default:
                    }
                    break a;
                }
                $cs = jur_Lexer_parseCharClassName($this);
                $negative = 0;
                if ($this.$lookAhead == 80)
                    $negative = 1;
                try {
                    $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ju_MissingResourceException) {
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), jur_Lexer_toString($this), $this.$index0));
                    } else {
                        throw $$e;
                    }
                }
                $this.$lookAhead = 0;
            }
        }
        if ($reread)
            continue;
        else
            break;
    }
},
jur_Lexer_parseCharClassName = $this => {
    let $sb, $ch, var$3, var$4, $res, var$6;
    $sb = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0($sb, 10);
    $ch = $this.$index0;
    var$3 = $this.$pattern0;
    var$4 = var$3.data;
    if ($ch < (var$4.length - 2 | 0)) {
        if (var$4[$ch] != 123) {
            $sb = jl_String__init_(var$3, jur_Lexer_nextIndex($this), 1);
            $res = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($res);
            jl_StringBuilder_append(jl_StringBuilder_append($res, $rt_s(158)), $sb);
            return jl_AbstractStringBuilder_toString($res);
        }
        jur_Lexer_nextIndex($this);
        $ch = 0;
        a: {
            while (true) {
                var$6 = $this.$index0;
                var$3 = $this.$pattern0.data;
                if (var$6 >= (var$3.length - 2 | 0))
                    break;
                $ch = var$3[jur_Lexer_nextIndex($this)];
                if ($ch == 125)
                    break a;
                jl_AbstractStringBuilder_append0($sb, $ch);
            }
        }
        if ($ch != 125)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index0));
    }
    if (!$sb.$length1)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index0));
    $res = jl_AbstractStringBuilder_toString($sb);
    if ($res.$nativeString.length == 1) {
        $sb = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($sb);
        jl_StringBuilder_append(jl_StringBuilder_append($sb, $rt_s(158)), $res);
        return jl_AbstractStringBuilder_toString($sb);
    }
    b: {
        c: {
            if ($res.$nativeString.length > 3) {
                if (jl_String_startsWith($res, $rt_s(158)))
                    break c;
                if (jl_String_startsWith($res, $rt_s(159)))
                    break c;
            }
            break b;
        }
        $res = jl_String_substring0($res, 2);
    }
    return $res;
},
jur_Lexer_processQuantifier = ($this, $ch) => {
    let $sb, $min, $max, $mod, var$6, $$je;
    $sb = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0($sb, 4);
    $min = (-1);
    $max = 2147483647;
    a: {
        while (true) {
            $mod = $this.$index0;
            var$6 = $this.$pattern0.data;
            if ($mod >= var$6.length)
                break a;
            $ch = var$6[jur_Lexer_nextIndex($this)];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt0(jl_StringBuilder_toString($sb), 10);
                    jl_StringBuilder_delete($sb, 0, jl_StringBuilder_length($sb));
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            jl_AbstractStringBuilder_append0($sb, $ch & 65535);
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index0));
    }
    if ($ch != 125)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index0));
    if ($sb.$length1 > 0)
        b: {
            try {
                $max = jl_Integer_parseInt0(jl_StringBuilder_toString($sb), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index0));
        }
    else if ($min < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index0));
    if (($min | $max | ($max - $min | 0)) < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index0));
    $ch = $this.$index0;
    var$6 = $this.$pattern0.data;
    $mod = $ch >= var$6.length ? 42 : var$6[$ch];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead = (-2147483525);
                jur_Lexer_nextIndex($this);
                break c;
            case 63:
                $this.$lookAhead = (-1073741701);
                jur_Lexer_nextIndex($this);
                break c;
            default:
        }
        $this.$lookAhead = (-536870789);
    }
    $sb = new jur_Quantifier;
    $sb.$min3 = $min;
    $sb.$max2 = $max;
    return $sb;
},
jur_Lexer_toString = $this => {
    return $this.$orig;
},
jur_Lexer_isEmpty = $this => {
    return !$this.$ch && !$this.$lookAhead && $this.$index0 == $this.$patternFullLength && !jur_Lexer_isSpecial($this) ? 1 : 0;
},
jur_Lexer_isLetter0 = $ch => {
    return $ch < 0 ? 0 : 1;
},
jur_Lexer_isLetter = $this => {
    return !jur_Lexer_isEmpty($this) && !jur_Lexer_isSpecial($this) && jur_Lexer_isLetter0($this.$ch) ? 1 : 0;
},
jur_Lexer_isHighSurrogate0 = $this => {
    let var$1;
    var$1 = $this.$ch;
    return var$1 <= 56319 && var$1 >= 55296 ? 1 : 0;
},
jur_Lexer_isLowSurrogate0 = $this => {
    let var$1;
    var$1 = $this.$ch;
    return var$1 <= 57343 && var$1 >= 56320 ? 1 : 0;
},
jur_Lexer_isHighSurrogate = $ch => {
    return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
},
jur_Lexer_isLowSurrogate = $ch => {
    return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
},
jur_Lexer_readHex = ($this, $max) => {
    let $st, $length, $i, var$5, $$je;
    $st = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0($st, $max);
    $length = $this.$pattern0.data.length - 2 | 0;
    $i = 0;
    while (true) {
        var$5 = $rt_compare($i, $max);
        if (var$5 >= 0)
            break;
        if ($this.$index0 >= $length)
            break;
        jl_AbstractStringBuilder_append0($st, $this.$pattern0.data[jur_Lexer_nextIndex($this)]);
        $i = $i + 1 | 0;
    }
    if (!var$5)
        a: {
            try {
                $max = jl_Integer_parseInt0(jl_StringBuilder_toString($st), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $max;
        }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index0));
},
jur_Lexer_readOctals = $this => {
    let $max, $i, var$3, $length, $res, var$6;
    $max = 3;
    $i = 1;
    var$3 = $this.$pattern0.data;
    $length = var$3.length - 2 | 0;
    $res = jl_Character_digit(var$3[$this.$index0], 8);
    switch ($res) {
        case -1:
            break;
        default:
            if ($res > 3)
                $max = 2;
            jur_Lexer_nextIndex($this);
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    var$6 = $this.$index0;
                    if (var$6 >= $length)
                        break a;
                    var$6 = jl_Character_digit($this.$pattern0.data[var$6], 8);
                    if (var$6 < 0)
                        break;
                    $res = ($res * 8 | 0) + var$6 | 0;
                    jur_Lexer_nextIndex($this);
                    $i = $i + 1 | 0;
                }
            }
            return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, $this.$index0));
},
jur_Lexer_readFlags = $this => {
    let $pos, $res, var$3, var$4;
    $pos = 1;
    $res = $this.$flags0;
    a: while (true) {
        var$3 = $this.$index0;
        var$4 = $this.$pattern0.data;
        if (var$3 >= var$4.length)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, var$3));
        b: {
            c: {
                switch (var$4[var$3]) {
                    case 41:
                        jur_Lexer_nextIndex($this);
                        return $res | 256;
                    case 45:
                        if (!$pos)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(8), $this.$orig, var$3));
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        jur_Lexer_nextIndex($this);
    }
    jur_Lexer_nextIndex($this);
    return $res;
},
jur_Lexer_nextIndex = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = $this.$index0;
    $this.$prevNW = var$1;
    if (!($this.$flags0 & 4))
        $this.$index0 = var$1 + 1 | 0;
    else {
        var$2 = $this.$pattern0.data.length - 2 | 0;
        $this.$index0 = var$1 + 1 | 0;
        a: while (true) {
            var$3 = $this.$index0;
            if (var$3 < var$2 && jl_Character_isWhitespace($this.$pattern0.data[var$3])) {
                $this.$index0 = $this.$index0 + 1 | 0;
                continue;
            }
            var$3 = $this.$index0;
            if (var$3 >= var$2)
                break;
            var$4 = $this.$pattern0.data;
            if (var$4[var$3] != 35)
                break;
            $this.$index0 = var$3 + 1 | 0;
            while (true) {
                var$5 = $this.$index0;
                if (var$5 >= var$2)
                    continue a;
                var$1 = var$4[var$5];
                if (var$1 != 10 && var$1 != 13 && var$1 != 133 && (var$1 | 1) != 8233 ? 0 : 1)
                    continue a;
                $this.$index0 = var$5 + 1 | 0;
            }
        }
    }
    return $this.$prevNW;
},
jur_Lexer_getDecomposition = $ch => {
    return jur_Lexer_decompTable.$get7($ch);
},
jur_Lexer_nextCodePoint = $this => {
    let $high, $lowExpectedIndex, var$3, $low;
    $high = $this.$pattern0.data[jur_Lexer_nextIndex($this)];
    if (jl_Character_isHighSurrogate($high)) {
        $lowExpectedIndex = $this.$prevNW + 1 | 0;
        var$3 = $this.$pattern0.data;
        if ($lowExpectedIndex < var$3.length) {
            $low = var$3[$lowExpectedIndex];
            if (jl_Character_isLowSurrogate($low)) {
                jur_Lexer_nextIndex($this);
                return jl_Character_toCodePoint($high, $low);
            }
        }
    }
    return $high;
},
jur_Lexer_getIndex = $this => {
    return $this.$curToc;
};
function jur_PatternSyntaxException() {
    let a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern1 = null;
    a.$index5 = 0;
}
let jur_PatternSyntaxException__init_0 = ($this, $description, $pattern, $index) => {
    jl_Exception__init_0($this);
    $this.$index5 = (-1);
    $this.$desc = $description;
    $this.$pattern1 = $pattern;
    $this.$index5 = $index;
},
jur_PatternSyntaxException__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jur_PatternSyntaxException();
    jur_PatternSyntaxException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PatternSyntaxException_getMessage = $this => {
    let $filler, var$2, $temp, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $filler = $rt_s(8);
    var$2 = $this.$index5;
    if (var$2 >= 1) {
        $temp = $rt_createCharArray(var$2);
        var$4 = $temp.data;
        var$2 = 0;
        var$5 = var$4.length;
        if (var$2 > var$5) {
            $filler = new jl_IllegalArgumentException;
            jl_Exception__init_0($filler);
            $rt_throw($filler);
        }
        while (var$2 < var$5) {
            var$6 = var$2 + 1 | 0;
            var$4[var$2] = 32;
            var$2 = var$6;
        }
        $filler = jl_String__init_0($temp);
    }
    var$7 = $this.$desc;
    var$8 = $this.$pattern1;
    if (var$8 !== null && var$8.$nativeString.length) {
        var$9 = $this.$index5;
        var$8 = $this.$pattern1;
        var$10 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$10);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(var$10, var$9), $rt_s(25)), var$8), $rt_s(25)), $filler);
        $filler = jl_AbstractStringBuilder_toString(var$10);
    } else
        $filler = $rt_s(8);
    var$8 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$8);
    jl_StringBuilder_append(jl_StringBuilder_append(var$8, var$7), $filler);
    return jl_AbstractStringBuilder_toString(var$8);
},
ju_Arrays = $rt_classWithoutFields(),
ju_Arrays_copyOf1 = ($array, $length) => {
    let $result, var$4, $sz, $i;
    $array = $array.data;
    $result = $rt_createCharArray($length);
    var$4 = $result.data;
    $sz = jl_Math_min($length, $array.length);
    $i = 0;
    while ($i < $sz) {
        var$4[$i] = $array[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOf0 = ($array, $length) => {
    let $result, var$4, $sz, $i;
    $array = $array.data;
    $result = $rt_createByteArray($length);
    var$4 = $result.data;
    $sz = jl_Math_min($length, $array.length);
    $i = 0;
    while ($i < $sz) {
        var$4[$i] = $array[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOf = ($original, $newLength) => {
    let var$3, $result, $sz, $i;
    var$3 = $original.data;
    $result = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($original)), $newLength);
    $sz = jl_Math_min($newLength, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_fill2 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6, var$7;
    if ($fromIndex > $toIndex) {
        var$5 = new jl_IllegalArgumentException;
        jl_Exception__init_0(var$5);
        $rt_throw(var$5);
    }
    while ($fromIndex < $toIndex) {
        var$6 = $a.data;
        var$7 = $fromIndex + 1 | 0;
        var$6[$fromIndex] = $val;
        $fromIndex = var$7;
    }
},
ju_Arrays_fill = ($a, $val) => {
    ju_Arrays_fill2($a, 0, $a.data.length, $val);
},
ju_Arrays_fill0 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6;
    if ($fromIndex > $toIndex) {
        $val = new jl_IllegalArgumentException;
        jl_Exception__init_0($val);
        $rt_throw($val);
    }
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
},
ju_Arrays_fill1 = ($a, $val) => {
    ju_Arrays_fill0($a, 0, $a.data.length, $val);
},
ju_SequencedCollection = $rt_classWithoutFields(0),
ju_List = $rt_classWithoutFields(0);
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount = 0;
}
let ju_AbstractList_iterator = $this => {
    let var$1;
    var$1 = new ju_AbstractList$1;
    var$1.$this$014 = $this;
    var$1.$modCount1 = $this.$modCount;
    var$1.$size13 = $this.$size3;
    var$1.$removeIndex0 = (-1);
    return var$1;
},
ju_RandomAccess = $rt_classWithoutFields(0);
function ju_ArrayList() {
    let a = this; ju_AbstractList.call(a);
    a.$array1 = null;
    a.$size3 = 0;
}
let ju_ArrayList__init_0 = $this => {
    $this.$array1 = $rt_createArray(jl_Object, 10);
},
ju_ArrayList__init_ = () => {
    let var_0 = new ju_ArrayList();
    ju_ArrayList__init_0(var_0);
    return var_0;
},
ju_ArrayList_ensureCapacity = ($this, $minCapacity) => {
    let var$2, $newLength;
    var$2 = $this.$array1.data.length;
    if (var$2 < $minCapacity) {
        $newLength = var$2 >= 1073741823 ? 2147483647 : jl_Math_max($minCapacity, jl_Math_max(var$2 * 2 | 0, 5));
        $this.$array1 = ju_Arrays_copyOf($this.$array1, $newLength);
    }
},
ju_ArrayList_get = ($this, $index) => {
    ju_ArrayList_checkIndex($this, $index);
    return $this.$array1.data[$index];
},
ju_ArrayList_add = ($this, $element) => {
    let var$2, var$3;
    ju_ArrayList_ensureCapacity($this, $this.$size3 + 1 | 0);
    var$2 = $this.$array1.data;
    var$3 = $this.$size3;
    $this.$size3 = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount = $this.$modCount + 1 | 0;
    return 1;
},
ju_ArrayList_remove = ($this, $i) => {
    let var$2, $old, var$4, $i_0;
    ju_ArrayList_checkIndex($this, $i);
    var$2 = $this.$array1.data;
    $old = var$2[$i];
    var$4 = $this.$size3 - 1 | 0;
    $this.$size3 = var$4;
    while ($i < var$4) {
        $i_0 = $i + 1 | 0;
        var$2[$i] = var$2[$i_0];
        $i = $i_0;
    }
    var$2[var$4] = null;
    $this.$modCount = $this.$modCount + 1 | 0;
    return $old;
},
ju_ArrayList_checkIndex = ($this, $index) => {
    let var$2;
    if ($index >= 0 && $index < $this.$size3)
        return;
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$2);
    $rt_throw(var$2);
},
jur_NonCapFSet = $rt_classWithoutFields(jur_FSet),
jur_NonCapFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr;
    $gr = $this.$groupIndex0;
    jur_MatchResultImpl_setConsumed($matchResult, $gr, $stringIndex - jur_MatchResultImpl_getConsumed($matchResult, $gr) | 0);
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_NonCapFSet_getName = $this => {
    return $rt_s(160);
},
jur_NonCapFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_AheadFSet = $rt_classWithoutFields(jur_FSet),
jur_AheadFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    return $stringIndex;
},
jur_AheadFSet_getName = $this => {
    return $rt_s(161);
},
jur_BehindFSet = $rt_classWithoutFields(jur_FSet),
jur_BehindFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if (jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex0) != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
},
jur_BehindFSet_getName = $this => {
    return $rt_s(162);
};
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index8 = 0;
}
let jur_AtomicFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr;
    $gr = $this.$groupIndex0;
    jur_MatchResultImpl_setConsumed($matchResult, $gr, $stringIndex - jur_MatchResultImpl_getConsumed($matchResult, $gr) | 0);
    $this.$index8 = $stringIndex;
    return $stringIndex;
},
jur_AtomicFSet_getName = $this => {
    return $rt_s(163);
},
jur_AtomicFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_FinalSet = $rt_classWithoutFields(jur_FSet),
jur_FinalSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($matchResult.$mode0 != 1 && $stringIndex != $matchResult.$rightBound)
        return (-1);
    $matchResult.$valid1 = 1;
    jur_MatchResultImpl_setEnd($matchResult, 0, $stringIndex);
    return $stringIndex;
},
jur_FinalSet_getName = $this => {
    return $rt_s(164);
};
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount0 = 0;
}
let jur_LeafSet__init_ = $this => {
    jur_AbstractSet__init_($this);
    $this.$charCount0 = 1;
},
jur_LeafSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    if (($stringIndex + $this.$charCount() | 0) > $matchResult.$rightBound) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next1.$matches($stringIndex + $shift | 0, $testString, $matchResult);
},
jur_LeafSet_charCount = $this => {
    return $this.$charCount0;
},
jur_LeafSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_EmptySet = $rt_classWithoutFields(jur_LeafSet),
jur_EmptySet__init_0 = ($this, $next) => {
    jur_AbstractSet__init_0($this, $next);
    $this.$charCount0 = 1;
    $this.$type5 = 1;
    $this.$charCount0 = 0;
},
jur_EmptySet__init_ = var_0 => {
    let var_1 = new jur_EmptySet();
    jur_EmptySet__init_0(var_1, var_0);
    return var_1;
},
jur_EmptySet_accepts = ($this, $stringIndex, $testString) => {
    return 0;
},
jur_EmptySet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $startStr, var$6, $high;
    $strLength = $matchResult.$rightBound;
    $startStr = $matchResult.$leftBound;
    var$6 = $testString;
    while (true) {
        $high = $rt_compare($stringIndex, $strLength);
        if ($high > 0)
            return (-1);
        if ($high < 0 && jl_Character_isLowSurrogate(jl_String_charAt(var$6, $stringIndex)) && $stringIndex > $startStr && jl_Character_isHighSurrogate(jl_String_charAt(var$6, $stringIndex - 1 | 0))) {
            $stringIndex = $stringIndex + 1 | 0;
            continue;
        }
        if ($this.$next1.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
},
jur_EmptySet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    let $strLength, $startStr, var$7;
    $strLength = $matchResult.$rightBound;
    $startStr = $matchResult.$leftBound;
    var$7 = $testString;
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($startSearch < $strLength && jl_Character_isLowSurrogate(jl_String_charAt(var$7, $startSearch)) && $startSearch > $startStr && jl_Character_isHighSurrogate(jl_String_charAt(var$7, $startSearch - 1 | 0))) {
            $startSearch = $startSearch + (-1) | 0;
            continue;
        }
        if ($this.$next1.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
},
jur_EmptySet_getName = $this => {
    return $rt_s(165);
},
jur_EmptySet_hasConsumed = ($this, $mr) => {
    return 0;
};
function jur_JointSet() {
    let a = this; jur_AbstractSet.call(a);
    a.$children = null;
    a.$fSet = null;
    a.$groupIndex = 0;
}
let jur_JointSet__init_ = ($this, $children, $fSet) => {
    jur_AbstractSet__init_($this);
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex = $fSet.$groupIndex0;
},
jur_JointSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_JointSet();
    jur_JointSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_JointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i, $shift;
    if ($this.$children === null)
        return (-1);
    $start = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex);
    jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $stringIndex);
    $size = $this.$children.$size3;
    $i = 0;
    while (true) {
        if ($i >= $size) {
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $start);
            return (-1);
        }
        $shift = (ju_ArrayList_get($this.$children, $i)).$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
},
jur_JointSet_setNext = ($this, $next) => {
    $this.$fSet.$next1 = $next;
},
jur_JointSet_getName = $this => {
    return $rt_s(166);
},
jur_JointSet_first = ($this, $set) => {
    let $i, var$3;
    a: {
        $i = $this.$children;
        if ($i !== null) {
            var$3 = ju_AbstractList_iterator($i);
            while (true) {
                if (!ju_AbstractList$1_hasNext(var$3))
                    break a;
                if (!(ju_AbstractList$1_next(var$3)).$first1($set))
                    continue;
                else
                    return 1;
            }
        }
    }
    return 0;
},
jur_JointSet_hasConsumed = ($this, $matchResult) => {
    return jur_MatchResultImpl_getEnd($matchResult, $this.$groupIndex) >= 0 && jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex) == jur_MatchResultImpl_getEnd($matchResult, $this.$groupIndex) ? 0 : 1;
},
jur_JointSet_processSecondPass = $this => {
    let $child, $childrenSize, $i, $set, var$5, var$6, var$7, var$8, var$9;
    $this.$isSecondPassVisited = 1;
    $child = $this.$fSet;
    if ($child !== null && !$child.$isSecondPassVisited)
        jur_AbstractSet_processSecondPass($child);
    a: {
        $child = $this.$children;
        if ($child !== null) {
            $childrenSize = $child.$size3;
            $i = 0;
            while (true) {
                if ($i >= $childrenSize)
                    break a;
                $child = ju_ArrayList_get($this.$children, $i);
                $set = $child.$processBackRefReplacement();
                if ($set === null)
                    $set = $child;
                else {
                    $child.$isSecondPassVisited = 1;
                    ju_ArrayList_remove($this.$children, $i);
                    var$5 = $this.$children;
                    if ($i < 0)
                        break;
                    var$6 = var$5.$size3;
                    if ($i > var$6)
                        break;
                    ju_ArrayList_ensureCapacity(var$5, var$6 + 1 | 0);
                    var$7 = var$5.$size3;
                    var$8 = var$7;
                    while (var$8 > $i) {
                        var$9 = var$5.$array1.data;
                        var$9[var$8] = var$9[var$8 - 1 | 0];
                        var$8 = var$8 + (-1) | 0;
                    }
                    var$5.$array1.data[$i] = $set;
                    var$5.$size3 = var$7 + 1 | 0;
                    var$5.$modCount = var$5.$modCount + 1 | 0;
                }
                if (!$set.$isSecondPassVisited)
                    $set.$processSecondPass();
                $i = $i + 1 | 0;
            }
            $child = new jl_IndexOutOfBoundsException;
            jl_Exception__init_0($child);
            $rt_throw($child);
        }
    }
    if ($this.$next1 !== null)
        jur_AbstractSet_processSecondPass($this);
},
jur_NonCapJointSet = $rt_classWithoutFields(jur_JointSet),
jur_NonCapJointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i, $shift;
    $start = jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex);
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $stringIndex);
    $size = $this.$children.$size3;
    $i = 0;
    while (true) {
        if ($i >= $size) {
            jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $start);
            return (-1);
        }
        $shift = (ju_ArrayList_get($this.$children, $i)).$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
},
jur_NonCapJointSet_getName = $this => {
    return $rt_s(167);
},
jur_NonCapJointSet_hasConsumed = ($this, $matchResult) => {
    return !jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex) ? 0 : 1;
},
jur_AtomicJointSet = $rt_classWithoutFields(jur_NonCapJointSet),
jur_AtomicJointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i;
    $start = jur_MatchResultImpl_getConsumed($matchResult, $this.$groupIndex);
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $stringIndex);
    $size = $this.$children.$size3;
    $i = 0;
    while ($i < $size) {
        if ((ju_ArrayList_get($this.$children, $i)).$matches($stringIndex, $testString, $matchResult) >= 0)
            return $this.$next1.$matches($this.$fSet.$index8, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $start);
    return (-1);
},
jur_AtomicJointSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_AtomicJointSet_getName = $this => {
    return $rt_s(167);
},
jur_PositiveLookAhead = $rt_classWithoutFields(jur_AtomicJointSet),
jur_PositiveLookAhead_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i;
    $size = $this.$children.$size3;
    $i = 0;
    while ($i < $size) {
        if ((ju_ArrayList_get($this.$children, $i)).$matches($stringIndex, $testString, $matchResult) >= 0)
            return $this.$next1.$matches($stringIndex, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_PositiveLookAhead_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PositiveLookAhead_getName = $this => {
    return $rt_s(168);
},
jur_NegativeLookAhead = $rt_classWithoutFields(jur_AtomicJointSet),
jur_NegativeLookAhead_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i;
    $size = $this.$children.$size3;
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next1.$matches($stringIndex, $testString, $matchResult);
        if ((ju_ArrayList_get($this.$children, $i)).$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_NegativeLookAhead_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_NegativeLookAhead_getName = $this => {
    return $rt_s(169);
},
jur_PositiveLookBehind = $rt_classWithoutFields(jur_AtomicJointSet),
jur_PositiveLookBehind_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $leftBound, $shift, $i;
    $size = $this.$children.$size3;
    $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound;
    a: {
        $shift = $this.$next1.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0) {
            jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $stringIndex);
            $i = 0;
            while (true) {
                if ($i >= $size)
                    break a;
                if ((ju_ArrayList_get($this.$children, $i)).$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, (-1));
                    return $shift;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return (-1);
},
jur_PositiveLookBehind_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PositiveLookBehind_getName = $this => {
    return $rt_s(170);
},
jur_NegativeLookBehind = $rt_classWithoutFields(jur_AtomicJointSet),
jur_NegativeLookBehind_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i;
    $size = $this.$children.$size3;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$groupIndex, $stringIndex);
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next1.$matches($stringIndex, $testString, $matchResult);
        if ((ju_ArrayList_get($this.$children, $i)).$findBack(0, $stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_NegativeLookBehind_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_NegativeLookBehind_getName = $this => {
    return $rt_s(171);
};
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
let jur_SingleSet__init_ = ($this, $child, $fSet) => {
    jur_AbstractSet__init_($this);
    $this.$kid = $child;
    $this.$fSet = $fSet;
    $this.$groupIndex = $fSet.$groupIndex0;
},
jur_SingleSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_SingleSet();
    jur_SingleSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_SingleSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $shift;
    $start = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex);
    jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $stringIndex);
    $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $start);
    return (-1);
},
jur_SingleSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $res;
    $res = $this.$kid.$find0($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $res);
    return $res;
},
jur_SingleSet_findBack = ($this, $stringIndex, $lastIndex, $testString, $matchResult) => {
    let $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0)
        jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $res);
    return $res;
},
jur_SingleSet_first = ($this, $set) => {
    return $this.$kid.$first1($set);
},
jur_SingleSet_processBackRefReplacement = $this => {
    let $set;
    $set = new jur_BackReferencedSingleSet;
    jur_SingleSet__init_($set, $this.$kid, $this.$fSet);
    $this.$next1 = $set;
    return $set;
},
jur_SingleSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$fSet;
    if ($set !== null && !$set.$isSecondPassVisited)
        jur_AbstractSet_processSecondPass($set);
    $set = $this.$kid;
    if ($set !== null && !$set.$isSecondPassVisited) {
        $set = $set.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
},
jlr_Array = $rt_classWithoutFields(),
jlr_Array_getLength = var$1 => {
    if (var$1 === null || var$1.constructor.$meta.item === 'undefined') {
        $rt_throw(jl_IllegalArgumentException__init_());
    }
    return var$1.data.length;
},
jlr_Array_newInstance = (var$1, $length) => {
    if (var$1 === null) {
        var$1 = new jl_NullPointerException;
        jl_Exception__init_0(var$1);
        $rt_throw(var$1);
    }
    if (var$1 === $rt_cls($rt_voidcls)) {
        var$1 = new jl_IllegalArgumentException;
        jl_Exception__init_0(var$1);
        $rt_throw(var$1);
    }
    if ($length >= 0)
        return jlr_Array_newInstanceImpl(var$1.$platformClass, $length);
    var$1 = new jl_NegativeArraySizeException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
jlr_Array_newInstanceImpl = (var$1, var$2) => {
    if (var$1.$meta.primitive) {
        switch (var$1) {
        }
        ;
    }
    return $rt_createArray(var$1, var$2);
},
jl_ArrayStoreException = $rt_classWithoutFields(jl_RuntimeException),
jur_SpecialToken = $rt_classWithoutFields();
function jur_AbstractCharClass() {
    let a = this; jur_SpecialToken.call(a);
    a.$alt = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints = 0;
}
let jur_AbstractCharClass_charClasses = null,
jur_AbstractCharClass__init_ = $this => {
    let var$1;
    var$1 = new ju_BitSet;
    var$1.$data = $rt_createIntArray(64);
    $this.$lowHighSurrogates = var$1;
},
jur_AbstractCharClass_getBits = $this => {
    return null;
},
jur_AbstractCharClass_getLowHighSurrogates = $this => {
    return $this.$lowHighSurrogates;
},
jur_AbstractCharClass_hasLowHighSurrogates = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    if (!$this.$altSurrogates)
        var$1 = ju_BitSet_nextSetBit($this.$lowHighSurrogates, 0) >= 2048 ? 0 : 1;
    else {
        a: {
            var$2 = $this.$lowHighSurrogates;
            var$1 = 0;
            var$3 = var$2.$length2;
            if (var$1 < var$3) {
                var$4 = var$2.$data.data;
                var$5 = (var$4[0] ^ (-1)) >>> 0 | 0;
                if (var$5)
                    var$1 = jl_Integer_numberOfTrailingZeros(var$5) + var$1 | 0;
                else {
                    var$1 = (var$3 + 31 | 0) / 32 | 0;
                    var$5 = 1;
                    while (var$5 < var$1) {
                        if (var$4[var$5] != (-1)) {
                            var$1 = (var$5 * 32 | 0) + jl_Integer_numberOfTrailingZeros(var$4[var$5] ^ (-1)) | 0;
                            break a;
                        }
                        var$5 = var$5 + 1 | 0;
                    }
                    var$1 = var$3;
                }
            }
        }
        var$1 = var$1 >= 2048 ? 0 : 1;
    }
    return var$1;
},
jur_AbstractCharClass_mayContainSupplCodepoints = $this => {
    return $this.$mayContainSupplCodepoints;
},
jur_AbstractCharClass_getInstance = $this => {
    return $this;
},
jur_AbstractCharClass_getSurrogates = $this => {
    let $lHS, var$2;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        var$2 = new jur_AbstractCharClass$1;
        var$2.$this$050 = $this;
        var$2.$val$lHS = $lHS;
        jur_AbstractCharClass__init_(var$2);
        $this.$charClassWithSurrogates = var$2;
        jur_AbstractCharClass_setNegative(var$2, $this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
},
jur_AbstractCharClass_getWithoutSurrogates = $this => {
    let $lHS, var$2;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        var$2 = new jur_AbstractCharClass$2;
        var$2.$this$031 = $this;
        var$2.$val$lHS0 = $lHS;
        var$2.$val$thisClass = $this;
        jur_AbstractCharClass__init_(var$2);
        $this.$charClassWithoutSurrogates = var$2;
        jur_AbstractCharClass_setNegative(var$2, $this.$alt);
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints;
    }
    return $this.$charClassWithoutSurrogates;
},
jur_AbstractCharClass_hasUCI = $this => {
    return 0;
},
jur_AbstractCharClass_setNegative = ($this, $value) => {
    let var$2;
    var$2 = $this.$alt;
    if (var$2 ^ $value) {
        $this.$alt = var$2 ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    return $this;
},
jur_AbstractCharClass_isNegative = $this => {
    return $this.$alt;
},
jur_AbstractCharClass_intersects = ($cc1, $cc2) => {
    let var$3, var$4;
    if ($cc1.$getBits() !== null && $cc2.$getBits() !== null) {
        $cc1 = $cc1.$getBits();
        $cc2 = $cc2.$getBits();
        var$3 = jl_Math_min($cc1.$data.data.length, $cc2.$data.data.length);
        var$4 = 0;
        a: {
            while (var$4 < var$3) {
                if ($cc1.$data.data[var$4] & $cc2.$data.data[var$4]) {
                    var$3 = 1;
                    break a;
                }
                var$4 = var$4 + 1 | 0;
            }
            var$3 = 0;
        }
        return var$3;
    }
    return 1;
},
jur_AbstractCharClass_getPredefinedClass = ($name, $negative) => {
    let var$3, var$4, var$5;
    var$3 = 0;
    while (true) {
        var$4 = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data;
        if (var$3 >= var$4.length) {
            var$5 = new ju_MissingResourceException;
            jl_Exception__init_(var$5, $rt_s(8));
            var$5.$className = $rt_s(8);
            var$5.$key0 = $name;
            $rt_throw(var$5);
        }
        var$4 = var$4[var$3].data;
        if (jl_String_equals($name, var$4[0]))
            break;
        var$3 = var$3 + 1 | 0;
    }
    return jur_AbstractCharClass$LazyCharClass_getValue(var$4[1], $negative);
},
jur_AbstractCharClass__clinit_ = () => {
    jur_AbstractCharClass_charClasses = new jur_AbstractCharClass$PredefinedCharacterClasses;
};
function ju_MissingResourceException() {
    let a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key0 = null;
}
function jur_CharClass() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI0 = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
let jur_CharClass__init_2 = $this => {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_();
},
jur_CharClass__init_ = () => {
    let var_0 = new jur_CharClass();
    jur_CharClass__init_2(var_0);
    return var_0;
},
jur_CharClass__init_1 = ($this, $ci, $uci) => {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_();
    $this.$ci = $ci;
    $this.$uci = $uci;
},
jur_CharClass__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass();
    jur_CharClass__init_1(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass_add0 = ($this, $ch) => {
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    ju_BitSet_clear($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                ju_BitSet_set0($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI0 = 1;
                $ch = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
            }
        }
    }
    if (!(!jur_Lexer_isHighSurrogate($ch) && !jur_Lexer_isLowSurrogate($ch))) {
        if ($this.$invertedSurrogates)
            ju_BitSet_clear($this.$lowHighSurrogates, $ch - 55296 | 0);
        else
            ju_BitSet_set0($this.$lowHighSurrogates, $ch - 55296 | 0);
    }
    if ($this.$inverted)
        ju_BitSet_clear($this.$bits, $ch);
    else
        ju_BitSet_set0($this.$bits, $ch);
    if (!$this.$mayContainSupplCodepoints && jl_Character_isSupplementaryCodePoint($ch))
        $this.$mayContainSupplCodepoints = 1;
    return $this;
},
jur_CharClass_add1 = ($this, $cc) => {
    let $curAlt, $nb, var$4;
    if (!$this.$mayContainSupplCodepoints && $cc.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            ju_BitSet_andNot($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        else
            ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        ju_BitSet_or($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$alt)
                ju_BitSet_andNot($this.$bits, $cc.$getBits());
            else
                ju_BitSet_and($this.$bits, $cc.$getBits());
        } else if (!$cc.$alt)
            ju_BitSet_or($this.$bits, $cc.$getBits());
        else {
            ju_BitSet_xor($this.$bits, $cc.$getBits());
            ju_BitSet_and($this.$bits, $cc.$getBits());
            $this.$alt = $this.$alt ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$4 = new jur_CharClass$5;
                var$4.$this$039 = $this;
                var$4.$val$curAlt10 = $curAlt;
                var$4.$val$nb0 = $nb;
                var$4.$val$cc = $cc;
                jur_AbstractCharClass__init_(var$4);
                $this.$nonBitSet = var$4;
            } else {
                var$4 = new jur_CharClass$4;
                var$4.$this$054 = $this;
                var$4.$val$curAlt1 = $curAlt;
                var$4.$val$nb3 = $nb;
                var$4.$val$cc2 = $cc;
                jur_AbstractCharClass__init_(var$4);
                $this.$nonBitSet = var$4;
            }
        } else {
            if ($curAlt && !$this.$inverted && ju_BitSet_isEmpty($this.$bits)) {
                $nb = new jur_CharClass$1;
                $nb.$this$044 = $this;
                $nb.$val$cc3 = $cc;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            } else if (!$curAlt) {
                $nb = new jur_CharClass$3;
                $nb.$this$06 = $this;
                $nb.$val$curAlt0 = $curAlt;
                $nb.$val$cc1 = $cc;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$2;
                $nb.$this$04 = $this;
                $nb.$val$curAlt = $curAlt;
                $nb.$val$cc0 = $cc;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
    return $this;
},
jur_CharClass_add = ($this, $i, $end) => {
    let var$3, var$4, var$5, var$6, var$7;
    if ($i > $end) {
        var$3 = new jl_IllegalArgumentException;
        jl_Exception__init_0(var$3);
        $rt_throw(var$3);
    }
    a: {
        b: {
            if (!$this.$ci) {
                if ($end < 55296)
                    break b;
                if ($i > 57343)
                    break b;
            }
            $end = $end + 1 | 0;
            while (true) {
                if ($i >= $end)
                    break a;
                jur_CharClass_add0($this, $i);
                $i = $i + 1 | 0;
            }
        }
        if (!$this.$inverted)
            ju_BitSet_set($this.$bits, $i, $end + 1 | 0);
        else {
            var$3 = $this.$bits;
            $end = $end + 1 | 0;
            if ($i >= 0 && $i <= $end) {
                var$4 = var$3.$length2;
                if ($i < var$4) {
                    var$5 = jl_Math_min(var$4, $end);
                    if ($i != var$5) {
                        var$6 = $i / 32 | 0;
                        $end = var$5 / 32 | 0;
                        if (var$6 == $end) {
                            var$7 = var$3.$data.data;
                            var$7[var$6] = var$7[var$6] & (ju_BitSet_trailingOneBits(var$3, $i) | ju_BitSet_trailingZeroBits(var$3, var$5));
                        } else {
                            var$7 = var$3.$data.data;
                            var$7[var$6] = var$7[var$6] & ju_BitSet_trailingOneBits(var$3, $i);
                            var$4 = var$6 + 1 | 0;
                            while (var$4 < $end) {
                                var$3.$data.data[var$4] = 0;
                                var$4 = var$4 + 1 | 0;
                            }
                            if (var$5 & 31) {
                                var$7 = var$3.$data.data;
                                var$7[$end] = var$7[$end] & ju_BitSet_trailingZeroBits(var$3, var$5);
                            }
                        }
                        ju_BitSet_recalculateLength(var$3);
                    }
                }
            } else {
                var$3 = new jl_IndexOutOfBoundsException;
                jl_Exception__init_0(var$3);
                $rt_throw(var$3);
            }
        }
    }
    return $this;
},
jur_CharClass_union = ($this, $clazz) => {
    let var$2, $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    var$2 = $clazz;
    if (var$2.$hasUCI0)
        $this.$hasUCI0 = 1;
    $curAlt = $this.$altSurrogates;
    if (!($curAlt ^ $clazz.$altSurrogates)) {
        if (!$curAlt)
            ju_BitSet_or($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        else
            ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    } else if ($curAlt)
        ju_BitSet_andNot($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        $this.$altSurrogates = 1;
    }
    if (!$this.$hideBits && jur_CharClass_getBits(var$2) !== null) {
        $curAlt = $this.$alt;
        if (!($curAlt ^ $clazz.$alt)) {
            if (!$curAlt)
                ju_BitSet_or($this.$bits, jur_CharClass_getBits(var$2));
            else
                ju_BitSet_and($this.$bits, jur_CharClass_getBits(var$2));
        } else if ($curAlt)
            ju_BitSet_andNot($this.$bits, jur_CharClass_getBits(var$2));
        else {
            ju_BitSet_xor($this.$bits, jur_CharClass_getBits(var$2));
            ju_BitSet_and($this.$bits, jur_CharClass_getBits(var$2));
            $this.$alt = 1;
        }
    } else {
        $curAlt = $this.$alt;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$2 = new jur_CharClass$11;
                var$2.$this$021 = $this;
                var$2.$val$curAlt3 = $curAlt;
                var$2.$val$nb4 = $nb;
                var$2.$val$clazz5 = $clazz;
                jur_AbstractCharClass__init_(var$2);
                $this.$nonBitSet = var$2;
            } else {
                var$2 = new jur_CharClass$10;
                var$2.$this$023 = $this;
                var$2.$val$curAlt9 = $curAlt;
                var$2.$val$nb = $nb;
                var$2.$val$clazz = $clazz;
                jur_AbstractCharClass__init_(var$2);
                $this.$nonBitSet = var$2;
            }
        } else {
            if (!$this.$inverted && ju_BitSet_isEmpty($this.$bits)) {
                if (!$curAlt) {
                    $nb = new jur_CharClass$7;
                    $nb.$this$055 = $this;
                    $nb.$val$clazz1 = $clazz;
                    jur_AbstractCharClass__init_($nb);
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$6;
                    $nb.$this$040 = $this;
                    $nb.$val$clazz9 = $clazz;
                    jur_AbstractCharClass__init_($nb);
                    $this.$nonBitSet = $nb;
                }
            } else if (!$curAlt) {
                $nb = new jur_CharClass$9;
                $nb.$this$013 = $this;
                $nb.$val$clazz3 = $clazz;
                $nb.$val$curAlt4 = $curAlt;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$8;
                $nb.$this$010 = $this;
                $nb.$val$clazz4 = $clazz;
                $nb.$val$curAlt6 = $curAlt;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
},
jur_CharClass_intersection = ($this, $clazz) => {
    let var$2, $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
        $this.$mayContainSupplCodepoints = 1;
    var$2 = $clazz;
    if (var$2.$hasUCI0)
        $this.$hasUCI0 = 1;
    $curAlt = $this.$altSurrogates;
    if (!($curAlt ^ $clazz.$altSurrogates)) {
        if (!$curAlt)
            ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        else
            ju_BitSet_or($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    } else if (!$curAlt)
        ju_BitSet_andNot($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
    else {
        ju_BitSet_xor($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        ju_BitSet_and($this.$lowHighSurrogates, var$2.$lowHighSurrogates);
        $this.$altSurrogates = 0;
    }
    if (!$this.$hideBits && jur_CharClass_getBits(var$2) !== null) {
        $curAlt = $this.$alt;
        if (!($curAlt ^ $clazz.$alt)) {
            if (!$curAlt)
                ju_BitSet_and($this.$bits, jur_CharClass_getBits(var$2));
            else
                ju_BitSet_or($this.$bits, jur_CharClass_getBits(var$2));
        } else if (!$curAlt)
            ju_BitSet_andNot($this.$bits, jur_CharClass_getBits(var$2));
        else {
            ju_BitSet_xor($this.$bits, jur_CharClass_getBits(var$2));
            ju_BitSet_and($this.$bits, jur_CharClass_getBits(var$2));
            $this.$alt = 0;
        }
    } else {
        $curAlt = $this.$alt;
        $nb = $this.$nonBitSet;
        if ($nb !== null) {
            if (!$curAlt) {
                var$2 = new jur_CharClass$17;
                var$2.$this$038 = $this;
                var$2.$val$curAlt8 = $curAlt;
                var$2.$val$nb2 = $nb;
                var$2.$val$clazz2 = $clazz;
                jur_AbstractCharClass__init_(var$2);
                $this.$nonBitSet = var$2;
            } else {
                var$2 = new jur_CharClass$16;
                var$2.$this$041 = $this;
                var$2.$val$curAlt7 = $curAlt;
                var$2.$val$nb1 = $nb;
                var$2.$val$clazz8 = $clazz;
                jur_AbstractCharClass__init_(var$2);
                $this.$nonBitSet = var$2;
            }
        } else {
            if (!$this.$inverted && ju_BitSet_isEmpty($this.$bits)) {
                if (!$curAlt) {
                    $nb = new jur_CharClass$13;
                    $nb.$this$024 = $this;
                    $nb.$val$clazz6 = $clazz;
                    jur_AbstractCharClass__init_($nb);
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$12;
                    $nb.$this$053 = $this;
                    $nb.$val$clazz0 = $clazz;
                    jur_AbstractCharClass__init_($nb);
                    $this.$nonBitSet = $nb;
                }
            } else if (!$curAlt) {
                $nb = new jur_CharClass$15;
                $nb.$this$018 = $this;
                $nb.$val$clazz10 = $clazz;
                $nb.$val$curAlt2 = $curAlt;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            } else {
                $nb = new jur_CharClass$14;
                $nb.$this$011 = $this;
                $nb.$val$clazz7 = $clazz;
                $nb.$val$curAlt5 = $curAlt;
                jur_AbstractCharClass__init_($nb);
                $this.$nonBitSet = $nb;
            }
            $this.$hideBits = 1;
        }
    }
},
jur_CharClass_contains = ($this, $ch) => {
    let var$2;
    var$2 = $this.$nonBitSet;
    if (var$2 !== null)
        return $this.$alt ^ var$2.$contains($ch);
    return $this.$alt ^ ju_BitSet_get($this.$bits, $ch);
},
jur_CharClass_getBits = $this => {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
},
jur_CharClass_getLowHighSurrogates = $this => {
    return $this.$lowHighSurrogates;
},
jur_CharClass_getInstance = $this => {
    let $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = jur_CharClass_getBits($this);
    $res = new jur_CharClass$18;
    $res.$this$037 = $this;
    $res.$val$bs = $bs;
    jur_AbstractCharClass__init_($res);
    return jur_AbstractCharClass_setNegative($res, $this.$alt);
},
jur_CharClass_toString = $this => {
    let $temp, $i, var$3;
    $temp = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($temp);
    $i = ju_BitSet_nextSetBit($this.$bits, 0);
    while ($i >= 0) {
        jl_AbstractStringBuilder_append1($temp, jl_Character_toChars($i));
        jl_AbstractStringBuilder_append0($temp, 124);
        $i = ju_BitSet_nextSetBit($this.$bits, $i + 1 | 0);
    }
    var$3 = $temp.$length1;
    if (var$3 > 0)
        jl_StringBuilder_deleteCharAt($temp, var$3 - 1 | 0);
    return jl_AbstractStringBuilder_toString($temp);
},
jur_CharClass_hasUCI = $this => {
    return $this.$hasUCI0;
};
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
let jur_QuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AbstractSet__init_0($this, $next);
    $this.$innerSet = $innerSet;
    $this.$type5 = $type;
},
jur_QuantifierSet_getInnerSet = $this => {
    return $this.$innerSet;
},
jur_QuantifierSet_first = ($this, $set) => {
    return !$this.$innerSet.$first1($set) && !$this.$next1.$first1($set) ? 0 : 1;
},
jur_QuantifierSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_QuantifierSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    $set = $this.$next1;
    if ($set !== null && !$set.$isSecondPassVisited) {
        $set = $set.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next1.$isSecondPassVisited = 1;
            $this.$next1 = $set;
        }
        $this.$next1.$processSecondPass();
    }
    $set = $this.$innerSet;
    if ($set !== null) {
        if (!$set.$isSecondPassVisited) {
            $set = $set.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($set instanceof jur_SingleSet && $set.$fSet.$isBackReferenced)
            $this.$innerSet = $set.$next1;
    }
};
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
let jur_LeafQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$leaf = $innerSet;
},
jur_LeafQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_LeafQuantifierSet();
    jur_LeafQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_LeafQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next1.$matches($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
},
jur_LeafQuantifierSet_getName = $this => {
    return $rt_s(172);
};
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier0 = null;
}
let jur_CompositeQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type) => {
    jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$quantifier0 = $quant;
},
jur_CompositeQuantifierSet__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CompositeQuantifierSet();
    jur_CompositeQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $min, $max, $i, $shift;
    var$4 = $this.$quantifier0;
    $min = var$4.$min3;
    $max = var$4.$max2;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound)
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next1.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_CompositeQuantifierSet_getName = $this => {
    return jur_Quantifier_toString($this.$quantifier0);
},
jur_GroupQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet),
jur_GroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_GroupQuantifierSet_getName = $this => {
    return $rt_s(173);
},
jur_AltQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_AltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next1.$matches($stringIndex, $testString, $matchResult);
    return $shift;
},
jur_AltQuantifierSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
    $this.$innerSet.$setNext($next);
},
jur_UnifiedQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_UnifiedQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound && $this.$leaf.$accepts($stringIndex, $testString) > 0) {
        $stringIndex = $stringIndex + $this.$leaf.$charCount() | 0;
    }
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_UnifiedQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next1.$find0($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
},
jur_AbstractCharClass$PredefinedCharacterClasses = $rt_classWithoutFields(),
jur_AbstractCharClass$PredefinedCharacterClasses_space = null,
jur_AbstractCharClass$PredefinedCharacterClasses_digit = null,
jur_AbstractCharClass$PredefinedCharacterClasses_contents = null,
jur_AbstractCharClass$PredefinedCharacterClasses__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_0();
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_0();
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 194);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(174);
    var$4[1] = jur_AbstractCharClass$LazyLower__init_0();
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(175);
    var$4[1] = jur_AbstractCharClass$LazyUpper__init_();
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(176);
    var$4[1] = jur_AbstractCharClass$LazyASCII__init_0();
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(177);
    var$4[1] = jur_AbstractCharClass$LazyAlpha__init_0();
    var$2[3] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(178);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[4] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(179);
    var$4[1] = jur_AbstractCharClass$LazyAlnum__init_0();
    var$2[5] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(180);
    var$4[1] = jur_AbstractCharClass$LazyPunct__init_();
    var$2[6] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(181);
    var$4[1] = jur_AbstractCharClass$LazyGraph__init_0();
    var$2[7] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(182);
    var$4[1] = jur_AbstractCharClass$LazyPrint__init_0();
    var$2[8] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(183);
    var$4[1] = jur_AbstractCharClass$LazyBlank__init_();
    var$2[9] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(184);
    var$4[1] = jur_AbstractCharClass$LazyCntrl__init_();
    var$2[10] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(185);
    var$4[1] = jur_AbstractCharClass$LazyXDigit__init_0();
    var$2[11] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(186);
    var$4[1] = jur_AbstractCharClass$LazyJavaLowerCase__init_();
    var$2[12] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(187);
    var$4[1] = jur_AbstractCharClass$LazyJavaUpperCase__init_();
    var$2[13] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(188);
    var$4[1] = jur_AbstractCharClass$LazyJavaWhitespace__init_0();
    var$2[14] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(189);
    var$4[1] = jur_AbstractCharClass$LazyJavaMirrored__init_();
    var$2[15] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(190);
    var$4[1] = jur_AbstractCharClass$LazyJavaDefined__init_0();
    var$2[16] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(191);
    var$4[1] = jur_AbstractCharClass$LazyJavaDigit__init_0();
    var$2[17] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(192);
    var$4[1] = jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0();
    var$2[18] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(193);
    var$4[1] = jur_AbstractCharClass$LazyJavaISOControl__init_();
    var$2[19] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(194);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0();
    var$2[20] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(195);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0();
    var$2[21] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(196);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetter__init_0();
    var$2[22] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(197);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0();
    var$2[23] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(198);
    var$4[1] = jur_AbstractCharClass$LazyJavaSpaceChar__init_0();
    var$2[24] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(199);
    var$4[1] = jur_AbstractCharClass$LazyJavaTitleCase__init_0();
    var$2[25] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(200);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_();
    var$2[26] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(201);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0();
    var$2[27] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(202);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[28] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(203);
    var$4[1] = jur_AbstractCharClass$LazyWord__init_0();
    var$2[29] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(204);
    var$4[1] = jur_AbstractCharClass$LazyNonWord__init_();
    var$2[30] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(205);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[31] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(206);
    var$4[1] = jur_AbstractCharClass$LazyNonSpace__init_();
    var$2[32] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(207);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[33] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(208);
    var$4[1] = jur_AbstractCharClass$LazyNonDigit__init_();
    var$2[34] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(209);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 127);
    var$2[35] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(210);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(128, 255);
    var$2[36] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(211);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(256, 383);
    var$2[37] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(212);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(384, 591);
    var$2[38] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(213);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(592, 687);
    var$2[39] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(214);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(688, 767);
    var$2[40] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(215);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(768, 879);
    var$2[41] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(216);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(880, 1023);
    var$2[42] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(217);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1024, 1279);
    var$2[43] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(218);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1280, 1327);
    var$2[44] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(219);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1328, 1423);
    var$2[45] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(220);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1424, 1535);
    var$2[46] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(221);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1536, 1791);
    var$2[47] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(222);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1792, 1871);
    var$2[48] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(223);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1872, 1919);
    var$2[49] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(224);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1920, 1983);
    var$2[50] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(225);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2304, 2431);
    var$2[51] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(226);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2432, 2559);
    var$2[52] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(227);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2560, 2687);
    var$2[53] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(228);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2688, 2815);
    var$2[54] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(229);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2816, 2943);
    var$2[55] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(230);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2944, 3071);
    var$2[56] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(231);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3072, 3199);
    var$2[57] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(232);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3200, 3327);
    var$2[58] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(233);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3328, 3455);
    var$2[59] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(234);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3456, 3583);
    var$2[60] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(235);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3584, 3711);
    var$2[61] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(236);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3712, 3839);
    var$2[62] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(237);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3840, 4095);
    var$2[63] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(238);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4096, 4255);
    var$2[64] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(239);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4256, 4351);
    var$2[65] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(240);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4352, 4607);
    var$2[66] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(241);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4608, 4991);
    var$2[67] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(242);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4992, 5023);
    var$2[68] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(243);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5024, 5119);
    var$2[69] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(244);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5120, 5759);
    var$2[70] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(245);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5760, 5791);
    var$2[71] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(246);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5792, 5887);
    var$2[72] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(247);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5888, 5919);
    var$2[73] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(248);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5920, 5951);
    var$2[74] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(249);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5952, 5983);
    var$2[75] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(250);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5984, 6015);
    var$2[76] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(251);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6016, 6143);
    var$2[77] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(252);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6144, 6319);
    var$2[78] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(253);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6400, 6479);
    var$2[79] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(254);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6480, 6527);
    var$2[80] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(255);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6528, 6623);
    var$2[81] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(256);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6624, 6655);
    var$2[82] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(257);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6656, 6687);
    var$2[83] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(258);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7424, 7551);
    var$2[84] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(259);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7552, 7615);
    var$2[85] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(260);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7616, 7679);
    var$2[86] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(261);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7680, 7935);
    var$2[87] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(262);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7936, 8191);
    var$2[88] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(263);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8192, 8303);
    var$2[89] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(264);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8304, 8351);
    var$2[90] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(265);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8352, 8399);
    var$2[91] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(266);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8400, 8447);
    var$2[92] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(267);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8448, 8527);
    var$2[93] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(268);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8528, 8591);
    var$2[94] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(269);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8592, 8703);
    var$2[95] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(270);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8704, 8959);
    var$2[96] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(271);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8960, 9215);
    var$2[97] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(272);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9216, 9279);
    var$2[98] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(273);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9280, 9311);
    var$2[99] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(274);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9312, 9471);
    var$2[100] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(275);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9472, 9599);
    var$2[101] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(276);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9600, 9631);
    var$2[102] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(277);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9632, 9727);
    var$2[103] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(278);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9728, 9983);
    var$2[104] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(279);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9984, 10175);
    var$2[105] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(280);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10176, 10223);
    var$2[106] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(281);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10224, 10239);
    var$2[107] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(282);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10240, 10495);
    var$2[108] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(283);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10496, 10623);
    var$2[109] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(284);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10624, 10751);
    var$2[110] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(285);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10752, 11007);
    var$2[111] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(286);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11008, 11263);
    var$2[112] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(287);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11264, 11359);
    var$2[113] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(288);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11392, 11519);
    var$2[114] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(289);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11520, 11567);
    var$2[115] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(290);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11568, 11647);
    var$2[116] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(291);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11648, 11743);
    var$2[117] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(292);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11776, 11903);
    var$2[118] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(293);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11904, 12031);
    var$2[119] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(294);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12032, 12255);
    var$2[120] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(295);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12272, 12287);
    var$2[121] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(296);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12288, 12351);
    var$2[122] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(297);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12352, 12447);
    var$2[123] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(298);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12448, 12543);
    var$2[124] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(299);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12544, 12591);
    var$2[125] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(300);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12592, 12687);
    var$2[126] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(301);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12688, 12703);
    var$2[127] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(302);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12704, 12735);
    var$2[128] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(303);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12736, 12783);
    var$2[129] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(304);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12784, 12799);
    var$2[130] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(305);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12800, 13055);
    var$2[131] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(306);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13056, 13311);
    var$2[132] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(307);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13312, 19893);
    var$2[133] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(308);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19904, 19967);
    var$2[134] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(309);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19968, 40959);
    var$2[135] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(310);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(40960, 42127);
    var$2[136] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(311);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42128, 42191);
    var$2[137] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(312);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42752, 42783);
    var$2[138] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(313);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(43008, 43055);
    var$2[139] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(314);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(44032, 55203);
    var$2[140] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(315);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(55296, 56191);
    var$2[141] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(316);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56192, 56319);
    var$2[142] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(317);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56320, 57343);
    var$2[143] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(318);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(57344, 63743);
    var$2[144] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(319);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(63744, 64255);
    var$2[145] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(320);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64256, 64335);
    var$2[146] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(321);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64336, 65023);
    var$2[147] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(322);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65024, 65039);
    var$2[148] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(323);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65040, 65055);
    var$2[149] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(324);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65056, 65071);
    var$2[150] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(325);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65072, 65103);
    var$2[151] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(326);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65104, 65135);
    var$2[152] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(327);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65136, 65279);
    var$2[153] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(328);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65280, 65519);
    var$2[154] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(329);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 1114111);
    var$2[155] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(330);
    var$4[1] = jur_AbstractCharClass$LazySpecialsBlock__init_0();
    var$2[156] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(331);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(0, 1);
    var$2[157] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(332);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(62, 1);
    var$2[158] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(333);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(1, 1);
    var$2[159] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(334);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(2, 1);
    var$2[160] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(335);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(3, 0);
    var$2[161] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(336);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(4, 0);
    var$2[162] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(337);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(5, 1);
    var$2[163] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(338);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(448, 1);
    var$2[164] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(339);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(6, 1);
    var$2[165] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(340);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(7, 0);
    var$2[166] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(341);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(8, 1);
    var$2[167] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(342);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1);
    var$2[168] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(343);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(9, 1);
    var$2[169] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(344);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(10, 1);
    var$2[170] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(345);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(11, 1);
    var$2[171] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(346);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0);
    var$2[172] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(347);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(12, 0);
    var$2[173] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(348);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(13, 0);
    var$2[174] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(349);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(14, 0);
    var$2[175] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(350);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_2(983040, 1, 1);
    var$2[176] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(351);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(15, 0);
    var$2[177] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(352);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(16, 1);
    var$2[178] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(353);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(18, 1);
    var$2[179] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(354);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_1(19, 0, 1);
    var$2[180] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(355);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(1643118592, 1);
    var$2[181] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(356);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(20, 0);
    var$2[182] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(357);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(21, 0);
    var$2[183] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(358);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(22, 0);
    var$2[184] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(359);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(23, 0);
    var$2[185] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(360);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(24, 1);
    var$2[186] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(361);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1);
    var$2[187] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(362);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(25, 1);
    var$2[188] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(363);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(26, 0);
    var$2[189] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(364);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(27, 0);
    var$2[190] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(365);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(28, 1);
    var$2[191] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(366);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(29, 0);
    var$2[192] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(367);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(30, 0);
    var$2[193] = var$3;
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = var$1;
};
function jur_AbstractCharClass$LazyCharClass() {
    let a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
let jur_AbstractCharClass$LazyCharClass_getValue = ($this, $negative) => {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = jur_AbstractCharClass_setNegative($this.$computeValue(), 1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
};
function jur_Quantifier() {
    let a = this; jur_SpecialToken.call(a);
    a.$min3 = 0;
    a.$max2 = 0;
}
let jur_Quantifier_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = $this.$min3;
    var$2 = $this.$max2;
    var$3 = var$2 != 2147483647 ? jl_Integer_toString(var$2) : $rt_s(8);
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(var$4, 123);
    var$5 = jl_StringBuilder_append1(var$4, var$1);
    jl_AbstractStringBuilder_append0(var$5, 44);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$5, var$3), 125);
    return jl_AbstractStringBuilder_toString(var$4);
},
jur_FSet$PossessiveFSet = $rt_classWithoutFields(jur_AbstractSet),
jur_FSet$PossessiveFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    return $stringIndex;
},
jur_FSet$PossessiveFSet_getName = $this => {
    return $rt_s(368);
},
jur_FSet$PossessiveFSet_hasConsumed = ($this, $mr) => {
    return 0;
};
function ju_BitSet() {
    let a = this; jl_Object.call(a);
    a.$data = null;
    a.$length2 = 0;
}
let ju_BitSet__init_0 = $this => {
    $this.$data = $rt_createIntArray(2);
},
ju_BitSet__init_ = () => {
    let var_0 = new ju_BitSet();
    ju_BitSet__init_0(var_0);
    return var_0;
},
ju_BitSet_set0 = ($this, $bitIndex) => {
    let var$2, $index, var$4;
    if ($bitIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        jl_Exception__init_0(var$2);
        $rt_throw(var$2);
    }
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length2) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length2 = $bitIndex + 1 | 0;
    }
    var$4 = $this.$data.data;
    var$4[$index] = var$4[$index] | 1 << ($bitIndex % 32 | 0);
},
ju_BitSet_set = ($this, $fromIndex, $toIndex) => {
    let $fromDataIndex, $toDataIndex, var$5, $i, var$7;
    if ($fromIndex >= 0) {
        $fromDataIndex = $rt_compare($fromIndex, $toIndex);
        if ($fromDataIndex <= 0) {
            if (!$fromDataIndex)
                return;
            $fromDataIndex = $fromIndex / 32 | 0;
            $toDataIndex = $toIndex / 32 | 0;
            if ($toIndex > $this.$length2) {
                ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
                $this.$length2 = $toIndex;
            }
            if ($fromDataIndex == $toDataIndex) {
                var$5 = $this.$data.data;
                var$5[$fromDataIndex] = var$5[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex) & ju_BitSet_trailingOneBits($this, $toIndex);
            } else {
                var$5 = $this.$data.data;
                var$5[$fromDataIndex] = var$5[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex);
                $i = $fromDataIndex + 1 | 0;
                while ($i < $toDataIndex) {
                    $this.$data.data[$i] = (-1);
                    $i = $i + 1 | 0;
                }
                if ($toIndex & 31) {
                    var$5 = $this.$data.data;
                    var$5[$toDataIndex] = var$5[$toDataIndex] | ju_BitSet_trailingOneBits($this, $toIndex);
                }
            }
            return;
        }
    }
    var$7 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$7);
    $rt_throw(var$7);
},
ju_BitSet_trailingZeroBits = ($this, $num) => {
    return (-1) << ($num % 32 | 0);
},
ju_BitSet_trailingOneBits = ($this, $num) => {
    $num = $num % 32 | 0;
    return !$num ? 0 : (-1) >>> (32 - $num | 0) | 0;
},
ju_BitSet_clear = ($this, $bitIndex) => {
    let var$2, $index, var$4, var$5, var$6;
    if ($bitIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        jl_Exception__init_0(var$2);
        $rt_throw(var$2);
    }
    $index = $bitIndex / 32 | 0;
    var$4 = $this.$data.data;
    if ($index < var$4.length) {
        var$5 = var$4[$index];
        var$6 = ($bitIndex % 32 | 0) & 31;
        var$4[$index] = var$5 & ((-2) << var$6 | ((-2) >>> (32 - var$6 | 0) | 0));
        if ($bitIndex == ($this.$length2 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
},
ju_BitSet_get = ($this, $bitIndex) => {
    let var$2, $index, var$4;
    if ($bitIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        jl_Exception__init_0(var$2);
        $rt_throw(var$2);
    }
    $index = $bitIndex / 32 | 0;
    var$4 = $this.$data.data;
    return $index < var$4.length && var$4[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
},
ju_BitSet_nextSetBit = ($this, $fromIndex) => {
    let var$2, $top, $index, var$5, $i;
    if ($fromIndex < 0) {
        var$2 = new jl_IndexOutOfBoundsException;
        jl_Exception__init_0(var$2);
        $rt_throw(var$2);
    }
    $top = $this.$length2;
    if ($fromIndex >= $top)
        return (-1);
    $index = $fromIndex / 32 | 0;
    var$5 = $this.$data.data;
    $i = var$5[$index] >>> ($fromIndex % 32 | 0) | 0;
    if ($i)
        return jl_Integer_numberOfTrailingZeros($i) + $fromIndex | 0;
    $top = ($top + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if (var$5[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros(var$5[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
ju_BitSet_ensureCapacity = ($this, $capacity) => {
    let $newArrayLength, var$3, var$4, var$5;
    $newArrayLength = $this.$data.data.length;
    if ($newArrayLength >= $capacity)
        return;
    $newArrayLength = jl_Math_max(($capacity * 3 | 0) / 2 | 0, ($newArrayLength * 2 | 0) + 1 | 0);
    var$3 = $this.$data.data;
    var$4 = $rt_createIntArray($newArrayLength);
    var$5 = var$4.data;
    $capacity = jl_Math_min($newArrayLength, var$3.length);
    $newArrayLength = 0;
    while ($newArrayLength < $capacity) {
        var$5[$newArrayLength] = var$3[$newArrayLength];
        $newArrayLength = $newArrayLength + 1 | 0;
    }
    $this.$data = var$4;
},
ju_BitSet_recalculateLength = $this => {
    let $top, $i, $sz;
    $top = ($this.$length2 + 31 | 0) / 32 | 0;
    $this.$length2 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length2 = $this.$length2 - 32 | 0;
        }
        $this.$length2 = $this.$length2 - $sz | 0;
    }
},
ju_BitSet_and = ($this, $set) => {
    let $i, $i_0, var$4, var$5;
    $i = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i_0 = 0;
    while ($i_0 < $i) {
        var$4 = $this.$data.data;
        var$4[$i_0] = var$4[$i_0] & $set.$data.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    while (true) {
        var$5 = $this.$data.data;
        if ($i >= var$5.length)
            break;
        var$5[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$length2 = jl_Math_min($this.$length2, $set.$length2);
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_andNot = ($this, $set) => {
    let $sz, $i, var$4;
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] & ($set.$data.data[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_or = ($this, $set) => {
    let $sz, $i, var$4;
    $sz = jl_Math_max($this.$length2, $set.$length2);
    $this.$length2 = $sz;
    ju_BitSet_ensureCapacity($this, ($sz + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] | $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
},
ju_BitSet_xor = ($this, $set) => {
    let $sz, $i, var$4;
    $sz = jl_Math_max($this.$length2, $set.$length2);
    $this.$length2 = $sz;
    ju_BitSet_ensureCapacity($this, ($sz + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] ^ $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_isEmpty = $this => {
    return $this.$length2 ? 0 : 1;
};
function jur_LowHighSurrogateRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt3 = 0;
}
let jur_LowHighSurrogateRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt3 ? $rt_s(369) : $rt_s(370);
    var$2 = $this.$surrChars.$toString();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(371)), var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
};
function jur_CompositeRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
let jur_CompositeRangeSet__init_0 = ($this, $withoutSurrogates, $withSurrogates) => {
    jur_AbstractSet__init_($this);
    $this.$withoutSurrogates = $withoutSurrogates;
    $this.$withSurrogates = $withSurrogates;
},
jur_CompositeRangeSet__init_ = (var_0, var_1) => {
    let var_2 = new jur_CompositeRangeSet();
    jur_CompositeRangeSet__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_CompositeRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift, var$5, var$6, var$7, var$8, var$9;
    $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        a: {
            var$5 = $this.$withSurrogates;
            var$6 = $matchResult.$leftBound;
            $shift = $matchResult.$rightBound;
            var$7 = $stringIndex + 1 | 0;
            $shift = $rt_compare(var$7, $shift);
            if ($shift > 0) {
                $matchResult.$hitEnd = 1;
                $shift = (-1);
            } else {
                var$8 = $testString;
                var$9 = jl_String_charAt(var$8, $stringIndex);
                if (!var$5.$surrChars.$contains(var$9))
                    $shift = (-1);
                else {
                    if (jl_Character_isHighSurrogate(var$9)) {
                        if ($shift < 0 && jl_Character_isLowSurrogate(jl_String_charAt(var$8, var$7))) {
                            $shift = (-1);
                            break a;
                        }
                    } else if (jl_Character_isLowSurrogate(var$9) && $stringIndex > var$6 && jl_Character_isHighSurrogate(jl_String_charAt(var$8, $stringIndex - 1 | 0))) {
                        $shift = (-1);
                        break a;
                    }
                    $shift = var$5.$next1.$matches(var$7, $testString, $matchResult);
                }
            }
        }
    if ($shift >= 0)
        return $shift;
    return (-1);
},
jur_CompositeRangeSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
    $this.$withSurrogates.$next1 = $next;
    $this.$withoutSurrogates.$setNext($next);
},
jur_CompositeRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_String_valueOf($this.$withoutSurrogates);
    var$2 = jl_String_valueOf($this.$withSurrogates);
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(372)), var$1), $rt_s(373)), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jur_CompositeRangeSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jur_CompositeRangeSet_first = ($this, $set) => {
    return 1;
};
function jur_SupplRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$chars = null;
    a.$alt0 = 0;
}
let jur_SupplRangeSet__init_ = ($this, $cc) => {
    jur_AbstractSet__init_($this);
    $this.$chars = $cc.$getInstance1();
    $this.$alt0 = $cc.$alt;
},
jur_SupplRangeSet__init_0 = var_0 => {
    let var_1 = new jur_SupplRangeSet();
    jur_SupplRangeSet__init_(var_1, var_0);
    return var_1;
},
jur_SupplRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $low, var$6, $high, $offset;
    $strLength = $matchResult.$rightBound;
    if ($stringIndex < $strLength) {
        $low = $stringIndex + 1 | 0;
        var$6 = $testString;
        $high = jl_String_charAt(var$6, $stringIndex);
        if ($this.$contains($high)) {
            $offset = $this.$next1.$matches($low, $testString, $matchResult);
            if ($offset > 0)
                return $offset;
        }
        if ($low < $strLength) {
            $stringIndex = $low + 1 | 0;
            $low = jl_String_charAt(var$6, $low);
            if (jl_Character_isSurrogatePair($high, $low) && $this.$contains(jl_Character_toCodePoint($high, $low)))
                return $this.$next1.$matches($stringIndex, $testString, $matchResult);
        }
    }
    return (-1);
},
jur_SupplRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt0 ? $rt_s(369) : $rt_s(370);
    var$2 = $this.$chars.$toString();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(371)), var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jur_SupplRangeSet_contains = ($this, $ch) => {
    return $this.$chars.$contains($ch);
},
jur_SupplRangeSet_first = ($this, $set) => {
    if ($set instanceof jur_SupplCharSet)
        return $this.$chars.$contains($set.$ch1);
    if ($set instanceof jur_CharSet)
        return $this.$chars.$contains($set.$ch0);
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects($this.$chars, $set.$chars);
    if (!($set instanceof jur_RangeSet))
        return 1;
    return jur_AbstractCharClass_intersects($this.$chars, $set.$chars1);
},
jur_SupplRangeSet_getChars = $this => {
    return $this.$chars;
},
jur_SupplRangeSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_SupplRangeSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_UCISupplRangeSet = $rt_classWithoutFields(jur_SupplRangeSet),
jur_UCISupplRangeSet_contains = ($this, $ch) => {
    return $this.$chars.$contains(jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch)));
},
jur_UCISupplRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt0 ? $rt_s(369) : $rt_s(370);
    var$2 = $this.$chars.$toString();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(374)), var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
};
function jur_UCIRangeSet() {
    let a = this; jur_LeafSet.call(a);
    a.$chars2 = null;
    a.$alt1 = 0;
}
let jur_UCIRangeSet__init_0 = ($this, $cc) => {
    jur_LeafSet__init_($this);
    $this.$chars2 = $cc.$getInstance1();
    $this.$alt1 = $cc.$alt;
},
jur_UCIRangeSet__init_ = var_0 => {
    let var_1 = new jur_UCIRangeSet();
    jur_UCIRangeSet__init_0(var_1, var_0);
    return var_1;
},
jur_UCIRangeSet_accepts = ($this, $strIndex, $testString) => {
    return !$this.$chars2.$contains(jl_Character_toLowerCase(jl_Character_toUpperCase(jl_String_charAt($testString, $strIndex)))) ? (-1) : 1;
},
jur_UCIRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt1 ? $rt_s(369) : $rt_s(370);
    var$2 = $this.$chars2.$toString();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(374)), var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
};
function jur_RangeSet() {
    let a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt2 = 0;
}
let jur_RangeSet__init_0 = ($this, $cc) => {
    jur_LeafSet__init_($this);
    $this.$chars1 = $cc.$getInstance1();
    $this.$alt2 = $cc.$alt;
},
jur_RangeSet__init_ = var_0 => {
    let var_1 = new jur_RangeSet();
    jur_RangeSet__init_0(var_1, var_0);
    return var_1;
},
jur_RangeSet_accepts = ($this, $strIndex, $testString) => {
    return !$this.$chars1.$contains(jl_String_charAt($testString, $strIndex)) ? (-1) : 1;
},
jur_RangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt2 ? $rt_s(369) : $rt_s(370);
    var$2 = $this.$chars1.$toString();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(371)), var$1), var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jur_RangeSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return $this.$chars1.$contains($set.$ch0);
    if ($set instanceof jur_RangeSet)
        return jur_AbstractCharClass_intersects($this.$chars1, $set.$chars1);
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return jur_AbstractCharClass_intersects($this.$chars1, $set.$chars);
};
function jur_HangulDecomposedCharSet() {
    let a = this; jur_JointSet.call(a);
    a.$decomposedChar = null;
    a.$decomposedCharUTF160 = null;
    a.$decomposedCharLength = 0;
}
let jur_HangulDecomposedCharSet__init_0 = ($this, $decomposedChar, $decomposedCharLength) => {
    jur_AbstractSet__init_($this);
    $this.$decomposedChar = $decomposedChar;
    $this.$decomposedCharLength = $decomposedCharLength;
},
jur_HangulDecomposedCharSet__init_ = (var_0, var_1) => {
    let var_2 = new jur_HangulDecomposedCharSet();
    jur_HangulDecomposedCharSet__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_HangulDecomposedCharSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_HangulDecomposedCharSet_getDecomposedChar = $this => {
    if ($this.$decomposedCharUTF160 === null)
        $this.$decomposedCharUTF160 = jl_String__init_0($this.$decomposedChar);
    return $this.$decomposedCharUTF160;
},
jur_HangulDecomposedCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jur_HangulDecomposedCharSet_getDecomposedChar($this);
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(375)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_HangulDecomposedCharSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, $decompSyllable, $vIndex, $tIndex, var$8, var$9, $curSymb, $i, var$12, $lIndex, $decompCurSymb, var$15, $syllIndex;
    $rightBound = $matchResult.$rightBound;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$8 = $strIndex + 1 | 0;
    var$9 = $testString;
    $curSymb = jl_String_charAt(var$9, $strIndex);
    $i = $curSymb - 44032 | 0;
    if ($i >= 0 && $i < 11172) {
        var$12 = 4352 + ($i / 588 | 0) | 0;
        $lIndex = 4449 + (($i % 588 | 0) / 28 | 0) | 0;
        $strIndex = $i % 28 | 0;
        $decompCurSymb = !$strIndex ? $rt_createIntArrayFromData([var$12, $lIndex]) : $rt_createIntArrayFromData([var$12, $lIndex, 4519 + $strIndex | 0]);
    } else
        $decompCurSymb = null;
    if ($decompCurSymb !== null) {
        var$15 = $decompCurSymb.data;
        $i = 0;
        $strIndex = var$15.length;
        $syllIndex = $this.$decomposedCharLength;
        if ($strIndex != $syllIndex)
            return (-1);
        while (true) {
            if ($i >= $syllIndex)
                return $this.$next1.$matches(var$8, $testString, $matchResult);
            if (var$15[$i] != $this.$decomposedChar.data[$i])
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    $decompSyllable = $decompSyllable.data;
    $decompSyllable[0] = $curSymb;
    $lIndex = $curSymb - 4352 | 0;
    if ($lIndex >= 0 && $lIndex < 19) {
        if (var$8 < $rightBound) {
            $curSymb = jl_String_charAt(var$9, var$8);
            $vIndex = $curSymb - 4449 | 0;
        }
        if ($vIndex >= 0 && $vIndex < 21) {
            $lIndex = var$8 + 1 | 0;
            $decompSyllable[1] = $curSymb;
            if ($lIndex < $rightBound) {
                $curSymb = jl_String_charAt(var$9, $lIndex);
                $tIndex = $curSymb - 4519 | 0;
            }
            if ($tIndex >= 0 && $tIndex < 28) {
                a: {
                    $strIndex = $lIndex + 1 | 0;
                    $decompSyllable[2] = $curSymb;
                    if ($this.$decomposedCharLength == 3) {
                        $lIndex = $decompSyllable[0];
                        var$15 = $this.$decomposedChar.data;
                        if ($lIndex == var$15[0] && $decompSyllable[1] == var$15[1] && $decompSyllable[2] == var$15[2]) {
                            $strIndex = $this.$next1.$matches($strIndex, $testString, $matchResult);
                            break a;
                        }
                    }
                    $strIndex = (-1);
                }
                return $strIndex;
            }
            b: {
                if ($this.$decomposedCharLength == 2) {
                    $syllIndex = $decompSyllable[0];
                    var$15 = $this.$decomposedChar.data;
                    if ($syllIndex == var$15[0] && $decompSyllable[1] == var$15[1]) {
                        $strIndex = $this.$next1.$matches($lIndex, $testString, $matchResult);
                        break b;
                    }
                }
                $strIndex = (-1);
            }
            return $strIndex;
        }
        return (-1);
    }
    return (-1);
},
jur_HangulDecomposedCharSet_first = ($this, $set) => {
    return $set instanceof jur_HangulDecomposedCharSet && !jl_String_equals(jur_HangulDecomposedCharSet_getDecomposedChar($set), jur_HangulDecomposedCharSet_getDecomposedChar($this)) ? 0 : 1;
},
jur_HangulDecomposedCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch0 = 0;
}
let jur_CharSet__init_0 = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch0 = $ch;
},
jur_CharSet__init_ = var_0 => {
    let var_1 = new jur_CharSet();
    jur_CharSet__init_0(var_1, var_0);
    return var_1;
},
jur_CharSet_charCount = $this => {
    return 1;
},
jur_CharSet_accepts = ($this, $strIndex, $testString) => {
    return $this.$ch0 != jl_String_charAt($testString, $strIndex) ? (-1) : 1;
},
jur_CharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound;
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = jl_String_indexOf($testStr, $this.$ch0, $strIndex);
        if (var$6 < 0)
            return (-1);
        var$7 = $this.$next1;
        $strIndex = var$6 + 1 | 0;
        if (var$7.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
},
jur_CharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = jl_String_lastIndexOf($testStr, $this.$ch0, $lastIndex);
            if (var$6 < 0)
                break a;
            if (var$6 < $strIndex)
                break a;
            if ($this.$next1.$matches(var$6 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$6 + (-1) | 0;
        }
        return var$6;
    }
    return (-1);
},
jur_CharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch0;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_AbstractStringBuilder_append0(var$2, var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_CharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return $set.$ch0 != $this.$ch0 ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains($this.$ch0);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return jur_RangeSet_accepts($set, 0, jl_Character_toString($this.$ch0)) <= 0 ? 0 : 1;
};
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch4 = 0;
}
let jur_UCICharSet__init_0 = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch4 = jl_Character_toLowerCase(jl_Character_toUpperCase($ch));
},
jur_UCICharSet__init_ = var_0 => {
    let var_1 = new jur_UCICharSet();
    jur_UCICharSet__init_0(var_1, var_0);
    return var_1;
},
jur_UCICharSet_accepts = ($this, $strIndex, $testString) => {
    return $this.$ch4 != jl_Character_toLowerCase(jl_Character_toUpperCase(jl_String_charAt($testString, $strIndex))) ? (-1) : 1;
},
jur_UCICharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch4;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(376)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_CICharSet() {
    let a = this; jur_LeafSet.call(a);
    a.$ch3 = 0;
    a.$supplement = 0;
}
let jur_CICharSet__init_0 = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch3 = $ch;
    $this.$supplement = jur_Pattern_getSupplement($ch);
},
jur_CICharSet__init_ = var_0 => {
    let var_1 = new jur_CICharSet();
    jur_CICharSet__init_0(var_1, var_0);
    return var_1;
},
jur_CICharSet_accepts = ($this, $strIndex, $testString) => {
    let var$3;
    var$3 = $this.$ch3;
    $testString = $testString;
    return var$3 != jl_String_charAt($testString, $strIndex) && $this.$supplement != jl_String_charAt($testString, $strIndex) ? (-1) : 1;
},
jur_CICharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch3;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(377)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_DecomposedCharSet() {
    let a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF16 = null;
    a.$decomposedChar0 = null;
    a.$decomposedCharLength0 = 0;
}
let jur_DecomposedCharSet__init_ = ($this, $decomposedChar, $decomposedCharLength) => {
    jur_AbstractSet__init_($this);
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar0 = $decomposedChar;
    $this.$decomposedCharLength0 = $decomposedCharLength;
},
jur_DecomposedCharSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_DecomposedCharSet();
    jur_DecomposedCharSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_DecomposedCharSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_DecomposedCharSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $decCodePoint, $rightBound, $curChar, var$7, $decCurCodePoint, var$9, var$10, $readCodePoints;
    $decCodePoint = $rt_createIntArray(4);
    $rightBound = $matchResult.$rightBound;
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound);
    var$7 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_getDecomposition($curChar);
    if ($decCurCodePoint === null) {
        $decCurCodePoint = $decCodePoint.data;
        $strIndex = 1;
        $decCurCodePoint[0] = $curChar;
    } else {
        $strIndex = $decCurCodePoint.data.length;
        jl_System_fastArraycopy($decCurCodePoint, 0, $decCodePoint, 0, $strIndex);
        $strIndex = 0 + $strIndex | 0;
    }
    a: {
        if (var$7 < $rightBound) {
            var$9 = $decCodePoint.data;
            $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
            while ($strIndex < 4) {
                if (!(($curChar != 832 ? 0 : 1) | ($curChar != 833 ? 0 : 1) | ($curChar != 835 ? 0 : 1) | ($curChar != 836 ? 0 : 1))) {
                    var$10 = $strIndex + 1 | 0;
                    var$9[$strIndex] = $curChar;
                } else {
                    $decCurCodePoint = (jur_Lexer_getDecomposition($curChar)).data;
                    if ($decCurCodePoint.length != 2) {
                        var$10 = $strIndex + 1 | 0;
                        var$9[$strIndex] = $decCurCodePoint[0];
                    } else {
                        $readCodePoints = $strIndex + 1 | 0;
                        var$9[$strIndex] = $decCurCodePoint[0];
                        var$10 = $readCodePoints + 1 | 0;
                        var$9[$readCodePoints] = $decCurCodePoint[1];
                    }
                }
                var$7 = var$7 + $this.$readCharsForCodePoint | 0;
                if (var$7 >= $rightBound) {
                    $strIndex = var$10;
                    break a;
                }
                $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
                $strIndex = var$10;
            }
        }
    }
    if ($strIndex != $this.$decomposedCharLength0)
        return (-1);
    $decCurCodePoint = $decCodePoint.data;
    $curChar = 0;
    while (true) {
        if ($curChar >= $strIndex)
            return $this.$next1.$matches(var$7, $testString, $matchResult);
        if ($decCurCodePoint[$curChar] != $this.$decomposedChar0.data[$curChar])
            break;
        $curChar = $curChar + 1 | 0;
    }
    return (-1);
},
jur_DecomposedCharSet_getDecomposedChar = $this => {
    let $strBuff, $i;
    if ($this.$decomposedCharUTF16 === null) {
        $strBuff = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($strBuff);
        $i = 0;
        while ($i < $this.$decomposedCharLength0) {
            jl_AbstractStringBuilder_append1($strBuff, jl_Character_toChars($this.$decomposedChar0.data[$i]));
            $i = $i + 1 | 0;
        }
        $this.$decomposedCharUTF16 = jl_AbstractStringBuilder_toString($strBuff);
    }
    return $this.$decomposedCharUTF16;
},
jur_DecomposedCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jur_DecomposedCharSet_getDecomposedChar($this);
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(378)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_DecomposedCharSet_codePointAt = ($this, $strIndex, $testString, $rightBound) => {
    let $curChar, $low, $curCodePointUTF16;
    $this.$readCharsForCodePoint = 1;
    if ($strIndex >= ($rightBound - 1 | 0))
        $curChar = jl_String_charAt($testString, $strIndex);
    else {
        $rightBound = $strIndex + 1 | 0;
        $testString = $testString;
        $curChar = jl_String_charAt($testString, $strIndex);
        $low = jl_String_charAt($testString, $rightBound);
        if (jl_Character_isSurrogatePair($curChar, $low)) {
            $curCodePointUTF16 = $rt_createCharArray(2).data;
            $curCodePointUTF16[0] = $curChar;
            $curCodePointUTF16[1] = $low;
            $rightBound = $curCodePointUTF16.length;
            if (0 < $rightBound && $rightBound <= $rightBound) {
                $curChar = 0 < ($rightBound - 1 | 0) && jl_Character_isHighSurrogate($curCodePointUTF16[0]) && jl_Character_isLowSurrogate($curCodePointUTF16[1]) ? jl_Character_toCodePoint($curCodePointUTF16[0], $curCodePointUTF16[1]) : $curCodePointUTF16[0];
                $this.$readCharsForCodePoint = 2;
            } else {
                $testString = new jl_IndexOutOfBoundsException;
                jl_Exception__init_0($testString);
                $rt_throw($testString);
            }
        }
    }
    return $curChar;
},
jur_DecomposedCharSet_first = ($this, $set) => {
    return $set instanceof jur_DecomposedCharSet && !jl_String_equals(jur_DecomposedCharSet_getDecomposedChar($set), jur_DecomposedCharSet_getDecomposedChar($this)) ? 0 : 1;
},
jur_DecomposedCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jur_UCIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet),
jur_CIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet),
jur_PossessiveGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_PossessiveGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_PosPlusGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_PosPlusGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            $stringIndex = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
            if ($stringIndex <= $nextIndex)
                break;
            $nextIndex = $stringIndex;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_AltGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_AltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_AltGroupQuantifierSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
    $this.$innerSet.$setNext($next);
},
jur_PosAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet),
jur_PosAltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next1.$matches($nextIndex, $testString, $matchResult);
},
jur_PosAltGroupQuantifierSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
};
function jur_CompositeGroupQuantifierSet() {
    let a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier = null;
    a.$setCounter = 0;
}
let jur_CompositeGroupQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type, $setCounter) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$quantifier = $quant;
    $this.$setCounter = $setCounter;
},
jur_CompositeGroupQuantifierSet__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jur_CompositeGroupQuantifierSet();
    jur_CompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jur_CompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $enterCounter, $nextIndex;
    $enterCounter = jur_MatchResultImpl_getEnterCounter($matchResult, $this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier.$max2)
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$setCounter;
    $enterCounter = $enterCounter + 1 | 0;
    jur_MatchResultImpl_setEnterCounter($matchResult, $nextIndex, $enterCounter);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
        return $nextIndex;
    }
    $nextIndex = $this.$setCounter;
    $enterCounter = $enterCounter + (-1) | 0;
    jur_MatchResultImpl_setEnterCounter($matchResult, $nextIndex, $enterCounter);
    if ($enterCounter >= $this.$quantifier.$min3)
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
    return (-1);
},
jur_CompositeGroupQuantifierSet_getName = $this => {
    return jur_Quantifier_toString($this.$quantifier);
},
jur_PosCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet),
jur_PosCompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier.$max2;
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier.$min3)
        return (-1);
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_ReluctantGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_ReluctantGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    $res = $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
},
jur_RelAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet),
jur_RelAltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    return $nextIndex;
},
jur_RelCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet),
jur_RelCompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $enterCounter, var$5, $nextIndex;
    $enterCounter = jur_MatchResultImpl_getEnterCounter($matchResult, $this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    var$5 = $this.$quantifier;
    if ($enterCounter >= var$5.$max2) {
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < var$5.$min3) {
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next1.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, 0);
            return $nextIndex;
        }
        jur_MatchResultImpl_setEnterCounter($matchResult, $this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
},
jur_DotAllQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet),
jur_DotAllQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength;
    $strLength = $matchResult.$rightBound;
    if ($strLength > $stringIndex)
        return $this.$next1.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_DotAllQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength;
    $strLength = $matchResult.$rightBound;
    if ($this.$next1.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
},
jur_DotAllQuantifierSet_getName = $this => {
    return $rt_s(379);
};
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt = null;
}
let jur_DotQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $startSearch;
    $strLength = $matchResult.$rightBound;
    $startSearch = jur_DotQuantifierSet_findLineTerminator($this, $stringIndex, $strLength, $testString);
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next1.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_DotQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $res, $nextSearch, $leftBound;
    $strLength = $matchResult.$rightBound;
    $res = $this.$next1.$find0($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    $nextSearch = jur_DotQuantifierSet_findLineTerminator($this, $res, $strLength, $testString);
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    $strLength = jl_Math_max($res, $this.$next1.$findBack($res, $strLength, $testString, $matchResult));
    if ($strLength <= 0)
        $leftBound = $strLength ? (-1) : 0;
    else {
        $leftBound = $strLength - 1 | 0;
        $matchResult = $testString;
        a: {
            while (true) {
                if ($leftBound < $stringIndex) {
                    $leftBound = (-1);
                    break a;
                }
                if ($this.$lt.$isLineTerminator(jl_String_charAt($matchResult, $leftBound)))
                    break;
                $leftBound = $leftBound + (-1) | 0;
            }
        }
    }
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= $strLength ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
},
jur_DotQuantifierSet_findLineTerminator = ($this, $i, $to, $testString) => {
    let var$4;
    var$4 = $testString;
    while (true) {
        if ($i >= $to)
            return (-1);
        if ($this.$lt.$isLineTerminator(jl_String_charAt(var$4, $i)))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
jur_DotQuantifierSet_getName = $this => {
    return $rt_s(380);
},
jur_AbstractLineTerminator = $rt_classWithoutFields(),
jur_AbstractLineTerminator_unixLT = null,
jur_AbstractLineTerminator_unicodeLT = null,
jur_AbstractLineTerminator_getInstance = $flag => {
    let var$2;
    if (!($flag & 1)) {
        var$2 = jur_AbstractLineTerminator_unicodeLT;
        if (var$2 !== null)
            return var$2;
        var$2 = new jur_AbstractLineTerminator$2;
        jur_AbstractLineTerminator_unicodeLT = var$2;
        return var$2;
    }
    var$2 = jur_AbstractLineTerminator_unixLT;
    if (var$2 !== null)
        return var$2;
    var$2 = new jur_AbstractLineTerminator$1;
    jur_AbstractLineTerminator_unixLT = var$2;
    return var$2;
},
jur_PossessiveQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_PossessiveQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound)
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_PossessiveAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet),
jur_PossessiveAltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_PossessiveCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet),
jur_PossessiveCompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $min, $max, $i, $shift;
    var$4 = $this.$quantifier0;
    $min = var$4.$min3;
    $max = var$4.$max2;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound)
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next1.$matches($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_ReluctantQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_ReluctantQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    while (true) {
        var$4 = $this.$next1.$matches($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
},
jur_ReluctantAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet),
jur_ReluctantAltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
},
jur_ReluctantCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet),
jur_ReluctantCompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $min, $max, $i, var$8, var$9;
    var$4 = $this.$quantifier0;
    $min = var$4.$min3;
    $max = var$4.$max2;
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$8 = $this.$next1.$matches($stringIndex, $testString, $matchResult);
                    if (var$8 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$rightBound) {
                        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$8 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$8 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$8;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$rightBound) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$9 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$9 < 1)
            break;
        $stringIndex = $stringIndex + var$9 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_SOLSet = $rt_classWithoutFields(jur_AbstractSet),
jur_SOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    if ($strIndex && !($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound))
        return (-1);
    return $this.$next1.$matches($strIndex, $testString, $matchResult);
},
jur_SOLSet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_SOLSet_getName = $this => {
    return $rt_s(381);
};
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
let jur_WordBoundary__init_0 = ($this, $positive) => {
    jur_AbstractSet__init_($this);
    $this.$positive = $positive;
},
jur_WordBoundary__init_ = var_0 => {
    let var_1 = new jur_WordBoundary();
    jur_WordBoundary__init_0(var_1, var_0);
    return var_1;
},
jur_WordBoundary_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $ch1, $ch2, $left, $leftBound;
    $ch1 = $stringIndex >= $matchResult.$rightBound ? 32 : jl_String_charAt($testString, $stringIndex);
    if (!$stringIndex)
        $ch2 = 32;
    else {
        $left = $stringIndex - 1 | 0;
        $ch2 = jl_String_charAt($testString, $left);
    }
    $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound;
    return ($ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1) ^ ($ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1) ^ $this.$positive ? (-1) : $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_WordBoundary_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_WordBoundary_getName = $this => {
    return $rt_s(382);
},
jur_WordBoundary_isSpace = ($this, $ch, $index, $leftBound, $testString) => {
    if (!jl_Character_isLetterOrDigit($ch) && $ch != 95) {
        a: {
            if (jl_Character_getType($ch) == 6) {
                $testString = $testString;
                while (true) {
                    $index = $index + (-1) | 0;
                    if ($index < $leftBound)
                        break a;
                    $ch = jl_String_charAt($testString, $index);
                    if (jl_Character_isLetterOrDigit($ch))
                        return 0;
                    if (jl_Character_getType($ch) != 6)
                        return 1;
                }
            }
        }
        return 1;
    }
    return 0;
},
jur_PreviousMatch = $rt_classWithoutFields(jur_AbstractSet),
jur_PreviousMatch_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($stringIndex != $matchResult.$previousMatch)
        return (-1);
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_PreviousMatch_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PreviousMatch_getName = $this => {
    return $rt_s(383);
};
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter0 = 0;
}
let jur_EOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter0 = $counter;
},
jur_EOLSet__init_0 = var_0 => {
    let var_1 = new jur_EOLSet();
    jur_EOLSet__init_(var_1, var_0);
    return var_1;
},
jur_EOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, var$5, var$6, $ch;
    $rightBound = $matchResult.$anchoringBounds ? $matchResult.$rightBound : $testString.$nativeString.length;
    if ($strIndex >= $rightBound) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, 0);
        return $this.$next1.$matches($strIndex, $testString, $matchResult);
    }
    var$5 = $rightBound - $strIndex | 0;
    if (var$5 == 2) {
        var$6 = $testString;
        if (jl_String_charAt(var$6, $strIndex) == 13 && jl_String_charAt(var$6, $strIndex + 1 | 0) == 10) {
            jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, 0);
            return $this.$next1.$matches($strIndex, $testString, $matchResult);
        }
    }
    a: {
        if (var$5 == 1) {
            $ch = jl_String_charAt($testString, $strIndex);
            if ($ch == 10)
                break a;
            if ($ch == 13)
                break a;
            if ($ch == 133)
                break a;
            if (($ch | 1) == 8233)
                break a;
        }
        return (-1);
    }
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, 0);
    return $this.$next1.$matches($strIndex, $testString, $matchResult);
},
jur_EOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter0) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter0, (-1));
    return $res;
},
jur_EOLSet_getName = $this => {
    return $rt_s(384);
},
jur_EOISet = $rt_classWithoutFields(jur_AbstractSet),
jur_EOISet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($stringIndex < (!$matchResult.$transparentBounds ? $matchResult.$rightBound : $testString.$nativeString.length))
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_EOISet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_EOISet_getName = $this => {
    return $rt_s(385);
};
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt1 = null;
}
let jur_MultiLineSOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let var$4, var$5, var$6;
    a: {
        if ($strIndex != $matchResult.$rightBound) {
            if (!$strIndex)
                break a;
            if ($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound)
                break a;
            var$4 = $this.$lt1;
            var$5 = $strIndex - 1 | 0;
            var$6 = $testString;
            if (var$4.$isAfterLineTerminator(jl_String_charAt(var$6, var$5), jl_String_charAt(var$6, $strIndex)))
                break a;
        }
        return (-1);
    }
    return $this.$next1.$matches($strIndex, $testString, $matchResult);
},
jur_MultiLineSOLSet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_MultiLineSOLSet_getName = $this => {
    return $rt_s(386);
},
jur_DotAllSet = $rt_classWithoutFields(jur_JointSet),
jur_DotAllSet__init_0 = $this => {
    jur_AbstractSet__init_($this);
},
jur_DotAllSet__init_ = () => {
    let var_0 = new jur_DotAllSet();
    jur_DotAllSet__init_0(var_0);
    return var_0;
},
jur_DotAllSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, $high;
    $strLength = $matchResult.$rightBound;
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$6 = $testString;
    $high = jl_String_charAt(var$6, $stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        $stringIndex = $stringIndex + 2 | 0;
        if ($stringIndex <= $strLength && jl_Character_isSurrogatePair($high, jl_String_charAt(var$6, var$5)))
            return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    }
    return $this.$next1.$matches(var$5, $testString, $matchResult);
},
jur_DotAllSet_getName = $this => {
    return $rt_s(387);
},
jur_DotAllSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_DotAllSet_getType = $this => {
    return (-2147483602);
},
jur_DotAllSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt0 = null;
}
let jur_DotSet__init_ = ($this, $lt) => {
    jur_AbstractSet__init_($this);
    $this.$lt0 = $lt;
},
jur_DotSet__init_0 = var_0 => {
    let var_1 = new jur_DotSet();
    jur_DotSet__init_(var_1, var_0);
    return var_1;
},
jur_DotSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, $high, $low;
    $strLength = $matchResult.$rightBound;
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$6 = $testString;
    $high = jl_String_charAt(var$6, $stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        $stringIndex = $stringIndex + 2 | 0;
        if ($stringIndex <= $strLength) {
            $low = jl_String_charAt(var$6, var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$lt0.$isLineTerminator(jl_Character_toCodePoint($high, $low)) ? (-1) : $this.$next1.$matches($stringIndex, $testString, $matchResult);
        }
    }
    return $this.$lt0.$isLineTerminator($high) ? (-1) : $this.$next1.$matches(var$5, $testString, $matchResult);
},
jur_DotSet_getName = $this => {
    return $rt_s(139);
},
jur_DotSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_DotSet_getType = $this => {
    return (-2147483602);
},
jur_DotSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter3 = 0;
}
let jur_UEOLSet__init_0 = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter3 = $counter;
},
jur_UEOLSet__init_ = var_0 => {
    let var_1 = new jur_UEOLSet();
    jur_UEOLSet__init_0(var_1, var_0);
    return var_1;
},
jur_UEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound;
    $rightBound = $matchResult.$anchoringBounds ? $matchResult.$rightBound : $testString.$nativeString.length;
    if ($strIndex >= $rightBound) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter3, 0);
        return $this.$next1.$matches($strIndex, $testString, $matchResult);
    }
    if (($rightBound - $strIndex | 0) == 1 && jl_String_charAt($testString, $strIndex) == 10) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter3, 1);
        return $this.$next1.$matches($strIndex + 1 | 0, $testString, $matchResult);
    }
    return (-1);
},
jur_UEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter3) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter3, (-1));
    return $res;
},
jur_UEOLSet_getName = $this => {
    return $rt_s(384);
};
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
let jur_UMultiLineEOLSet__init_0 = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter2 = $counter;
},
jur_UMultiLineEOLSet__init_ = var_0 => {
    let var_1 = new jur_UMultiLineEOLSet();
    jur_UMultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
},
jur_UMultiLineEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    if (($matchResult.$anchoringBounds ? $matchResult.$rightBound - $strIndex | 0 : $testString.$nativeString.length - $strIndex | 0) <= 0) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, 0);
        return $this.$next1.$matches($strIndex, $testString, $matchResult);
    }
    if (jl_String_charAt($testString, $strIndex) != 10)
        return (-1);
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, 1);
    return $this.$next1.$matches($strIndex + 1 | 0, $testString, $matchResult);
},
jur_UMultiLineEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter2) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter2, (-1));
    return $res;
},
jur_UMultiLineEOLSet_getName = $this => {
    return $rt_s(388);
};
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter = 0;
}
let jur_MultiLineEOLSet__init_0 = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter = $counter;
},
jur_MultiLineEOLSet__init_ = var_0 => {
    let var_1 = new jur_MultiLineEOLSet();
    jur_MultiLineEOLSet__init_0(var_1, var_0);
    return var_1;
},
jur_MultiLineEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $strDif, $ch1, $ch2, var$7;
    $strDif = $matchResult.$anchoringBounds ? $matchResult.$rightBound - $strIndex | 0 : $testString.$nativeString.length - $strIndex | 0;
    if (!$strDif) {
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
        return $this.$next1.$matches($strIndex, $testString, $matchResult);
    }
    if ($strDif < 2) {
        $ch1 = jl_String_charAt($testString, $strIndex);
        $ch2 = 97;
    } else {
        var$7 = $testString;
        $ch1 = jl_String_charAt(var$7, $strIndex);
        $ch2 = jl_String_charAt(var$7, $strIndex + 1 | 0);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
            return $this.$next1.$matches($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
                return $this.$next1.$matches($strIndex, $testString, $matchResult);
            }
            jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, 0);
            return $this.$next1.$matches($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
},
jur_MultiLineEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter, (-1));
    return $res;
},
jur_MultiLineEOLSet_getName = $this => {
    return $rt_s(389);
};
function jur_CIBackReferenceSet() {
    let a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter1 = 0;
}
let jur_CIBackReferenceSet__init_ = ($this, $groupIndex, $consCounter) => {
    jur_AbstractSet__init_($this);
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter1 = $consCounter;
},
jur_CIBackReferenceSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CIBackReferenceSet();
    jur_CIBackReferenceSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CIBackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $i, var$6, var$7, var$8;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + $group.$nativeString.length | 0) <= $matchResult.$rightBound) {
        $i = 0;
        var$6 = $testString;
        while (true) {
            if ($i >= $group.$nativeString.length) {
                jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, $group.$nativeString.length);
                return $this.$next1.$matches($stringIndex + $group.$nativeString.length | 0, $testString, $matchResult);
            }
            var$7 = jl_String_charAt($group, $i);
            var$8 = $stringIndex + $i | 0;
            if (var$7 != jl_String_charAt(var$6, var$8) && jur_Pattern_getSupplement(jl_String_charAt($group, $i)) != jl_String_charAt(var$6, var$8))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
},
jur_CIBackReferenceSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_CIBackReferenceSet_getString = ($this, $matchResult) => {
    let var$2, var$3;
    var$2 = $this.$referencedGroup;
    var$3 = jur_MatchResultImpl_getStart($matchResult, var$2);
    var$2 = jur_MatchResultImpl_getEnd($matchResult, var$2);
    return (var$2 | var$3 | (var$2 - var$3 | 0)) >= 0 && var$2 <= $matchResult.$string4.$nativeString.length ? jl_String_substring($matchResult.$string4, var$3, var$2) : null;
},
jur_CIBackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(390)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_CIBackReferenceSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !jur_MatchResultImpl_getConsumed($matchResult, $this.$consCounter1) ? 0 : 1;
    jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, (-1));
    return $res;
},
jur_BackReferenceSet = $rt_classWithoutFields(jur_CIBackReferenceSet),
jur_BackReferenceSet__init_0 = ($this, $groupIndex, $consCounter) => {
    jur_CIBackReferenceSet__init_($this, $groupIndex, $consCounter);
},
jur_BackReferenceSet__init_ = (var_0, var_1) => {
    let var_2 = new jur_BackReferenceSet();
    jur_BackReferenceSet__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_BackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $shift;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + $group.$nativeString.length | 0) <= $matchResult.$rightBound) {
        $shift = !jl_String_startsWith0($testString, $group, $stringIndex) ? (-1) : $group.$nativeString.length;
        if ($shift < 0)
            return (-1);
        jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, $shift);
        return $this.$next1.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
},
jur_BackReferenceSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $group, $strLength, $testStr;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    $strLength = $matchResult.$leftBound;
    if ($group !== null && ($strIndex + $group.$nativeString.length | 0) <= $strLength) {
        $testStr = $testString;
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            $strIndex = jl_String_indexOf0($testStr, $group, $strIndex);
            if ($strIndex < 0)
                return (-1);
            if ($this.$next1.$matches($strIndex + $group.$nativeString.length | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = $strIndex + 1 | 0;
        }
        return $strIndex;
    }
    return (-1);
},
jur_BackReferenceSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $group, $testStr, var$7;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group === null)
        return (-1);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = jl_String_lastIndexOf1($testStr, $group, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$next1.$matches(var$7 + $group.$nativeString.length | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_BackReferenceSet_first = ($this, $set) => {
    return 1;
},
jur_BackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(391)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_UCIBackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
    this.$groupIndex1 = 0;
}
let jur_UCIBackReferenceSet__init_ = ($this, $groupIndex, $consCounter) => {
    jur_CIBackReferenceSet__init_($this, $groupIndex, $consCounter);
},
jur_UCIBackReferenceSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_UCIBackReferenceSet();
    jur_UCIBackReferenceSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_UCIBackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $i, var$6;
    $group = jur_CIBackReferenceSet_getString($this, $matchResult);
    if ($group !== null && ($stringIndex + $group.$nativeString.length | 0) <= $matchResult.$rightBound) {
        $i = 0;
        var$6 = $testString;
        while (true) {
            if ($i >= $group.$nativeString.length) {
                jur_MatchResultImpl_setConsumed($matchResult, $this.$consCounter1, $group.$nativeString.length);
                return $this.$next1.$matches($stringIndex + $group.$nativeString.length | 0, $testString, $matchResult);
            }
            if (jl_Character_toLowerCase(jl_Character_toUpperCase(jl_String_charAt($group, $i))) != jl_Character_toLowerCase(jl_Character_toUpperCase(jl_String_charAt(var$6, $stringIndex + $i | 0))))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
},
jur_UCIBackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex1;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(392)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jl_StringBuffer = $rt_classWithoutFields(jl_AbstractStringBuilder),
jl_StringBuffer_append = ($this, $s) => {
    let var$2, var$3, var$4, var$5, var$6, var$7;
    var$2 = 0;
    $s = $s;
    var$3 = $s.$nativeString.length;
    var$4 = $this;
    var$5 = var$4.$length1;
    var$4 = var$4;
    if (var$2 <= var$3 && var$3 <= $s.$nativeString.length) {
        jl_AbstractStringBuilder_insertSpace(var$4, var$5, (var$5 + var$3 | 0) - var$2 | 0);
        while (var$2 < var$3) {
            var$6 = var$4.$buffer.data;
            var$7 = var$5 + 1 | 0;
            var$6[var$5] = jl_String_charAt($s, var$2);
            var$2 = var$2 + 1 | 0;
            var$5 = var$7;
        }
        return $this;
    }
    $s = new jl_IndexOutOfBoundsException;
    jl_RuntimeException__init_($s);
    $rt_throw($s);
},
jl_StringBuffer_insert = ($this, var$1, var$2, var$3, var$4) => {
    jl_AbstractStringBuilder_insert0($this, var$1, var$2, var$3, var$4);
    return $this;
},
jl_StringBuffer_append0 = ($this, var$1, var$2, var$3) => {
    jl_AbstractStringBuilder_append2($this, var$1, var$2, var$3);
    return $this;
},
jl_StringBuffer_ensureCapacity = ($this, var$1) => {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
},
jl_StringBuffer_insert1 = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insert1($this, var$1, var$2);
    return $this;
},
jl_StringBuffer_insert0 = ($this, var$1, var$2) => {
    jl_AbstractStringBuilder_insert($this, var$1, var$2);
    return $this;
};
function jur_SequenceSet() {
    let a = this; jur_LeafSet.call(a);
    a.$string = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
let jur_SequenceSet_accepts = ($this, $strIndex, $testString) => {
    return !jur_SequenceSet_startsWith($this, $testString, $strIndex) ? (-1) : $this.$charCount0;
},
jur_SequenceSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, var$7;
    $strLength = $matchResult.$rightBound;
    var$5 = $testString;
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$6 = jl_String_charAt($this.$string, $this.$charCount0 - 1 | 0);
        a: {
            while (true) {
                var$7 = $this.$charCount0;
                if ($strIndex > ($strLength - var$7 | 0)) {
                    $strIndex = (-1);
                    break a;
                }
                var$7 = jl_String_charAt(var$5, ($strIndex + var$7 | 0) - 1 | 0);
                if (var$7 == var$6 && jur_SequenceSet_startsWith($this, $testString, $strIndex))
                    break;
                $strIndex = $strIndex + jur_SequenceSet$IntHash_get($this.$leftToRight, var$7) | 0;
            }
        }
        if ($strIndex < 0)
            return (-1);
        if ($this.$next1.$matches($strIndex + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = $strIndex + 1 | 0;
    }
    return $strIndex;
},
jur_SequenceSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let var$5, var$6, var$7;
    var$5 = $testString;
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        var$6 = jl_String_charAt($this.$string, 0);
        var$7 = (var$5.$nativeString.length - $lastIndex | 0) - $this.$charCount0 | 0;
        if (var$7 <= 0)
            $lastIndex = $lastIndex + var$7 | 0;
        a: {
            while (true) {
                if ($lastIndex < $strIndex) {
                    $lastIndex = (-1);
                    break a;
                }
                var$7 = jl_String_charAt(var$5, $lastIndex);
                if (var$7 == var$6 && jur_SequenceSet_startsWith($this, $testString, $lastIndex))
                    break;
                $lastIndex = $lastIndex - jur_SequenceSet$IntHash_get($this.$rightToLeft, var$7) | 0;
            }
        }
        if ($lastIndex < 0)
            return (-1);
        if ($this.$next1.$matches($lastIndex + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = $lastIndex + (-1) | 0;
    }
    return $lastIndex;
},
jur_SequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(393)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_SequenceSet_first = ($this, $set) => {
    let var$2;
    if ($set instanceof jur_CharSet)
        return $set.$ch0 != jl_String_charAt($this.$string, 0) ? 0 : 1;
    if ($set instanceof jur_RangeSet)
        return jur_RangeSet_accepts($set, 0, jl_String_substring($this.$string, 0, 1)) <= 0 ? 0 : 1;
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return $this.$string.$nativeString.length > 1 && $set.$ch1 == jl_Character_toCodePoint(jl_String_charAt($this.$string, 0), jl_String_charAt($this.$string, 1)) ? 1 : 0;
    }
    a: {
        b: {
            $set = $set;
            if (!$set.$contains(jl_String_charAt($this.$string, 0))) {
                if ($this.$string.$nativeString.length <= 1)
                    break b;
                if (!$set.$contains(jl_Character_toCodePoint(jl_String_charAt($this.$string, 0), jl_String_charAt($this.$string, 1))))
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
},
jur_SequenceSet_startsWith = ($this, $str, $from) => {
    let $i;
    $i = 0;
    $str = $str;
    while ($i < $this.$charCount0) {
        if (jl_String_charAt($str, $i + $from | 0) != jl_String_charAt($this.$string, $i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
};
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string3 = null;
}
let jur_UCISequenceSet__init_ = ($this, $substring) => {
    let $res, $i, var$4;
    jur_LeafSet__init_($this);
    $res = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($res);
    $i = 0;
    while (true) {
        var$4 = $rt_compare($i, $substring.$length1);
        if (var$4 >= 0) {
            $this.$string3 = jl_AbstractStringBuilder_toString($res);
            $this.$charCount0 = $res.$length1;
            return;
        }
        if ($i < 0)
            break;
        if (var$4 >= 0)
            break;
        jl_AbstractStringBuilder_append0($res, jl_Character_toLowerCase(jl_Character_toUpperCase($substring.$buffer.data[$i])));
        $i = $i + 1 | 0;
    }
    $substring = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0($substring);
    $rt_throw($substring);
},
jur_UCISequenceSet__init_0 = var_0 => {
    let var_1 = new jur_UCISequenceSet();
    jur_UCISequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_UCISequenceSet_accepts = ($this, $strIndex, $testString) => {
    let $i, var$4;
    $i = 0;
    var$4 = $testString;
    while (true) {
        if ($i >= $this.$string3.$nativeString.length)
            return $this.$string3.$nativeString.length;
        if (jl_String_charAt($this.$string3, $i) != jl_Character_toLowerCase(jl_Character_toUpperCase(jl_String_charAt(var$4, $strIndex + $i | 0))))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_UCISequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string3;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(394)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string2 = null;
}
let jur_CISequenceSet__init_ = ($this, $substring) => {
    jur_LeafSet__init_($this);
    $this.$string2 = jl_AbstractStringBuilder_toString($substring);
    $this.$charCount0 = $substring.$length1;
},
jur_CISequenceSet__init_0 = var_0 => {
    let var_1 = new jur_CISequenceSet();
    jur_CISequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_CISequenceSet_accepts = ($this, $strIndex, $testString) => {
    let $i, var$4, var$5;
    $i = 0;
    $testString = $testString;
    while (true) {
        if ($i >= $this.$string2.$nativeString.length)
            return $this.$string2.$nativeString.length;
        var$4 = jl_String_charAt($this.$string2, $i);
        var$5 = $strIndex + $i | 0;
        if (var$4 != jl_String_charAt($testString, var$5) && jur_Pattern_getSupplement(jl_String_charAt($this.$string2, $i)) != jl_String_charAt($testString, var$5))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_CISequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string2;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(395)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch2 = 0;
}
let jur_UCISupplCharSet_accepts = ($this, $strIndex, $testString) => {
    let $low, $high;
    $low = $strIndex + 1 | 0;
    $testString = $testString;
    $high = jl_String_charAt($testString, $strIndex);
    $low = jl_String_charAt($testString, $low);
    return $this.$ch2 != jl_Character_toLowerCase0(jl_Character_toUpperCase0(jl_Character_toCodePoint($high, $low))) ? (-1) : 2;
},
jur_UCISupplCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jl_String__init_0(jl_Character_toChars($this.$ch2));
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(376)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low = 0;
}
let jur_LowSurrogateCharSet__init_0 = ($this, $low) => {
    jur_AbstractSet__init_($this);
    $this.$low = $low;
},
jur_LowSurrogateCharSet__init_ = var_0 => {
    let var_1 = new jur_LowSurrogateCharSet();
    jur_LowSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
},
jur_LowSurrogateCharSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_LowSurrogateCharSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, var$5, $low;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$rightBound) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$5 = $testString;
    $low = jl_String_charAt(var$5, $stringIndex);
    if ($stringIndex > $matchResult.$leftBound && jl_Character_isHighSurrogate(jl_String_charAt(var$5, $stringIndex - 1 | 0)))
        return (-1);
    if ($this.$low != $low)
        return (-1);
    return $this.$next1.$matches(var$4, $testString, $matchResult);
},
jur_LowSurrogateCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $startStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $startStr = $matchResult.$leftBound;
    $strLength = $matchResult.$rightBound;
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$7 = jl_String_indexOf($testStr, $this.$low, $strIndex);
        if (var$7 < 0)
            return (-1);
        if (var$7 > $startStr && jl_Character_isHighSurrogate(jl_String_charAt($testStr, var$7 - 1 | 0))) {
            $strIndex = var$7 + 1 | 0;
            continue;
        }
        var$8 = $this.$next1;
        $strIndex = var$7 + 1 | 0;
        if (var$8.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$7;
},
jur_LowSurrogateCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $startStr, $testStr;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $startStr = $matchResult.$leftBound;
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            $lastIndex = jl_String_lastIndexOf($testStr, $this.$low, $lastIndex);
            if ($lastIndex < 0)
                break a;
            if ($lastIndex < $strIndex)
                break a;
            if ($lastIndex > $startStr && jl_Character_isHighSurrogate(jl_String_charAt($testStr, $lastIndex - 1 | 0))) {
                $lastIndex = $lastIndex + (-2) | 0;
                continue;
            }
            if ($this.$next1.$matches($lastIndex + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = $lastIndex + (-1) | 0;
        }
        return $lastIndex;
    }
    return (-1);
},
jur_LowSurrogateCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$low;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_AbstractStringBuilder_append0(var$2, var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_LowSurrogateCharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low != $this.$low ? 0 : 1;
},
jur_LowSurrogateCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high = 0;
}
let jur_HighSurrogateCharSet__init_0 = ($this, $high) => {
    jur_AbstractSet__init_($this);
    $this.$high = $high;
},
jur_HighSurrogateCharSet__init_ = var_0 => {
    let var_1 = new jur_HighSurrogateCharSet();
    jur_HighSurrogateCharSet__init_0(var_1, var_0);
    return var_1;
},
jur_HighSurrogateCharSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_HighSurrogateCharSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, $low, var$7, $high;
    $strLength = $matchResult.$rightBound;
    var$5 = $stringIndex + 1 | 0;
    $low = $rt_compare(var$5, $strLength);
    if ($low > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    var$7 = $testString;
    $high = jl_String_charAt(var$7, $stringIndex);
    if ($low < 0 && jl_Character_isLowSurrogate(jl_String_charAt(var$7, var$5)))
        return (-1);
    if ($this.$high != $high)
        return (-1);
    return $this.$next1.$matches(var$5, $testString, $matchResult);
},
jur_HighSurrogateCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound;
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = jl_String_indexOf($testStr, $this.$high, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex < $strLength && jl_Character_isLowSurrogate(jl_String_charAt($testStr, $strIndex))) {
            $strIndex = var$6 + 2 | 0;
            continue;
        }
        if ($this.$next1.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
},
jur_HighSurrogateCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            $lastIndex = jl_String_lastIndexOf($testStr, $this.$high, $lastIndex);
            if ($lastIndex < 0)
                break a;
            if ($lastIndex < $strIndex)
                break a;
            var$7 = $lastIndex + 1 | 0;
            if (var$7 < $strLength && jl_Character_isLowSurrogate(jl_String_charAt($testStr, var$7))) {
                $lastIndex = $lastIndex + (-1) | 0;
                continue;
            }
            if ($this.$next1.$matches(var$7, $testString, $matchResult) >= 0)
                break;
            $lastIndex = $lastIndex + (-1) | 0;
        }
        return $lastIndex;
    }
    return (-1);
},
jur_HighSurrogateCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$high;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_AbstractStringBuilder_append0(var$2, var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
jur_HighSurrogateCharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high != $this.$high ? 0 : 1;
},
jur_HighSurrogateCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_SupplCharSet() {
    let a = this; jur_LeafSet.call(a);
    a.$high0 = 0;
    a.$low0 = 0;
    a.$ch1 = 0;
}
let jur_SupplCharSet_accepts = ($this, $strIndex, $testString) => {
    let $low, $high;
    $low = $strIndex + 1 | 0;
    $testString = $testString;
    $high = jl_String_charAt($testString, $strIndex);
    $low = jl_String_charAt($testString, $low);
    return $this.$high0 == $high && $this.$low0 == $low ? 2 : (-1);
},
jur_SupplCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, $ch;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$rightBound;
    while ($strIndex < $strLength) {
        $strIndex = jl_String_indexOf($testStr, $this.$high0, $strIndex);
        if ($strIndex < 0)
            return (-1);
        $strIndex = $strIndex + 1 | 0;
        if ($strIndex >= $strLength)
            continue;
        $ch = jl_String_charAt($testStr, $strIndex);
        if ($this.$low0 == $ch && $this.$next1.$matches($strIndex + 1 | 0, $testString, $matchResult) >= 0)
            return $strIndex + (-1) | 0;
        $strIndex = $strIndex + 1 | 0;
    }
    return (-1);
},
jur_SupplCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            $lastIndex = jl_String_lastIndexOf($testStr, $this.$low0, $lastIndex) + (-1) | 0;
            if ($lastIndex < 0)
                break a;
            if ($lastIndex < $strIndex)
                break a;
            if ($this.$high0 == jl_String_charAt($testStr, $lastIndex) && $this.$next1.$matches($lastIndex + 2 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = $lastIndex + (-1) | 0;
        }
        return $lastIndex;
    }
    return (-1);
},
jur_SupplCharSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$high0;
    var$2 = $this.$low0;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append0(var$3, var$1);
    jl_AbstractStringBuilder_append0(var$3, var$2);
    return jl_AbstractStringBuilder_toString(var$3);
},
jur_SupplCharSet_first = ($this, $set) => {
    if ($set instanceof jur_SupplCharSet)
        return $set.$ch1 != $this.$ch1 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains($this.$ch1);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
},
jur_AbstractLineTerminator$1 = $rt_classWithoutFields(jur_AbstractLineTerminator),
jur_AbstractLineTerminator$1_isLineTerminator = ($this, $ch) => {
    return $ch != 10 ? 0 : 1;
},
jur_AbstractLineTerminator$1_isAfterLineTerminator = ($this, $ch, $ch2) => {
    return $ch != 10 ? 0 : 1;
},
jur_AbstractLineTerminator$2 = $rt_classWithoutFields(jur_AbstractLineTerminator),
jur_AbstractLineTerminator$2_isLineTerminator = ($this, $ch) => {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
},
jur_AbstractLineTerminator$2_isAfterLineTerminator = ($this, $ch, $ch2) => {
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
};
function jur_SequenceSet$IntHash() {
    let a = this; jl_Object.call(a);
    a.$table = null;
    a.$values1 = null;
    a.$mask1 = 0;
    a.$size12 = 0;
}
let jur_SequenceSet$IntHash__init_0 = ($this, $size) => {
    let var$2, var$3;
    while (true) {
        var$2 = $this.$mask1;
        if ($size < var$2)
            break;
        $this.$mask1 = var$2 << 1 | 1;
    }
    var$3 = var$2 << 1 | 1;
    $this.$mask1 = var$3;
    var$3 = var$3 + 1 | 0;
    $this.$table = $rt_createIntArray(var$3);
    $this.$values1 = $rt_createIntArray(var$3);
    $this.$size12 = $size;
},
jur_SequenceSet$IntHash__init_ = var_0 => {
    let var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_0(var_1, var_0);
    return var_1;
},
jur_SequenceSet$IntHash_put = ($this, $key, $value) => {
    let $i, var$4, $hashCode, var$6;
    $i = 0;
    var$4 = $this.$mask1;
    $hashCode = $key & var$4;
    while (true) {
        var$6 = $this.$table.data;
        if (!var$6[$hashCode])
            break;
        if (var$6[$hashCode] == $key)
            break;
        $i = ($i + 1 | 0) & var$4;
        $hashCode = ($hashCode + $i | 0) & var$4;
    }
    var$6[$hashCode] = $key;
    $this.$values1.data[$hashCode] = $value;
},
jur_SequenceSet$IntHash_get = ($this, $key) => {
    let var$2, $hashCode, $i, $storedKey;
    var$2 = $this.$mask1;
    $hashCode = $key & var$2;
    $i = 0;
    while (true) {
        $storedKey = $this.$table.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values1.data[$hashCode];
        $i = ($i + 1 | 0) & var$2;
        $hashCode = ($hashCode + $i | 0) & var$2;
    }
    return $this.$size12;
},
jur_AbstractCharClass$LazySpace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazySpace__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazySpace__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazySpace();
    jur_AbstractCharClass$LazySpace__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazySpace_computeValue = $this => {
    return jur_CharClass_add0(jur_CharClass_add(jur_CharClass__init_(), 9, 13), 32);
},
jur_AbstractCharClass$LazyDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyDigit__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyDigit();
    jur_AbstractCharClass$LazyDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyDigit_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass__init_(), 48, 57);
},
jur_AbstractCharClass$LazyLower = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyLower__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyLower__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyLower();
    jur_AbstractCharClass$LazyLower__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyLower_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass__init_(), 97, 122);
},
jur_AbstractCharClass$LazyUpper = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyUpper__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyUpper__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyUpper();
    jur_AbstractCharClass$LazyUpper__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyUpper_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass__init_(), 65, 90);
},
jur_AbstractCharClass$LazyASCII = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyASCII__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyASCII__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyASCII();
    jur_AbstractCharClass$LazyASCII__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyASCII_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass__init_(), 0, 127);
},
jur_AbstractCharClass$LazyAlpha = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyAlpha__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyAlpha__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyAlpha();
    jur_AbstractCharClass$LazyAlpha__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyAlpha_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_(), 97, 122), 65, 90);
},
jur_AbstractCharClass$LazyAlnum = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlpha),
jur_AbstractCharClass$LazyAlnum__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyAlnum__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyAlnum();
    jur_AbstractCharClass$LazyAlnum__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyAlnum_computeValue = $this => {
    return jur_CharClass_add(jur_AbstractCharClass$LazyAlpha_computeValue($this), 48, 57);
},
jur_AbstractCharClass$LazyPunct = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyPunct__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyPunct__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyPunct();
    jur_AbstractCharClass$LazyPunct__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyPunct_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_(), 33, 64), 91, 96), 123, 126);
},
jur_AbstractCharClass$LazyGraph = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlnum),
jur_AbstractCharClass$LazyGraph__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyGraph__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyGraph();
    jur_AbstractCharClass$LazyGraph__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyGraph_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_AbstractCharClass$LazyAlnum_computeValue($this), 33, 64), 91, 96), 123, 126);
},
jur_AbstractCharClass$LazyPrint = $rt_classWithoutFields(jur_AbstractCharClass$LazyGraph),
jur_AbstractCharClass$LazyPrint__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyPrint__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyPrint();
    jur_AbstractCharClass$LazyPrint__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyPrint_computeValue = $this => {
    return jur_CharClass_add0(jur_AbstractCharClass$LazyGraph_computeValue($this), 32);
},
jur_AbstractCharClass$LazyBlank = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyBlank__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyBlank__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyBlank();
    jur_AbstractCharClass$LazyBlank__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyBlank_computeValue = $this => {
    return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass__init_(), 32), 9);
},
jur_AbstractCharClass$LazyCntrl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyCntrl__init_0 = $this => {
    return;
};
let jur_AbstractCharClass$LazyCntrl__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyCntrl();
    jur_AbstractCharClass$LazyCntrl__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyCntrl_computeValue = $this => {
    return jur_CharClass_add0(jur_CharClass_add(jur_CharClass__init_(), 0, 31), 127);
},
jur_AbstractCharClass$LazyXDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyXDigit__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyXDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyXDigit();
    jur_AbstractCharClass$LazyXDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyXDigit_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_(), 48, 57), 97, 102), 65, 70);
},
jur_AbstractCharClass$LazyJavaLowerCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLowerCase__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaLowerCase__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
    jur_AbstractCharClass$LazyJavaLowerCase__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLowerCase_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaLowerCase$1;
    $chCl.$this$043 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaUpperCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUpperCase__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaUpperCase__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
    jur_AbstractCharClass$LazyJavaUpperCase__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUpperCase_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaUpperCase$1;
    $chCl.$this$045 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaWhitespace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaWhitespace__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaWhitespace__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
    jur_AbstractCharClass$LazyJavaWhitespace__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaWhitespace_computeValue = $this => {
    let var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaWhitespace$1;
    var$1.$this$042 = $this;
    jur_AbstractCharClass__init_(var$1);
    return var$1;
},
jur_AbstractCharClass$LazyJavaMirrored = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaMirrored__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaMirrored__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
    jur_AbstractCharClass$LazyJavaMirrored__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaMirrored_computeValue = $this => {
    let var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaMirrored$1;
    var$1.$this$025 = $this;
    jur_AbstractCharClass__init_(var$1);
    return var$1;
},
jur_AbstractCharClass$LazyJavaDefined = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaDefined__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaDefined__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaDefined();
    jur_AbstractCharClass$LazyJavaDefined__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaDefined_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaDefined$1;
    $chCl.$this$033 = $this;
    jur_AbstractCharClass__init_($chCl);
    ju_BitSet_set($chCl.$lowHighSurrogates, 0, 2048);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaDigit__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaDigit();
    jur_AbstractCharClass$LazyJavaDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaDigit_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaDigit$1;
    $chCl.$this$046 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1;
    $chCl.$this$034 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaISOControl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaISOControl__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaISOControl__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
    jur_AbstractCharClass$LazyJavaISOControl__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaISOControl_computeValue = $this => {
    let var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaISOControl$1;
    var$1.$this$029 = $this;
    jur_AbstractCharClass__init_(var$1);
    return var$1;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1;
    $chCl.$this$019 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1;
    $chCl.$this$030 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaLetter = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLetter__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaLetter__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLetter();
    jur_AbstractCharClass$LazyJavaLetter__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLetter_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaLetter$1;
    $chCl.$this$032 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
};
let jur_AbstractCharClass$LazyJavaLetterOrDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLetterOrDigit__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
    jur_AbstractCharClass$LazyJavaLetterOrDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1;
    $chCl.$this$051 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaSpaceChar = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaSpaceChar__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaSpaceChar__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
    jur_AbstractCharClass$LazyJavaSpaceChar__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaSpaceChar_computeValue = $this => {
    let var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1;
    var$1.$this$027 = $this;
    jur_AbstractCharClass__init_(var$1);
    return var$1;
},
jur_AbstractCharClass$LazyJavaTitleCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaTitleCase__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaTitleCase__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
    jur_AbstractCharClass$LazyJavaTitleCase__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaTitleCase_computeValue = $this => {
    let var$1;
    var$1 = new jur_AbstractCharClass$LazyJavaTitleCase$1;
    var$1.$this$048 = $this;
    jur_AbstractCharClass__init_(var$1);
    return var$1;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1;
    $chCl.$this$020 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue = $this => {
    let $chCl;
    $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1;
    $chCl.$this$056 = $this;
    jur_AbstractCharClass__init_($chCl);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyWord__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazyWord__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyWord();
    jur_AbstractCharClass$LazyWord__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyWord_computeValue = $this => {
    return jur_CharClass_add0(jur_CharClass_add(jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_(), 97, 122), 65, 90), 48, 57), 95);
},
jur_AbstractCharClass$LazyNonWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyWord),
jur_AbstractCharClass$LazyNonWord__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyNonWord__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonWord();
    jur_AbstractCharClass$LazyNonWord__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonWord_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass_setNegative(jur_AbstractCharClass$LazyWord_computeValue($this), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyNonSpace = $rt_classWithoutFields(jur_AbstractCharClass$LazySpace),
jur_AbstractCharClass$LazyNonSpace__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyNonSpace__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonSpace();
    jur_AbstractCharClass$LazyNonSpace__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonSpace_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass_setNegative(jur_AbstractCharClass$LazySpace_computeValue($this), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
},
jur_AbstractCharClass$LazyNonDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyDigit),
jur_AbstractCharClass$LazyNonDigit__init_0 = $this => {
    return;
},
jur_AbstractCharClass$LazyNonDigit__init_ = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonDigit();
    jur_AbstractCharClass$LazyNonDigit__init_0(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonDigit_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass_setNegative(jur_AbstractCharClass$LazyDigit_computeValue($this), 1);
    $chCl.$mayContainSupplCodepoints = 1;
    return $chCl;
};
function jur_AbstractCharClass$LazyRange() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start2 = 0;
    a.$end5 = 0;
}
let jur_AbstractCharClass$LazyRange__init_0 = ($this, $start, $end) => {
    $this.$start2 = $start;
    $this.$end5 = $end;
},
jur_AbstractCharClass$LazyRange__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyRange_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass__init_(), $this.$start2, $this.$end5);
},
jur_AbstractCharClass$LazySpecialsBlock = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazySpecialsBlock__init_ = $this => {
    return;
},
jur_AbstractCharClass$LazySpecialsBlock__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
    jur_AbstractCharClass$LazySpecialsBlock__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazySpecialsBlock_computeValue = $this => {
    return jur_CharClass_add(jur_CharClass_add(jur_CharClass__init_(), 65279, 65279), 65520, 65533);
};
function jur_AbstractCharClass$LazyCategory() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category1 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates0 = 0;
}
let jur_AbstractCharClass$LazyCategory__init_0 = ($this, $cat, $mayContainSupplCodepoints) => {
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
},
jur_AbstractCharClass$LazyCategory__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyCategory__init_2 = ($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) => {
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
},
jur_AbstractCharClass$LazyCategory__init_1 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_2(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$LazyCategory_computeValue = $this => {
    let $chCl;
    $chCl = jur_UnicodeCategory__init_0($this.$category1);
    if ($this.$containsAllSurrogates0)
        ju_BitSet_set($chCl.$lowHighSurrogates, 0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints1;
    return $chCl;
};
function jur_AbstractCharClass$LazyCategoryScope() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category0 = 0;
    a.$mayContainSupplCodepoints0 = 0;
    a.$containsAllSurrogates = 0;
}
let jur_AbstractCharClass$LazyCategoryScope__init_0 = ($this, $cat, $mayContainSupplCodepoints) => {
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
},
jur_AbstractCharClass$LazyCategoryScope__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyCategoryScope__init_1 = ($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) => {
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
},
jur_AbstractCharClass$LazyCategoryScope__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$LazyCategoryScope_computeValue = $this => {
    let $chCl;
    $chCl = new jur_UnicodeCategoryScope;
    jur_UnicodeCategory__init_($chCl, $this.$category0);
    if ($this.$containsAllSurrogates)
        ju_BitSet_set($chCl.$lowHighSurrogates, 0, 2048);
    $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints0;
    return $chCl;
},
jl_NegativeArraySizeException = $rt_classWithoutFields(jl_RuntimeException),
jur_IntHash = $rt_classWithoutFields(),
otpp_ResourceAccessor = $rt_classWithoutFields(),
otciu_UnicodeHelper = $rt_classWithoutFields(),
otciu_UnicodeHelper_decodeCaseMapping = $text => {
    let $flow, $sz, $data, var$5, $last, $i, var$8;
    $flow = otci_CharFlow__init_(jl_String_toCharArray($text));
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    var$5 = $data.data;
    $last = 0;
    $i = 0;
    while ($i < $sz) {
        $last = $last + otci_Base46_decodeUnsigned($flow) | 0;
        var$8 = $i * 2 | 0;
        var$5[var$8] = $last;
        var$5[var$8 + 1 | 0] = otci_Base46_decode($flow);
        $i = $i + 1 | 0;
    }
    return $data;
},
otciu_UnicodeHelper_createCharMapping = $data => {
    let $result, var$3, $last, $lastValue, $i, var$7, $key, $value, var$10, var$11;
    $result = $rt_createIntArray(65536);
    var$3 = $result.data;
    $last = 0;
    $lastValue = 0;
    $i = 0;
    a: {
        while (true) {
            var$7 = $data.data;
            if ($i >= var$7.length)
                break a;
            $key = var$7[$i];
            $value = var$7[$i + 1 | 0];
            var$10 = var$3.length;
            if ($key < var$10)
                var$10 = $key;
            else if ($key == $last)
                break;
            ju_Arrays_fill2($result, $last, var$10, $lastValue);
            $i = $i + 2 | 0;
            $last = var$10;
            $lastValue = $value;
        }
    }
    var$11 = new otciu_CharMapping;
    var$11.$binarySearchTable = $data;
    var$11.$fastTable = $result;
    return var$11;
},
otciu_UnicodeHelper_decodeByte = $c => {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
};
function otciu_CharMapping() {
    let a = this; jl_Object.call(a);
    a.$binarySearchTable = null;
    a.$fastTable = null;
}
function otciu_UnicodeHelper$Range() {
    let a = this; jl_Object.call(a);
    a.$start3 = 0;
    a.$end4 = 0;
    a.$data14 = null;
}
let otciu_UnicodeHelper$Range__init_0 = ($this, $start, $end, $data) => {
    $this.$start3 = $start;
    $this.$end4 = $end;
    $this.$data14 = $data;
},
otciu_UnicodeHelper$Range__init_ = (var_0, var_1, var_2) => {
    let var_3 = new otciu_UnicodeHelper$Range();
    otciu_UnicodeHelper$Range__init_0(var_3, var_0, var_1, var_2);
    return var_3;
};
function otci_CharFlow() {
    let a = this; jl_Object.call(a);
    a.$characters = null;
    a.$pointer = 0;
}
let otci_CharFlow__init_0 = ($this, $characters) => {
    $this.$characters = $characters;
},
otci_CharFlow__init_ = var_0 => {
    let var_1 = new otci_CharFlow();
    otci_CharFlow__init_0(var_1, var_0);
    return var_1;
},
otci_Base46 = $rt_classWithoutFields(),
otci_Base46_decodeUnsigned = $seq => {
    let $number, $pos, var$4, $hasMore, $digit;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters.data;
        $hasMore = $seq.$pointer;
        $seq.$pointer = $hasMore + 1 | 0;
        $digit = var$4[$hasMore];
        $digit = $digit < 34 ? $digit - 32 | 0 : $digit >= 92 ? ($digit - 32 | 0) - 2 | 0 : ($digit - 32 | 0) - 1 | 0;
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
},
otci_Base46_decode = $seq => {
    let $number, $result;
    $number = otci_Base46_decodeUnsigned($seq);
    $result = $number / 2 | 0;
    if ($number % 2 | 0)
        $result =  -$result | 0;
    return $result;
},
cbgu_NumberUtils = $rt_classWithoutFields(),
cbgu_NumberUtils_floatToRawIntBits = $value => {
    return $rt_floatToRawIntBits($value);
},
cbgu_NumberUtils_intToFloatColor = $value => {
    return $rt_intBitsToFloat($value & (-16777217));
},
cgxgbtd_StyleWrapper$Unit = $rt_classWithoutFields(jl_Enum),
cgxgbtd_StyleWrapper$Unit_PX = null,
cgxgbtd_StyleWrapper$Unit_PCT = null,
cgxgbtd_StyleWrapper$Unit_EM = null,
cgxgbtd_StyleWrapper$Unit_EX = null,
cgxgbtd_StyleWrapper$Unit_PT = null,
cgxgbtd_StyleWrapper$Unit_PC = null,
cgxgbtd_StyleWrapper$Unit_IN = null,
cgxgbtd_StyleWrapper$Unit_CM = null,
cgxgbtd_StyleWrapper$Unit_MM = null,
cgxgbtd_StyleWrapper$Unit_$VALUES = null,
cgxgbtd_StyleWrapper$Unit_$callClinit = () => {
    cgxgbtd_StyleWrapper$Unit_$callClinit = $rt_eraseClinit(cgxgbtd_StyleWrapper$Unit);
    cgxgbtd_StyleWrapper$Unit__clinit_();
},
cgxgbtd_StyleWrapper$Unit__init_ = ($this, var$1, var$2) => {
    cgxgbtd_StyleWrapper$Unit_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cgxgbtd_StyleWrapper$Unit__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cgxgbtd_StyleWrapper$Unit$1;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(396), 0);
    cgxgbtd_StyleWrapper$Unit_PX = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$2;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(397), 1);
    cgxgbtd_StyleWrapper$Unit_PCT = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$3;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(398), 2);
    cgxgbtd_StyleWrapper$Unit_EM = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$4;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(399), 3);
    cgxgbtd_StyleWrapper$Unit_EX = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$5;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(400), 4);
    cgxgbtd_StyleWrapper$Unit_PT = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$6;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(401), 5);
    cgxgbtd_StyleWrapper$Unit_PC = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$7;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(402), 6);
    cgxgbtd_StyleWrapper$Unit_IN = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$8;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(403), 7);
    cgxgbtd_StyleWrapper$Unit_CM = var$1;
    var$1 = new cgxgbtd_StyleWrapper$Unit$9;
    cgxgbtd_StyleWrapper$Unit__init_(var$1, $rt_s(404), 8);
    cgxgbtd_StyleWrapper$Unit_MM = var$1;
    var$2 = $rt_createArray(cgxgbtd_StyleWrapper$Unit, 9);
    var$3 = var$2.data;
    var$3[0] = cgxgbtd_StyleWrapper$Unit_PX;
    var$3[1] = cgxgbtd_StyleWrapper$Unit_PCT;
    var$3[2] = cgxgbtd_StyleWrapper$Unit_EM;
    var$3[3] = cgxgbtd_StyleWrapper$Unit_EX;
    var$3[4] = cgxgbtd_StyleWrapper$Unit_PT;
    var$3[5] = cgxgbtd_StyleWrapper$Unit_PC;
    var$3[6] = cgxgbtd_StyleWrapper$Unit_IN;
    var$3[7] = cgxgbtd_StyleWrapper$Unit_CM;
    var$3[8] = var$1;
    cgxgbtd_StyleWrapper$Unit_$VALUES = var$2;
};
function ju_HashMap$HashEntry() {
    let a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next2 = null;
}
let jl_StringIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException);
function jur_AbstractCharClass$1() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$050 = null;
}
let jur_AbstractCharClass$1_contains = ($this, $ch) => {
    let $index;
    $index = $ch - 55296 | 0;
    return $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ ju_BitSet_get($this.$val$lHS, $index) : 0;
};
function jur_AbstractCharClass$2() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$031 = null;
}
let jur_AbstractCharClass$2_contains = ($this, $ch) => {
    let $index, $containslHS;
    $index = $ch - 55296 | 0;
    $containslHS = $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ ju_BitSet_get($this.$val$lHS0, $index) : 0;
    return $this.$val$thisClass.$contains($ch) && !$containslHS ? 1 : 0;
};
function jur_CharClass$18() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$037 = null;
}
let jur_CharClass$18_contains = ($this, $ch) => {
    return $this.$alt ^ ju_BitSet_get($this.$val$bs, $ch);
},
jur_CharClass$18_toString = $this => {
    let $temp, $i, var$3;
    $temp = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($temp);
    $i = ju_BitSet_nextSetBit($this.$val$bs, 0);
    while ($i >= 0) {
        jl_AbstractStringBuilder_append1($temp, jl_Character_toChars($i));
        jl_AbstractStringBuilder_append0($temp, 124);
        $i = ju_BitSet_nextSetBit($this.$val$bs, $i + 1 | 0);
    }
    var$3 = $temp.$length1;
    if (var$3 > 0)
        jl_StringBuilder_deleteCharAt($temp, var$3 - 1 | 0);
    return jl_AbstractStringBuilder_toString($temp);
};
function jur_CharClass$1() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$cc3 = null;
    a.$this$044 = null;
}
let jur_CharClass$1_contains = ($this, $ch) => {
    return $this.$val$cc3.$contains($ch);
};
function jur_CharClass$3() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$cc1 = null;
    a.$this$06 = null;
}
let jur_CharClass$3_contains = ($this, $ch) => {
    return !($this.$val$curAlt0 ^ ju_BitSet_get($this.$this$06.$bits, $ch)) && !($this.$val$curAlt0 ^ $this.$this$06.$inverted ^ $this.$val$cc1.$contains($ch)) ? 0 : 1;
};
function jur_CharClass$2() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$cc0 = null;
    a.$this$04 = null;
}
let jur_CharClass$2_contains = ($this, $ch) => {
    return !($this.$val$curAlt ^ ju_BitSet_get($this.$this$04.$bits, $ch)) && !($this.$val$curAlt ^ $this.$this$04.$inverted ^ $this.$val$cc0.$contains($ch)) ? 1 : 0;
};
function jur_CharClass$5() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt10 = 0;
    a.$val$nb0 = null;
    a.$val$cc = null;
    a.$this$039 = null;
}
let jur_CharClass$5_contains = ($this, $ch) => {
    return $this.$val$curAlt10 ^ (!$this.$val$nb0.$contains($ch) && !$this.$val$cc.$contains($ch) ? 0 : 1);
};
function jur_CharClass$4() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt1 = 0;
    a.$val$nb3 = null;
    a.$val$cc2 = null;
    a.$this$054 = null;
}
let jur_CharClass$4_contains = ($this, $ch) => {
    return $this.$val$curAlt1 ^ (!$this.$val$nb3.$contains($ch) && !$this.$val$cc2.$contains($ch) ? 0 : 1) ? 0 : 1;
};
function jur_CharClass$7() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz1 = null;
    a.$this$055 = null;
}
let jur_CharClass$7_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz1, $ch);
};
function jur_CharClass$6() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz9 = null;
    a.$this$040 = null;
}
let jur_CharClass$6_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz9, $ch) ? 0 : 1;
};
function jur_CharClass$9() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz3 = null;
    a.$val$curAlt4 = 0;
    a.$this$013 = null;
}
let jur_CharClass$9_contains = ($this, $ch) => {
    return !jur_CharClass_contains($this.$val$clazz3, $ch) && !($this.$val$curAlt4 ^ ju_BitSet_get($this.$this$013.$bits, $ch)) ? 0 : 1;
};
function jur_CharClass$8() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz4 = null;
    a.$val$curAlt6 = 0;
    a.$this$010 = null;
}
let jur_CharClass$8_contains = ($this, $ch) => {
    return !jur_CharClass_contains($this.$val$clazz4, $ch) && !($this.$val$curAlt6 ^ ju_BitSet_get($this.$this$010.$bits, $ch)) ? 1 : 0;
};
function jur_CharClass$11() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt3 = 0;
    a.$val$nb4 = null;
    a.$val$clazz5 = null;
    a.$this$021 = null;
}
let jur_CharClass$11_contains = ($this, $ch) => {
    return !($this.$val$curAlt3 ^ $this.$val$nb4.$contains($ch)) && !jur_CharClass_contains($this.$val$clazz5, $ch) ? 0 : 1;
};
function jur_CharClass$10() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt9 = 0;
    a.$val$nb = null;
    a.$val$clazz = null;
    a.$this$023 = null;
}
let jur_CharClass$10_contains = ($this, $ch) => {
    return !($this.$val$curAlt9 ^ $this.$val$nb.$contains($ch)) && !jur_CharClass_contains($this.$val$clazz, $ch) ? 1 : 0;
};
function jur_CharClass$13() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz6 = null;
    a.$this$024 = null;
}
let jur_CharClass$13_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz6, $ch);
};
function jur_CharClass$12() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz0 = null;
    a.$this$053 = null;
}
let jur_CharClass$12_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz0, $ch) ? 0 : 1;
};
function jur_CharClass$15() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt2 = 0;
    a.$this$018 = null;
}
let jur_CharClass$15_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz10, $ch) && $this.$val$curAlt2 ^ ju_BitSet_get($this.$this$018.$bits, $ch) ? 1 : 0;
};
function jur_CharClass$14() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz7 = null;
    a.$val$curAlt5 = 0;
    a.$this$011 = null;
}
let jur_CharClass$14_contains = ($this, $ch) => {
    return jur_CharClass_contains($this.$val$clazz7, $ch) && $this.$val$curAlt5 ^ ju_BitSet_get($this.$this$011.$bits, $ch) ? 0 : 1;
};
function jur_CharClass$17() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt8 = 0;
    a.$val$nb2 = null;
    a.$val$clazz2 = null;
    a.$this$038 = null;
}
let jur_CharClass$17_contains = ($this, $ch) => {
    return $this.$val$curAlt8 ^ $this.$val$nb2.$contains($ch) && jur_CharClass_contains($this.$val$clazz2, $ch) ? 1 : 0;
};
function jur_CharClass$16() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$nb1 = null;
    a.$val$clazz8 = null;
    a.$this$041 = null;
}
let jur_CharClass$16_contains = ($this, $ch) => {
    return $this.$val$curAlt7 ^ $this.$val$nb1.$contains($ch) && jur_CharClass_contains($this.$val$clazz8, $ch) ? 0 : 1;
};
function jl_Thread() {
    let a = this; jl_Object.call(a);
    a.$id4 = Long_ZERO;
    a.$timeSliceStart = Long_ZERO;
    a.$finishedLock = null;
    a.$name1 = null;
    a.$alive = 0;
    a.$target = null;
}
let jl_Thread_mainThread = null,
jl_Thread_currentThread = null,
jl_Thread_nextId = 0,
jl_Thread_activeCount = 0,
jl_Thread_defaultUncaughtExceptionHandler = null,
jl_Thread_setCurrentThread = $thread_0 => {
    if (jl_Thread_currentThread !== $thread_0)
        jl_Thread_currentThread = $thread_0;
    jl_Thread_currentThread.$timeSliceStart = jl_System_currentTimeMillis();
},
jl_Thread_currentThread0 = () => {
    return jl_Thread_currentThread;
},
jl_Thread__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new jl_Thread;
    var$2 = null;
    var$1.$finishedLock = new jl_Object;
    var$1.$alive = 1;
    var$1.$name1 = $rt_s(405);
    var$1.$target = var$2;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = var$3 + 1 | 0;
    var$1.$id4 = Long_fromInt(var$3);
    jl_Thread_mainThread = var$1;
    jl_Thread_currentThread = var$1;
    jl_Thread_nextId = 1;
    jl_Thread_activeCount = 1;
    jl_Thread_defaultUncaughtExceptionHandler = new jl_DefaultUncaughtExceptionHandler;
};
function jl_Object$Monitor() {
    let a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count = 0;
}
let jl_IllegalMonitorStateException = $rt_classWithoutFields(jl_RuntimeException),
otjf_JSMapping = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0() {
    jl_Object.call(this);
    this.$_012 = null;
}
let cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply$exported$0 = (var$1, var$2) => {
    let var$3, var$4, var$5, var$6;
    var$2 = otji_JSWrapper_jsToJava(var$2);
    var$1 = var$1;
    var$2 = otji_JSWrapper_unwrap(var$2);
    var$1 = var$1.$_012;
    var$3 = var$2.length;
    var$4 = $rt_createArray(cgxgbtf_FileData, var$3);
    var$5 = var$4.data;
    var$6 = 0;
    while (var$6 < var$3) {
        var$5[var$6] = var$2[var$6];
        var$6 = var$6 + 1 | 0;
    }
    var$1.$windowListener.$filesDropped(var$4);
    return otji_JSWrapper_javaToJs($rt_s(406));
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1 = $rt_classWithoutFields(),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply$exported$0 = (var$1, var$2) => {
    otji_JSWrapper_jsToJava(var$2);
    var$1;
    return otji_JSWrapper_javaToJs($rt_s(407));
},
otjf_JSSupplier = $rt_classWithoutFields(0),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2 = $rt_classWithoutFields(),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2_get$exported$0 = var$1 => {
    var$1;
    return otji_JSWrapper_javaToJs(null);
},
jl_Float = $rt_classWithoutFields(jl_Number),
jl_Float_TYPE = null,
jl_Float_parseFloat = $string => {
    let $start, $end, $negative, $c, $mantissa, $exp, $mantissaPos, $hasOneDigit, var$10, $negativeExp, $numExp;
    if (jl_String_isEmpty($string)) {
        $string = new jl_NumberFormatException;
        jl_Exception__init_0($string);
        $rt_throw($string);
    }
    $start = 0;
    $end = $string.$nativeString.length;
    while (true) {
        if (jl_String_charAt($string, $start) > 32) {
            while (jl_String_charAt($string, $end - 1 | 0) <= 32) {
                $end = $end + (-1) | 0;
            }
            $negative = 0;
            if (jl_String_charAt($string, $start) == 45) {
                $start = $start + 1 | 0;
                $negative = 1;
            } else if (jl_String_charAt($string, $start) == 43)
                $start = $start + 1 | 0;
            if ($start == $end) {
                $string = new jl_NumberFormatException;
                jl_Exception__init_0($string);
                $rt_throw($string);
            }
            a: {
                $c = jl_String_charAt($string, $start);
                $mantissa = 0;
                $exp = (-1);
                $mantissaPos = 100000000;
                $hasOneDigit = 0;
                if ($c != 46) {
                    $hasOneDigit = 1;
                    if ($c >= 48 && $c <= 57) {
                        b: {
                            while ($start < $end) {
                                if (jl_String_charAt($string, $start) != 48)
                                    break b;
                                $start = $start + 1 | 0;
                            }
                        }
                        while ($start < $end) {
                            var$10 = jl_String_charAt($string, $start);
                            if (var$10 < 48)
                                break a;
                            if (var$10 > 57)
                                break a;
                            if ($mantissaPos > 0) {
                                $mantissa = $mantissa + $rt_imul($mantissaPos, var$10 - 48 | 0) | 0;
                                $mantissaPos = $rt_udiv($mantissaPos, 10);
                            }
                            $exp = $exp + 1 | 0;
                            $start = $start + 1 | 0;
                        }
                    } else {
                        $string = new jl_NumberFormatException;
                        jl_Exception__init_0($string);
                        $rt_throw($string);
                    }
                }
            }
            if ($start < $end && jl_String_charAt($string, $start) == 46) {
                $start = $start + 1 | 0;
                c: {
                    while (true) {
                        if ($start >= $end)
                            break c;
                        $c = jl_String_charAt($string, $start);
                        var$10 = $rt_compare($c, 48);
                        if (var$10 < 0)
                            break c;
                        if ($c > 57)
                            break;
                        if (!$mantissa && !var$10)
                            $exp = $exp + (-1) | 0;
                        else if ($mantissaPos > 0) {
                            $mantissa = $mantissa + $rt_imul($mantissaPos, $c - 48 | 0) | 0;
                            $mantissaPos = $rt_udiv($mantissaPos, 10);
                        }
                        $start = $start + 1 | 0;
                        $hasOneDigit = 1;
                    }
                }
                if (!$hasOneDigit) {
                    $string = new jl_NumberFormatException;
                    jl_Exception__init_0($string);
                    $rt_throw($string);
                }
            }
            if ($start < $end) {
                $c = jl_String_charAt($string, $start);
                if ($c != 101 && $c != 69) {
                    $string = new jl_NumberFormatException;
                    jl_Exception__init_0($string);
                    $rt_throw($string);
                }
                $c = $start + 1 | 0;
                $negativeExp = 0;
                if ($c == $end) {
                    $string = new jl_NumberFormatException;
                    jl_Exception__init_0($string);
                    $rt_throw($string);
                }
                if (jl_String_charAt($string, $c) == 45) {
                    $c = $c + 1 | 0;
                    $negativeExp = 1;
                } else if (jl_String_charAt($string, $c) == 43)
                    $c = $c + 1 | 0;
                $numExp = 0;
                $start = 0;
                d: {
                    while (true) {
                        if ($c >= $end)
                            break d;
                        $mantissaPos = jl_String_charAt($string, $c);
                        if ($mantissaPos < 48)
                            break d;
                        if ($mantissaPos > 57)
                            break;
                        $numExp = (10 * $numExp | 0) + ($mantissaPos - 48 | 0) | 0;
                        $start = 1;
                        $c = $c + 1 | 0;
                    }
                }
                if (!$start) {
                    $string = new jl_NumberFormatException;
                    jl_Exception__init_0($string);
                    $rt_throw($string);
                }
                if ($negativeExp)
                    $numExp =  -$numExp | 0;
                $exp = $exp + $numExp | 0;
            }
            return otcit_FloatSynthesizer_synthesizeFloat($mantissa, $exp, $negative);
        }
        $start = $start + 1 | 0;
        if ($start == $end)
            break;
    }
    $string = new jl_NumberFormatException;
    jl_Exception__init_0($string);
    $rt_throw($string);
},
jl_Float_floatToIntBits = $value => {
    if (isNaN($value) ? 1 : 0)
        return 2143289344;
    return $rt_floatToRawIntBits($value);
},
jl_Float__clinit_ = () => {
    jl_Float_TYPE = $rt_cls($rt_floatcls);
};
function cbggg_GlyphLayout$GlyphRun() {
    let a = this; jl_Object.call(a);
    a.$glyphs = null;
    a.$xAdvances = null;
    a.$x1 = 0.0;
    a.$y2 = 0.0;
    a.$width4 = 0.0;
}
let cbggg_GlyphLayout$GlyphRun_appendRun = ($this, $run) => {
    let var$2, var$3;
    cbgu_Array_addAll($this.$glyphs, $run.$glyphs);
    var$2 = $this.$xAdvances;
    var$3 = var$2.$size2;
    if (var$3 <= 0 ? 0 : 1)
        var$2.$size2 = var$3 - 1 | 0;
    cbgu_FloatArray_addAll0(var$2, $run.$xAdvances);
},
cbggg_GlyphLayout$GlyphRun_reset = $this => {
    cbgu_Array_clear($this.$glyphs);
    cbgu_FloatArray_clear($this.$xAdvances);
},
cbggg_GlyphLayout$GlyphRun_toString = $this => {
    let $buffer, $glyphs, $i, $n;
    $buffer = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0($buffer, $this.$glyphs.$size0 + 32 | 0);
    $glyphs = $this.$glyphs;
    $i = 0;
    $n = $glyphs.$size0;
    while ($i < $n) {
        jl_AbstractStringBuilder_append0($buffer, (cbgu_Array_get($glyphs, $i)).$id0 & 65535);
        $i = $i + 1 | 0;
    }
    jl_AbstractStringBuilder_append($buffer, $rt_s(25));
    jl_StringBuilder_append2($buffer, $this.$x1);
    jl_AbstractStringBuilder_append($buffer, $rt_s(25));
    jl_StringBuilder_append2($buffer, $this.$y2);
    jl_AbstractStringBuilder_append($buffer, $rt_s(25));
    jl_StringBuilder_append2($buffer, $this.$width4);
    return jl_AbstractStringBuilder_toString($buffer);
},
cgxgbtu_KeyCodes = $rt_classWithoutFields(),
cgxgbtu_KeyCodes_keyForCode = $keyCode => {
    a: {
        switch ($keyCode) {
            case 8:
                break;
            case 9:
                return 61;
            case 10:
            case 11:
            case 12:
            case 14:
            case 15:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 28:
            case 29:
            case 30:
            case 31:
            case 41:
            case 42:
            case 43:
            case 44:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 93:
            case 94:
            case 95:
            case 108:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
                break a;
            case 13:
                return 66;
            case 16:
                return 59;
            case 17:
                return 129;
            case 18:
                return 57;
            case 19:
                return 0;
            case 20:
                return 0;
            case 27:
                return 111;
            case 32:
                return 62;
            case 33:
                return 92;
            case 34:
                return 93;
            case 35:
                return 123;
            case 36:
                return 3;
            case 37:
                return 21;
            case 38:
                return 19;
            case 39:
                return 22;
            case 40:
                return 20;
            case 45:
                return 124;
            case 46:
                return 112;
            case 48:
                return 7;
            case 49:
                return 8;
            case 50:
                return 9;
            case 51:
                return 10;
            case 52:
                return 11;
            case 53:
                return 12;
            case 54:
                return 13;
            case 55:
                return 14;
            case 56:
                return 15;
            case 57:
                return 16;
            case 65:
                return 29;
            case 66:
                return 30;
            case 67:
                return 31;
            case 68:
                return 32;
            case 69:
                return 33;
            case 70:
                return 34;
            case 71:
                return 35;
            case 72:
                return 36;
            case 73:
                return 37;
            case 74:
                return 38;
            case 75:
                return 39;
            case 76:
                return 40;
            case 77:
                return 41;
            case 78:
                return 42;
            case 79:
                return 43;
            case 80:
                return 44;
            case 81:
                return 45;
            case 82:
                return 46;
            case 83:
                return 47;
            case 84:
                return 48;
            case 85:
                return 49;
            case 86:
                return 50;
            case 87:
                return 51;
            case 88:
                return 52;
            case 89:
                return 53;
            case 90:
                return 54;
            case 91:
                return 0;
            case 92:
                return 0;
            case 96:
                return 144;
            case 97:
                return 145;
            case 98:
                return 146;
            case 99:
                return 147;
            case 100:
                return 148;
            case 101:
                return 149;
            case 102:
                return 150;
            case 103:
                return 151;
            case 104:
                return 152;
            case 105:
                return 153;
            case 106:
                return 0;
            case 107:
                return 81;
            case 109:
                return 69;
            case 110:
                return 56;
            case 111:
                return 0;
            case 112:
                return 131;
            case 113:
                return 132;
            case 114:
                return 133;
            case 115:
                return 134;
            case 116:
                return 135;
            case 117:
                return 136;
            case 118:
                return 137;
            case 119:
                return 138;
            case 120:
                return 139;
            case 121:
                return 140;
            case 122:
                return 141;
            case 123:
                return 142;
            case 144:
                return 78;
            case 145:
                return 0;
            case 186:
                return 74;
            case 187:
                return 70;
            case 188:
                return 55;
            case 189:
                return 69;
            case 190:
                return 56;
            case 191:
                return 76;
            case 192:
                return 0;
            case 219:
                return 71;
            case 220:
                return 73;
            case 221:
                return 72;
            case 222:
                return 75;
            default:
                break a;
        }
        return 67;
    }
    return 0;
},
cgxgbtu_KeyCodes_getButton = $button => {
    if (!$button)
        return 0;
    if ($button == 2)
        return 1;
    if ($button != 1)
        return 0;
    return 2;
},
cbgu_TimeUtils = $rt_classWithoutFields(),
cbgu_TimeUtils_nanoTime = () => {
    return Long_fromNumber(performance.now() * 1000000.0);
},
otp_PlatformQueue = $rt_classWithoutFields(),
otp_PlatformQueue_isEmpty$static = $this => {
    return $this.length ? 0 : 1;
},
otp_PlatformRunnable = $rt_classWithoutFields(0);
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_020 = null;
}
let cgxgbt_TeaWindowListener = $rt_classWithoutFields(0),
otjc_JSPromise$Executor = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl$getFile$lambda$_2_0() {
    let a = this; jl_Object.call(a);
    a.$_018 = null;
    a.$_18 = null;
    a.$_26 = null;
}
let cgxgbta_AssetLoadImpl$getFile$lambda$_2_0_onExecute$exported$0 = (var$1, var$2, var$3) => {
    let var$4, var$5;
    var$2 = otji_JS_functionAsObject(var$2, "accept");
    otji_JS_functionAsObject(var$3, "accept");
    var$1 = var$1;
    var$3 = var$1.$_018;
    var$4 = var$1.$_18;
    var$1 = var$1.$_26;
    var$5 = new FileReader();
    var$5.readAsArrayBuffer(var$4);
    var$4 = new cgxgbta_AssetLoadImpl$4;
    var$4.$this$036 = var$3;
    var$4.$val$name = var$1;
    var$4.$val$resolve = var$2;
    var$5.addEventListener("load", otji_JS_function(otji_JSWrapper_unwrap(var$4), "handleEvent"));
},
otji_IDBObjectStoreParameters = $rt_classWithoutFields(),
otji_IDBObjectStoreParameters_create$js_body$_1 = () => {
    return {  };
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0() {
    let a = this; jl_Object.call(a);
    a.$_05 = null;
    a.$_12 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0_handleEvent$exported$0 = var$1 => {
    let var$2, var$3, var$4;
    var$1 = var$1;
    var$2 = var$1.$_05;
    var$3 = var$1.$_12.result;
    if (var$3 !== null) {
        var$1 = cgxgbtf_MemoryFileStorage_fixPath(var$2, $rt_str(var$3.key));
        var$4 = var$3.value;
        if (var$4.type == 1)
            cgxgbtf_MemoryFileStorage_putFolderInternal0(var$2, var$1, 0);
        else
            cgxgbtf_MemoryFileStorage_putFileInternal(var$2, var$1, cgxgbtdt_TypedArrays_toByteArray(var$4.contents), 0);
        var$3.continue();
    }
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1() {
    jl_Object.call(this);
    this.$_014 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1_handleEvent$exported$0 = var$1 => {
    var$1 = var$1.$_014;
    var$1.$delayInitCount = var$1.$delayInitCount - 1 | 0;
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2() {
    jl_Object.call(this);
    this.$_016 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2_handleEvent$exported$0 = var$1 => {
    var$1 = var$1.$_016;
    otcic_JsConsolePrintStream_println(jl_System_err(), $rt_s(408));
    var$1.$delayInitCount = var$1.$delayInitCount - 1 | 0;
},
jl_AutoCloseable = $rt_classWithoutFields(0),
ji_Closeable = $rt_classWithoutFields(0),
ji_Flushable = $rt_classWithoutFields(0),
ji_OutputStream = $rt_classWithoutFields();
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out2 = null;
}
function ji_PrintStream() {
    let a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$sb = null;
    a.$buffer7 = null;
    a.$charset = null;
}
let otcic_JsConsolePrintStream = $rt_classWithoutFields(ji_PrintStream),
otcic_JsConsolePrintStream__init_ = $this => {
    let var$1, var$2;
    var$1 = null;
    var$2 = null;
    $this.$out2 = var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    $this.$sb = var$1;
    $this.$buffer7 = $rt_createCharArray(32);
    $this.$autoFlush = 0;
    $this.$charset = var$2;
},
otcic_JsConsolePrintStream_println = ($this, $s) => {
    $this.$print($s);
    $this.$print($rt_s(30));
},
otcic_JSStderrPrintStream = $rt_classWithoutFields(otcic_JsConsolePrintStream),
otcic_JSStderrPrintStream_print = ($this, $s) => {
    if ($s === null)
        $s = $rt_s(32);
    $rt_putStderr($rt_ustr($s));
};
function cbgu_FloatArray() {
    let a = this; jl_Object.call(a);
    a.$items0 = null;
    a.$size2 = 0;
    a.$ordered1 = 0;
}
let cbgu_FloatArray__init_0 = $this => {
    $this.$ordered1 = 1;
    $this.$items0 = $rt_createFloatArray(16);
},
cbgu_FloatArray__init_ = () => {
    let var_0 = new cbgu_FloatArray();
    cbgu_FloatArray__init_0(var_0);
    return var_0;
},
cbgu_FloatArray_add = ($this, $value) => {
    let $items, var$3, var$4, var$5;
    $items = $this.$items0;
    var$3 = $items.data;
    var$4 = $this.$size2;
    if (var$4 == var$3.length)
        $items = cbgu_FloatArray_resize($this, jl_Math_max(8, var$4 * 1.75 | 0));
    $items = $items.data;
    var$5 = $this.$size2;
    $this.$size2 = var$5 + 1 | 0;
    $items[var$5] = $value;
},
cbgu_FloatArray_addAll0 = ($this, $array) => {
    cbgu_FloatArray_addAll($this, $array.$items0, 0, $array.$size2);
},
cbgu_FloatArray_addAll1 = ($this, $array, $offset, $length) => {
    let var$4, var$5;
    if (($offset + $length | 0) <= $array.$size2) {
        cbgu_FloatArray_addAll($this, $array.$items0, $offset, $length);
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_AbstractStringBuilder_append(var$5, $rt_s(409));
    var$5 = jl_StringBuilder_append1(var$5, $offset);
    jl_AbstractStringBuilder_append(var$5, $rt_s(2));
    var$5 = jl_StringBuilder_append1(var$5, $length);
    jl_AbstractStringBuilder_append(var$5, $rt_s(3));
    jl_Exception__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$5, $array.$size2)));
    $rt_throw(var$4);
},
cbgu_FloatArray_addAll = ($this, $array, $offset, $length) => {
    let $items, var$5, $sizeNeeded;
    $items = $this.$items0;
    var$5 = $items.data;
    $sizeNeeded = $this.$size2 + $length | 0;
    if ($sizeNeeded > var$5.length)
        $items = cbgu_FloatArray_resize($this, jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size2 * 1.75 | 0));
    jl_System_fastArraycopy($array, $offset, $items, $this.$size2, $length);
    $this.$size2 = $this.$size2 + $length | 0;
},
cbgu_FloatArray_get = ($this, $index) => {
    let var$2, var$3;
    if ($index < $this.$size2)
        return $this.$items0.data[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append(var$3, $rt_s(17));
    var$3 = jl_StringBuilder_append1(var$3, $index);
    jl_AbstractStringBuilder_append(var$3, $rt_s(5));
    jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$3, $this.$size2)));
    $rt_throw(var$2);
},
cbgu_FloatArray_first = $this => {
    let var$1;
    if ($this.$size2)
        return $this.$items0.data[0];
    var$1 = new jl_IllegalStateException;
    jl_Exception__init_(var$1, $rt_s(19));
    $rt_throw(var$1);
},
cbgu_FloatArray_clear = $this => {
    $this.$size2 = 0;
},
cbgu_FloatArray_ensureCapacity = ($this, $additionalCapacity) => {
    let var$2, var$3, $sizeNeeded;
    if ($additionalCapacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append(var$3, $rt_s(410));
        jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$3, $additionalCapacity)));
        $rt_throw(var$2);
    }
    $sizeNeeded = $this.$size2 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items0.data.length)
        cbgu_FloatArray_resize($this, jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size2 * 1.75 | 0));
    return $this.$items0;
},
cbgu_FloatArray_resize = ($this, $newSize) => {
    let $newItems, var$3;
    $newItems = $rt_createFloatArray($newSize);
    var$3 = $newItems.data;
    jl_System_fastArraycopy($this.$items0, 0, $newItems, 0, jl_Math_min($this.$size2, var$3.length));
    $this.$items0 = $newItems;
    return $newItems;
},
cbgu_FloatArray_truncate = ($this, $newSize) => {
    if ($this.$size2 > $newSize)
        $this.$size2 = $newSize;
},
cgxgbtd_StyleWrapper$Unit$1 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$2 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$3 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$4 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$5 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$6 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$7 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$8 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
cgxgbtd_StyleWrapper$Unit$9 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit),
jl_Thread$UncaughtExceptionHandler = $rt_classWithoutFields(0),
jl_DefaultUncaughtExceptionHandler = $rt_classWithoutFields();
function jnc_Charset() {
    let a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
let jnc_Charset__init_ = ($this, $canonicalName, $aliases) => {
    let var$3, var$4, var$5;
    var$3 = $aliases.data;
    jnc_Charset_checkCanonicalName($canonicalName);
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        jnc_Charset_checkCanonicalName(var$3[var$5]);
        var$5 = var$5 + 1 | 0;
    }
    $this.$canonicalName = $canonicalName;
    $this.$aliases = $aliases.$clone0();
},
jnc_Charset_checkCanonicalName = $name => {
    let $i, $c;
    if (jl_String_isEmpty($name))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    if (!jnc_Charset_isValidCharsetStart(jl_String_charAt($name, 0)))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    $i = 1;
    while ($i < $name.$nativeString.length) {
        a: {
            $c = jl_String_charAt($name, $i);
            switch ($c) {
                case 43:
                case 45:
                case 46:
                case 58:
                case 95:
                    break;
                default:
                    if (jnc_Charset_isValidCharsetStart($c))
                        break a;
                    else
                        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
            }
        }
        $i = $i + 1 | 0;
    }
},
jnc_Charset_isValidCharsetStart = $c => {
    a: {
        b: {
            if (!($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122)) {
                if ($c < 65)
                    break b;
                if ($c > 90)
                    break b;
            }
            $c = 1;
            break a;
        }
        $c = 0;
    }
    return $c;
},
jnc_Charset_forName = $charsetName => {
    let $charset, var$3;
    if ($charsetName === null) {
        $charsetName = new jl_IllegalArgumentException;
        jl_Exception__init_($charsetName, $rt_s(411));
        $rt_throw($charsetName);
    }
    jnc_Charset_checkCanonicalName($charsetName);
    jnc_Charset$Charsets_$callClinit();
    $charset = jnc_Charset$Charsets_value;
    var$3 = $charsetName.$toUpperCase1();
    $charset = ju_HashMap_get($charset, var$3);
    if ($charset !== null)
        return $charset;
    $charset = new jnc_UnsupportedCharsetException;
    jl_Exception__init_0($charset);
    $charset.$charsetName0 = $charsetName;
    $rt_throw($charset);
},
oti_AsyncCallback = $rt_classWithoutFields(0);
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
let otpp_AsyncCallbackWrapper_create = $realAsyncCallback => {
    let var$2;
    var$2 = new otpp_AsyncCallbackWrapper;
    var$2.$realAsyncCallback = $realAsyncCallback;
    return var$2;
},
otpp_AsyncCallbackWrapper_complete = ($this, $result) => {
    $this.$realAsyncCallback.$complete($result);
},
otpp_AsyncCallbackWrapper_error = ($this, $e) => {
    $this.$realAsyncCallback.$error0($e);
};
function jl_Object$monitorEnterWait$lambda$_6_0() {
    let a = this; jl_Object.call(a);
    a.$_06 = null;
    a.$_13 = null;
    a.$_22 = 0;
    a.$_31 = null;
}
let otjc_JSObjects = $rt_classWithoutFields(),
otji_JSWrapper$Helper = $rt_classWithoutFields(),
otji_JSWrapper$Helper_hashCodes = null,
otji_JSWrapper$Helper_wrappers = null,
otji_JSWrapper$Helper_stringWrappers = null,
otji_JSWrapper$Helper_numberWrappers = null,
otji_JSWrapper$Helper_undefinedWrapper = null,
otji_JSWrapper$Helper_stringFinalizationRegistry = null,
otji_JSWrapper$Helper_numberFinalizationRegistry = null,
otji_JSWrapper$Helper_$callClinit = () => {
    otji_JSWrapper$Helper_$callClinit = $rt_eraseClinit(otji_JSWrapper$Helper);
    otji_JSWrapper$Helper__clinit_();
},
otji_JSWrapper$Helper__clinit_ = () => {
    let var$1;
    otji_JSWrapper$Helper_hashCodes = new WeakMap();
    otji_JSWrapper$Helper_wrappers = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new WeakMap();
    otji_JSWrapper$Helper_stringWrappers = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new Map();
    otji_JSWrapper$Helper_numberWrappers = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new Map();
    if (otji_JSWrapper$Helper_stringWrappers === null)
        var$1 = null;
    else {
        var$1 = new otji_JSWrapper$Helper$_clinit_$lambda$_3_0;
        var$1 = new FinalizationRegistry(otji_JS_function(otji_JSWrapper_unwrap(var$1), "accept"));
    }
    otji_JSWrapper$Helper_stringFinalizationRegistry = var$1;
    if (otji_JSWrapper$Helper_numberWrappers === null)
        var$1 = null;
    else {
        var$1 = new otji_JSWrapper$Helper$_clinit_$lambda$_3_1;
        var$1 = new FinalizationRegistry(otji_JS_function(otji_JSWrapper_unwrap(var$1), "accept"));
    }
    otji_JSWrapper$Helper_numberFinalizationRegistry = var$1;
},
otjc_JSUndefined = $rt_classWithoutFields(),
otjc_JSWeakRef = $rt_classWithoutFields(),
otjc_JSFinalizationRegistryConsumer = $rt_classWithoutFields(0),
otji_JSWrapper$Helper$_clinit_$lambda$_3_0 = $rt_classWithoutFields(),
otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept$exported$0 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    var$1;
    otji_JSWrapper$Helper_$callClinit();
    var$1 = otji_JSWrapper$Helper_stringWrappers;
    var$2 = otji_JSWrapper_unwrap(var$2);
    var$1.delete(var$2);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_1 = $rt_classWithoutFields(),
otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept$exported$0 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    var$1;
    otji_JSWrapper$Helper_$callClinit();
    var$1 = otji_JSWrapper$Helper_numberWrappers;
    var$2 = otji_JSWrapper_unwrap(var$2);
    var$1.delete(var$2);
},
jur_BackReferencedSingleSet = $rt_classWithoutFields(jur_SingleSet),
jur_BackReferencedSingleSet_find = ($this, $startSearch, $testString, $matchResult) => {
    let $res, $lastIndex, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$rightBound;
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex);
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $saveStart);
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
},
jur_BackReferencedSingleSet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    let $res, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = jur_MatchResultImpl_getStart($matchResult, $this.$groupIndex);
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            jur_MatchResultImpl_setStart($matchResult, $this.$groupIndex, $saveStart);
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
},
jur_BackReferencedSingleSet_processBackRefReplacement = $this => {
    return null;
},
cgxgbt_TeaApplication$6 = $rt_classWithoutFields(),
cgxgbt_TeaApplication$6_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = null,
cgxgbt_TeaApplication$6_$callClinit = () => {
    cgxgbt_TeaApplication$6_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$6);
    cgxgbt_TeaApplication$6__clinit_();
},
cgxgbt_TeaApplication$6__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cgxgbt_TeaApplication$AppState_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cgxgbt_TeaApplication$6_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = var$1;
    var$2[cgxgbt_TeaApplication$AppState_INIT.$ordinal0] = 1;
    var$2[cgxgbt_TeaApplication$AppState_PRELOAD_ASSETS.$ordinal0] = 2;
    var$2[cgxgbt_TeaApplication$AppState_DOWNLOAD_ASSETS.$ordinal0] = 3;
    var$2[cgxgbt_TeaApplication$AppState_APP_LOOP.$ordinal0] = 4;
};
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$043 = null;
}
let jur_AbstractCharClass$LazyJavaLowerCase$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 2 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$045 = null;
}
let jur_AbstractCharClass$LazyJavaUpperCase$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 1 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$042 = null;
}
let jur_AbstractCharClass$LazyJavaWhitespace$1_contains = ($this, $ch) => {
    return jl_Character_isWhitespace($ch);
};
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$025 = null;
}
let jur_AbstractCharClass$LazyJavaMirrored$1_contains = ($this, $ch) => {
    return 0;
};
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$033 = null;
}
let jur_AbstractCharClass$LazyJavaDefined$1_contains = ($this, $ch) => {
    return !jl_Character_getType($ch) ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$046 = null;
}
let jur_AbstractCharClass$LazyJavaDigit$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 9 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$034 = null;
}
let jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains = ($this, $ch) => {
    return jl_Character_isIdentifierIgnorable($ch);
};
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$029 = null;
}
let jur_AbstractCharClass$LazyJavaISOControl$1_contains = ($this, $ch) => {
    a: {
        b: {
            if (!($ch >= 0 && $ch <= 31)) {
                if ($ch < 127)
                    break b;
                if ($ch > 159)
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = 0;
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$019 = null;
}
let jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 9:
                case 10:
                case 23:
                case 26:
                    break;
                case 7:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 24:
                case 25:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$030 = null;
}
let jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 10:
                case 23:
                case 26:
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 24:
                case 25:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$032 = null;
}
let jur_AbstractCharClass$LazyJavaLetter$1_contains = ($this, $ch) => {
    a: {
        switch (jl_Character_getType($ch)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                $ch = 0;
                break a;
        }
        $ch = 1;
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$051 = null;
}
let jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains = ($this, $ch) => {
    return jl_Character_isLetterOrDigit($ch);
};
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$027 = null;
}
let jur_AbstractCharClass$LazyJavaSpaceChar$1_contains = ($this, $ch) => {
    return jl_Character_isSpaceChar($ch);
};
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$048 = null;
}
let jur_AbstractCharClass$LazyJavaTitleCase$1_contains = ($this, $ch) => {
    return jl_Character_getType($ch) != 3 ? 0 : 1;
};
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$020 = null;
}
let jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 6:
                case 8:
                case 9:
                case 10:
                case 23:
                    break;
                case 7:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$056 = null;
}
let jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains = ($this, $ch) => {
    a: {
        b: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                case 10:
                    break;
                case 6:
                case 7:
                case 8:
                case 9:
                    break b;
                default:
                    break b;
            }
            $ch = 1;
            break a;
        }
        $ch = jl_Character_isIdentifierIgnorable($ch);
    }
    return $ch;
};
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category = 0;
}
let jur_UnicodeCategory__init_ = ($this, $category) => {
    jur_AbstractCharClass__init_($this);
    $this.$category = $category;
},
jur_UnicodeCategory__init_0 = var_0 => {
    let var_1 = new jur_UnicodeCategory();
    jur_UnicodeCategory__init_(var_1, var_0);
    return var_1;
},
jur_UnicodeCategory_contains = ($this, $ch) => {
    return $this.$alt ^ ($this.$category != jl_Character_getType($ch & 65535) ? 0 : 1);
},
jur_UnicodeCategoryScope = $rt_classWithoutFields(jur_UnicodeCategory),
jur_UnicodeCategoryScope_contains = ($this, $ch) => {
    return $this.$alt ^ (!($this.$category >> jl_Character_getType($ch & 65535) & 1) ? 0 : 1);
};
function ju_AbstractList$1() {
    let a = this; jl_Object.call(a);
    a.$index7 = 0;
    a.$modCount1 = 0;
    a.$size13 = 0;
    a.$removeIndex0 = 0;
    a.$this$014 = null;
}
let ju_AbstractList$1_hasNext = $this => {
    return $this.$index7 >= $this.$size13 ? 0 : 1;
},
ju_AbstractList$1_next = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$modCount1;
    var$2 = $this.$this$014;
    if (var$1 < var$2.$modCount) {
        var$2 = new ju_ConcurrentModificationException;
        jl_Exception__init_0(var$2);
        $rt_throw(var$2);
    }
    var$3 = $this.$index7;
    $this.$removeIndex0 = var$3;
    $this.$index7 = var$3 + 1 | 0;
    return ju_ArrayList_get(var$2, var$3);
};
function cgxgbta_AssetDownloadImpl$2() {
    let a = this; jl_Object.call(a);
    a.$val$url = null;
    a.$val$listener2 = null;
    a.$this$05 = null;
}
let cgxgbta_AssetDownloadImpl$2_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4;
    var$1 = var$1;
    cgxgbta_AssetDownloadImpl_subtractQueue(var$1.$this$05);
    if (var$1.$this$05.$showLogs) {
        var$2 = jl_System_out();
        var$3 = var$1.$val$url;
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(412)), var$3);
        var$3 = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$2, var$3);
    }
};
function cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0() {
    let a = this; jl_Object.call(a);
    a.$_04 = null;
    a.$_11 = null;
    a.$_21 = null;
}
let cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4;
    var$1 = var$1;
    var$2 = var$1.$_04;
    var$3 = var$1.$_11;
    var$1 = var$1.$_21;
    cgxgbta_AssetDownloadImpl_subtractQueue(var$2);
    if (var$2.$showLogs) {
        var$2 = jl_System_err();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(413)), var$3);
        var$3 = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$2, var$3);
    }
},
cbgu_Collections = $rt_classWithoutFields(),
cbgu_Collections_allocateIterators = 0;
function cbgu_Array$ArrayIterator() {
    let a = this; jl_Object.call(a);
    a.$array6 = null;
    a.$allowRemove0 = 0;
    a.$index3 = 0;
    a.$valid = 0;
}
let cbgu_Array$ArrayIterator__init_0 = ($this, $array, $allowRemove) => {
    $this.$valid = 1;
    $this.$array6 = $array;
    $this.$allowRemove0 = $allowRemove;
},
cbgu_Array$ArrayIterator__init_ = (var_0, var_1) => {
    let var_2 = new cbgu_Array$ArrayIterator();
    cbgu_Array$ArrayIterator__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_Array$ArrayIterator_hasNext = $this => {
    let var$1;
    if (!$this.$valid) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$1, $rt_s(414));
        $rt_throw(var$1);
    }
    return $this.$index3 >= $this.$array6.$size0 ? 0 : 1;
},
cbgu_Array$ArrayIterator_next = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$index3;
    var$2 = $this.$array6;
    if (var$1 >= var$2.$size0) {
        var$2 = new ju_NoSuchElementException;
        jl_Exception__init_(var$2, jl_String_valueOf0(var$1));
        $rt_throw(var$2);
    }
    if (!$this.$valid) {
        var$2 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$2, $rt_s(414));
        $rt_throw(var$2);
    }
    var$3 = var$2.$items.data;
    $this.$index3 = var$1 + 1 | 0;
    return var$3[var$1];
};
function cbgu_Array$ArrayIterable() {
    let a = this; jl_Object.call(a);
    a.$array2 = null;
    a.$allowRemove = 0;
    a.$iterator10 = null;
    a.$iterator20 = null;
}
let otcic_JSStdoutPrintStream = $rt_classWithoutFields(otcic_JsConsolePrintStream),
otcic_JSStdoutPrintStream_print = ($this, $s) => {
    if ($s === null)
        $s = $rt_s(32);
    $rt_putStdout($rt_ustr($s));
},
cgxgbtd_EventTargetWrapper = $rt_classWithoutFields(0),
cgxgbtd_FileReaderWrapper = $rt_classWithoutFields();
function cgxgbta_AssetLoadImpl$4() {
    let a = this; jl_Object.call(a);
    a.$val$name = null;
    a.$val$resolve = null;
    a.$this$036 = null;
}
let cgxgbta_AssetLoadImpl$4_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3;
    var$1 = var$1;
    var$3 = cgxgbtdt_TypedArrays_toByteArray(new Int8Array(var$2.target.result));
    var$2 = cgxgbtf_FileData__init_0(var$1.$val$name, var$3);
    var$1.$val$resolve.accept(otji_JSWrapper_javaToJs(var$2));
},
cgxgbtdt_TypedArrays = $rt_classWithoutFields(),
cgxgbtdt_TypedArrays_toByteArray = $array => {
    return $rt_wrapArray($rt_bytecls, new Int8Array($array));
},
cgxgbtdt_TypedArrays_getTypedArray = $buffer => {
    let var$2, var$3;
    if ($buffer instanceof jn_ByteBuffer)
        $buffer = cgxgbtdt_TypedArrays_getInt8Array($buffer);
    else if ($buffer instanceof jn_ShortBuffer) {
        $buffer = jn_JSBufferHelper_getArrayBufferView($buffer);
        $buffer = new Int16Array($buffer.buffer, $buffer.byteOffset, $buffer.byteLength / 2 | 0);
    } else if ($buffer instanceof jn_IntBuffer)
        $buffer = cgxgbtdt_TypedArrays_getInt32Array($buffer);
    else {
        if (!($buffer instanceof jn_FloatBuffer)) {
            var$2 = new cbgu_GdxRuntimeException;
            $buffer = jl_String_valueOf(jl_Object_getClass($buffer));
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(415)), $buffer);
            jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
            $rt_throw(var$2);
        }
        $buffer = cgxgbtdt_TypedArrays_getFloat32Array($buffer);
    }
    return $buffer;
},
cgxgbtdt_TypedArrays_getInt8Array = $buff => {
    return jn_JSBufferHelper_toInt8Array(jn_JSBufferHelper_getArrayBufferView($buff));
},
cgxgbtdt_TypedArrays_getUint8Array = $buff => {
    $buff = jn_JSBufferHelper_getArrayBufferView($buff);
    return new Uint8Array($buff.buffer, $buff.byteOffset, $buff.byteLength);
},
cgxgbtdt_TypedArrays_getUint16Array = $buff => {
    $buff = jn_JSBufferHelper_getArrayBufferView($buff);
    return new Uint16Array($buff.buffer, $buff.byteOffset, $buff.byteLength / 2 | 0);
},
cgxgbtdt_TypedArrays_getInt32Array = $buff => {
    $buff = jn_JSBufferHelper_getArrayBufferView($buff);
    return new Int32Array($buff.buffer, $buff.byteOffset, $buff.byteLength / 4 | 0);
},
cgxgbtdt_TypedArrays_getFloat32Array = $buff => {
    $buff = jn_JSBufferHelper_getArrayBufferView($buff);
    return new Float32Array($buff.buffer, $buff.byteOffset, $buff.byteLength / 4 | 0);
},
jur_IntArrHash = $rt_classWithoutFields();
function cgxgbtf_FileData() {
    let a = this; jl_Object.call(a);
    a.$path0 = null;
    a.$bytes = null;
    a.$type7 = 0;
}
let cgxgbtf_FileData__init_2 = ($this, $path) => {
    cgxgbtf_FileData__init_($this, $path, 1, null);
},
cgxgbtf_FileData__init_1 = var_0 => {
    let var_1 = new cgxgbtf_FileData();
    cgxgbtf_FileData__init_2(var_1, var_0);
    return var_1;
},
cgxgbtf_FileData__init_3 = ($this, $path, $bytes) => {
    cgxgbtf_FileData__init_($this, $path, 2, $bytes);
},
cgxgbtf_FileData__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbtf_FileData();
    cgxgbtf_FileData__init_3(var_2, var_0, var_1);
    return var_2;
},
cgxgbtf_FileData__init_ = ($this, $path, $type, $bytes) => {
    if ($bytes !== null && jl_String_endsWith($path, $rt_s(81)))
        $path = jl_String_substring($path, 0, $path.$nativeString.length - 1 | 0);
    $this.$path0 = $path;
    $this.$bytes = $bytes;
    $this.$type7 = $type;
},
cgxgbtf_FileData__init_4 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbtf_FileData();
    cgxgbtf_FileData__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbtf_FileData_isDirectory = $this => {
    return $this.$type7 != 1 ? 0 : 1;
},
otjt_ArrayBufferView = $rt_classWithoutFields(),
otjt_TypedArray = $rt_classWithoutFields(otjt_ArrayBufferView),
otjt_Int8Array = $rt_classWithoutFields(otjt_TypedArray),
cbgu_GdxRuntimeException = $rt_classWithoutFields(jl_RuntimeException),
cbgu_GdxRuntimeException__init_2 = ($this, $message) => {
    jl_Exception__init_($this, $message);
},
cbgu_GdxRuntimeException__init_ = var_0 => {
    let var_1 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_2(var_1, var_0);
    return var_1;
},
cbgu_GdxRuntimeException__init_1 = ($this, $message, $t) => {
    jl_Throwable__init_($this, $message, $t);
},
cbgu_GdxRuntimeException__init_0 = (var_0, var_1) => {
    let var_2 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_1(var_2, var_0, var_1);
    return var_2;
},
jl_CloneNotSupportedException = $rt_classWithoutFields(jl_Exception),
ju_NoSuchElementException = $rt_classWithoutFields(jl_RuntimeException);
function cgxgbta_AssetLoadImpl$5() {
    let a = this; jl_Object.call(a);
    a.$val$config = null;
    a.$val$assetFileUrl = null;
    a.$this$03 = null;
}
let cgxgbta_AssetLoadImpl$5_onSuccess = ($this, var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $$je;
    var$3 = cgxgbtdt_TypedArrays_toByteArray(var$2.$data13);
    var$4 = var$3.data;
    var$1 = new jl_String;
    var$5 = var$4.length;
    jnci_UTF8Charset_$callClinit();
    var$2 = jnci_UTF8Charset_INSTANCE;
    var$6 = jn_ByteBuffer_wrap0(var$3, 0, var$5);
    a: {
        try {
            var$2 = jnc_CharsetDecoder_decode0(jnc_CharsetDecoder_onUnmappableCharacter(jnc_CharsetDecoder_onMalformedInput(jnci_UTF8Charset_newDecoder(var$2), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), var$6);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                var$2 = $$je;
            } else {
                throw $$e;
            }
        }
        var$6 = new jl_AssertionError;
        jl_Throwable__init_(var$6, $rt_s(416), var$2);
        $rt_throw(var$6);
    }
    var$7 = var$2.$array7 === null ? 0 : 1;
    if (var$7 && !var$2.$position0 && var$2.$limit0 == var$2.$capacityImpl())
        var$3 = jn_CharBuffer_array(var$2);
    else {
        var$3 = $rt_createCharArray(jn_Buffer_remaining(var$2));
        jn_CharBuffer_get(var$2, var$3, 0, var$3.data.length);
    }
    var$1.$nativeString = $rt_fullArrayToString(var$3.data);
    var$3 = (jl_String_split(var$1, $rt_s(30))).data;
    var$1 = $this.$this$03;
    var$7 = var$3.length;
    var$1.$assetTotal = var$7;
    var$8 = 0;
    while (var$8 < var$7) {
        var$1 = var$3[var$8];
        var$4 = (jl_String_split(var$1, $rt_s(83))).data;
        var$5 = var$4.length;
        if (var$5 != 5) {
            var$2 = new cbgu_GdxRuntimeException;
            var$6 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$6);
            var$9 = jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(417)), var$5);
            jl_AbstractStringBuilder_append0(var$9, 32);
            jl_StringBuilder_append(var$9, var$1);
            jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$6));
            $rt_throw(var$2);
        }
        var$1 = var$4[0];
        var$2 = var$4[1];
        var$6 = jl_String_trim(var$4[2]);
        var$5 = jl_String_equals(var$4[4], $rt_s(418));
        var$6 = jl_String_trim(var$6);
        if (!jl_String_isEmpty(var$6)) {
            var$9 = cbg_Files$FileType_Internal;
            if (jl_String_equals(var$1, $rt_s(419)))
                var$9 = cbg_Files$FileType_Classpath;
            else if (jl_String_equals(var$1, $rt_s(420)))
                var$9 = cbg_Files$FileType_Local;
            var$10 = cgxgbta_AssetType_Binary;
            if (jl_String_equals(var$2, $rt_s(207)))
                var$10 = cgxgbta_AssetType_Directory;
            if (!(!$this.$val$config.$preloadAssets && var$9 !== cbg_Files$FileType_Classpath)) {
                var$2 = $this.$this$03;
                var$1 = null;
                var$11 = jl_String_replace(jl_String_trim(var$6), $rt_s(421), $rt_s(81));
                if (jl_String_startsWith(var$11, $rt_s(81)))
                    var$11 = jl_String_substring0(var$11, 1);
                if (!jl_String_isEmpty(var$11) && !ju_HashSet_contains(var$2.$assetInQueue, var$11)) {
                    var$6 = cgxgbt_TeaFiles_getFileHandle(cbg_Gdx_files, var$11, var$9);
                    var$12 = cgxgbt_TeaFileHandle_exists(var$6);
                    if (!(!var$5 && var$12)) {
                        if (var$10 !== cgxgbta_AssetType_Directory) {
                            ju_HashSet_add(var$2.$assetInQueue, var$11);
                            var$9 = var$2.$assetDownloader;
                            var$10 = cgxgbta_AssetLoadImpl_getAssetUrl(var$2);
                            var$13 = new jl_StringBuilder;
                            jl_AbstractStringBuilder__init_(var$13);
                            jl_StringBuilder_append(jl_StringBuilder_append(var$13, var$10), var$11);
                            var$13 = jl_AbstractStringBuilder_toString(var$13);
                            var$10 = cgxgbta_AssetType_Binary;
                            var$14 = new cgxgbta_AssetLoadImpl$6;
                            var$14.$this$08 = var$2;
                            var$14.$val$listener0 = var$1;
                            var$14.$val$path1 = var$11;
                            var$14.$val$fileHandle = var$6;
                            cgxgbta_AssetDownloadImpl_load(var$9, 1, var$13, var$10, var$14);
                        } else if (!var$12)
                            cgxgbtf_MemoryFileStorage_mkdirs(cgxgbt_TeaFiles_getFileDB(var$6.$teaFiles, var$6.$type1), var$6);
                    }
                }
            }
        }
        var$8 = var$8 + 1 | 0;
    }
};
function cgxgbta_AssetType() {
    jl_Enum.call(this);
    this.$code = null;
}
let cgxgbta_AssetType_Binary = null,
cgxgbta_AssetType_Directory = null,
cgxgbta_AssetType_$VALUES = null,
cgxgbta_AssetType__init_0 = ($this, var$1, var$2, $code) => {
    jl_Enum__init_($this, var$1, var$2);
    $this.$code = $code;
},
cgxgbta_AssetType__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbta_AssetType();
    cgxgbta_AssetType__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbta_AssetType__clinit_ = () => {
    let var$1, var$2, var$3;
    cgxgbta_AssetType_Binary = cgxgbta_AssetType__init_($rt_s(422), 0, $rt_s(423));
    var$1 = cgxgbta_AssetType__init_($rt_s(424), 1, $rt_s(207));
    cgxgbta_AssetType_Directory = var$1;
    var$2 = $rt_createArray(cgxgbta_AssetType, 2);
    var$3 = var$2.data;
    var$3[0] = cgxgbta_AssetType_Binary;
    var$3[1] = var$1;
    cgxgbta_AssetType_$VALUES = var$2;
},
cbg_Screen = $rt_classWithoutFields(0),
cbg_ScreenAdapter = $rt_classWithoutFields(),
cbg_ScreenAdapter_resize = ($this, $width, $height) => {
    return;
},
cbg_ScreenAdapter_hide = $this => {
    return;
},
cbg_ScreenAdapter_pause = $this => {
    return;
},
cbg_ScreenAdapter_resume = $this => {
    return;
};
function cajs_InitScreen() {
    cbg_ScreenAdapter.call(this);
    this.$init1 = 0;
}
let cajs_InitScreen_show = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = new cajs_InitScreen$show$lambda$_1_0;
    var$1.$_013 = $this;
    cgxjl_JParserLibraryLoader_$callClinit();
    if (!ju_HashSet_contains(cgxjl_JParserLibraryLoader_loadedLibraries, $rt_s(425))) {
        var$2 = new cgxjl_JParserLibraryLoader$1;
        var$2.$val$listener1 = var$1;
        var$3 = ju_HashMap_get((cgxjc_JMultiplatform_getInstance()).$map.$map0, $rt_s(63));
        if (!jl_Class_isInstance($rt_cls(jl_String), var$3))
            var$3 = null;
        else if (var$3 !== null && !otp_Platform_isAssignable((jl_Object_getClass(var$3)).$platformClass, $rt_cls(jl_String).$platformClass)) {
            var$1 = new jl_ClassCastException;
            var$4 = jl_Class_getName(jl_Object_getClass(var$3));
            var$2 = jl_Class_getName($rt_cls(jl_String));
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, var$4), $rt_s(426)), var$2);
            jl_Exception__init_(var$1, jl_AbstractStringBuilder_toString(var$3));
            $rt_throw(var$1);
        }
        var$3 = var$3;
        if (var$3 === null) {
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(427)), $rt_s(63)), $rt_s(428));
            var$4 = js_ScriptException__init_0(jl_AbstractStringBuilder_toString(var$3));
            cajs_InitScreen$show$lambda$_1_0_onLoad(var$1, 0, var$4);
        } else if (jl_String_endsWith($rt_s(425), $rt_s(429)))
            cgxjl_JParserLibraryLoader_loadWasm(var$2, $rt_s(425), var$3, $rt_s(8), 0);
        else if (jl_String_endsWith($rt_s(425), $rt_s(430)))
            cgxjl_JParserLibraryLoader_loadJS(var$2, $rt_s(425), var$3);
        else
            cgxjl_JParserLibraryLoader_loadWasm(var$2, $rt_s(425), var$3, $rt_s(429), 1);
    }
},
cajs_InitScreen_render = ($this, $delta) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15;
    if ($this.$init1) {
        $this.$init1 = 0;
        var$2 = caj_Main_main;
        var$3 = new cajs_JoltScreen;
        cajs_JoltScreen_$callClinit();
        var$3.$mPhysicsSystem = null;
        var$3.$mBodyInterface = null;
        var$3.$boxRestitution = 0.949999988079071;
        var$3.$iteration = 0;
        var$3.$MAX_ITERATIONS = 5;
        var$3.$totalCubes = 3000;
        var$3.$cubeCount = 0;
        var$4 = new caju_AntzFPSLogger;
        var$4.$onlyReportMode = 0;
        var$4.$min2 = 99999;
        var$4.$bound = 2147483647;
        var$4.$startTime = cbgu_TimeUtils_nanoTime();
        var$3.$fpsLogger = var$4;
        var$3.$resetDelaySeconds = 14.0;
        var$3.$fps_data = $rt_createArray(cajs_JoltScreen$FpsData, var$3.$MAX_ITERATIONS);
        var$3.$cubes = cbgu_Array__init_();
        var$3.$instanceTransform = cbgm_Matrix4__init_();
        var$4 = new cbggg_SpriteBatch;
        cbggg_SpriteBatch_$callClinit();
        cbggg_SpriteBatch__init_(var$4, 1000, null);
        var$3.$batch2D = var$4;
        var$4 = new cbggg_BitmapFont;
        var$5 = cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(431));
        var$6 = cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(432));
        var$7 = cbggg_BitmapFont$BitmapFontData__init_(var$5, 0);
        var$5 = cbggg_TextureRegion__init_(cbgg_Texture__init_1(var$6, 0));
        var$8 = $rt_createArray(cbggg_TextureRegion, 1);
        var$9 = var$8.data;
        var$9[0] = var$5;
        var$5 = new cbgu_Array;
        var$10 = var$9.length;
        var$11 = 0 + var$10 | 0;
        var$8 = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass(var$8)), var$11 - 0 | 0);
        var$12 = 0;
        while (var$12 < var$11) {
            var$8.data[var$12 - 0 | 0] = var$9[var$12];
            var$12 = var$12 + 1 | 0;
        }
        var$5.$items = var$8;
        var$5.$ordered = 1;
        var$5.$size0 = var$10;
        var$4.$flipped0 = var$7.$flipped;
        var$4.$data10 = var$7;
        var$4.$integer0 = 1;
        if (var$10) {
            var$4.$regions = var$5;
            var$4.$ownsTexture = 0;
        } else {
            var$9 = var$7.$imagePaths;
            if (var$9 === null) {
                var$2 = new jl_IllegalArgumentException;
                jl_Exception__init_(var$2, $rt_s(433));
                $rt_throw(var$2);
            }
            var$10 = var$9.data.length;
            var$4.$regions = cbgu_Array__init_0(var$10);
            var$11 = 0;
            while (var$11 < var$10) {
                var$6 = var$7.$fontFile;
                if (var$6 === null) {
                    var$5 = cbg_Gdx_files;
                    var$6 = var$7.$imagePaths.data[var$11];
                    var$5 = cgxgbt_TeaFiles_internal(var$5, var$6);
                } else {
                    var$13 = cbg_Gdx_files;
                    var$5 = var$7.$imagePaths.data[var$11];
                    var$14 = var$6.$type1;
                    var$5 = cgxgbt_TeaFiles_getFileHandle(var$13, var$5, var$14);
                }
                cbgu_Array_add(var$4.$regions, cbggg_TextureRegion__init_(cbgg_Texture__init_1(var$5, 0)));
                var$11 = var$11 + 1 | 0;
            }
            var$4.$ownsTexture = 1;
        }
        var$5 = new cbggg_BitmapFontCache;
        var$15 = var$4.$integer0;
        var$5.$layouts = cbgu_Array__init_0(1);
        var$5.$pooledLayouts = cbgu_Array__init_0(0);
        var$5.$color8 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
        var$5.$font0 = var$4;
        var$5.$integer = var$15;
        var$15 = var$4.$regions.$size0;
        if (!var$15) {
            var$2 = new jl_IllegalArgumentException;
            jl_RuntimeException__init_1(var$2, $rt_s(434));
            $rt_throw(var$2);
        }
        a: {
            var$5.$pageVertices = $rt_createArray($rt_arraycls($rt_floatcls), var$15);
            var$5.$idx0 = $rt_createIntArray(var$15);
            if (var$15 > 1) {
                var$9 = $rt_createArray(cbgu_IntArray, var$15);
                var$8 = var$9.data;
                var$5.$pageGlyphIndices = var$9;
                var$10 = 0;
                var$11 = var$8.length;
                while (true) {
                    if (var$10 >= var$11)
                        break a;
                    var$5.$pageGlyphIndices.data[var$10] = cbgu_IntArray__init_();
                    var$10 = var$10 + 1 | 0;
                }
            }
        }
        var$5.$tempGlyphCount = $rt_createIntArray(var$15);
        var$4.$cache = var$5;
        var$9 = var$7.$glyphs0.data;
        var$15 = var$9.length;
        var$10 = 0;
        while (var$10 < var$15) {
            b: {
                var$8 = var$9[var$10];
                if (var$8 !== null) {
                    var$8 = var$8.data;
                    var$11 = var$8.length;
                    var$12 = 0;
                    while (true) {
                        if (var$12 >= var$11)
                            break b;
                        var$5 = var$8[var$12];
                        if (var$5 !== null)
                            cbggg_BitmapFont$BitmapFontData_setGlyphRegion(var$7, var$5, cbgu_Array_get(var$4.$regions, var$5.$page));
                        var$12 = var$12 + 1 | 0;
                    }
                }
            }
            var$10 = var$10 + 1 | 0;
        }
        var$5 = var$7.$missingGlyph;
        if (var$5 !== null)
            cbggg_BitmapFont$BitmapFontData_setGlyphRegion(var$7, var$5, cbgu_Array_get(var$4.$regions, var$5.$page));
        var$4.$ownsTexture = 1;
        var$3.$font = var$4;
        var$3.$renderModels0 = 1;
        cbg_Game_setScreen(var$2, var$3);
    }
},
cgxgbtfi_IndexedDBFileData = $rt_classWithoutFields(),
cgxgbtfi_IndexedDBFileData_create$js_body$_5 = (var$1, var$2) => {
    return { type : var$1, date : var$2 };
};
function cgxgbtft_LocalDBStorage$putFile$lambda$_2_0() {
    jl_Object.call(this);
    this.$_017 = null;
}
let cgxgbtft_LocalDBStorage$putFile$lambda$_2_0_handleEvent$exported$0 = var$1 => {
    let var$2, var$3;
    var$1 = var$1.$_017;
    var$2 = jl_System_err();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(435)), var$1);
    var$1 = jl_AbstractStringBuilder_toString(var$3);
    otcic_JsConsolePrintStream_println(var$2, var$1);
},
ju_ConcurrentModificationException = $rt_classWithoutFields(jl_RuntimeException);
function cgxgbta_AssetDownloadImpl$1() {
    let a = this; jl_Object.call(a);
    a.$val$listener = null;
    a.$this$07 = null;
}
let cgxgbta_AssetDownloadImpl$1_onFailure = ($this, $url) => {
    let var$2, var$3;
    if ($this.$this$07.$showLogs) {
        var$2 = jl_System_err();
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(436)), $url);
        $url = jl_AbstractStringBuilder_toString(var$3);
        otcic_JsConsolePrintStream_println(var$2, $url);
    }
},
cgxgbta_AssetDownloadImpl$1_onSuccess = ($this, var$1, var$2) => {
    let var$3, var$4;
    var$2 = var$2;
    if ($this.$this$07.$showLogs) {
        var$3 = jl_System_out();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(437)), var$1);
        var$4 = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println(var$3, var$4);
    }
    $this.$val$listener.$onSuccess(var$1, var$2);
},
cgxgbta_AssetDownloadImpl$3 = $rt_classWithoutFields(),
cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType = null,
cgxgbta_AssetDownloadImpl$3_$callClinit = () => {
    cgxgbta_AssetDownloadImpl$3_$callClinit = $rt_eraseClinit(cgxgbta_AssetDownloadImpl$3);
    cgxgbta_AssetDownloadImpl$3__clinit_();
},
cgxgbta_AssetDownloadImpl$3__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cgxgbta_AssetType_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType = var$1;
    var$2[cgxgbta_AssetType_Binary.$ordinal0] = 1;
    var$2[cgxgbta_AssetType_Directory.$ordinal0] = 2;
},
otjb_TimerHandler = $rt_classWithoutFields(0);
function cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0() {
    let a = this; jl_Object.call(a);
    a.$_02 = null;
    a.$_10 = null;
    a.$_20 = null;
    a.$_30 = 0;
}
let cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0_onTimer$exported$0 = var$1 => {
    var$1 = var$1;
    cgxgbta_AssetDownloadImpl_loadBinaryInternally(var$1.$_02, 1, var$1.$_10, var$1.$_20, var$1.$_30);
},
jl_AbstractStringBuilder$Constants = $rt_classWithoutFields(),
jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null,
jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null,
jl_AbstractStringBuilder$Constants_floatAnalysisResult = null,
jl_AbstractStringBuilder$Constants__clinit_ = () => {
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(10000), Long_fromInt(100000000), Long_create(1874919424, 2328306)]);
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = new otcit_DoubleAnalyzer$Result;
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = new otcit_FloatAnalyzer$Result;
},
otcit_FloatAnalyzer = $rt_classWithoutFields(),
otcit_FloatAnalyzer_MAX_MANTISSA = 0,
otcit_FloatAnalyzer_mantissa10Table = null,
otcit_FloatAnalyzer_exp10Table = null,
otcit_FloatAnalyzer_analyze = ($d, $result) => {
    let $bits, $mantissa, $exponent, var$6, $decExponent, $posCmp, $upperPos, $mantissaShift, $decMantissa, $decMantissaHi, $decMantissaLow, $lowerPos, $lowerPos_0, $upperPos_0;
    $bits = jl_Float_floatToIntBits($d);
    $result.$sign1 = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent0 = 0;
        return;
    }
    if ($exponent)
        $bits = $mantissa | 8388608;
    else {
        $bits = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt($bits), Long_fromInt(8388608)), Long_ZERO)) {
            $bits = $bits << 1;
            $exponent = $exponent + (-1) | 0;
        }
    }
    var$6 = otcit_FloatAnalyzer_exp10Table.data;
    $mantissa = 0;
    $decExponent = var$6.length;
    if ($mantissa > $decExponent) {
        $result = new jl_IllegalArgumentException;
        jl_Exception__init_0($result);
        $rt_throw($result);
    }
    $posCmp = $decExponent - 1 | 0;
    a: {
        while (true) {
            if ($mantissa > $posCmp) {
                $decExponent = ( -$mantissa | 0) - 1 | 0;
                break a;
            }
            $decExponent = ($mantissa + $posCmp | 0) / 2 | 0;
            $upperPos = var$6[$decExponent];
            if ($upperPos == $exponent)
                break;
            if ($exponent >= $upperPos)
                $mantissa = $decExponent + 1 | 0;
            else
                $posCmp = $decExponent - 1 | 0;
        }
    }
    if ($decExponent < 0)
        $decExponent =  -$decExponent | 0;
    $mantissa = $decExponent + 1 | 0;
    $mantissaShift = 9 + ($exponent - var$6[$mantissa] | 0) | 0;
    $decMantissa = otcit_FloatAnalyzer_mulAndShiftRight($bits, otcit_FloatAnalyzer_mantissa10Table.data[$mantissa], $mantissaShift);
    if ($decMantissa < otcit_FloatAnalyzer_MAX_MANTISSA) {
        while ($rt_ucmp($decMantissa, otcit_FloatAnalyzer_MAX_MANTISSA) <= 0) {
            $decExponent = $decExponent + (-1) | 0;
            $decMantissa = ($decMantissa * 10 | 0) + 9 | 0;
        }
        var$6 = otcit_FloatAnalyzer_exp10Table.data;
        $mantissa = $decExponent + 1 | 0;
        $mantissaShift = 9 + ($exponent - var$6[$mantissa] | 0) | 0;
        $decMantissa = otcit_FloatAnalyzer_mulAndShiftRight($bits, otcit_FloatAnalyzer_mantissa10Table.data[$mantissa], $mantissaShift);
    }
    $mantissa = $bits << 1;
    $bits = $mantissa + 1 | 0;
    var$6 = otcit_FloatAnalyzer_mantissa10Table.data;
    $exponent = $decExponent + 1 | 0;
    $posCmp = var$6[$exponent];
    $upperPos = $mantissaShift - 1 | 0;
    $decMantissaHi = otcit_FloatAnalyzer_mulAndShiftRight($bits, $posCmp, $upperPos);
    $decMantissaLow = otcit_FloatAnalyzer_mulAndShiftRight($mantissa - 1 | 0, otcit_FloatAnalyzer_mantissa10Table.data[$exponent], $upperPos);
    $lowerPos = 1;
    while (true) {
        $lowerPos_0 = $lowerPos * 10 | 0;
        if ($rt_ucmp($rt_udiv($decMantissa, $lowerPos_0), $rt_udiv($decMantissaLow, $lowerPos_0)) <= 0)
            break;
        $lowerPos = $lowerPos_0;
    }
    $upperPos = 1;
    while (true) {
        $upperPos_0 = $upperPos * 10 | 0;
        if ($rt_ucmp($rt_udiv($decMantissa, $upperPos_0), $rt_udiv($decMantissaHi, $upperPos_0)) >= 0)
            break;
        $upperPos = $upperPos_0;
    }
    $posCmp = $rt_ucmp($lowerPos, $upperPos);
    $mantissa = $posCmp > 0 ? $rt_imul($rt_udiv($decMantissa, $lowerPos), $lowerPos) : $posCmp < 0 ? $rt_imul($rt_udiv($decMantissa, $upperPos), $upperPos) + $upperPos | 0 : $rt_imul($rt_udiv(($decMantissa + ($upperPos / 2 | 0) | 0), $upperPos), $upperPos);
    if (jl_Long_compareUnsigned(Long_fromInt($mantissa), Long_fromInt(1000000000)) >= 0)
        while (true) {
            $decExponent = $decExponent + 1 | 0;
            $mantissa = $rt_udiv($mantissa, 10);
            if ($rt_ucmp($mantissa, 1000000000) < 0)
                break;
        }
    else if ($rt_ucmp($mantissa, 100000000) < 0) {
        $decExponent = $decExponent + (-1) | 0;
        $mantissa = $mantissa * 10 | 0;
    }
    $result.$mantissa = $mantissa;
    $result.$exponent0 = $decExponent - 50 | 0;
},
otcit_FloatAnalyzer_mulAndShiftRight = ($a, $b, $shift) => {
    return Long_lo(Long_shru(Long_mul(Long_and(Long_fromInt($a), Long_create(4294967295, 0)), Long_and(Long_fromInt($b), Long_create(4294967295, 0))), 32 - $shift | 0));
},
otcit_FloatAnalyzer__clinit_ = () => {
    otcit_FloatAnalyzer_MAX_MANTISSA = $rt_udiv((-1), 10);
    otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArrayFromData([(-18543760), (-873828468), (-1558056233), (-2105438446), (-791721136), (-1492370368), (-2052889754), (-707643228), (-1425108042), (-1999079893), (-621547450), (-1356231419), (-1943978595), (-533385374), (-1285701758), (-1887554866), (-443107408), (-1213479385), (-1829776968), (-350662770), (-1139523676), (-1770612400), (-255999462), (-1063793029), (-1710027882), (-159064234), (-986244846), (-1647989336), (-59802560), (-906835507), (-1584461865),
    (-2126562952), (-825520345), (-1519409735), (-2074521247), (-742253618), (-1452796353), (-2021230542), (-656988489), (-1384584251), (-1966660860), (-569676998), (-1314735058), (-1910781505), (-480270031), (-1243209484), (-1853561046), (-388717296), (-1169967296), (-1794967296), (-294967296), (-1094967296), (-1734967296), (-198967296), (-1018167296), (-1673527296), (-100663296), (-939524096), (-1610612736), (-2147483648), (-858993460), (-1546188227), (-2095944041), (-776530088), (-1480217529), (-2043167483),
    (-692087595), (-1412663535), (-1989124287), (-605618482), (-1343488245), (-1933784055), (-517074110), (-1272652747), (-1877115657), (-426404674), (-1200117198), (-1819087218), (-333559171), (-1125840796), (-1759666096), (-238485376), (-1049781760), (-1698818867), (-141129810), (-971897307), (-1636511305), (-41437710), (-892143627), (-1572708361), (-2117160148), (-810475859), (-1507374147), (-2064892777), (-726848065), (-1440471911), (-2011370988), (-641213203), (-1371964022), (-1956564688)]);
    otcit_FloatAnalyzer_exp10Table = $rt_createIntArrayFromData([(-37), (-34), (-31), (-28), (-24), (-21), (-18), (-14), (-11), (-8), (-4), (-1), 2, 6, 9, 12, 16, 19, 22, 26, 29, 32, 36, 39, 42, 46, 49, 52, 56, 59, 62, 65, 69, 72, 75, 79, 82, 85, 89, 92, 95, 99, 102, 105, 109, 112, 115, 119, 122, 125, 129, 132, 135, 139, 142, 145, 149, 152, 155, 158, 162, 165, 168, 172, 175, 178, 182, 185, 188, 192, 195, 198, 202, 205, 208, 212, 215, 218, 222, 225, 228, 232, 235, 238, 242, 245, 248, 252, 255, 258, 261, 265,
    268, 271, 275, 278, 281, 285, 288, 291]);
};
function otcit_FloatAnalyzer$Result() {
    let a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent0 = 0;
    a.$sign1 = 0;
}
function cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0() {
    let a = this; jl_Object.call(a);
    a.$_09 = null;
    a.$_15 = null;
    a.$_24 = null;
    a.$_32 = null;
    a.$_40 = 0;
    a.$_5 = 0;
}
let cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $$je;
    var$1 = var$1;
    var$2 = var$1.$_09;
    var$3 = var$1.$_15;
    var$4 = var$1.$_24;
    var$5 = var$1.$_32;
    var$6 = var$1.$_40;
    var$7 = var$1.$_5;
    if (var$3.readyState == 4) {
        var$8 = var$3.status;
        if (!var$8) {
            if (var$4 !== null)
                cgxgbta_AssetDownloadImpl$1_onFailure(var$4, var$5);
        } else if (var$8 != 200) {
            if (var$8 != 404 && var$8 != 403) {
                var$8 = var$6 + 1 | 0;
                var$1 = new cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0;
                var$1.$_0 = var$2;
                var$1.$_1 = var$7;
                var$1.$_2 = var$5;
                var$1.$_3 = var$4;
                var$1.$_4 = var$8;
                setTimeout(otji_JS_function(otji_JSWrapper_unwrap(var$1), "onTimer"), 100);
            } else if (var$4 !== null)
                cgxgbta_AssetDownloadImpl$1_onFailure(var$4, var$5);
        } else {
            var$3 = var$3.response;
            if (!(typeof var$3 == 'string' ? 1 : 0))
                var$9 = new Int8Array(var$3);
            else {
                var$1 = $rt_str(var$3);
                jnci_UTF8Charset_$callClinit();
                var$3 = jnci_UTF8Charset_INSTANCE;
                var$1 = jn_CharBuffer_wrap($rt_fastStringToCharArray(var$1.$nativeString));
                a: {
                    try {
                        var$3 = jnc_CharsetEncoder_encode0(jnc_CharsetEncoder_onUnmappableCharacter(jnc_CharsetEncoder_onMalformedInput(jnci_UTF8Charset_newEncoder(var$3), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), var$1);
                        break a;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jnc_CharacterCodingException) {
                            var$2 = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    var$3 = new jl_AssertionError;
                    jl_Throwable__init_(var$3, $rt_s(416), var$2);
                    $rt_throw(var$3);
                }
                var$8 = var$3.$array4 === null ? 0 : 1;
                if (var$8 && !var$3.$position0 && var$3.$limit0 == var$3.$capacityImpl())
                    var$10 = jn_ByteBuffer_array(var$3);
                else {
                    var$10 = $rt_createByteArray(jn_Buffer_remaining(var$3));
                    jn_ByteBuffer_get(var$3, var$10, 0, var$10.data.length);
                }
                var$9 = var$10.data;
                var$3 = var$9.buffer;
            }
            if (var$4 !== null) {
                var$11 = new cgxgbta_TeaBlob;
                var$11.$data13 = var$9;
                var$11.$response = var$3;
                cgxgbta_AssetDownloadImpl$1_onSuccess(var$4, var$5, var$11);
            }
        }
        cgxgbta_AssetDownloadImpl_subtractQueue(var$2);
    }
};
function cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0() {
    jl_Object.call(this);
    this.$_022 = null;
}
let cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4;
    var$1 = var$1.$_022;
    var$3 = var$2.loaded;
    var$4 = var$2.total;
    if (var$1 !== null) {
        var$1 = var$1.$val$listener;
        if (var$1 !== null)
            var$1.$onProgress(var$4, var$3);
    }
},
otjde_EventTarget = $rt_classWithoutFields(0),
otja_XMLHttpRequest = $rt_classWithoutFields(),
otcit_DoubleAnalyzer$Result = $rt_classWithoutFields();
function jur_Matcher$1() {
    let a = this; jl_Object.call(a);
    a.$grN = 0;
    a.$val$gr = 0;
    a.$this$016 = null;
}
let jur_Matcher$1__init_ = ($this, $this$0, var$2) => {
    $this.$this$016 = $this$0;
    $this.$val$gr = var$2;
    $this.$grN = var$2;
},
jur_Matcher$1__init_0 = (var_0, var_1) => {
    let var_2 = new jur_Matcher$1();
    jur_Matcher$1__init_(var_2, var_0, var_1);
    return var_2;
},
jur_Matcher$1_toString = $this => {
    return jur_Matcher_group($this.$this$016, $this.$grN);
};
function otjde_Registration() {
    let a = this; jl_Object.call(a);
    a.$target0 = null;
    a.$type9 = null;
    a.$listener = null;
    a.$useCapture = null;
}
function cajs_JoltScreen() {
    let a = this; jl_Object.call(a);
    a.$joltInstance = null;
    a.$mPhysicsSystem = null;
    a.$mBodyInterface = null;
    a.$boxRestitution = 0.0;
    a.$iteration = 0;
    a.$MAX_ITERATIONS = 0;
    a.$totalCubes = 0;
    a.$cubeCount = 0;
    a.$fpsLogger = null;
    a.$resetDelaySeconds = 0.0;
    a.$timer = 0.0;
    a.$labelTimer = 0.0;
    a.$physicsTimer = 0.0;
    a.$fps_data = null;
    a.$cubes = null;
    a.$groundData = null;
    a.$tempVec3 = null;
    a.$tempQuat = null;
    a.$tempQuaternion = null;
    a.$tempRotationMatrix = null;
    a.$cubeModel = null;
    a.$cubeModelInstanced = null;
    a.$instanceTransform = null;
    a.$sceneManager = null;
    a.$diffuseCubemap = null;
    a.$environmentCubemap = null;
    a.$specularCubemap = null;
    a.$brdfLUT = null;
    a.$skybox = null;
    a.$checkerBoardTexture = null;
    a.$boxTexture = null;
    a.$batch2D = null;
    a.$font = null;
    a.$renderModels0 = 0;
    a.$camera1 = null;
    a.$viewport = null;
}
let cajs_JoltScreen_NUMBER_OF_THREADS = 0,
cajs_JoltScreen_$callClinit = () => {
    cajs_JoltScreen_$callClinit = $rt_eraseClinit(cajs_JoltScreen);
    cajs_JoltScreen__clinit_();
},
cajs_JoltScreen_show = $this => {
    let $light, $iblBuilder, var$3, var$4, var$5, var$6, var$7;
    $this.$fpsLogger.$onlyReportMode = 1;
    $light = new caju_JoltInstance;
    jolt.Jolt.prototype.Init();
    $iblBuilder = new jpc_ObjectLayerPairFilterTable;
    var$3 = caju_JoltLayers_NUM_LAYERS;
    ji_IDLBase__init_($iblBuilder);
    var$3 = jpc_ObjectLayerPairFilterTable_internal_native_create_int$js_body$_1(var$3);
    ji_IDLNativeData_reset($iblBuilder.$nativeData, Long_fromInt(var$3), 0);
    $light.$mObjectLayerPairFilter = $iblBuilder;
    jpc_ObjectLayerPairFilterTable_EnableCollision($iblBuilder, caju_JoltLayers_NON_MOVING, caju_JoltLayers_MOVING);
    $iblBuilder = $light.$mObjectLayerPairFilter;
    var$3 = caju_JoltLayers_MOVING;
    jpc_ObjectLayerPairFilterTable_EnableCollision($iblBuilder, var$3, var$3);
    var$4 = new jpcb_BroadPhaseLayerInterfaceTable;
    var$3 = caju_JoltLayers_NUM_LAYERS;
    ji_IDLBase__init_(var$4);
    var$3 = jpcb_BroadPhaseLayerInterfaceTable_internal_native_create_int_int$js_body$_1(var$3, 2);
    ji_IDLNativeData_reset(var$4.$nativeData, Long_fromInt(var$3), 0);
    $light.$mBroadPhaseLayerInterface = var$4;
    $iblBuilder = jpcb_BroadPhaseLayer__init_(0);
    $light.$BP_LAYER_NON_MOVING = $iblBuilder;
    jpcb_BroadPhaseLayerInterfaceTable_MapObjectToBroadPhaseLayer($light.$mBroadPhaseLayerInterface, caju_JoltLayers_NON_MOVING, $iblBuilder);
    $iblBuilder = jpcb_BroadPhaseLayer__init_(1);
    $light.$BP_LAYER_MOVING = $iblBuilder;
    jpcb_BroadPhaseLayerInterfaceTable_MapObjectToBroadPhaseLayer($light.$mBroadPhaseLayerInterface, caju_JoltLayers_MOVING, $iblBuilder);
    var$5 = new jpcb_ObjectVsBroadPhaseLayerFilterTable;
    $iblBuilder = $light.$mBroadPhaseLayerInterface;
    var$6 = $light.$mObjectLayerPairFilter;
    var$3 = caju_JoltLayers_NUM_LAYERS;
    ji_IDLBase__init_(var$5);
    var$3 = jpcb_ObjectVsBroadPhaseLayerFilterTable_internal_native_create_BroadPhaseLayerInterface_int_ObjectLayerPairFilter_int$js_body$_1(Long_lo(($iblBuilder === null ? Long_ZERO : $iblBuilder.$nativeData.$cPointer)), 2, Long_lo((var$6 === null ? Long_ZERO : var$6.$nativeData.$cPointer)), var$3);
    ji_IDLNativeData_reset(var$5.$nativeData, Long_fromInt(var$3), 0);
    $light.$mObjectVsBroadPhaseLayerFilter = var$5;
    var$7 = j_Jolt_internal_native_New_TempAllocatorImpl$js_body$_10(33554432);
    if (!var$7)
        var$6 = null;
    else {
        var$6 = jc_TempAllocatorImpl__init_(1, 1);
        ji_IDLNativeData_reset(var$6.$nativeData, Long_fromInt(var$7), 1);
    }
    $light.$mTempAllocator = var$6;
    cajs_JoltScreen_$callClinit();
    var$7 = j_Jolt_internal_native_New_JobSystemThreadPool$js_body$_16(cajs_JoltScreen_NUMBER_OF_THREADS);
    if (!var$7)
        $iblBuilder = null;
    else {
        if (j_Jolt_JobSystemThreadPool_TEMP_STATIC_GEN_1 === null)
            j_Jolt_JobSystemThreadPool_TEMP_STATIC_GEN_1 = jc_JobSystemThreadPool__init_(1, 1);
        ji_IDLNativeData_reset(j_Jolt_JobSystemThreadPool_TEMP_STATIC_GEN_1.$nativeData, Long_fromInt(var$7), 0);
        $iblBuilder = j_Jolt_JobSystemThreadPool_TEMP_STATIC_GEN_1;
    }
    $light.$mJobSystem = $iblBuilder;
    var$3 = j_Jolt_internal_native_New_Factory$js_body$_8();
    if (!var$3)
        var$6 = null;
    else {
        var$6 = new jc_Factory;
        ji_IDLBase__init_(var$6);
        ji_IDLNativeData_reset(ji_IDLBase_getNativeData(var$6), Long_fromInt(var$3), 1);
    }
    $light.$factory = var$6;
    jc_Factory_set_sInstance(var$6);
    j_Jolt_RegisterTypes();
    $iblBuilder = j_Jolt_New_PhysicsSystem();
    $light.$physicsSystem = $iblBuilder;
    jp_PhysicsSystem_Init($iblBuilder, 10240, 0, 65536, 20480, $light.$mBroadPhaseLayerInterface, $light.$mObjectVsBroadPhaseLayerFilter, $light.$mObjectLayerPairFilter);
    $this.$joltInstance = $light;
    cajs_JoltScreen_setPhysicsSystem($this, caju_JoltInstance_getPhysicsSystem($light));
    $light = cbg_Gdx_app;
    var$3 = cajs_JoltScreen_NUMBER_OF_THREADS;
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(438)), var$3);
    var$6 = jl_StringBuilder_toString(var$6);
    cgxgbt_TeaApplication_log($light, $rt_s(439), var$6);
    $light = cbgg_PerspectiveCamera__init_();
    $this.$camera1 = $light;
    $this.$viewport = cbguv_ScreenViewport__init_($light);
    $light = $this.$camera1;
    $light.$far = 1000.0;
    cbgm_Vector3_set($light.$up, 0.0, 1.0, 0.0);
    cbgm_Vector3_set($this.$camera1.$position3, 30.0, 10.0, 30.0);
    cbgg_Camera_lookAt($this.$camera1, 0.0, 0.0, 0.0);
    $this.$tempVec3 = j_Jolt_New_Vec3();
    $this.$tempQuat = jm_Quat__init_();
    $this.$tempQuaternion = cbgm_Quaternion__init_();
    $this.$tempRotationMatrix = cbgm_Matrix4__init_();
    $this.$sceneManager = nmgss_SceneManager__init_0();
    $light = nmgsl_DirectionalLightEx__init_0();
    cbgm_Vector3_set($light.$direction, (-0.8999999761581421), (-1.0), (-1.0));
    cbgm_Vector3_nor($light.$direction);
    cbgg_Color_set0($light.$color1, cbgg_Color_WHITE);
    $light.$intensity1 = 8.800000190734863;
    cbggg_Environment_add($this.$sceneManager.$environment0, $light);
    nmgss_SceneManager_setAmbientLight($this.$sceneManager, 0.5);
    $iblBuilder = nmgsu_IBLBuilder_createOutdoor($light);
    $this.$environmentCubemap = nmgsu_IBLBuilder_buildEnvMap($iblBuilder, 1024);
    $this.$diffuseCubemap = nmgsu_IBLBuilder_buildIrradianceMap($iblBuilder, 256);
    $this.$specularCubemap = nmgsu_IBLBuilder_buildRadianceMap($iblBuilder, 10);
    nmgsu_IBLBuilder_dispose($iblBuilder);
    $iblBuilder = cbgg_Texture__init_2(cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(440)));
    $this.$brdfLUT = $iblBuilder;
    $light = $this.$sceneManager.$environment0;
    var$6 = new nmgsa_PBRTextureAttribute;
    nmgsa_PBRTextureAttribute_$callClinit();
    nmgsa_PBRTextureAttribute__init_(var$6, nmgsa_PBRTextureAttribute_BRDFLUTTexture, $iblBuilder);
    cbggg_Attributes_set($light, var$6);
    cbggg_Attributes_set($this.$sceneManager.$environment0, nmgsa_PBRCubemapAttribute_createSpecularEnv($this.$specularCubemap));
    cbggg_Attributes_set($this.$sceneManager.$environment0, nmgsa_PBRCubemapAttribute_createDiffuseEnv($this.$diffuseCubemap));
    $light = nmgss_SceneSkybox__init_($this.$environmentCubemap);
    $this.$skybox = $light;
    nmgss_SceneManager_setSkyBox($this.$sceneManager, $light);
    cajs_JoltScreen_createModels($this);
    cajs_JoltScreen_resetBoxes($this);
    cajs_JoltScreen_updateModels($this);
},
cajs_JoltScreen_render = ($this, $delta) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    var$2 = $this.$fpsLogger;
    var$3 = cbgu_TimeUtils_nanoTime();
    if (Long_gt(Long_sub(var$3, var$2.$startTime), Long_fromInt(1000000000))) {
        var$4 = cbg_Gdx_graphics.$fps0 | 0;
        var$2.$fps = var$4;
        if (var$4 < var$2.$bound) {
            var$2.$startTime = var$3;
            var$2.$frameNumber = var$2.$frameNumber + 1 | 0;
            var$2.$min2 = jl_Math_min(var$2.$min2, var$4);
            var$2.$max3 = jl_Math_max(var$2.$max3, var$2.$fps);
            var$5 = var$2.$average;
            var$6 = var$2.$frameNumber;
            var$7 = var$6;
            var$6 = jl_Math_round(var$5 * (var$7 - 1.0) / var$7 + var$2.$fps / var$6);
            var$2.$average = var$6;
            if (!var$2.$onlyReportMode) {
                var$8 = cbg_Gdx_app;
                var$9 = var$2.$fps;
                var$4 = var$2.$min2;
                var$10 = var$2.$max3;
                var$2 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$2);
                jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(441)), var$9), $rt_s(442)), var$4), $rt_s(443)), var$6), $rt_s(444)), var$10);
                var$2 = jl_AbstractStringBuilder_toString(var$2);
                cgxgbt_TeaApplication_log(var$8, $rt_s(445), var$2);
            }
        }
    }
    var$2 = cbgg_Color_RED;
    var$11 = var$2.$r;
    var$12 = var$2.$g;
    var$13 = var$2.$b;
    var$14 = var$2.$a;
    cbg_Gdx_gl.$glClearColor(var$11, var$12, var$13, var$14);
    cbg_Gdx_gl.$glClear(16640);
    cbgg_PerspectiveCamera_update($this.$camera1);
    var$8 = $this.$viewport;
    var$6 = cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics);
    var$9 = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
    var$2 = var$8;
    var$2.$screenX = 0;
    var$2.$screenY = 0;
    var$2.$screenWidth = var$6;
    var$2.$screenHeight = var$9;
    var$11 = var$6;
    var$12 = var$8.$unitsPerPixel;
    var$11 = var$11 * var$12;
    var$12 = var$9 * var$12;
    var$2.$worldWidth = var$11;
    var$2.$worldHeight = var$12;
    cbggg_HdpiUtils_glViewport(0, 0, var$6, var$9);
    var$8 = var$2.$camera5;
    var$8.$viewportWidth = var$2.$worldWidth;
    var$8.$viewportHeight = var$2.$worldHeight;
    cbgg_PerspectiveCamera_update(var$8);
    $this.$physicsTimer = $this.$physicsTimer + $delta;
    var$11 = $this.$timer + $delta;
    $this.$timer = var$11;
    if (var$11 > $this.$resetDelaySeconds) {
        $this.$timer = 0.0;
        var$6 = $this.$iteration;
        if (!var$6) {
            var$2 = $this.$fpsLogger;
            var$8 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$8);
            jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(446)), var$6), $rt_s(447));
            caju_AntzFPSLogger_reset(var$2, jl_AbstractStringBuilder_toString(var$8));
        } else {
            var$2 = $this.$fpsLogger;
            var$8 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$8);
            jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(446)), var$6), $rt_s(448));
            caju_AntzFPSLogger_reset(var$2, jl_AbstractStringBuilder_toString(var$8));
        }
        var$6 = $this.$iteration + 1 | 0;
        $this.$iteration = var$6;
        if (var$6 > 5) {
            cgxgbt_TeaApplication_log(cbg_Gdx_app, $rt_s(449), $rt_s(450));
            cajs_JoltScreen_logResults($this);
        }
        cajs_JoltScreen_resetBoxes($this);
    }
    if ($this.$physicsTimer >= 0.01666666753590107) {
        cajs_JoltScreen_stepPhysics($this, 0.01666666753590107);
        var$11 = $this.$physicsTimer - 0.01666666753590107;
        $this.$physicsTimer = var$11;
        if (var$11 > 0.01666666753590107)
            $this.$physicsTimer = 0.0;
    }
    cajs_JoltScreen_renderModels($this, $delta);
    cajs_JoltScreen_renderLabels($this, $delta);
},
cajs_JoltScreen_stepPhysics = ($this, $deltaTime) => {
    let $numSteps, var$3, var$4, var$5, var$6, var$7, var$8;
    $numSteps = $deltaTime <= 0.03333333507180214 ? 1 : 2;
    var$3 = $this.$joltInstance;
    var$4 = var$3.$physicsSystem;
    var$5 = var$3.$mTempAllocator;
    var$3 = var$3.$mJobSystem;
    var$6 = Long_lo(var$4.$nativeData.$cPointer);
    var$7 = Long_lo((var$5 === null ? Long_ZERO : var$5.$nativeData.$cPointer));
    var$8 = Long_lo((var$3 === null ? Long_ZERO : var$3.$nativeData.$cPointer));
    jp_PhysicsSystem_internal_native_Update$js_body$_8(var$6, $deltaTime, $numSteps, var$7, var$8);
    cajs_JoltScreen_updateModels($this);
},
cajs_JoltScreen_updateModels = $this => {
    let $i, $cubeData, $mat44;
    a: {
        if ($this.$renderModels0) {
            $i = 0;
            while (true) {
                $cubeData = $this.$cubes;
                if ($i >= $cubeData.$size0)
                    break a;
                $cubeData = cbgu_Array_get($cubeData, $i);
                $mat44 = jpb_Body_GetWorldTransform($cubeData.$body);
                cbgm_Matrix4_idt($this.$instanceTransform);
                jg_JoltGdx_mat44_to_matrix4($mat44, $this.$instanceTransform);
                cbgm_Matrix4_set($cubeData.$modelInstance.$transform, $this.$instanceTransform);
                $i = $i + 1 | 0;
            }
        }
    }
},
cajs_JoltScreen_renderLabels = ($this, $delta) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    $delta = $this.$labelTimer + $delta;
    $this.$labelTimer = $delta;
    if ($delta > 1.5) {
        var$2 = $this.$batch2D;
        if (var$2.$drawing) {
            var$3 = new jl_IllegalStateException;
            jl_Exception__init_(var$3, $rt_s(451));
            $rt_throw(var$3);
        }
        var$2.$renderCalls = 0;
        cbg_Gdx_gl.$glDepthMask(0);
        var$3 = var$2.$customShader;
        if (var$3 !== null)
            var$3.$bind();
        else
            cbggg_ShaderProgram_bind(var$2.$shader0);
        cbgm_Matrix4_mul(cbgm_Matrix4_set(var$2.$combinedMatrix0, var$2.$projectionMatrix0), var$2.$transformMatrix0);
        var$3 = var$2.$customShader;
        if (var$3 !== null) {
            var$3.$setUniformMatrix($rt_s(452), var$2.$combinedMatrix0);
            var$2.$customShader.$setUniformi($rt_s(453), 0);
        } else {
            cbggg_ShaderProgram_setUniformMatrix0(var$2.$shader0, $rt_s(452), var$2.$combinedMatrix0);
            cbggg_ShaderProgram_setUniformi0(var$2.$shader0, $rt_s(453), 0);
        }
        var$2.$drawing = 1;
        var$2 = $this.$font;
        var$3 = $this.$batch2D;
        var$4 = $this.$iteration;
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(454)), var$4);
        cbggg_BitmapFont_draw(var$2, var$3, jl_AbstractStringBuilder_toString(var$5), 2.0, 60.0);
        var$2 = $this.$font;
        var$3 = $this.$batch2D;
        var$4 = $this.$cubeCount;
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(455)), var$4);
        cbggg_BitmapFont_draw(var$2, var$3, jl_AbstractStringBuilder_toString(var$5), 2.0, 45.0);
        var$2 = $this.$font;
        var$3 = $this.$batch2D;
        var$4 = $this.$fpsLogger.$fps;
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(441)), var$4);
        cbggg_BitmapFont_draw(var$2, var$3, jl_AbstractStringBuilder_toString(var$5), 2.0, 30.0);
        var$2 = $this.$font;
        var$3 = $this.$batch2D;
        var$5 = $this.$fpsLogger;
        var$4 = var$5.$min2;
        var$6 = var$5.$average;
        var$7 = var$5.$max3;
        var$8 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$8);
        jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$8, $rt_s(456)), var$4), $rt_s(443)), var$6), $rt_s(444)), var$7);
        cbggg_BitmapFont_draw(var$2, var$3, jl_AbstractStringBuilder_toString(var$8), 2.0, 15.0);
        var$2 = $this.$batch2D;
        if (!var$2.$drawing) {
            var$3 = new jl_IllegalStateException;
            jl_Exception__init_(var$3, $rt_s(457));
            $rt_throw(var$3);
        }
        if (var$2.$idx > 0)
            cbggg_SpriteBatch_flush(var$2);
        var$2.$lastTexture = null;
        var$2.$drawing = 0;
        var$3 = cbg_Gdx_gl;
        var$3.$glDepthMask(1);
        if (var$2.$blendingDisabled ? 0 : 1)
            var$3.$glDisable(3042);
        var$4 = $this.$iteration;
        if (var$4) {
            var$9 = $this.$fps_data.data;
            var$4 = var$4 - 1 | 0;
            var$9[var$4] = new cajs_JoltScreen$FpsData;
            var$2 = var$9[var$4];
            var$3 = $this.$fpsLogger;
            var$2.$min4 = var$3.$min2;
            var$9[var$4].$avg = var$3.$average;
            var$9[var$4].$max5 = var$3.$max3;
        }
    }
},
cajs_JoltScreen_logResults = $this => {
    let $report$min, $report$avg, $report$max, $i, var$5, var$6, $report$max_0, var$8, var$9, var$10, var$11;
    $report$min = 0.0;
    $report$avg = 0.0;
    $report$max = 0.0;
    $i = 0;
    while (true) {
        var$5 = $this.$MAX_ITERATIONS;
        if ($i >= var$5)
            break;
        var$6 = $this.$fps_data.data;
        $report$min = $report$min + var$6[$i].$min4;
        $report$avg = $report$avg + var$6[$i].$avg;
        $report$max = $report$max + var$6[$i].$max5;
        $i = $i + 1 | 0;
    }
    $report$max_0 = var$5;
    $report$min = $report$min / $report$max_0;
    $report$avg = $report$avg / $report$max_0;
    $report$max_0 = $report$max / $report$max_0;
    var$8 = cbg_Gdx_app;
    var$9 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$9);
    jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$9, $rt_s(458)), var$5), $rt_s(459));
    var$10 = jl_AbstractStringBuilder_toString(var$9);
    var$11 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$11);
    jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(var$11, $rt_s(456)), $report$min), $rt_s(443)), $report$avg), $rt_s(444)), $report$max_0);
    var$11 = jl_AbstractStringBuilder_toString(var$11);
    cgxgbt_TeaApplication_log(var$8, var$10, var$11);
},
cajs_JoltScreen_renderModels = ($this, $delta) => {
    let $i, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    a: {
        jg_JoltGdx_mat44_to_matrix4(jpb_Body_GetWorldTransform($this.$groundData.$body), $this.$groundData.$modelInstance.$transform);
        cbgu_Array_clear($this.$sceneManager.$renderableProviders);
        if ($this.$renderModels0) {
            $i = 0;
            while (true) {
                var$3 = $this.$cubes;
                if ($i >= var$3.$size0)
                    break a;
                cbgu_Array_add($this.$sceneManager.$renderableProviders, (cbgu_Array_get(var$3, $i)).$modelInstance);
                $i = $i + 1 | 0;
            }
        }
    }
    cbgu_Array_add($this.$sceneManager.$renderableProviders, $this.$groundData.$modelInstance);
    var$3 = $this.$sceneManager;
    var$4 = $this.$camera1;
    var$3.$camera0 = var$4;
    if (var$4 !== null) {
        if (var$3.$skyBox !== null) {
            var$4 = var$3.$environment0;
            nmgsa_PBRMatrixAttribute_$callClinit();
            var$4 = cbggg_Attributes_get(var$4, nmgsa_PBRMatrixAttribute_EnvRotation);
            if (var$4 !== null) {
                var$5 = var$3.$skyBox;
                var$4 = var$4.$matrix;
                var$6 = cbggg_Attributes_get(var$5.$quad.$environment, nmgsa_PBRMatrixAttribute_EnvRotation);
                if (var$4 === null) {
                    if (var$6 !== null)
                        cbggg_Attributes_remove(var$5.$quad.$environment, nmgsa_PBRMatrixAttribute_EnvRotation);
                } else if (var$6 !== null)
                    cbgm_Matrix4_set(var$6.$matrix, var$4);
                else
                    cbggg_Attributes_set(var$5.$quad.$environment, nmgsa_PBRMatrixAttribute_set(nmgsa_PBRMatrixAttribute__init_(nmgsa_PBRMatrixAttribute_EnvRotation), var$4));
            }
        }
        var$7 = var$3.$computedEnvironement;
        var$8 = var$3.$environment0;
        var$7.$mask = var$8.$mask;
        cbgu_Array_clear(var$7.$attributes);
        var$6 = cbggg_Attributes_iterator(var$8);
        while (cbgu_Array$ArrayIterator_hasNext(var$6)) {
            var$4 = cbgu_Array$ArrayIterator_next(var$6);
            cbgu_Array_add(var$7.$attributes, var$4);
        }
        b: {
            var$7.$shadowMap = var$8.$shadowMap;
            var$7.$sorted = 1;
            cbgu_Array_clear(var$3.$pointLights1.$lights);
            cbgu_Array_clear(var$3.$spotLights0.$lights0);
            var$4 = var$3.$environment0;
            if (var$4 !== null) {
                var$6 = cbggg_Attributes_iterator(var$4);
                while (true) {
                    if (!cbgu_Array$ArrayIterator_hasNext(var$6))
                        break b;
                    var$4 = cbgu_Array$ArrayIterator_next(var$6);
                    if (var$4 instanceof cbggga_PointLightsAttribute) {
                        cbgu_Array_addAll(var$3.$pointLights1.$lights, var$4.$lights);
                        nmgsu_EnvironmentCache_replaceCache(var$3.$computedEnvironement, var$3.$pointLights1);
                    } else if (!(var$4 instanceof cbggga_SpotLightsAttribute))
                        cbggg_Attributes_set(var$3.$computedEnvironement, var$4);
                    else {
                        cbgu_Array_addAll(var$3.$spotLights0.$lights0, var$4.$lights0);
                        nmgsu_EnvironmentCache_replaceCache(var$3.$computedEnvironement, var$3.$spotLights0);
                    }
                }
            }
        }
        c: {
            var$4 = var$3.$environment0;
            cbggga_PointLightsAttribute_$callClinit();
            var$4 = cbggg_Attributes_get(var$4, cbggga_PointLightsAttribute_Type);
            if (var$4 !== null) {
                var$8 = cbgu_Array_iterator(var$4.$lights);
                while (true) {
                    if (!cbgu_Array$ArrayIterator_hasNext(var$8))
                        break c;
                    var$4 = cbgu_Array$ArrayIterator_next(var$8);
                    if (var$4 instanceof nmgsl_PointLightEx) {
                        var$4 = var$4;
                        var$5 = var$4.$range;
                        if (var$5 !== null && !cbgm_Frustum_sphereInFrustum(var$3.$camera0.$frustum, var$4.$position2, var$5.$floatValue()))
                            cbgu_Array_removeValue(var$3.$pointLights1.$lights, var$4, 1);
                    }
                }
            }
        }
        d: {
            var$4 = var$3.$environment0;
            cbggga_SpotLightsAttribute_$callClinit();
            var$4 = cbggg_Attributes_get(var$4, cbggga_SpotLightsAttribute_Type);
            if (var$4 !== null) {
                var$8 = cbgu_Array_iterator(var$4.$lights0);
                while (true) {
                    if (!cbgu_Array$ArrayIterator_hasNext(var$8))
                        break d;
                    var$4 = cbgu_Array$ArrayIterator_next(var$8);
                    if (var$4 instanceof nmgsl_SpotLightEx) {
                        var$4 = var$4;
                        var$5 = var$4.$range0;
                        if (var$5 !== null && !cbgm_Frustum_sphereInFrustum(var$3.$camera0.$frustum, var$4.$position4, var$5.$floatValue()))
                            cbgu_Array_removeValue(var$3.$spotLights0.$lights0, var$4, 1);
                    }
                }
            }
        }
        var$5 = cbgu_Array_iterator(var$3.$renderableProviders);
        while (cbgu_Array$ArrayIterator_hasNext(var$5)) {
            var$4 = cbgu_Array$ArrayIterator_next(var$5);
            if ($rt_isInstance(var$4, nmgss_Updatable))
                var$4.$update0(var$3.$camera0, $delta);
        }
        var$4 = var$3.$skyBox;
        if (var$4 !== null) {
            var$3 = var$3.$camera0;
            cbgm_Matrix4_set(var$4.$directionInverse, var$3.$view);
            var$9 = var$4.$directionInverse.$val.data;
            var$9[12] = 0.0;
            var$9[13] = 0.0;
            var$9[14] = 1.0000000031710769E-30;
            var$5 = var$4.$quad.$environment;
            nmgsa_PBRMatrixAttribute_$callClinit();
            var$5 = cbggg_Attributes_get(var$5, nmgsa_PBRMatrixAttribute_EnvRotation);
            if (var$5 !== null)
                cbgm_Matrix4_mul(var$4.$directionInverse, cbgm_Matrix4_tra(cbgm_Matrix4_set(var$4.$envRotationInverse, var$5.$matrix)));
            cbgm_Matrix4_inv(cbgm_Matrix4_mul(cbgm_Matrix4_set(var$4.$quad.$worldTransform, var$3.$projection), var$4.$directionInverse));
        }
    }
    nmgss_SceneManager_render($this.$sceneManager);
},
cajs_JoltScreen_createModels = $this => {
    let $material, $builder, var$3, var$4, $groundBox, $groundMaterial;
    $material = cbgg_Texture__init_2(cgxgbt_TeaFiles_internal(cbg_Gdx_files, $rt_s(460)));
    $this.$boxTexture = $material;
    $builder = cbgg_Texture$TextureFilter_Linear;
    cbgg_GLTexture_setFilter($material, $builder, $builder);
    $material = new cbggg_Material;
    var$3 = $rt_createArray(cbggg_Attribute, 2);
    var$4 = var$3.data;
    var$4[0] = nmgsa_PBRTextureAttribute_createBaseColorTexture($this.$boxTexture);
    cbggga_FloatAttribute_$callClinit();
    var$4[1] = cbggga_FloatAttribute__init_0(cbggga_FloatAttribute_Shininess, 4.0);
    cbggg_Material__init_($material, var$3);
    $builder = cbgggu_ModelBuilder__init_();
    $this.$cubeModel = cbgggu_ModelBuilder_createBox($builder, 1.0, 1.0, 1.0, $material, Long_fromInt(25));
    $this.$cubeModelInstanced = cbgggu_ModelBuilder_createBox($builder, 1.0, 1.0, 1.0, $material, Long_fromInt(25));
    $material = cbgg_Pixmap__init_(2, 2, cbgg_Pixmap$Format_RGBA8888);
    cbgg_Pixmap_setColor($material, 0.30000001192092896, 0.30000001192092896, 0.30000001192092896, 1.0);
    cbgg_Pixmap_fillRectangle($material, 0, 0, 1, 1);
    cbgg_Pixmap_fillRectangle($material, 1, 1, 1, 1);
    cbgg_Pixmap_setColor($material, 0.699999988079071, 0.699999988079071, 0.699999988079071, 1.0);
    cbgg_Pixmap_fillRectangle($material, 1, 0, 1, 1);
    cbgg_Pixmap_fillRectangle($material, 0, 1, 1, 1);
    $groundBox = cbgg_Texture__init_3(cbggg_PixmapTextureData__init_($material, null, 1, 0));
    $groundMaterial = cbgg_Texture$TextureWrap_Repeat;
    cbgg_GLTexture_setWrap($groundBox, $groundMaterial, $groundMaterial);
    cbgg_Pixmap_dispose($material);
    $this.$checkerBoardTexture = $groundBox;
    $groundMaterial = new cbggg_Material;
    var$3 = $rt_createArray(cbggg_Attribute, 2);
    var$4 = var$3.data;
    var$4[0] = nmgsa_PBRTextureAttribute_createBaseColorTexture($groundBox);
    cbggga_ColorAttribute_$callClinit();
    var$4[1] = cbggga_ColorAttribute__init_3(cbggga_ColorAttribute_Diffuse, 1.0, 1.0, 1.0, 1.0);
    cbggg_Material__init_($groundMaterial, var$3);
    $this.$groundData = cajs_JoltScreen_createBox($this, cbggg_ModelInstance__init_(cbgggu_ModelBuilder_createBox($builder, 60.0, 0.30000001192092896, 60.0, $groundMaterial, Long_fromInt(27))), (-2), (-1.0), 0.0, (-2.0), 0.0, 0.0, 0.0, 0.0, 60.0, 0.30000001192092896, 60.0);
},
cajs_JoltScreen_createBox = ($this, $modelInstance, $userData, $mass, $x, $y, $z, $axiX, $axiY, $axiZ, $x1, $y1, $z1) => {
    let $bodyShape, $motionType, var$15, $layer, $massProperties, $bodySettings, var$19, $body, var$21, $cubeData;
    jm_Vec3_Set($this.$tempVec3, $x1 / 2.0, $y1 / 2.0, $z1 / 2.0);
    $bodyShape = new jpcs_BoxShape;
    $motionType = $this.$tempVec3;
    jpcs_ConvexShape__init_0($bodyShape, 1, 1);
    var$15 = jpcs_BoxShape_internal_native_create_Vec3$js_body$_5(Long_lo(($motionType === null ? Long_ZERO : $motionType.$nativeData.$cPointer)));
    ji_IDLNativeData_reset($bodyShape.$nativeData, Long_fromInt(var$15), 0);
    je_EMotionType_$callClinit();
    $motionType = je_EMotionType_Dynamic;
    $layer = caju_JoltLayers_MOVING;
    cbgm_Matrix4_idt($this.$tempRotationMatrix);
    $massProperties = $this.$tempRotationMatrix;
    cbgm_Vector3_$callClinit();
    cbgm_Matrix4_rotate($massProperties, cbgm_Vector3_X, $axiX);
    cbgm_Matrix4_rotate($this.$tempRotationMatrix, cbgm_Vector3_Y, $axiY);
    cbgm_Matrix4_rotate($this.$tempRotationMatrix, cbgm_Vector3_Z, $axiZ);
    $massProperties = $this.$tempRotationMatrix;
    $bodySettings = $this.$tempQuaternion;
    var$19 = $massProperties.$val.data;
    cbgm_Quaternion_setFromAxes($bodySettings, 0, var$19[0], var$19[4], var$19[8], var$19[1], var$19[5], var$19[9], var$19[2], var$19[6], var$19[10]);
    jm_Vec3_Set($this.$tempVec3, $x, $y, $z);
    $massProperties = $this.$tempQuat;
    $bodySettings = $this.$tempQuaternion;
    $x = $bodySettings.$x0;
    $y = $bodySettings.$y0;
    $z = $bodySettings.$z0;
    $axiX = $bodySettings.$w;
    jm_Quat_internal_native_Set$js_body$_64(Long_lo($massProperties.$nativeData.$cPointer), $x, $y, $z, $axiX);
    $bodySettings = $bodyShape;
    var$15 = jpcs_Shape_internal_native_GetMassProperties$js_body$_28(Long_lo($bodySettings.$nativeData.$cPointer));
    if (!var$15)
        $massProperties = null;
    else {
        if ($bodySettings.$MassProperties_TEMP_GEN_0 === null) {
            $massProperties = new jpb_MassProperties;
            ji_IDLBase__init_($massProperties);
            $bodySettings.$MassProperties_TEMP_GEN_0 = $massProperties;
        }
        ji_IDLNativeData_reset($bodySettings.$MassProperties_TEMP_GEN_0.$nativeData, Long_fromInt(var$15), 0);
        $massProperties = $bodySettings.$MassProperties_TEMP_GEN_0;
    }
    var$15 = $rt_compare($mass, 0.0);
    if (var$15 > 0)
        jpb_MassProperties_internal_native_set_mMass$js_body$_22(Long_lo($massProperties.$nativeData.$cPointer), $mass);
    else if (var$15 < 0) {
        $motionType = je_EMotionType_Static;
        $layer = caju_JoltLayers_NON_MOVING;
    }
    $bodySettings = $this.$tempVec3;
    $body = $this.$tempQuat;
    var$15 = j_Jolt_internal_native_New_BodyCreationSettings_2$js_body$_24(Long_lo($bodyShape.$nativeData.$cPointer), Long_lo(($bodySettings === null ? Long_ZERO : $bodySettings.$nativeData.$cPointer)), Long_lo(($body === null ? Long_ZERO : $body.$nativeData.$cPointer)), Long_lo(Long_fromInt($motionType === null ? 0 : $motionType.$value4)), $layer);
    if (!var$15)
        $bodySettings = null;
    else {
        $bodySettings = new jpb_BodyCreationSettings;
        ji_IDLBase__init_($bodySettings);
        ji_IDLNativeData_reset($bodySettings.$nativeData, Long_fromInt(var$15), 1);
    }
    jpb_BodyCreationSettings_internal_native_set_mMassPropertiesOverride$js_body$_134(Long_lo($bodySettings.$nativeData.$cPointer), Long_lo(($massProperties === null ? Long_ZERO : $massProperties.$nativeData.$cPointer)));
    $mass = $this.$boxRestitution;
    jpb_BodyCreationSettings_internal_native_set_mRestitution$js_body$_94(Long_lo($bodySettings.$nativeData.$cPointer), $mass);
    jpb_BodyCreationSettings_internal_native_set_mFriction$js_body$_90(Long_lo($bodySettings.$nativeData.$cPointer), 0.20000000298023224);
    var$15 = jpb_BodyInterface_internal_native_CreateBody$js_body$_6(Long_lo($this.$mBodyInterface.$nativeData.$cPointer), Long_lo($bodySettings.$nativeData.$cPointer));
    if (!var$15)
        $body = null;
    else {
        $body = new jpb_Body;
        ji_IDLBase__init_($body);
        ji_IDLNativeData_reset($body.$nativeData, Long_fromInt(var$15), 0);
    }
    var$21 = Long_fromInt($userData);
    $userData = Long_lo((ji_IDLNativeData_getCPointer(ji_IDLBase_getNativeData($body))));
    var$15 = Long_lo(var$21);
    jpb_Body_internal_native_SetUserData$js_body$_130($userData, var$15);
    jpb_BodyCreationSettings_dispose($bodySettings);
    $cubeData = cajs_JoltScreen$CubeData__init_();
    $cubeData.$body = $body;
    $cubeData.$modelInstance = $modelInstance;
    $modelInstance = $this.$mBodyInterface;
    $bodyShape = jpb_Body_GetID($body);
    je_EActivation_$callClinit();
    jpb_BodyInterface_AddBody($modelInstance, $bodyShape, je_EActivation_Activate);
    return $cubeData;
},
cajs_JoltScreen_resize = ($this, $width, $height) => {
    if ($width > 0 && $height > 0)
        return;
},
cajs_JoltScreen_pause = $this => {
    return;
},
cajs_JoltScreen_resume = $this => {
    return;
},
cajs_JoltScreen_hide = $this => {
    return;
},
cajs_JoltScreen_resetBoxes = $this => {
    let $bodyInterface, $box, $bodyID, $base, $k, var$6, var$7, $i, var$9, var$10, $j, $x, $y, $z, var$15;
    $this.$labelTimer = 0.0;
    $bodyInterface = jp_PhysicsSystem_GetBodyInterface($this.$mPhysicsSystem);
    $box = cbgu_Array_iterator($this.$cubes);
    while (cbgu_Array$ArrayIterator_hasNext($box)) {
        $bodyID = jpb_Body_GetID((cbgu_Array$ArrayIterator_next($box)).$body);
        jpb_BodyInterface_internal_native_RemoveBody$js_body$_34(Long_lo($bodyInterface.$nativeData.$cPointer), Long_lo(($bodyID === null ? Long_ZERO : $bodyID.$nativeData.$cPointer)));
        $base = Long_lo($bodyInterface.$nativeData.$cPointer);
        $k = Long_lo(($bodyID === null ? Long_ZERO : $bodyID.$nativeData.$cPointer));
        jpb_BodyInterface_internal_native_DestroyBody$js_body$_28($base, $k);
    }
    cbgu_Array_clear($this.$cubes);
    var$6 = $this.$totalCubes;
    var$7 = var$6 > 0.0 ? jl_Math_pow(var$6, 0.3333333333333333) :  -jl_Math_pow( -var$6, 0.3333333333333333);
    $base = Long_lo(Long_fromNumber(var$7 + jl_Math_sign(var$7) * 0.5));
    $this.$cubeCount = 0;
    $i = 0;
    var$9 = $base - 1 | 0;
    var$10 = $base;
    while ($i < var$10) {
        $j = 0;
        while ($j < $base) {
            $k = 0;
            while ($k < $base) {
                if ($this.$cubeCount >= $this.$totalCubes) {
                    jp_PhysicsSystem_OptimizeBroadPhase($this.$mPhysicsSystem);
                    return;
                }
                $x = ($i + (-8) | 0) * 1.2999999523162842;
                $y = ($j + 22 | 0) * 1.2999999523162842;
                $z = ($k + (-6) | 0) * 1.2999999523162842;
                $box = cajs_JoltScreen_createBox($this, cbggg_ModelInstance__init_($this.$cubeModel), $this.$cubeCount, 0.4000000059604645, $x, $y, $z, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0);
                cbgu_Array_add($this.$cubes, $box);
                var$15 = $this.$cubeCount + 1 | 0;
                $this.$cubeCount = var$15;
                if ($i == (var$10 - 1 | 0) && $j == var$9 && $k == var$9 && var$15 != $this.$totalCubes)
                    var$10 = var$10 + 1 | 0;
                $k = $k + 1 | 0;
            }
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    jp_PhysicsSystem_OptimizeBroadPhase($this.$mPhysicsSystem);
},
cajs_JoltScreen_setPhysicsSystem = ($this, $mPhysicsSystem) => {
    $this.$mPhysicsSystem = $mPhysicsSystem;
    $this.$mBodyInterface = jp_PhysicsSystem_GetBodyInterface($mPhysicsSystem);
},
cajs_JoltScreen__clinit_ = () => {
    cajs_JoltScreen_NUMBER_OF_THREADS = caj_Main_threads;
};
function cgxgbta_TeaBlob() {
    let a = this; jl_Object.call(a);
    a.$response = null;
    a.$data13 = null;
}
let cgxjl_JParserLibraryLoaderListener = $rt_classWithoutFields(0);
function cajs_InitScreen$show$lambda$_1_0() {
    jl_Object.call(this);
    this.$_013 = null;
}
let cajs_InitScreen$show$lambda$_1_0_onLoad = (var$0, var$1, var$2) => {
    var$0.$_013.$init1 = var$1;
},
j_JoltLoader = $rt_classWithoutFields();
function caju_AntzFPSLogger() {
    let a = this; jl_Object.call(a);
    a.$startTime = Long_ZERO;
    a.$bound = 0;
    a.$frameNumber = 0;
    a.$onlyReportMode = 0;
    a.$min2 = 0;
    a.$average = 0;
    a.$max3 = 0;
    a.$fps = 0;
}
let caju_AntzFPSLogger_reset = ($this, $message) => {
    let var$2, var$3, var$4, var$5, var$6, var$7;
    var$2 = cbg_Gdx_app;
    var$3 = $this.$min2;
    var$4 = $this.$average;
    var$5 = $this.$max3;
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $message), $rt_s(461)), var$3), $rt_s(462)), var$4), $rt_s(463)), var$5);
    var$7 = jl_AbstractStringBuilder_toString(var$6);
    cgxgbt_TeaApplication_log(var$2, $rt_s(445), var$7);
    $this.$min2 = 99999;
    $this.$average = 0;
    $this.$max3 = 0;
    $this.$frameNumber = 0;
    $this.$fps = 0;
};
function cajs_JoltScreen$FpsData() {
    let a = this; jl_Object.call(a);
    a.$min4 = 0.0;
    a.$avg = 0.0;
    a.$max5 = 0.0;
}
function cbgm_Matrix4() {
    jl_Object.call(this);
    this.$val = null;
}
let cbgm_Matrix4_tmp = null,
cbgm_Matrix4_quat = null,
cbgm_Matrix4_quat2 = null,
cbgm_Matrix4_l_vez = null,
cbgm_Matrix4_l_vex = null,
cbgm_Matrix4_l_vey = null,
cbgm_Matrix4_tmpVec = null,
cbgm_Matrix4_tmpMat = null,
cbgm_Matrix4_right = null,
cbgm_Matrix4_tmpForward = null,
cbgm_Matrix4_tmpUp = null,
cbgm_Matrix4_$callClinit = () => {
    cbgm_Matrix4_$callClinit = $rt_eraseClinit(cbgm_Matrix4);
    cbgm_Matrix4__clinit_();
},
cbgm_Matrix4__init_0 = $this => {
    let var$1, var$2;
    cbgm_Matrix4_$callClinit();
    var$1 = $rt_createFloatArray(16);
    var$2 = var$1.data;
    $this.$val = var$1;
    var$2[0] = 1.0;
    var$2[5] = 1.0;
    var$2[10] = 1.0;
    var$2[15] = 1.0;
},
cbgm_Matrix4__init_ = () => {
    let var_0 = new cbgm_Matrix4();
    cbgm_Matrix4__init_0(var_0);
    return var_0;
},
cbgm_Matrix4_set = ($this, $matrix) => {
    return cbgm_Matrix4_set0($this, $matrix.$val);
},
cbgm_Matrix4_set0 = ($this, $values) => {
    let var$2;
    var$2 = $values.data;
    $values = $this.$val.data;
    $values[0] = var$2[0];
    $values[1] = var$2[1];
    $values[2] = var$2[2];
    $values[3] = var$2[3];
    $values[4] = var$2[4];
    $values[5] = var$2[5];
    $values[6] = var$2[6];
    $values[7] = var$2[7];
    $values[8] = var$2[8];
    $values[9] = var$2[9];
    $values[10] = var$2[10];
    $values[11] = var$2[11];
    $values[12] = var$2[12];
    $values[13] = var$2[13];
    $values[14] = var$2[14];
    $values[15] = var$2[15];
    return $this;
},
cbgm_Matrix4_set1 = ($this, $translationX, $translationY, $translationZ, $quaternionX, $quaternionY, $quaternionZ, $quaternionW, $scaleX, $scaleY, $scaleZ) => {
    let $xs, $ys, $zs, $wx, $wy, $wz, $xx, $xy, $xz, $yy, $yz, $zz, var$23;
    $xs = $quaternionX * 2.0;
    $ys = $quaternionY * 2.0;
    $zs = $quaternionZ * 2.0;
    $wx = $quaternionW * $xs;
    $wy = $quaternionW * $ys;
    $wz = $quaternionW * $zs;
    $xx = $quaternionX * $xs;
    $xy = $quaternionX * $ys;
    $xz = $quaternionX * $zs;
    $yy = $quaternionY * $ys;
    $yz = $quaternionY * $zs;
    $zz = $quaternionZ * $zs;
    var$23 = $this.$val.data;
    var$23[0] = $scaleX * (1.0 - ($yy + $zz));
    var$23[4] = $scaleY * ($xy - $wz);
    var$23[8] = $scaleZ * ($xz + $wy);
    var$23[12] = $translationX;
    var$23[1] = $scaleX * ($xy + $wz);
    var$23[5] = $scaleY * (1.0 - ($xx + $zz));
    var$23[9] = $scaleZ * ($yz - $wx);
    var$23[13] = $translationY;
    var$23[2] = $scaleX * ($xz - $wy);
    var$23[6] = $scaleY * ($yz + $wx);
    var$23[10] = $scaleZ * (1.0 - ($xx + $yy));
    var$23[14] = $translationZ;
    var$23[3] = 0.0;
    var$23[7] = 0.0;
    var$23[11] = 0.0;
    var$23[15] = 1.0;
    return $this;
},
cbgm_Matrix4_mul = ($this, $matrix) => {
    let var$2, var$3, var$4, var$5, var$6;
    cbgm_Matrix4_$callClinit();
    var$2 = cbgm_Matrix4_tmp;
    var$3 = var$2.data;
    var$4 = $this.$val.data;
    var$5 = var$4[0];
    var$6 = $matrix.$val.data;
    var$3[0] = var$5 * var$6[0] + var$4[4] * var$6[1] + var$4[8] * var$6[2] + var$4[12] * var$6[3];
    var$3[4] = var$4[0] * var$6[4] + var$4[4] * var$6[5] + var$4[8] * var$6[6] + var$4[12] * var$6[7];
    var$3[8] = var$4[0] * var$6[8] + var$4[4] * var$6[9] + var$4[8] * var$6[10] + var$4[12] * var$6[11];
    var$3[12] = var$4[0] * var$6[12] + var$4[4] * var$6[13] + var$4[8] * var$6[14] + var$4[12] * var$6[15];
    var$3[1] = var$4[1] * var$6[0] + var$4[5] * var$6[1] + var$4[9] * var$6[2] + var$4[13] * var$6[3];
    var$3[5] = var$4[1] * var$6[4] + var$4[5] * var$6[5] + var$4[9] * var$6[6] + var$4[13] * var$6[7];
    var$3[9] = var$4[1] * var$6[8] + var$4[5] * var$6[9] + var$4[9] * var$6[10] + var$4[13] * var$6[11];
    var$3[13] = var$4[1] * var$6[12] + var$4[5] * var$6[13] + var$4[9] * var$6[14] + var$4[13] * var$6[15];
    var$3[2] = var$4[2] * var$6[0] + var$4[6] * var$6[1] + var$4[10] * var$6[2] + var$4[14] * var$6[3];
    var$3[6] = var$4[2] * var$6[4] + var$4[6] * var$6[5] + var$4[10] * var$6[6] + var$4[14] * var$6[7];
    var$3[10] = var$4[2] * var$6[8] + var$4[6] * var$6[9] + var$4[10] * var$6[10] + var$4[14] * var$6[11];
    var$3[14] = var$4[2] * var$6[12] + var$4[6] * var$6[13] + var$4[10] * var$6[14] + var$4[14] * var$6[15];
    var$3[3] = var$4[3] * var$6[0] + var$4[7] * var$6[1] + var$4[11] * var$6[2] + var$4[15] * var$6[3];
    var$3[7] = var$4[3] * var$6[4] + var$4[7] * var$6[5] + var$4[11] * var$6[6] + var$4[15] * var$6[7];
    var$3[11] = var$4[3] * var$6[8] + var$4[7] * var$6[9] + var$4[11] * var$6[10] + var$4[15] * var$6[11];
    var$3[15] = var$4[3] * var$6[12] + var$4[7] * var$6[13] + var$4[11] * var$6[14] + var$4[15] * var$6[15];
    return cbgm_Matrix4_set0($this, var$2);
},
cbgm_Matrix4_tra = $this => {
    let var$1, var$2, var$3;
    cbgm_Matrix4_$callClinit();
    var$1 = cbgm_Matrix4_tmp;
    var$2 = var$1.data;
    var$3 = $this.$val.data;
    var$2[0] = var$3[0];
    var$2[4] = var$3[1];
    var$2[8] = var$3[2];
    var$2[12] = var$3[3];
    var$2[1] = var$3[4];
    var$2[5] = var$3[5];
    var$2[9] = var$3[6];
    var$2[13] = var$3[7];
    var$2[2] = var$3[8];
    var$2[6] = var$3[9];
    var$2[10] = var$3[10];
    var$2[14] = var$3[11];
    var$2[3] = var$3[12];
    var$2[7] = var$3[13];
    var$2[11] = var$3[14];
    var$2[15] = var$3[15];
    return cbgm_Matrix4_set0($this, var$1);
},
cbgm_Matrix4_idt = $this => {
    let var$1;
    var$1 = $this.$val.data;
    var$1[0] = 1.0;
    var$1[4] = 0.0;
    var$1[8] = 0.0;
    var$1[12] = 0.0;
    var$1[1] = 0.0;
    var$1[5] = 1.0;
    var$1[9] = 0.0;
    var$1[13] = 0.0;
    var$1[2] = 0.0;
    var$1[6] = 0.0;
    var$1[10] = 1.0;
    var$1[14] = 0.0;
    var$1[3] = 0.0;
    var$1[7] = 0.0;
    var$1[11] = 0.0;
    var$1[15] = 1.0;
    return $this;
},
cbgm_Matrix4_inv = $this => {
    let var$1, $l_det, $inv_det, var$4;
    var$1 = $this.$val.data;
    $l_det = var$1[3] * var$1[6] * var$1[9] * var$1[12] - var$1[2] * var$1[7] * var$1[9] * var$1[12] - var$1[3] * var$1[5] * var$1[10] * var$1[12] + var$1[1] * var$1[7] * var$1[10] * var$1[12] + var$1[2] * var$1[5] * var$1[11] * var$1[12] - var$1[1] * var$1[6] * var$1[11] * var$1[12] - var$1[3] * var$1[6] * var$1[8] * var$1[13] + var$1[2] * var$1[7] * var$1[8] * var$1[13] + var$1[3] * var$1[4] * var$1[10] * var$1[13] - var$1[0] * var$1[7] * var$1[10] * var$1[13] - var$1[2] * var$1[4] * var$1[11] * var$1[13]
    + var$1[0] * var$1[6] * var$1[11] * var$1[13] + var$1[3] * var$1[5] * var$1[8] * var$1[14] - var$1[1] * var$1[7] * var$1[8] * var$1[14] - var$1[3] * var$1[4] * var$1[9] * var$1[14] + var$1[0] * var$1[7] * var$1[9] * var$1[14] + var$1[1] * var$1[4] * var$1[11] * var$1[14] - var$1[0] * var$1[5] * var$1[11] * var$1[14] - var$1[2] * var$1[5] * var$1[8] * var$1[15] + var$1[1] * var$1[6] * var$1[8] * var$1[15] + var$1[2] * var$1[4] * var$1[9] * var$1[15] - var$1[0] * var$1[6] * var$1[9] * var$1[15] - var$1[1]
    * var$1[4] * var$1[10] * var$1[15] + var$1[0] * var$1[5] * var$1[10] * var$1[15];
    if ($l_det === 0.0)
        $rt_throw(jl_RuntimeException__init_0($rt_s(464)));
    $inv_det = 1.0 / $l_det;
    cbgm_Matrix4_$callClinit();
    var$4 = cbgm_Matrix4_tmp.data;
    var$4[0] = var$1[9] * var$1[14] * var$1[7] - var$1[13] * var$1[10] * var$1[7] + var$1[13] * var$1[6] * var$1[11] - var$1[5] * var$1[14] * var$1[11] - var$1[9] * var$1[6] * var$1[15] + var$1[5] * var$1[10] * var$1[15];
    var$4[4] = var$1[12] * var$1[10] * var$1[7] - var$1[8] * var$1[14] * var$1[7] - var$1[12] * var$1[6] * var$1[11] + var$1[4] * var$1[14] * var$1[11] + var$1[8] * var$1[6] * var$1[15] - var$1[4] * var$1[10] * var$1[15];
    var$4[8] = var$1[8] * var$1[13] * var$1[7] - var$1[12] * var$1[9] * var$1[7] + var$1[12] * var$1[5] * var$1[11] - var$1[4] * var$1[13] * var$1[11] - var$1[8] * var$1[5] * var$1[15] + var$1[4] * var$1[9] * var$1[15];
    var$4[12] = var$1[12] * var$1[9] * var$1[6] - var$1[8] * var$1[13] * var$1[6] - var$1[12] * var$1[5] * var$1[10] + var$1[4] * var$1[13] * var$1[10] + var$1[8] * var$1[5] * var$1[14] - var$1[4] * var$1[9] * var$1[14];
    var$4[1] = var$1[13] * var$1[10] * var$1[3] - var$1[9] * var$1[14] * var$1[3] - var$1[13] * var$1[2] * var$1[11] + var$1[1] * var$1[14] * var$1[11] + var$1[9] * var$1[2] * var$1[15] - var$1[1] * var$1[10] * var$1[15];
    var$4[5] = var$1[8] * var$1[14] * var$1[3] - var$1[12] * var$1[10] * var$1[3] + var$1[12] * var$1[2] * var$1[11] - var$1[0] * var$1[14] * var$1[11] - var$1[8] * var$1[2] * var$1[15] + var$1[0] * var$1[10] * var$1[15];
    var$4[9] = var$1[12] * var$1[9] * var$1[3] - var$1[8] * var$1[13] * var$1[3] - var$1[12] * var$1[1] * var$1[11] + var$1[0] * var$1[13] * var$1[11] + var$1[8] * var$1[1] * var$1[15] - var$1[0] * var$1[9] * var$1[15];
    var$4[13] = var$1[8] * var$1[13] * var$1[2] - var$1[12] * var$1[9] * var$1[2] + var$1[12] * var$1[1] * var$1[10] - var$1[0] * var$1[13] * var$1[10] - var$1[8] * var$1[1] * var$1[14] + var$1[0] * var$1[9] * var$1[14];
    var$4[2] = var$1[5] * var$1[14] * var$1[3] - var$1[13] * var$1[6] * var$1[3] + var$1[13] * var$1[2] * var$1[7] - var$1[1] * var$1[14] * var$1[7] - var$1[5] * var$1[2] * var$1[15] + var$1[1] * var$1[6] * var$1[15];
    var$4[6] = var$1[12] * var$1[6] * var$1[3] - var$1[4] * var$1[14] * var$1[3] - var$1[12] * var$1[2] * var$1[7] + var$1[0] * var$1[14] * var$1[7] + var$1[4] * var$1[2] * var$1[15] - var$1[0] * var$1[6] * var$1[15];
    var$4[10] = var$1[4] * var$1[13] * var$1[3] - var$1[12] * var$1[5] * var$1[3] + var$1[12] * var$1[1] * var$1[7] - var$1[0] * var$1[13] * var$1[7] - var$1[4] * var$1[1] * var$1[15] + var$1[0] * var$1[5] * var$1[15];
    var$4[14] = var$1[12] * var$1[5] * var$1[2] - var$1[4] * var$1[13] * var$1[2] - var$1[12] * var$1[1] * var$1[6] + var$1[0] * var$1[13] * var$1[6] + var$1[4] * var$1[1] * var$1[14] - var$1[0] * var$1[5] * var$1[14];
    var$4[3] = var$1[9] * var$1[6] * var$1[3] - var$1[5] * var$1[10] * var$1[3] - var$1[9] * var$1[2] * var$1[7] + var$1[1] * var$1[10] * var$1[7] + var$1[5] * var$1[2] * var$1[11] - var$1[1] * var$1[6] * var$1[11];
    var$4[7] = var$1[4] * var$1[10] * var$1[3] - var$1[8] * var$1[6] * var$1[3] + var$1[8] * var$1[2] * var$1[7] - var$1[0] * var$1[10] * var$1[7] - var$1[4] * var$1[2] * var$1[11] + var$1[0] * var$1[6] * var$1[11];
    var$4[11] = var$1[8] * var$1[5] * var$1[3] - var$1[4] * var$1[9] * var$1[3] - var$1[8] * var$1[1] * var$1[7] + var$1[0] * var$1[9] * var$1[7] + var$1[4] * var$1[1] * var$1[11] - var$1[0] * var$1[5] * var$1[11];
    var$4[15] = var$1[4] * var$1[9] * var$1[2] - var$1[8] * var$1[5] * var$1[2] + var$1[8] * var$1[1] * var$1[6] - var$1[0] * var$1[9] * var$1[6] - var$1[4] * var$1[1] * var$1[10] + var$1[0] * var$1[5] * var$1[10];
    var$1[0] = var$4[0] * $inv_det;
    var$1[4] = var$4[4] * $inv_det;
    var$1[8] = var$4[8] * $inv_det;
    var$1[12] = var$4[12] * $inv_det;
    var$1[1] = var$4[1] * $inv_det;
    var$1[5] = var$4[5] * $inv_det;
    var$1[9] = var$4[9] * $inv_det;
    var$1[13] = var$4[13] * $inv_det;
    var$1[2] = var$4[2] * $inv_det;
    var$1[6] = var$4[6] * $inv_det;
    var$1[10] = var$4[10] * $inv_det;
    var$1[14] = var$4[14] * $inv_det;
    var$1[3] = var$4[3] * $inv_det;
    var$1[7] = var$4[7] * $inv_det;
    var$1[11] = var$4[11] * $inv_det;
    var$1[15] = var$4[15] * $inv_det;
    return $this;
},
cbgm_Matrix4_setToOrtho2D = ($this, $x, $y, $width, $height) => {
    let var$5, var$6, var$7, var$8, var$9;
    $width = $x + $width;
    $height = $y + $height;
    cbgm_Matrix4_idt($this);
    var$5 = $width - $x;
    var$6 = 2.0 / var$5;
    var$7 = $height - $y;
    var$8 = 2.0 / var$7;
    var$5 =  -($width + $x) / var$5;
    $x =  -($height + $y) / var$7;
    var$9 = $this.$val.data;
    var$9[0] = var$6;
    var$9[1] = 0.0;
    var$9[2] = 0.0;
    var$9[3] = 0.0;
    var$9[4] = 0.0;
    var$9[5] = var$8;
    var$9[6] = 0.0;
    var$9[7] = 0.0;
    var$9[8] = 0.0;
    var$9[9] = 0.0;
    var$9[10] = (-2.0);
    var$9[11] = 0.0;
    var$9[12] = var$5;
    var$9[13] = $x;
    var$9[14] = (-1.0);
    var$9[15] = 1.0;
    return $this;
},
cbgm_Matrix4_setToLookAt = ($this, $direction, $up) => {
    let var$3;
    cbgm_Matrix4_$callClinit();
    cbgm_Vector3_nor(cbgm_Vector3_set0(cbgm_Matrix4_l_vez, $direction));
    cbgm_Vector3_nor(cbgm_Vector3_set0(cbgm_Matrix4_l_vex, $direction));
    cbgm_Vector3_nor(cbgm_Vector3_crs(cbgm_Matrix4_l_vex, $up));
    cbgm_Vector3_nor(cbgm_Vector3_crs(cbgm_Vector3_set0(cbgm_Matrix4_l_vey, cbgm_Matrix4_l_vex), cbgm_Matrix4_l_vez));
    cbgm_Matrix4_idt($this);
    var$3 = $this.$val.data;
    $direction = cbgm_Matrix4_l_vex;
    var$3[0] = $direction.$x;
    var$3[4] = $direction.$y;
    var$3[8] = $direction.$z;
    $direction = cbgm_Matrix4_l_vey;
    var$3[1] = $direction.$x;
    var$3[5] = $direction.$y;
    var$3[9] = $direction.$z;
    $direction = cbgm_Matrix4_l_vez;
    var$3[2] =  -$direction.$x;
    var$3[6] =  -$direction.$y;
    var$3[10] =  -$direction.$z;
    return $this;
},
cbgm_Matrix4_getTranslation = ($this, $position) => {
    let var$2;
    var$2 = $this.$val.data;
    $position.$x = var$2[12];
    $position.$y = var$2[13];
    $position.$z = var$2[14];
    return $position;
},
cbgm_Matrix4_matrix4_mul = ($mata, $matb) => {
    let var$3, $tmp_0, var$5;
    cbgm_Matrix4_$callClinit();
    var$3 = $mata.data;
    $matb = $matb.data;
    $tmp_0 = $rt_createFloatArray(16);
    var$5 = $tmp_0.data;
    var$5[0] = var$3[0] * $matb[0] + var$3[4] * $matb[1] + var$3[8] * $matb[2] + var$3[12] * $matb[3];
    var$5[4] = var$3[0] * $matb[4] + var$3[4] * $matb[5] + var$3[8] * $matb[6] + var$3[12] * $matb[7];
    var$5[8] = var$3[0] * $matb[8] + var$3[4] * $matb[9] + var$3[8] * $matb[10] + var$3[12] * $matb[11];
    var$5[12] = var$3[0] * $matb[12] + var$3[4] * $matb[13] + var$3[8] * $matb[14] + var$3[12] * $matb[15];
    var$5[1] = var$3[1] * $matb[0] + var$3[5] * $matb[1] + var$3[9] * $matb[2] + var$3[13] * $matb[3];
    var$5[5] = var$3[1] * $matb[4] + var$3[5] * $matb[5] + var$3[9] * $matb[6] + var$3[13] * $matb[7];
    var$5[9] = var$3[1] * $matb[8] + var$3[5] * $matb[9] + var$3[9] * $matb[10] + var$3[13] * $matb[11];
    var$5[13] = var$3[1] * $matb[12] + var$3[5] * $matb[13] + var$3[9] * $matb[14] + var$3[13] * $matb[15];
    var$5[2] = var$3[2] * $matb[0] + var$3[6] * $matb[1] + var$3[10] * $matb[2] + var$3[14] * $matb[3];
    var$5[6] = var$3[2] * $matb[4] + var$3[6] * $matb[5] + var$3[10] * $matb[6] + var$3[14] * $matb[7];
    var$5[10] = var$3[2] * $matb[8] + var$3[6] * $matb[9] + var$3[10] * $matb[10] + var$3[14] * $matb[11];
    var$5[14] = var$3[2] * $matb[12] + var$3[6] * $matb[13] + var$3[10] * $matb[14] + var$3[14] * $matb[15];
    var$5[3] = var$3[3] * $matb[0] + var$3[7] * $matb[1] + var$3[11] * $matb[2] + var$3[15] * $matb[3];
    var$5[7] = var$3[3] * $matb[4] + var$3[7] * $matb[5] + var$3[11] * $matb[6] + var$3[15] * $matb[7];
    var$5[11] = var$3[3] * $matb[8] + var$3[7] * $matb[9] + var$3[11] * $matb[10] + var$3[15] * $matb[11];
    var$5[15] = var$3[3] * $matb[12] + var$3[7] * $matb[13] + var$3[11] * $matb[14] + var$3[15] * $matb[15];
    jl_System_fastArraycopy($tmp_0, 0, $mata, 0, 16);
},
cbgm_Matrix4_matrix4_det = $val => {
    cbgm_Matrix4_$callClinit();
    $val = $val.data;
    return $val[3] * $val[6] * $val[9] * $val[12] - $val[2] * $val[7] * $val[9] * $val[12] - $val[3] * $val[5] * $val[10] * $val[12] + $val[1] * $val[7] * $val[10] * $val[12] + $val[2] * $val[5] * $val[11] * $val[12] - $val[1] * $val[6] * $val[11] * $val[12] - $val[3] * $val[6] * $val[8] * $val[13] + $val[2] * $val[7] * $val[8] * $val[13] + $val[3] * $val[4] * $val[10] * $val[13] - $val[0] * $val[7] * $val[10] * $val[13] - $val[2] * $val[4] * $val[11] * $val[13] + $val[0] * $val[6] * $val[11] * $val[13] + $val[3]
    * $val[5] * $val[8] * $val[14] - $val[1] * $val[7] * $val[8] * $val[14] - $val[3] * $val[4] * $val[9] * $val[14] + $val[0] * $val[7] * $val[9] * $val[14] + $val[1] * $val[4] * $val[11] * $val[14] - $val[0] * $val[5] * $val[11] * $val[14] - $val[2] * $val[5] * $val[8] * $val[15] + $val[1] * $val[6] * $val[8] * $val[15] + $val[2] * $val[4] * $val[9] * $val[15] - $val[0] * $val[6] * $val[9] * $val[15] - $val[1] * $val[4] * $val[10] * $val[15] + $val[0] * $val[5] * $val[10] * $val[15];
},
cbgm_Matrix4_matrix4_inv = $val => {
    let $tmp_0, $l_det, $inv_det;
    cbgm_Matrix4_$callClinit();
    $tmp_0 = $rt_createFloatArray(16);
    $l_det = cbgm_Matrix4_matrix4_det($val);
    if ($l_det === 0.0)
        return 0;
    $tmp_0 = $tmp_0.data;
    $val = $val.data;
    $tmp_0[0] = $val[9] * $val[14] * $val[7] - $val[13] * $val[10] * $val[7] + $val[13] * $val[6] * $val[11] - $val[5] * $val[14] * $val[11] - $val[9] * $val[6] * $val[15] + $val[5] * $val[10] * $val[15];
    $tmp_0[4] = $val[12] * $val[10] * $val[7] - $val[8] * $val[14] * $val[7] - $val[12] * $val[6] * $val[11] + $val[4] * $val[14] * $val[11] + $val[8] * $val[6] * $val[15] - $val[4] * $val[10] * $val[15];
    $tmp_0[8] = $val[8] * $val[13] * $val[7] - $val[12] * $val[9] * $val[7] + $val[12] * $val[5] * $val[11] - $val[4] * $val[13] * $val[11] - $val[8] * $val[5] * $val[15] + $val[4] * $val[9] * $val[15];
    $tmp_0[12] = $val[12] * $val[9] * $val[6] - $val[8] * $val[13] * $val[6] - $val[12] * $val[5] * $val[10] + $val[4] * $val[13] * $val[10] + $val[8] * $val[5] * $val[14] - $val[4] * $val[9] * $val[14];
    $tmp_0[1] = $val[13] * $val[10] * $val[3] - $val[9] * $val[14] * $val[3] - $val[13] * $val[2] * $val[11] + $val[1] * $val[14] * $val[11] + $val[9] * $val[2] * $val[15] - $val[1] * $val[10] * $val[15];
    $tmp_0[5] = $val[8] * $val[14] * $val[3] - $val[12] * $val[10] * $val[3] + $val[12] * $val[2] * $val[11] - $val[0] * $val[14] * $val[11] - $val[8] * $val[2] * $val[15] + $val[0] * $val[10] * $val[15];
    $tmp_0[9] = $val[12] * $val[9] * $val[3] - $val[8] * $val[13] * $val[3] - $val[12] * $val[1] * $val[11] + $val[0] * $val[13] * $val[11] + $val[8] * $val[1] * $val[15] - $val[0] * $val[9] * $val[15];
    $tmp_0[13] = $val[8] * $val[13] * $val[2] - $val[12] * $val[9] * $val[2] + $val[12] * $val[1] * $val[10] - $val[0] * $val[13] * $val[10] - $val[8] * $val[1] * $val[14] + $val[0] * $val[9] * $val[14];
    $tmp_0[2] = $val[5] * $val[14] * $val[3] - $val[13] * $val[6] * $val[3] + $val[13] * $val[2] * $val[7] - $val[1] * $val[14] * $val[7] - $val[5] * $val[2] * $val[15] + $val[1] * $val[6] * $val[15];
    $tmp_0[6] = $val[12] * $val[6] * $val[3] - $val[4] * $val[14] * $val[3] - $val[12] * $val[2] * $val[7] + $val[0] * $val[14] * $val[7] + $val[4] * $val[2] * $val[15] - $val[0] * $val[6] * $val[15];
    $tmp_0[10] = $val[4] * $val[13] * $val[3] - $val[12] * $val[5] * $val[3] + $val[12] * $val[1] * $val[7] - $val[0] * $val[13] * $val[7] - $val[4] * $val[1] * $val[15] + $val[0] * $val[5] * $val[15];
    $tmp_0[14] = $val[12] * $val[5] * $val[2] - $val[4] * $val[13] * $val[2] - $val[12] * $val[1] * $val[6] + $val[0] * $val[13] * $val[6] + $val[4] * $val[1] * $val[14] - $val[0] * $val[5] * $val[14];
    $tmp_0[3] = $val[9] * $val[6] * $val[3] - $val[5] * $val[10] * $val[3] - $val[9] * $val[2] * $val[7] + $val[1] * $val[10] * $val[7] + $val[5] * $val[2] * $val[11] - $val[1] * $val[6] * $val[11];
    $tmp_0[7] = $val[4] * $val[10] * $val[3] - $val[8] * $val[6] * $val[3] + $val[8] * $val[2] * $val[7] - $val[0] * $val[10] * $val[7] - $val[4] * $val[2] * $val[11] + $val[0] * $val[6] * $val[11];
    $tmp_0[11] = $val[8] * $val[5] * $val[3] - $val[4] * $val[9] * $val[3] - $val[8] * $val[1] * $val[7] + $val[0] * $val[9] * $val[7] + $val[4] * $val[1] * $val[11] - $val[0] * $val[5] * $val[11];
    $tmp_0[15] = $val[4] * $val[9] * $val[2] - $val[8] * $val[5] * $val[2] + $val[8] * $val[1] * $val[6] - $val[0] * $val[9] * $val[6] - $val[4] * $val[1] * $val[10] + $val[0] * $val[5] * $val[10];
    $inv_det = 1.0 / $l_det;
    $val[0] = $tmp_0[0] * $inv_det;
    $val[4] = $tmp_0[4] * $inv_det;
    $val[8] = $tmp_0[8] * $inv_det;
    $val[12] = $tmp_0[12] * $inv_det;
    $val[1] = $tmp_0[1] * $inv_det;
    $val[5] = $tmp_0[5] * $inv_det;
    $val[9] = $tmp_0[9] * $inv_det;
    $val[13] = $tmp_0[13] * $inv_det;
    $val[2] = $tmp_0[2] * $inv_det;
    $val[6] = $tmp_0[6] * $inv_det;
    $val[10] = $tmp_0[10] * $inv_det;
    $val[14] = $tmp_0[14] * $inv_det;
    $val[3] = $tmp_0[3] * $inv_det;
    $val[7] = $tmp_0[7] * $inv_det;
    $val[11] = $tmp_0[11] * $inv_det;
    $val[15] = $tmp_0[15] * $inv_det;
    return 1;
},
cbgm_Matrix4_mul0 = ($mata, $matb) => {
    cbgm_Matrix4_$callClinit();
    cbgm_Matrix4_matrix4_mul($mata, $matb);
},
cbgm_Matrix4_rotate = ($this, $axis, $degrees) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16;
    if ($degrees === 0.0)
        return $this;
    cbgm_Matrix4_$callClinit();
    var$3 = cbgm_Matrix4_quat;
    var$4 = $axis.$x;
    var$5 = $axis.$y;
    var$6 = $axis.$z;
    $degrees = $degrees * 0.01745329238474369;
    var$7 = cbgm_Vector3_len(var$4, var$5, var$6);
    if (var$7 === 0.0)
        cbgm_Quaternion_idt(var$3);
    else {
        var$7 = 1.0 / var$7;
        var$8 = ($degrees >= 0.0 ? $degrees % 6.2831854820251465 : 6.2831854820251465 -  -$degrees % 6.2831854820251465) / 2.0;
        $degrees = jl_Math_sin(var$8);
        $axis = cbgm_Quaternion_set(var$3, var$7 * var$4 * $degrees, var$7 * var$5 * $degrees, var$7 * var$6 * $degrees, jl_Math_cos(var$8));
        $degrees = $axis.$x0;
        $degrees = $degrees * $degrees;
        var$4 = $axis.$y0;
        $degrees = $degrees + var$4 * var$4;
        var$4 = $axis.$z0;
        $degrees = $degrees + var$4 * var$4;
        var$4 = $axis.$w;
        var$4 = $degrees + var$4 * var$4;
        if (var$4 !== 0.0 && !cbgm_MathUtils_isEqual(var$4, 1.0)) {
            $degrees = jl_Math_sqrt(var$4);
            $axis.$w = $axis.$w / $degrees;
            $axis.$x0 = $axis.$x0 / $degrees;
            $axis.$y0 = $axis.$y0 / $degrees;
            $axis.$z0 = $axis.$z0 / $degrees;
        }
    }
    $axis = cbgm_Matrix4_quat;
    var$9 = cbgm_Matrix4_tmp;
    var$10 = var$9.data;
    $degrees = $axis.$x0;
    var$6 = $degrees * $degrees;
    var$7 = $axis.$y0;
    var$11 = $degrees * var$7;
    var$12 = $axis.$z0;
    var$5 = $degrees * var$12;
    var$4 = $axis.$w;
    var$13 = $degrees * var$4;
    var$14 = var$7 * var$7;
    var$15 = var$7 * var$12;
    var$7 = var$7 * var$4;
    var$16 = var$12 * var$12;
    var$12 = var$12 * var$4;
    var$10[0] = 1.0 - 2.0 * (var$14 + var$16);
    var$10[4] = 2.0 * (var$11 - var$12);
    var$10[8] = 2.0 * (var$5 + var$7);
    var$10[12] = 0.0;
    var$10[1] = 2.0 * (var$11 + var$12);
    var$10[5] = 1.0 - 2.0 * (var$6 + var$16);
    var$10[9] = 2.0 * (var$15 - var$13);
    var$10[13] = 0.0;
    var$10[2] = 2.0 * (var$5 - var$7);
    var$10[6] = 2.0 * (var$15 + var$13);
    var$10[10] = 1.0 - 2.0 * (var$6 + var$14);
    var$10[14] = 0.0;
    var$10[3] = 0.0;
    var$10[7] = 0.0;
    var$10[11] = 0.0;
    var$10[15] = 1.0;
    cbgm_Matrix4_mul0($this.$val, var$9);
    return $this;
},
cbgm_Matrix4_hasRotationOrScaling = $this => {
    let var$1;
    a: {
        b: {
            if (!cbgm_MathUtils_isEqual($this.$val.data[0], 1.0))
                break b;
            if (!cbgm_MathUtils_isEqual($this.$val.data[5], 1.0))
                break b;
            if (!cbgm_MathUtils_isEqual($this.$val.data[10], 1.0))
                break b;
            if (!cbgm_MathUtils_isZero($this.$val.data[4]))
                break b;
            if (!cbgm_MathUtils_isZero($this.$val.data[8]))
                break b;
            if (!cbgm_MathUtils_isZero($this.$val.data[1]))
                break b;
            if (!cbgm_MathUtils_isZero($this.$val.data[9]))
                break b;
            if (!cbgm_MathUtils_isZero($this.$val.data[2]))
                break b;
            if (cbgm_MathUtils_isZero($this.$val.data[6])) {
                var$1 = 0;
                break a;
            }
        }
        var$1 = 1;
    }
    return var$1;
},
cbgm_Matrix4__clinit_ = () => {
    cbgm_Matrix4_tmp = $rt_createFloatArray(16);
    cbgm_Matrix4_quat = cbgm_Quaternion__init_();
    cbgm_Matrix4_quat2 = cbgm_Quaternion__init_();
    cbgm_Matrix4_l_vez = cbgm_Vector3__init_();
    cbgm_Matrix4_l_vex = cbgm_Vector3__init_();
    cbgm_Matrix4_l_vey = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpVec = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpMat = cbgm_Matrix4__init_();
    cbgm_Matrix4_right = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpForward = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpUp = cbgm_Vector3__init_();
},
cbggg_Batch = $rt_classWithoutFields(0);
function cbggg_SpriteBatch() {
    let a = this; jl_Object.call(a);
    a.$currentDataType = null;
    a.$mesh1 = null;
    a.$vertices2 = null;
    a.$idx = 0;
    a.$lastTexture = null;
    a.$invTexWidth = 0.0;
    a.$invTexHeight = 0.0;
    a.$drawing = 0;
    a.$transformMatrix0 = null;
    a.$projectionMatrix0 = null;
    a.$combinedMatrix0 = null;
    a.$blendingDisabled = 0;
    a.$blendSrcFunc = 0;
    a.$blendDstFunc = 0;
    a.$blendSrcFuncAlpha = 0;
    a.$blendDstFuncAlpha = 0;
    a.$shader0 = null;
    a.$customShader = null;
    a.$ownsShader0 = 0;
    a.$color9 = null;
    a.$colorPacked = 0.0;
    a.$renderCalls = 0;
    a.$totalRenderCalls = 0;
    a.$maxSpritesInBatch = 0;
}
let cbggg_SpriteBatch_defaultVertexDataType = null,
cbggg_SpriteBatch_overrideVertexType = null,
cbggg_SpriteBatch_$callClinit = () => {
    cbggg_SpriteBatch_$callClinit = $rt_eraseClinit(cbggg_SpriteBatch);
    cbggg_SpriteBatch__clinit_();
},
cbggg_SpriteBatch__init_ = ($this, $size, $defaultShader) => {
    let $vertexDataType, var$4, var$5, var$6, var$7, $indices, var$9, $i, var$11, $j, var$13;
    cbggg_SpriteBatch_$callClinit();
    $this.$idx = 0;
    $this.$lastTexture = null;
    $this.$invTexWidth = 0.0;
    $this.$invTexHeight = 0.0;
    $this.$drawing = 0;
    $this.$transformMatrix0 = cbgm_Matrix4__init_();
    $this.$projectionMatrix0 = cbgm_Matrix4__init_();
    $this.$combinedMatrix0 = cbgm_Matrix4__init_();
    $this.$blendingDisabled = 0;
    $this.$blendSrcFunc = 770;
    $this.$blendDstFunc = 771;
    $this.$blendSrcFuncAlpha = 770;
    $this.$blendDstFuncAlpha = 771;
    $this.$customShader = null;
    $this.$color9 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    $this.$colorPacked = cbgg_Color_WHITE_FLOAT_BITS;
    $this.$renderCalls = 0;
    $this.$totalRenderCalls = 0;
    $this.$maxSpritesInBatch = 0;
    if ($size > 8191) {
        $defaultShader = new jl_IllegalArgumentException;
        $vertexDataType = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($vertexDataType);
        jl_AbstractStringBuilder_append($vertexDataType, $rt_s(465));
        jl_Exception__init_($defaultShader, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($vertexDataType, $size)));
        $rt_throw($defaultShader);
    }
    $vertexDataType = cbg_Gdx_gl30 === null ? cbggg_SpriteBatch_defaultVertexDataType : cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO;
    var$4 = cbggg_SpriteBatch_overrideVertexType;
    if (var$4 === null)
        var$4 = $vertexDataType;
    a: {
        b: {
            $this.$currentDataType = var$4;
            var$5 = new cbgg_Mesh;
            var$6 = $size * 4 | 0;
            var$7 = $size * 6 | 0;
            $indices = $rt_wrapArray(cbgg_VertexAttribute, [cbgg_VertexAttribute__init_(1, 2, $rt_s(466)), cbgg_VertexAttribute__init_(4, 4, $rt_s(467)), cbgg_VertexAttribute__init_(16, 2, $rt_s(468))]);
            cbgg_Mesh_$callClinit();
            $vertexDataType = cbgg_VertexAttributes__init_($indices);
            var$5.$autoBind = 1;
            var$5.$isInstanced = 0;
            var$5.$tmpV = cbgm_Vector3__init_();
            cbgg_Mesh$1_$callClinit();
            switch (cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[var$4.$ordinal0]) {
                case 1:
                    break;
                case 2:
                    var$9 = new cbggg_VertexBufferObjectSubData;
                    var$9.$isDirty1 = 0;
                    var$9.$isBound1 = 0;
                    var$9.$isStatic1 = 0;
                    var$9.$attributes1 = $vertexDataType;
                    $vertexDataType = cbgu_BufferUtils_newByteBuffer($rt_imul($vertexDataType.$vertexSize, var$6));
                    var$9.$byteBuffer = $vertexDataType;
                    var$9.$isDirect = 1;
                    var$9.$usage1 = 35048;
                    var$9.$buffer1 = jn_ByteBufferJsImpl_asFloatBuffer($vertexDataType);
                    $i = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
                    cbg_Gdx_gl20.$glBindBuffer(34962, $i);
                    cbg_Gdx_gl20.$glBufferData(34962, var$9.$byteBuffer.$capacityImpl(), null, var$9.$usage1);
                    cbg_Gdx_gl20.$glBindBuffer(34962, 0);
                    var$9.$bufferHandle1 = $i;
                    jn_Buffer_flip(var$9.$buffer1);
                    jn_Buffer_flip(var$9.$byteBuffer);
                    var$5.$vertices0 = var$9;
                    var$5.$indices0 = cbggg_IndexBufferObjectSubData__init_(0, var$7);
                    var$5.$isVertexArray = 0;
                    break a;
                case 3:
                    var$5.$vertices0 = cbggg_VertexBufferObjectWithVAO__init_(0, var$6, $vertexDataType);
                    var$5.$indices0 = cbggg_IndexBufferObjectSubData__init_(0, var$7);
                    var$5.$isVertexArray = 0;
                    break a;
                case 4:
                    break b;
                default:
                    break b;
            }
            var$5.$vertices0 = cbggg_VertexBufferObject__init_(0, var$6, $vertexDataType);
            var$5.$indices0 = cbggg_IndexBufferObject__init_(0, var$7);
            var$5.$isVertexArray = 0;
            break a;
        }
        var$9 = new cbggg_VertexArray;
        cbggg_VertexBufferObject__init_0(var$9, 0, var$6, $vertexDataType);
        var$5.$vertices0 = var$9;
        $vertexDataType = new cbggg_IndexArray;
        cbggg_IndexBufferObject__init_0($vertexDataType, var$7);
        var$5.$indices0 = $vertexDataType;
        var$5.$isVertexArray = 1;
    }
    cbgg_Mesh_addManagedMesh(cbg_Gdx_app, var$5);
    $this.$mesh1 = var$5;
    cbgm_Matrix4_setToOrtho2D($this.$projectionMatrix0, 0.0, 0.0, cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics), cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics));
    $this.$vertices2 = $rt_createFloatArray($size * 20 | 0);
    $indices = $rt_createShortArray(var$7);
    var$11 = $indices.data;
    $j = 0;
    $i = 0;
    while ($i < var$7) {
        var$11[$i] = $j;
        var$11[$i + 1 | 0] = ($j + 1 | 0) << 16 >> 16;
        $size = $i + 2 | 0;
        var$13 = ($j + 2 | 0) << 16 >> 16;
        var$11[$size] = var$13;
        var$11[$i + 3 | 0] = var$13;
        var$11[$i + 4 | 0] = ($j + 3 | 0) << 16 >> 16;
        var$11[$i + 5 | 0] = $j;
        $i = $i + 6 | 0;
        $j = ($j + 4 | 0) << 16 >> 16;
    }
    $this.$mesh1.$indices0.$setIndices($indices, 0, var$11.length);
    if ($defaultShader !== null)
        $this.$shader0 = $defaultShader;
    else {
        $this.$shader0 = cbggg_SpriteBatch_createDefaultShader();
        $this.$ownsShader0 = 1;
    }
    if (var$4 !== cbgg_Mesh$VertexDataType_VertexArray) {
        $this.$mesh1.$indices0.$bind();
        $this.$mesh1.$indices0.$unbind();
    }
},
cbggg_SpriteBatch__init_0 = (var_0, var_1) => {
    let var_2 = new cbggg_SpriteBatch();
    cbggg_SpriteBatch__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_SpriteBatch_createDefaultShader = () => {
    let $shader, $vertexShader, $fragmentShader;
    cbggg_SpriteBatch_$callClinit();
    $shader = cbggg_ShaderProgram__init_0($rt_s(469), $rt_s(470));
    if ($shader.$isCompiled)
        return $shader;
    $vertexShader = new jl_IllegalArgumentException;
    $fragmentShader = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($fragmentShader);
    jl_AbstractStringBuilder_append($fragmentShader, $rt_s(471));
    jl_AbstractStringBuilder_append($fragmentShader, cbggg_ShaderProgram_getLog($shader));
    jl_Exception__init_($vertexShader, jl_AbstractStringBuilder_toString($fragmentShader));
    $rt_throw($vertexShader);
},
cbggg_SpriteBatch_draw = ($this, $texture, $spriteVertices, $offset, $count) => {
    let $verticesLength, $copyCount;
    if (!$this.$drawing) {
        $texture = new jl_IllegalStateException;
        jl_Exception__init_($texture, $rt_s(472));
        $rt_throw($texture);
    }
    $verticesLength = $this.$vertices2.data.length;
    if ($texture !== $this.$lastTexture) {
        cbggg_SpriteBatch_flush($this);
        $this.$lastTexture = $texture;
        $this.$invTexWidth = 1.0 / cbgg_Texture_getWidth($texture);
        $this.$invTexHeight = 1.0 / cbgg_Texture_getHeight($texture);
        $copyCount = $verticesLength;
    } else {
        $copyCount = $verticesLength - $this.$idx | 0;
        if (!$copyCount) {
            cbggg_SpriteBatch_flush($this);
            $copyCount = $verticesLength;
        }
    }
    $copyCount = jl_Math_min($copyCount, $count);
    jl_System_fastArraycopy($spriteVertices, $offset, $this.$vertices2, $this.$idx, $copyCount);
    $this.$idx = $this.$idx + $copyCount | 0;
    $count = $count - $copyCount | 0;
    while ($count > 0) {
        $offset = $offset + $copyCount | 0;
        cbggg_SpriteBatch_flush($this);
        $copyCount = jl_Math_min($verticesLength, $count);
        jl_System_fastArraycopy($spriteVertices, $offset, $this.$vertices2, 0, $copyCount);
        $this.$idx = $this.$idx + $copyCount | 0;
        $count = $count - $copyCount | 0;
    }
},
cbggg_SpriteBatch_flush = $this => {
    let $count, $spritesInBatch, $mesh, $indicesBuffer;
    $count = $this.$idx;
    if (!$count)
        return;
    $this.$renderCalls = $this.$renderCalls + 1 | 0;
    $this.$totalRenderCalls = $this.$totalRenderCalls + 1 | 0;
    $spritesInBatch = $count / 20 | 0;
    if ($spritesInBatch > $this.$maxSpritesInBatch)
        $this.$maxSpritesInBatch = $spritesInBatch;
    $count = $spritesInBatch * 6 | 0;
    cbgg_GLTexture_bind($this.$lastTexture);
    $mesh = $this.$mesh1;
    cbgg_Mesh_setVertices($mesh, $this.$vertices2, 0, $this.$idx);
    if ($this.$currentDataType === cbgg_Mesh$VertexDataType_VertexArray) {
        $indicesBuffer = $mesh.$indices0.$getBuffer(1);
        jn_Buffer_position($indicesBuffer, 0);
        jn_Buffer_limit($indicesBuffer, $count);
    }
    if ($this.$blendingDisabled)
        cbg_Gdx_gl.$glDisable(3042);
    else {
        cbg_Gdx_gl.$glEnable(3042);
        $spritesInBatch = $this.$blendSrcFunc;
        if ($spritesInBatch != (-1))
            cbg_Gdx_gl.$glBlendFuncSeparate($spritesInBatch, $this.$blendDstFunc, $this.$blendSrcFuncAlpha, $this.$blendDstFuncAlpha);
    }
    $indicesBuffer = $this.$customShader;
    if ($indicesBuffer === null)
        $indicesBuffer = $this.$shader0;
    cbgg_Mesh_render($mesh, $indicesBuffer, 4, 0, $count, $mesh.$autoBind);
    $this.$idx = 0;
},
cbggg_SpriteBatch__clinit_ = () => {
    cbggg_SpriteBatch_defaultVertexDataType = cbgg_Mesh$VertexDataType_VertexBufferObject;
    cbggg_SpriteBatch_overrideVertexType = null;
},
cgxjl_JParserLibraryLoader = $rt_classWithoutFields(),
cgxjl_JParserLibraryLoader_loadedLibraries = null,
cgxjl_JParserLibraryLoader_$callClinit = () => {
    cgxjl_JParserLibraryLoader_$callClinit = $rt_eraseClinit(cgxjl_JParserLibraryLoader);
    cgxjl_JParserLibraryLoader__clinit_();
},
cgxjl_JParserLibraryLoader_loadWasm = ($listener, $libraryName, $prefix, $postfix, $fallback) => {
    let var$6;
    cgxjl_JParserLibraryLoader_$callClinit();
    var$6 = new cgxjl_JParserLibraryLoader$loadWasm$lambda$_3_0;
    var$6.$_023 = $libraryName;
    var$6.$_19 = $listener;
    var$6.$_27 = $fallback;
    var$6.$_33 = $prefix;
    cgxjl_JParserLibraryLoader_loadScript($libraryName, var$6, $prefix, $postfix);
},
cgxjl_JParserLibraryLoader_loadJS = ($listener, $libraryName, $prefix) => {
    let var$4;
    cgxjl_JParserLibraryLoader_$callClinit();
    var$4 = new cgxjl_JParserLibraryLoader$loadJS$lambda$_4_0;
    var$4.$_00 = $listener;
    cgxjl_JParserLibraryLoader_loadScript($libraryName, var$4, $prefix, $rt_s(430));
},
cgxjl_JParserLibraryLoader_loadScript = ($libraryName, $listener, $prefix, $postfix) => {
    let $document, var$6, var$7, $current;
    cgxjl_JParserLibraryLoader_$callClinit();
    $document = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($document);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($document, $prefix), $libraryName), $postfix);
    var$6 = jl_AbstractStringBuilder_toString($document);
    $document = window.document;
    var$7 = $document.createElement("script");
    $current = new cgxjl_JParserLibraryLoader$loadScript$lambda$_5_0;
    $current.$_01 = $listener;
    var$7.addEventListener("load", otji_JS_function(otji_JSWrapper_unwrap($current), "handleEvent"));
    $current = new cgxjl_JParserLibraryLoader$loadScript$lambda$_5_1;
    $current.$_07 = $prefix;
    $current.$_14 = $libraryName;
    $current.$_23 = $listener;
    var$7.addEventListener("error", otji_JS_function(otji_JSWrapper_unwrap($current), "handleEvent"));
    $libraryName = $rt_ustr(var$6);
    var$7.src = $libraryName;
    $document.body.appendChild(var$7);
},
cgxjl_JParserLibraryLoader__clinit_ = () => {
    cgxjl_JParserLibraryLoader_loadedLibraries = ju_HashSet__init_();
};
function cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0() {
    let a = this; jl_Object.call(a);
    a.$_0 = null;
    a.$_1 = 0;
    a.$_2 = null;
    a.$_3 = null;
    a.$_4 = 0;
}
let cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0_onTimer$exported$0 = var$1 => {
    var$1 = var$1;
    cgxgbta_AssetDownloadImpl_loadBinary(var$1.$_0, var$1.$_1, var$1.$_2, var$1.$_3, var$1.$_4);
};
function cbgm_Quaternion() {
    let a = this; jl_Object.call(a);
    a.$x0 = 0.0;
    a.$y0 = 0.0;
    a.$z0 = 0.0;
    a.$w = 0.0;
}
let cbgm_Quaternion_tmp1 = null,
cbgm_Quaternion_tmp2 = null,
cbgm_Quaternion__init_2 = ($this, $x, $y, $z, $w) => {
    cbgm_Quaternion_set($this, $x, $y, $z, $w);
},
cbgm_Quaternion__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgm_Quaternion();
    cbgm_Quaternion__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgm_Quaternion__init_1 = $this => {
    cbgm_Quaternion_idt($this);
},
cbgm_Quaternion__init_ = () => {
    let var_0 = new cbgm_Quaternion();
    cbgm_Quaternion__init_1(var_0);
    return var_0;
},
cbgm_Quaternion_set = ($this, $x, $y, $z, $w) => {
    $this.$x0 = $x;
    $this.$y0 = $y;
    $this.$z0 = $z;
    $this.$w = $w;
    return $this;
},
cbgm_Quaternion_idt = $this => {
    return cbgm_Quaternion_set($this, 0.0, 0.0, 0.0, 1.0);
},
cbgm_Quaternion_setFromAxes = ($this, $normalizeAxes, $xx, $xy, $xz, $yx, $yy, $yz, $zx, $zy, $zz) => {
    let $lx, $ly, $lz, $t, $s;
    if ($normalizeAxes) {
        $lx = 1.0 / cbgm_Vector3_len($xx, $xy, $xz);
        $ly = 1.0 / cbgm_Vector3_len($yx, $yy, $yz);
        $lz = 1.0 / cbgm_Vector3_len($zx, $zy, $zz);
        $xx = $xx * $lx;
        $xy = $xy * $lx;
        $xz = $xz * $lx;
        $yx = $yx * $ly;
        $yy = $yy * $ly;
        $yz = $yz * $ly;
        $zx = $zx * $lz;
        $zy = $zy * $lz;
        $zz = $zz * $lz;
    }
    $t = $xx + $yy + $zz;
    if ($t >= 0.0) {
        $s = jl_Math_sqrt($t + 1.0);
        $this.$w = 0.5 * $s;
        $xx = 0.5 / $s;
        $this.$x0 = ($zy - $yz) * $xx;
        $this.$y0 = ($xz - $zx) * $xx;
        $this.$z0 = ($yx - $xy) * $xx;
    } else if ($xx > $yy && $xx > $zz) {
        $s = jl_Math_sqrt(1.0 + $xx - $yy - $zz);
        $this.$x0 = $s * 0.5;
        $xx = 0.5 / $s;
        $this.$y0 = ($yx + $xy) * $xx;
        $this.$z0 = ($xz + $zx) * $xx;
        $this.$w = ($zy - $yz) * $xx;
    } else if ($yy <= $zz) {
        $s = jl_Math_sqrt(1.0 + $zz - $xx - $yy);
        $this.$z0 = $s * 0.5;
        $xx = 0.5 / $s;
        $this.$x0 = ($xz + $zx) * $xx;
        $this.$y0 = ($zy + $yz) * $xx;
        $this.$w = ($yx - $xy) * $xx;
    } else {
        $s = jl_Math_sqrt(1.0 + $yy - $xx - $zz);
        $this.$y0 = $s * 0.5;
        $xx = 0.5 / $s;
        $this.$x0 = ($yx + $xy) * $xx;
        $this.$z0 = ($zy + $yz) * $xx;
        $this.$w = ($xz - $zx) * $xx;
    }
    return $this;
},
cbgm_Quaternion__clinit_ = () => {
    cbgm_Quaternion_tmp1 = cbgm_Quaternion__init_0(0.0, 0.0, 0.0, 0.0);
    cbgm_Quaternion_tmp2 = cbgm_Quaternion__init_0(0.0, 0.0, 0.0, 0.0);
},
cbgm_Vector = $rt_classWithoutFields(0);
function cbgm_Vector3() {
    let a = this; jl_Object.call(a);
    a.$x = 0.0;
    a.$y = 0.0;
    a.$z = 0.0;
}
let cbgm_Vector3_X = null,
cbgm_Vector3_Y = null,
cbgm_Vector3_Z = null,
cbgm_Vector3_Zero = null,
cbgm_Vector3_tmpMat = null,
cbgm_Vector3_$callClinit = () => {
    cbgm_Vector3_$callClinit = $rt_eraseClinit(cbgm_Vector3);
    cbgm_Vector3__clinit_();
},
cbgm_Vector3__init_2 = $this => {
    cbgm_Vector3_$callClinit();
},
cbgm_Vector3__init_ = () => {
    let var_0 = new cbgm_Vector3();
    cbgm_Vector3__init_2(var_0);
    return var_0;
},
cbgm_Vector3__init_1 = ($this, $x, $y, $z) => {
    cbgm_Vector3_$callClinit();
    cbgm_Vector3_set($this, $x, $y, $z);
},
cbgm_Vector3__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbgm_Vector3();
    cbgm_Vector3__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgm_Vector3_set = ($this, $x, $y, $z) => {
    $this.$x = $x;
    $this.$y = $y;
    $this.$z = $z;
    return $this;
},
cbgm_Vector3_set0 = ($this, $vector) => {
    return cbgm_Vector3_set($this, $vector.$x, $vector.$y, $vector.$z);
},
cbgm_Vector3_add = ($this, $vector) => {
    let var$2, var$3, var$4;
    var$2 = $vector.$x;
    var$3 = $vector.$y;
    var$4 = $vector.$z;
    return cbgm_Vector3_set($this, $this.$x + var$2, $this.$y + var$3, $this.$z + var$4);
},
cbgm_Vector3_sub = ($this, $a_vec) => {
    let var$2, var$3, var$4;
    var$2 = $a_vec.$x;
    var$3 = $a_vec.$y;
    var$4 = $a_vec.$z;
    return cbgm_Vector3_set($this, $this.$x - var$2, $this.$y - var$3, $this.$z - var$4);
},
cbgm_Vector3_scl = ($this, $scalar) => {
    return cbgm_Vector3_set($this, $this.$x * $scalar, $this.$y * $scalar, $this.$z * $scalar);
},
cbgm_Vector3_len = ($x, $y, $z) => {
    cbgm_Vector3_$callClinit();
    return jl_Math_sqrt($x * $x + $y * $y + $z * $z);
},
cbgm_Vector3_dst2 = ($this, $point) => {
    let $a, $b, $c;
    $a = $point.$x - $this.$x;
    $b = $point.$y - $this.$y;
    $c = $point.$z - $this.$z;
    return $a * $a + $b * $b + $c * $c;
},
cbgm_Vector3_nor = $this => {
    let var$1, $len2;
    var$1 = $this.$x;
    var$1 = var$1 * var$1;
    $len2 = $this.$y;
    var$1 = var$1 + $len2 * $len2;
    $len2 = $this.$z;
    $len2 = var$1 + $len2 * $len2;
    if ($len2 !== 0.0 && $len2 !== 1.0)
        return cbgm_Vector3_scl($this, 1.0 / jl_Math_sqrt($len2));
    return $this;
},
cbgm_Vector3_dot = ($this, $vector) => {
    return $this.$x * $vector.$x + $this.$y * $vector.$y + $this.$z * $vector.$z;
},
cbgm_Vector3_crs = ($this, $vector) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$2 = $this.$y;
    var$3 = $vector.$z;
    var$4 = var$2 * var$3;
    var$5 = $this.$z;
    var$6 = $vector.$y;
    var$4 = var$4 - var$5 * var$6;
    var$7 = $vector.$x;
    var$5 = var$5 * var$7;
    var$8 = $this.$x;
    return cbgm_Vector3_set($this, var$4, var$5 - var$8 * var$3, var$8 * var$6 - var$2 * var$7);
},
cbgm_Vector3_mul = ($this, $matrix) => {
    let $l_mat, var$3, var$4, var$5, var$6, var$7;
    $l_mat = $matrix.$val.data;
    var$3 = $this.$x;
    var$4 = var$3 * $l_mat[0];
    var$5 = $this.$y;
    var$6 = var$4 + var$5 * $l_mat[4];
    var$7 = $this.$z;
    return cbgm_Vector3_set($this, var$6 + var$7 * $l_mat[8] + $l_mat[12], var$3 * $l_mat[1] + var$5 * $l_mat[5] + var$7 * $l_mat[9] + $l_mat[13], var$3 * $l_mat[2] + var$5 * $l_mat[6] + var$7 * $l_mat[10] + $l_mat[14]);
},
cbgm_Vector3_mul0 = ($this, $matrix) => {
    let $l_mat, var$3, var$4, var$5, var$6, var$7;
    $l_mat = $matrix.$val0.data;
    var$3 = $this.$x;
    var$4 = var$3 * $l_mat[0];
    var$5 = $this.$y;
    var$6 = var$4 + var$5 * $l_mat[3];
    var$7 = $this.$z;
    return cbgm_Vector3_set($this, var$6 + var$7 * $l_mat[6], var$3 * $l_mat[1] + var$5 * $l_mat[4] + var$7 * $l_mat[7], var$3 * $l_mat[2] + var$5 * $l_mat[5] + var$7 * $l_mat[8]);
},
cbgm_Vector3_isZero = $this => {
    return $this.$x === 0.0 && $this.$y === 0.0 && $this.$z === 0.0 ? 1 : 0;
},
cbgm_Vector3_lerp = ($this, $target, $alpha) => {
    let var$3, var$4;
    var$3 = $this.$x;
    $this.$x = var$3 + $alpha * ($target.$x - var$3);
    var$4 = $this.$y;
    $this.$y = var$4 + $alpha * ($target.$y - var$4);
    var$3 = $this.$z;
    $this.$z = var$3 + $alpha * ($target.$z - var$3);
    return $this;
},
cbgm_Vector3_toString = $this => {
    let var$1;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    jl_AbstractStringBuilder_append(var$1, $rt_s(473));
    var$1 = jl_StringBuilder_append2(var$1, $this.$x);
    jl_AbstractStringBuilder_append(var$1, $rt_s(474));
    var$1 = jl_StringBuilder_append2(var$1, $this.$y);
    jl_AbstractStringBuilder_append(var$1, $rt_s(474));
    var$1 = jl_StringBuilder_append2(var$1, $this.$z);
    jl_AbstractStringBuilder_append(var$1, $rt_s(22));
    return jl_AbstractStringBuilder_toString(var$1);
},
cbgm_Vector3_hashCode = $this => {
    return (31 * ((31 * (31 + jl_Float_floatToIntBits($this.$x) | 0) | 0) + jl_Float_floatToIntBits($this.$y) | 0) | 0) + jl_Float_floatToIntBits($this.$z) | 0;
},
cbgm_Vector3_equals = ($this, $obj) => {
    let $other;
    if ($this === $obj)
        return 1;
    if ($obj === null)
        return 0;
    if (jl_Object_getClass($this) !== jl_Object_getClass($obj))
        return 0;
    $other = $obj;
    if (jl_Float_floatToIntBits($this.$x) != jl_Float_floatToIntBits($other.$x))
        return 0;
    if (jl_Float_floatToIntBits($this.$y) != jl_Float_floatToIntBits($other.$y))
        return 0;
    if (jl_Float_floatToIntBits($this.$z) == jl_Float_floatToIntBits($other.$z))
        return 1;
    return 0;
},
cbgm_Vector3__clinit_ = () => {
    cbgm_Vector3_X = cbgm_Vector3__init_0(1.0, 0.0, 0.0);
    cbgm_Vector3_Y = cbgm_Vector3__init_0(0.0, 1.0, 0.0);
    cbgm_Vector3_Z = cbgm_Vector3__init_0(0.0, 0.0, 1.0);
    cbgm_Vector3_Zero = cbgm_Vector3__init_0(0.0, 0.0, 0.0);
    cbgm_Vector3_tmpMat = cbgm_Matrix4__init_();
},
cbgg_Mesh$VertexDataType = $rt_classWithoutFields(jl_Enum),
cbgg_Mesh$VertexDataType_VertexArray = null,
cbgg_Mesh$VertexDataType_VertexBufferObject = null,
cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = null,
cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = null,
cbgg_Mesh$VertexDataType_$VALUES = null,
cbgg_Mesh$VertexDataType__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_Mesh$VertexDataType;
    jl_Enum__init_(var$1, $rt_s(475), 0);
    cbgg_Mesh$VertexDataType_VertexArray = var$1;
    var$1 = new cbgg_Mesh$VertexDataType;
    jl_Enum__init_(var$1, $rt_s(476), 1);
    cbgg_Mesh$VertexDataType_VertexBufferObject = var$1;
    var$1 = new cbgg_Mesh$VertexDataType;
    jl_Enum__init_(var$1, $rt_s(477), 2);
    cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = var$1;
    var$1 = new cbgg_Mesh$VertexDataType;
    jl_Enum__init_(var$1, $rt_s(478), 3);
    cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = var$1;
    var$2 = $rt_createArray(cbgg_Mesh$VertexDataType, 4);
    var$3 = var$2.data;
    var$3[0] = cbgg_Mesh$VertexDataType_VertexArray;
    var$3[1] = cbgg_Mesh$VertexDataType_VertexBufferObject;
    var$3[2] = cbgg_Mesh$VertexDataType_VertexBufferObjectSubData;
    var$3[3] = var$1;
    cbgg_Mesh$VertexDataType_$VALUES = var$2;
};
function cbgg_Mesh() {
    let a = this; jl_Object.call(a);
    a.$vertices0 = null;
    a.$indices0 = null;
    a.$autoBind = 0;
    a.$isVertexArray = 0;
    a.$instances = null;
    a.$isInstanced = 0;
    a.$tmpV = null;
}
let cbgg_Mesh_meshes = null,
cbgg_Mesh_$callClinit = () => {
    cbgg_Mesh_$callClinit = $rt_eraseClinit(cbgg_Mesh);
    cbgg_Mesh__clinit_();
},
cbgg_Mesh_makeVertexBuffer = ($this, $isStatic, $maxVertices, $vertexAttributes) => {
    if (cbg_Gdx_gl30 === null)
        return cbggg_VertexBufferObject__init_($isStatic, $maxVertices, $vertexAttributes);
    return cbggg_VertexBufferObjectWithVAO__init_($isStatic, $maxVertices, $vertexAttributes);
},
cbgg_Mesh_setVertices = ($this, $vertices, $offset, $count) => {
    $this.$vertices0.$setVertices0($vertices, $offset, $count);
    return $this;
},
cbgg_Mesh_getMaxVertices = $this => {
    return $this.$vertices0.$getNumMaxVertices();
},
cbgg_Mesh_getMaxIndices = $this => {
    return $this.$indices0.$getNumMaxIndices();
},
cbgg_Mesh_bind = ($this, $shader, $locations, $instanceLocations) => {
    let var$4;
    $this.$vertices0.$bind0($shader, $locations);
    var$4 = $this.$instances;
    if (var$4 !== null && var$4.$getNumInstances() > 0)
        $this.$instances.$bind0($shader, $instanceLocations);
    if ($this.$indices0.$getNumIndices() > 0)
        $this.$indices0.$bind();
},
cbgg_Mesh_unbind = ($this, $shader, $locations, $instanceLocations) => {
    let var$4;
    $this.$vertices0.$unbind0($shader, $locations);
    var$4 = $this.$instances;
    if (var$4 !== null && var$4.$getNumInstances() > 0)
        $this.$instances.$unbind0($shader, $instanceLocations);
    if ($this.$indices0.$getNumIndices() > 0)
        $this.$indices0.$unbind();
},
cbgg_Mesh_render = ($this, $shader, $primitiveType, $offset, $count, $autoBind) => {
    let $buffer, $oldPosition, var$8, $numInstances;
    if (!$count)
        return;
    if ($autoBind)
        cbgg_Mesh_bind($this, $shader, null, null);
    if ($this.$isVertexArray) {
        if ($this.$indices0.$getNumIndices() <= 0)
            cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        else {
            $buffer = $this.$indices0.$getBuffer(0);
            $oldPosition = $buffer.$position0;
            var$8 = $buffer;
            jn_Buffer_position(var$8, $offset);
            cbg_Gdx_gl20.$glDrawElements($primitiveType, $count, 5123, $buffer);
            jn_Buffer_position(var$8, $oldPosition);
        }
    } else {
        $numInstances = 0;
        if ($this.$isInstanced)
            $numInstances = $this.$instances.$getNumInstances();
        if ($this.$indices0.$getNumIndices() <= 0) {
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawArraysInstanced($primitiveType, $offset, $count, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        } else {
            if (($count + $offset | 0) > $this.$indices0.$getNumMaxIndices()) {
                $shader = new cbgu_GdxRuntimeException;
                $buffer = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($buffer);
                jl_AbstractStringBuilder_append($buffer, $rt_s(479));
                $buffer = jl_StringBuilder_append1($buffer, $count);
                jl_AbstractStringBuilder_append($buffer, $rt_s(480));
                $buffer = jl_StringBuilder_append1($buffer, $offset);
                jl_AbstractStringBuilder_append($buffer, $rt_s(481));
                $buffer = jl_StringBuilder_append1($buffer, $this.$indices0.$getNumMaxIndices());
                jl_AbstractStringBuilder_append($buffer, $rt_s(22));
                jl_Exception__init_($shader, jl_AbstractStringBuilder_toString($buffer));
                $rt_throw($shader);
            }
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawElementsInstanced($primitiveType, $count, 5123, $offset * 2 | 0, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawElements0($primitiveType, $count, 5123, $offset * 2 | 0);
        }
    }
    if ($autoBind)
        cbgg_Mesh_unbind($this, $shader, null, null);
},
cbgg_Mesh_getVertexAttribute = ($this, $usage) => {
    let $attributes, $len, $i;
    $attributes = $this.$vertices0.$getAttributes();
    $len = cbgg_VertexAttributes_size($attributes);
    $i = 0;
    while ($i < $len) {
        if ((cbgg_VertexAttributes_get($attributes, $i)).$usage == $usage)
            return cbgg_VertexAttributes_get($attributes, $i);
        $i = $i + 1 | 0;
    }
    return null;
},
cbgg_Mesh_getVertexAttributes = $this => {
    return $this.$vertices0.$getAttributes();
},
cbgg_Mesh_getInstancedAttributes = $this => {
    let var$1;
    var$1 = $this.$instances;
    return var$1 === null ? null : var$1.$getAttributes();
},
cbgg_Mesh_addManagedMesh = ($app, $mesh) => {
    let $managedResources;
    cbgg_Mesh_$callClinit();
    $managedResources = ju_HashMap_get(cbgg_Mesh_meshes, $app);
    if ($managedResources === null)
        $managedResources = cbgu_Array__init_();
    cbgu_Array_add($managedResources, $mesh);
    ju_HashMap_put(cbgg_Mesh_meshes, $app, $managedResources);
},
cbgg_Mesh__clinit_ = () => {
    cbgg_Mesh_meshes = ju_HashMap__init_();
};
function cbggg_BitmapFont$BitmapFontData() {
    let a = this; jl_Object.call(a);
    a.$name4 = null;
    a.$imagePaths = null;
    a.$fontFile = null;
    a.$flipped = 0;
    a.$padTop = 0.0;
    a.$padRight = 0.0;
    a.$padBottom = 0.0;
    a.$padLeft = 0.0;
    a.$lineHeight = 0.0;
    a.$capHeight = 0.0;
    a.$ascent = 0.0;
    a.$descent = 0.0;
    a.$down = 0.0;
    a.$blankLineScale = 0.0;
    a.$scaleX = 0.0;
    a.$scaleY = 0.0;
    a.$markupEnabled = 0;
    a.$glyphs0 = null;
    a.$missingGlyph = null;
    a.$spaceXadvance = 0.0;
    a.$xHeight = 0.0;
    a.$breakChars = null;
    a.$xChars = null;
    a.$capChars = null;
}
let cbggg_BitmapFont$BitmapFontData__init_0 = ($this, $fontFile, $flip) => {
    $this.$capHeight = 1.0;
    $this.$blankLineScale = 1.0;
    $this.$scaleX = 1.0;
    $this.$scaleY = 1.0;
    $this.$glyphs0 = $rt_createArray($rt_arraycls(cbggg_BitmapFont$Glyph), 128);
    $this.$xHeight = 1.0;
    $this.$xChars = $rt_createCharArrayFromData([120, 101, 97, 111, 110, 115, 114, 99, 117, 109, 118, 119, 122]);
    $this.$capChars = $rt_createCharArrayFromData([77, 78, 66, 68, 67, 69, 70, 75, 65, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]);
    $this.$fontFile = $fontFile;
    $this.$flipped = $flip;
    cbggg_BitmapFont$BitmapFontData_load($this, $fontFile, $flip);
},
cbggg_BitmapFont$BitmapFontData__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_BitmapFont$BitmapFontData();
    cbggg_BitmapFont$BitmapFontData__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_BitmapFont$BitmapFontData_load = ($this, $fontFile, $flip) => {
    let $tokens, $reader, $line, $padding, $padY, $p, $baseLine, $pageCount, $ch, $matcher, $id, $ex, $fileName, $glyph, $first, $second, $amount, $hasMetricsOverride, $overrideAscent, $overrideDescent, $overrideDown, $overrideCapHeight, $overrideLineHeight, $overrideSpaceXAdvance, $overrideXHeight, $spaceGlyph, $xadvanceGlyph, var$30, $xGlyph, $capGlyph, $page, $common, $$je;
    if ($this.$imagePaths !== null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(482)));
    $tokens = $fontFile;
    $this.$name4 = cgxgbt_TeaFileHandle_nameWithoutExtension($tokens);
    $reader = ji_BufferedReader__init_(ji_InputStreamReader__init_2(cgxgbt_TeaFileHandle_read($tokens)), 512);
    a: {
        b: {
            try {
                $line = ji_BufferedReader_readLine($reader);
                if ($line === null)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(483)));
                $line = jl_String_substring0($line, jl_String_indexOf2($line, $rt_s(484)) + 8 | 0);
                $padding = (jl_String_split0(jl_String_substring($line, 0, jl_String_indexOf1($line, 32)), $rt_s(474), 4)).data;
                if ($padding.length != 4)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(485)));
                $this.$padTop = jl_Integer_parseInt($padding[0]);
                $this.$padRight = jl_Integer_parseInt($padding[1]);
                $this.$padBottom = jl_Integer_parseInt($padding[2]);
                $this.$padLeft = jl_Integer_parseInt($padding[3]);
                $padY = $this.$padTop + $this.$padBottom;
                $line = ji_BufferedReader_readLine($reader);
                if ($line === null)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(486)));
                $padding = (jl_String_split0($line, $rt_s(369), 9)).data;
                $p = $padding.length;
                if ($p < 3)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(487)));
                if (!jl_String_startsWith($padding[1], $rt_s(488)))
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(489)));
                $this.$lineHeight = jl_Integer_parseInt(jl_String_substring0($padding[1], 11));
                if (!jl_String_startsWith($padding[2], $rt_s(490)))
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(491)));
                c: {
                    $baseLine = jl_Integer_parseInt(jl_String_substring0($padding[2], 5));
                    $pageCount = 1;
                    if ($p < 6)
                        $ch = $pageCount;
                    else if ($padding[5] === null)
                        $ch = $pageCount;
                    else if (!jl_String_startsWith($padding[5], $rt_s(492)))
                        $ch = $pageCount;
                    else {
                        try {
                            $ch = jl_Math_max(1, jl_Integer_parseInt(jl_String_substring0($padding[5], 6)));
                            $pageCount = $ch;
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                            } else {
                                throw $$e;
                            }
                        }
                        $ch = $pageCount;
                    }
                }
                $this.$imagePaths = $rt_createArray(jl_String, $ch);
                $p = 0;
                d: {
                    e: {
                        f: {
                            while (true) {
                                if ($p >= $ch)
                                    break d;
                                $line = ji_BufferedReader_readLine($reader);
                                if ($line === null)
                                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(493)));
                                g: {
                                    $matcher = jur_Pattern_matcher(jur_Pattern_compile($rt_s(494)), $line);
                                    if (jur_Matcher_find($matcher)) {
                                        $id = jur_Matcher_group($matcher, 1);
                                        try {
                                            if (jl_Integer_parseInt($id) != $p)
                                                break f;
                                            break g;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_NumberFormatException) {
                                                $ex = $$je;
                                                break e;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                }
                                $line = jur_Pattern_matcher(jur_Pattern_compile($rt_s(495)), $line);
                                if (!jur_Matcher_find($line))
                                    break;
                                $fileName = jur_Matcher_group($line, 1);
                                $this.$imagePaths.data[$p] = jl_String_replaceAll(cgxgbt_TeaFileHandle_path(cgxgbt_TeaFileHandle_child(cgxgbt_TeaFileHandle_parent($tokens), $fileName)), $rt_s(496), $rt_s(81));
                                $p = $p + 1 | 0;
                            }
                            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(497)));
                        }
                        try {
                            $rt_throw(cbgu_GdxRuntimeException__init_(jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(498)), $id))));
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                                $ex = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(499)), $id)), $ex));
                }
                $this.$descent = 0.0;
                h: {
                    while (true) {
                        $line = ji_BufferedReader_readLine($reader);
                        if ($line === null)
                            break;
                        if (jl_String_startsWith($line, $rt_s(500)))
                            break h;
                        if (jl_String_startsWith($line, $rt_s(501)))
                            break h;
                        if (!jl_String_startsWith($line, $rt_s(502)))
                            continue;
                        $glyph = cbggg_BitmapFont$Glyph__init_();
                        $tokens = ju_StringTokenizer__init_($line, $rt_s(503));
                        ju_StringTokenizer_nextToken($tokens);
                        ju_StringTokenizer_nextToken($tokens);
                        $ch = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        if ($ch <= 0)
                            $this.$missingGlyph = $glyph;
                        else {
                            if ($ch > 65535)
                                continue;
                            cbggg_BitmapFont$BitmapFontData_setGlyph($this, $ch, $glyph);
                        }
                        $glyph.$id0 = $ch;
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$srcX = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$srcY = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$width = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$height = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$xoffset = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        if ($flip)
                            $glyph.$yoffset = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        else
                            $glyph.$yoffset =  -($glyph.$height + jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens)) | 0) | 0;
                        ju_StringTokenizer_nextToken($tokens);
                        $glyph.$xadvance = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        if (ju_StringTokenizer_hasMoreTokens($tokens))
                            ju_StringTokenizer_nextToken($tokens);
                        i: {
                            if (ju_StringTokenizer_hasMoreTokens($tokens))
                                try {
                                    $glyph.$page = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                                    break i;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof jl_NumberFormatException) {
                                    } else {
                                        throw $$e;
                                    }
                                }
                        }
                        if ($glyph.$width > 0 && $glyph.$height > 0)
                            $this.$descent = jl_Math_min0($baseLine + $glyph.$yoffset, $this.$descent);
                    }
                }
                $this.$descent = $this.$descent + $this.$padBottom;
                j: {
                    while (true) {
                        $line = ji_BufferedReader_readLine($reader);
                        if ($line === null)
                            break;
                        if (!jl_String_startsWith($line, $rt_s(504)))
                            break j;
                        $tokens = ju_StringTokenizer__init_($line, $rt_s(503));
                        ju_StringTokenizer_nextToken($tokens);
                        ju_StringTokenizer_nextToken($tokens);
                        $first = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $second = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        if ($first < 0)
                            continue;
                        if ($first > 65535)
                            continue;
                        if ($second < 0)
                            continue;
                        if ($second > 65535)
                            continue;
                        $glyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $first & 65535);
                        ju_StringTokenizer_nextToken($tokens);
                        $amount = jl_Integer_parseInt(ju_StringTokenizer_nextToken($tokens));
                        if ($glyph !== null)
                            cbggg_BitmapFont$Glyph_setKerning($glyph, $second, $amount);
                    }
                }
                $hasMetricsOverride = 0;
                $overrideAscent = 0.0;
                $overrideDescent = 0.0;
                $overrideDown = 0.0;
                $overrideCapHeight = 0.0;
                $overrideLineHeight = 0.0;
                $overrideSpaceXAdvance = 0.0;
                $overrideXHeight = 0.0;
                if ($line !== null && jl_String_startsWith($line, $rt_s(501))) {
                    $hasMetricsOverride = 1;
                    $tokens = ju_StringTokenizer__init_($line, $rt_s(503));
                    ju_StringTokenizer_nextToken($tokens);
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideAscent = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideDescent = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideDown = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideCapHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideLineHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideSpaceXAdvance = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    ju_StringTokenizer_nextToken($tokens);
                    $overrideXHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                }
                $spaceGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, 32);
                if ($spaceGlyph === null) {
                    $spaceGlyph = cbggg_BitmapFont$Glyph__init_();
                    $spaceGlyph.$id0 = 32;
                    $xadvanceGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, 108);
                    if ($xadvanceGlyph === null)
                        $xadvanceGlyph = cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this);
                    $spaceGlyph.$xadvance = $xadvanceGlyph.$xadvance;
                    cbggg_BitmapFont$BitmapFontData_setGlyph($this, 32, $spaceGlyph);
                }
                if (!$spaceGlyph.$width) {
                    var$30 = $this.$padLeft;
                    $spaceGlyph.$width = var$30 + $spaceGlyph.$xadvance + $this.$padRight | 0;
                    $spaceGlyph.$xoffset =  -var$30 | 0;
                }
                $this.$spaceXadvance = $spaceGlyph.$xadvance;
                $xGlyph = null;
                $padding = $this.$xChars.data;
                $ch = $padding.length;
                $p = 0;
                k: {
                    while ($p < $ch) {
                        $xGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $padding[$p]);
                        if ($xGlyph !== null)
                            break k;
                        $p = $p + 1 | 0;
                    }
                }
                if ($xGlyph === null)
                    $xGlyph = cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this);
                $this.$xHeight = $xGlyph.$height - $padY;
                $capGlyph = null;
                $padding = $this.$capChars.data;
                $ch = $padding.length;
                $p = 0;
                l: {
                    while ($p < $ch) {
                        $capGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $padding[$p]);
                        if ($capGlyph !== null)
                            break l;
                        $p = $p + 1 | 0;
                    }
                }
                if ($capGlyph !== null)
                    $this.$capHeight = $capGlyph.$height;
                else {
                    $padding = $this.$glyphs0.data;
                    $pageCount = $padding.length;
                    $ch = 0;
                    while ($ch < $pageCount) {
                        m: {
                            $page = $padding[$ch];
                            if ($page !== null) {
                                $common = $page.data;
                                $p = $common.length;
                                $first = 0;
                                while (true) {
                                    if ($first >= $p)
                                        break m;
                                    $glyph = $common[$first];
                                    if ($glyph !== null) {
                                        $second = $glyph.$height;
                                        if ($second && $glyph.$width)
                                            $this.$capHeight = jl_Math_max0($this.$capHeight, $second);
                                    }
                                    $first = $first + 1 | 0;
                                }
                            }
                        }
                        $ch = $ch + 1 | 0;
                    }
                }
                $padY = $this.$capHeight - $padY;
                $this.$capHeight = $padY;
                $baseLine = $baseLine - $padY;
                $this.$ascent = $baseLine;
                $padY =  -$this.$lineHeight;
                $this.$down = $padY;
                if ($flip) {
                    $this.$ascent =  -$baseLine;
                    $this.$down =  -$padY;
                }
                if ($hasMetricsOverride) {
                    $this.$ascent = $overrideAscent;
                    $this.$descent = $overrideDescent;
                    $this.$down = $overrideDown;
                    $this.$capHeight = $overrideCapHeight;
                    $this.$lineHeight = $overrideLineHeight;
                    $this.$spaceXadvance = $overrideSpaceXAdvance;
                    $this.$xHeight = $overrideXHeight;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $ex = $$je;
                    break b;
                } else{
                    $fontFile = $$je;
                    break a;
                }
            }
            cbgu_StreamUtils_closeQuietly($reader);
            return;
        }
        try {
            $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(505)), $fontFile)), $ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            $fontFile = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly($reader);
    $rt_throw($fontFile);
},
cbggg_BitmapFont$BitmapFontData_setGlyphRegion = ($this, $glyph, $region) => {
    let $texture, $invTexWidth, $invTexHeight, $offsetX, $offsetY, $u, $v, $regionWidth, $regionHeight, $atlasRegion, var$13, $x, var$15, $x2, $y, var$18, $y2, $amount;
    $texture = $region.$texture0;
    $invTexWidth = 1.0 / cbgg_Texture_getWidth($texture);
    $invTexHeight = 1.0 / cbgg_Texture_getHeight($texture);
    $offsetX = 0.0;
    $offsetY = 0.0;
    $u = $region.$u0;
    $v = $region.$v0;
    $regionWidth = $region.$regionWidth;
    $regionHeight = $region.$regionHeight;
    if ($region instanceof cbggg_TextureAtlas$AtlasRegion) {
        $atlasRegion = $region;
        $offsetX = $atlasRegion.$offsetX;
        $offsetY = ($atlasRegion.$originalHeight - $atlasRegion.$packedHeight | 0) - $atlasRegion.$offsetY;
    }
    var$13 = $glyph.$srcX;
    $x = var$13;
    var$15 = $glyph.$width;
    $x2 = var$13 + var$15 | 0;
    var$13 = $glyph.$srcY;
    $y = var$13;
    var$18 = $glyph.$height;
    $y2 = var$13 + var$18 | 0;
    if ($offsetX <= 0.0)
        $regionWidth = $x2;
    else {
        $x = $x - $offsetX;
        if ($x < 0.0) {
            $glyph.$width = var$15 + $x | 0;
            $glyph.$xoffset = $glyph.$xoffset - $x | 0;
            $x = 0.0;
        }
        $offsetX = $x2 - $offsetX;
        if ($offsetX <= $regionWidth)
            $regionWidth = $offsetX;
        else
            $glyph.$width = $glyph.$width - ($offsetX - $regionWidth) | 0;
    }
    if ($offsetY <= 0.0)
        $regionHeight = $y2;
    else {
        $y = $y - $offsetY;
        if ($y < 0.0) {
            var$13 = var$18 + $y | 0;
            $glyph.$height = var$13;
            if (var$13 < 0)
                $glyph.$height = 0;
            $y = 0.0;
        }
        $offsetX = $y2 - $offsetY;
        if ($offsetX <= $regionHeight)
            $regionHeight = $offsetX;
        else {
            $amount = $offsetX - $regionHeight;
            $glyph.$height = $glyph.$height - $amount | 0;
            $glyph.$yoffset = $glyph.$yoffset + $amount | 0;
        }
    }
    $glyph.$u = $u + $x * $invTexWidth;
    $glyph.$u2 = $u + $regionWidth * $invTexWidth;
    if (!$this.$flipped) {
        $glyph.$v2 = $v + $y * $invTexHeight;
        $glyph.$v = $v + $regionHeight * $invTexHeight;
    } else {
        $glyph.$v = $v + $y * $invTexHeight;
        $glyph.$v2 = $v + $regionHeight * $invTexHeight;
    }
},
cbggg_BitmapFont$BitmapFontData_setGlyph = ($this, $ch, $glyph) => {
    let var$3, var$4, $page;
    var$3 = $this.$glyphs0.data;
    var$4 = $ch / 512 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        $page = $rt_createArray(cbggg_BitmapFont$Glyph, 512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $glyph;
},
cbggg_BitmapFont$BitmapFontData_getFirstGlyph = $this => {
    let var$1, var$2, var$3, var$4, $page, var$6, var$7, $glyph;
    var$1 = $this.$glyphs0.data;
    var$2 = var$1.length;
    var$3 = 0;
    a: while (true) {
        if (var$3 >= var$2) {
            var$4 = new cbgu_GdxRuntimeException;
            jl_Exception__init_(var$4, $rt_s(506));
            $rt_throw(var$4);
        }
        b: {
            $page = var$1[var$3];
            if ($page !== null) {
                $page = $page.data;
                var$6 = $page.length;
                var$7 = 0;
                while (true) {
                    if (var$7 >= var$6)
                        break b;
                    $glyph = $page[var$7];
                    if ($glyph !== null && $glyph.$height && $glyph.$width)
                        break a;
                    var$7 = var$7 + 1 | 0;
                }
            }
        }
        var$3 = var$3 + 1 | 0;
    }
    return $glyph;
},
cbggg_BitmapFont$BitmapFontData_getGlyph = ($this, $ch) => {
    let $page;
    $page = $this.$glyphs0.data[$ch / 512 | 0];
    if ($page === null)
        return null;
    return $page.data[$ch & 511];
},
cbggg_BitmapFont$BitmapFontData_getGlyphs = ($this, $run, $str, $start, $end, $lastGlyph) => {
    let $max, $markupEnabled, $scaleX, $glyphs, $xAdvances, $ch, $glyph, $lastGlyphWidth, var$14, var$15;
    $max = $end - $start | 0;
    if (!$max)
        return;
    $markupEnabled = $this.$markupEnabled;
    $scaleX = $this.$scaleX;
    $glyphs = $run.$glyphs;
    $xAdvances = $run.$xAdvances;
    if ($max < 0) {
        $run = new jl_IllegalArgumentException;
        $str = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($str);
        jl_AbstractStringBuilder_append($str, $rt_s(410));
        jl_Exception__init_($run, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($str, $max)));
        $rt_throw($run);
    }
    $ch = $glyphs.$size0 + $max | 0;
    if ($ch > $glyphs.$items.data.length)
        cbgu_Array_resize($glyphs, jl_Math_max(jl_Math_max(8, $ch), $glyphs.$size0 * 1.75 | 0));
    cbgu_FloatArray_ensureCapacity($run.$xAdvances, $max + 1 | 0);
    $run = $str;
    while (true) {
        a: {
            $max = $start + 1 | 0;
            $ch = jl_String_charAt($run, $start);
            if ($ch != 13) {
                $glyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $ch);
                if ($glyph === null) {
                    $glyph = $this.$missingGlyph;
                    if ($glyph === null)
                        break a;
                }
                cbgu_Array_add($glyphs, $glyph);
                if ($lastGlyph === null)
                    $lastGlyphWidth = $glyph.$fixedWidth ? 0.0 : ( -$glyph.$xoffset | 0) * $scaleX - $this.$padLeft;
                else {
                    b: {
                        var$14 = $lastGlyph.$xadvance;
                        var$15 = $lastGlyph.$kerning;
                        if (var$15 !== null) {
                            var$15 = var$15.data[$ch >>> 9 | 0];
                            if (var$15 !== null) {
                                $start = var$15.data[$ch & 511];
                                break b;
                            }
                        }
                        $start = 0;
                    }
                    $lastGlyphWidth = (var$14 + $start | 0) * $scaleX;
                }
                cbgu_FloatArray_add($xAdvances, $lastGlyphWidth);
                if (!$markupEnabled)
                    $lastGlyph = $glyph;
                else if ($ch != 91)
                    $lastGlyph = $glyph;
                else if ($max >= $end)
                    $lastGlyph = $glyph;
                else if (jl_String_charAt($run, $max) != 91)
                    $lastGlyph = $glyph;
                else {
                    $max = $max + 1 | 0;
                    $lastGlyph = $glyph;
                }
            }
        }
        if ($max >= $end)
            break;
        $start = $max;
    }
    if ($lastGlyph !== null)
        cbgu_FloatArray_add($xAdvances, $lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * $scaleX : ($lastGlyph.$width + $lastGlyph.$xoffset | 0) * $scaleX - $this.$padRight);
},
cbggg_BitmapFont$BitmapFontData_getWrapIndex = ($this, $glyphs, $start) => {
    let $i, $glyphsItems, $ch;
    $i = $start - 1 | 0;
    $glyphsItems = $glyphs.$items.data;
    $ch = $glyphsItems[$i].$id0 & 65535;
    if (cbggg_BitmapFont$BitmapFontData_isWhitespace($this, $ch))
        return $i;
    if (cbggg_BitmapFont$BitmapFontData_isBreakChar($this, $ch))
        $i = $i + (-1) | 0;
    a: {
        while ($i > 0) {
            $start = $glyphsItems[$i].$id0 & 65535;
            if (cbggg_BitmapFont$BitmapFontData_isWhitespace($this, $start))
                break a;
            if (cbggg_BitmapFont$BitmapFontData_isBreakChar($this, $start))
                break a;
            $i = $i + (-1) | 0;
        }
        return 0;
    }
    return $i + 1 | 0;
},
cbggg_BitmapFont$BitmapFontData_isBreakChar = ($this, $c) => {
    let var$2, var$3, var$4;
    var$2 = $this.$breakChars;
    if (var$2 === null)
        return 0;
    var$2 = var$2.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        if ($c == var$2[var$4])
            return 1;
        var$4 = var$4 + 1 | 0;
    }
    return 0;
},
cbggg_BitmapFont$BitmapFontData_isWhitespace = ($this, $c) => {
    switch ($c) {
        case 9:
        case 10:
        case 13:
        case 32:
            break;
        default:
            return 0;
    }
    return 1;
};
function cgxjl_JParserLibraryLoader$1() {
    jl_Object.call(this);
    this.$val$listener1 = null;
}
let cgxjl_JParserLibraryLoader$1_onLoad = ($this, $isSuccess, $e) => {
    cajs_InitScreen$show$lambda$_1_0_onLoad($this.$val$listener1, $isSuccess, $e);
};
function js_ScriptException() {
    let a = this; jl_Exception.call(a);
    a.$fileName = null;
    a.$lineNumber = 0;
    a.$columnNumber = 0;
}
let js_ScriptException__init_ = ($this, $s) => {
    jl_Exception__init_($this, $s);
    $this.$fileName = null;
    $this.$lineNumber = (-1);
    $this.$columnNumber = (-1);
},
js_ScriptException__init_0 = var_0 => {
    let var_1 = new js_ScriptException();
    js_ScriptException__init_(var_1, var_0);
    return var_1;
};
function cbgg_VertexAttributes() {
    let a = this; jl_Object.call(a);
    a.$attributes0 = null;
    a.$vertexSize = 0;
    a.$mask4 = Long_ZERO;
    a.$boneWeightUnits = 0;
    a.$textureCoordinates = 0;
    a.$iterable = null;
}
let cbgg_VertexAttributes__init_0 = ($this, $attributes) => {
    let var$2, var$3, $list, var$5, $i, var$7;
    $attributes = $attributes.data;
    $this.$mask4 = Long_fromInt(-1);
    $this.$boneWeightUnits = (-1);
    $this.$textureCoordinates = (-1);
    var$2 = $attributes.length;
    if (!var$2) {
        var$3 = new jl_IllegalArgumentException;
        jl_Exception__init_(var$3, $rt_s(507));
        $rt_throw(var$3);
    }
    $list = $rt_createArray(cbgg_VertexAttribute, var$2);
    var$5 = $list.data;
    $i = 0;
    while ($i < var$2) {
        var$5[$i] = $attributes[$i];
        $i = $i + 1 | 0;
    }
    $this.$attributes0 = $list;
    var$2 = 0;
    var$7 = 0;
    while (var$7 < var$5.length) {
        a: {
            b: {
                var$3 = var$5[var$7];
                var$3.$offset = var$2;
                switch (var$3.$type2) {
                    case 5120:
                    case 5121:
                        break;
                    case 5122:
                    case 5123:
                        $i = 2 * var$3.$numComponents | 0;
                        break a;
                    case 5124:
                    case 5125:
                    case 5127:
                    case 5128:
                    case 5129:
                    case 5130:
                    case 5131:
                        break b;
                    case 5126:
                    case 5132:
                        $i = 4 * var$3.$numComponents | 0;
                        break a;
                    default:
                        break b;
                }
                $i = var$3.$numComponents;
                break a;
            }
            $i = 0;
        }
        var$2 = var$2 + $i | 0;
        var$7 = var$7 + 1 | 0;
    }
    $this.$vertexSize = var$2;
},
cbgg_VertexAttributes__init_ = var_0 => {
    let var_1 = new cbgg_VertexAttributes();
    cbgg_VertexAttributes__init_0(var_1, var_0);
    return var_1;
},
cbgg_VertexAttributes_findByUsage = ($this, $usage) => {
    let $len, $i;
    $len = cbgg_VertexAttributes_size($this);
    $i = 0;
    while ($i < $len) {
        if ((cbgg_VertexAttributes_get($this, $i)).$usage == $usage)
            return cbgg_VertexAttributes_get($this, $i);
        $i = $i + 1 | 0;
    }
    return null;
},
cbgg_VertexAttributes_size = $this => {
    return $this.$attributes0.data.length;
},
cbgg_VertexAttributes_get = ($this, $index) => {
    return $this.$attributes0.data[$index];
},
cbgg_VertexAttributes_equals = ($this, $obj) => {
    let $other, $i, var$4;
    if ($obj === $this)
        return 1;
    if (!($obj instanceof cbgg_VertexAttributes))
        return 0;
    $other = $obj;
    if ($this.$attributes0.data.length != $other.$attributes0.data.length)
        return 0;
    $i = 0;
    while (true) {
        var$4 = $this.$attributes0.data;
        if ($i >= var$4.length)
            break;
        if (!cbgg_VertexAttribute_equals(var$4[$i], $other.$attributes0.data[$i]))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
cbgg_VertexAttributes_getMask = $this => {
    let $result, $i, var$3;
    if (Long_eq($this.$mask4, Long_fromInt(-1))) {
        $result = Long_ZERO;
        $i = 0;
        while (true) {
            var$3 = $this.$attributes0.data;
            if ($i >= var$3.length)
                break;
            $result = Long_or($result, Long_fromInt(var$3[$i].$usage));
            $i = $i + 1 | 0;
        }
        $this.$mask4 = $result;
    }
    return $this.$mask4;
},
cbgg_VertexAttributes_getMaskWithSizePacked = $this => {
    return Long_or(cbgg_VertexAttributes_getMask($this), Long_shl(Long_fromInt($this.$attributes0.data.length), 32));
},
cbgg_VertexAttributes_getBoneWeights = $this => {
    let $i, var$2, $a;
    a: {
        if ($this.$boneWeightUnits < 0) {
            $this.$boneWeightUnits = 0;
            $i = 0;
            while (true) {
                var$2 = $this.$attributes0.data;
                if ($i >= var$2.length)
                    break a;
                $a = var$2[$i];
                if ($a.$usage == 64)
                    $this.$boneWeightUnits = jl_Math_max($this.$boneWeightUnits, $a.$unit + 1 | 0);
                $i = $i + 1 | 0;
            }
        }
    }
    return $this.$boneWeightUnits;
},
cbgg_VertexAttributes_getTextureCoordinates = $this => {
    let $i, var$2, $a;
    a: {
        if ($this.$textureCoordinates < 0) {
            $this.$textureCoordinates = 0;
            $i = 0;
            while (true) {
                var$2 = $this.$attributes0.data;
                if ($i >= var$2.length)
                    break a;
                $a = var$2[$i];
                if ($a.$usage == 16)
                    $this.$textureCoordinates = jl_Math_max($this.$textureCoordinates, $a.$unit + 1 | 0);
                $i = $i + 1 | 0;
            }
        }
    }
    return $this.$textureCoordinates;
},
cbgg_VertexAttributes_iterator = $this => {
    let var$1, var$2, var$3;
    if ($this.$iterable === null) {
        var$1 = new cbgg_VertexAttributes$ReadonlyIterable;
        var$1.$array3 = $this.$attributes0;
        $this.$iterable = var$1;
    }
    var$1 = $this.$iterable;
    if (cbgu_Collections_allocateIterators)
        var$2 = cbgg_VertexAttributes$ReadonlyIterator__init_(var$1.$array3);
    else {
        if (var$1.$iterator1 === null) {
            var$1.$iterator1 = cbgg_VertexAttributes$ReadonlyIterator__init_(var$1.$array3);
            var$1.$iterator2 = cbgg_VertexAttributes$ReadonlyIterator__init_(var$1.$array3);
        }
        var$3 = var$1.$iterator1;
        if (var$3.$valid0) {
            var$2 = var$1.$iterator2;
            var$2.$index4 = 0;
            var$2.$valid0 = 1;
            var$3.$valid0 = 0;
        } else {
            var$3.$index4 = 0;
            var$3.$valid0 = 1;
            var$1.$iterator2.$valid0 = 0;
            var$2 = var$3;
        }
    }
    return var$2;
};
function cbggg_ShaderProgram() {
    let a = this; jl_Object.call(a);
    a.$log1 = null;
    a.$isCompiled = 0;
    a.$uniforms1 = null;
    a.$uniformTypes = null;
    a.$uniformSizes = null;
    a.$uniformNames = null;
    a.$attributes5 = null;
    a.$attributeTypes = null;
    a.$attributeSizes = null;
    a.$attributeNames = null;
    a.$program0 = 0;
    a.$vertexShaderHandle = 0;
    a.$fragmentShaderHandle = 0;
    a.$matrix0 = null;
    a.$vertexShaderSource = null;
    a.$fragmentShaderSource = null;
    a.$invalidated = 0;
    a.$refCount = 0;
    a.$params = null;
    a.$type4 = null;
}
let cbggg_ShaderProgram_pedantic = 0,
cbggg_ShaderProgram_prependVertexCode = null,
cbggg_ShaderProgram_prependFragmentCode = null,
cbggg_ShaderProgram_shaders = null,
cbggg_ShaderProgram_intbuf = null,
cbggg_ShaderProgram_$callClinit = () => {
    cbggg_ShaderProgram_$callClinit = $rt_eraseClinit(cbggg_ShaderProgram);
    cbggg_ShaderProgram__clinit_();
},
cbggg_ShaderProgram__init_ = ($this, $vertexShader, $fragmentShader) => {
    let var$3, var$4, var$5, var$6;
    cbggg_ShaderProgram_$callClinit();
    $this.$log1 = $rt_s(8);
    $this.$uniforms1 = cbgu_ObjectIntMap__init_();
    $this.$uniformTypes = cbgu_ObjectIntMap__init_();
    $this.$uniformSizes = cbgu_ObjectIntMap__init_();
    $this.$attributes5 = cbgu_ObjectIntMap__init_();
    $this.$attributeTypes = cbgu_ObjectIntMap__init_();
    $this.$attributeSizes = cbgu_ObjectIntMap__init_();
    $this.$refCount = 0;
    $this.$params = cbgu_BufferUtils_newIntBuffer(1);
    $this.$type4 = cbgu_BufferUtils_newIntBuffer(1);
    if ($vertexShader === null) {
        $vertexShader = new jl_IllegalArgumentException;
        jl_Exception__init_($vertexShader, $rt_s(508));
        $rt_throw($vertexShader);
    }
    if ($fragmentShader === null) {
        $vertexShader = new jl_IllegalArgumentException;
        jl_Exception__init_($vertexShader, $rt_s(509));
        $rt_throw($vertexShader);
    }
    var$3 = cbggg_ShaderProgram_prependVertexCode;
    if (var$3 !== null && var$3.$nativeString.length > 0) {
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append(var$3, cbggg_ShaderProgram_prependVertexCode);
        jl_AbstractStringBuilder_append(var$3, $vertexShader);
        $vertexShader = jl_AbstractStringBuilder_toString(var$3);
    }
    var$3 = cbggg_ShaderProgram_prependFragmentCode;
    if (var$3 !== null && var$3.$nativeString.length > 0) {
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append(var$3, cbggg_ShaderProgram_prependFragmentCode);
        jl_AbstractStringBuilder_append(var$3, $fragmentShader);
        $fragmentShader = jl_AbstractStringBuilder_toString(var$3);
    }
    $this.$vertexShaderSource = $vertexShader;
    $this.$fragmentShaderSource = $fragmentShader;
    $this.$matrix0 = cbgu_BufferUtils_newFloatBuffer(16);
    cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader);
    if ($this.$isCompiled) {
        jn_Buffer_clear($this.$params);
        cbg_Gdx_gl20.$glGetProgramiv($this.$program0, 35721, $this.$params);
        var$4 = jn_IntBufferImpl_get($this.$params, 0);
        $this.$attributeNames = $rt_createArray(jl_String, var$4);
        var$5 = 0;
        while (var$5 < var$4) {
            jn_Buffer_clear($this.$params);
            jn_IntBufferImpl_put($this.$params, 0, 1);
            jn_Buffer_clear($this.$type4);
            $fragmentShader = cbg_Gdx_gl20.$glGetActiveAttrib($this.$program0, var$5, $this.$params, $this.$type4);
            var$6 = cbg_Gdx_gl20.$glGetAttribLocation($this.$program0, $fragmentShader);
            cbgu_ObjectIntMap_put($this.$attributes5, $fragmentShader, var$6);
            cbgu_ObjectIntMap_put($this.$attributeTypes, $fragmentShader, jn_IntBufferImpl_get($this.$type4, 0));
            cbgu_ObjectIntMap_put($this.$attributeSizes, $fragmentShader, jn_IntBufferImpl_get($this.$params, 0));
            $this.$attributeNames.data[var$5] = $fragmentShader;
            var$5 = var$5 + 1 | 0;
        }
        jn_Buffer_clear($this.$params);
        cbg_Gdx_gl20.$glGetProgramiv($this.$program0, 35718, $this.$params);
        var$4 = jn_IntBufferImpl_get($this.$params, 0);
        $this.$uniformNames = $rt_createArray(jl_String, var$4);
        var$5 = 0;
        while (var$5 < var$4) {
            jn_Buffer_clear($this.$params);
            jn_IntBufferImpl_put($this.$params, 0, 1);
            jn_Buffer_clear($this.$type4);
            $vertexShader = cbg_Gdx_gl20.$glGetActiveUniform($this.$program0, var$5, $this.$params, $this.$type4);
            var$6 = cbg_Gdx_gl20.$glGetUniformLocation($this.$program0, $vertexShader);
            cbgu_ObjectIntMap_put($this.$uniforms1, $vertexShader, var$6);
            cbgu_ObjectIntMap_put($this.$uniformTypes, $vertexShader, jn_IntBufferImpl_get($this.$type4, 0));
            cbgu_ObjectIntMap_put($this.$uniformSizes, $vertexShader, jn_IntBufferImpl_get($this.$params, 0));
            $this.$uniformNames.data[var$5] = $vertexShader;
            var$5 = var$5 + 1 | 0;
        }
        $vertexShader = cbg_Gdx_app;
        $fragmentShader = cbgu_ObjectMap_get(cbggg_ShaderProgram_shaders, $vertexShader);
        if ($fragmentShader === null)
            $fragmentShader = cbgu_Array__init_();
        cbgu_Array_add($fragmentShader, $this);
        cbgu_ObjectMap_put(cbggg_ShaderProgram_shaders, $vertexShader, $fragmentShader);
    }
},
cbggg_ShaderProgram__init_0 = (var_0, var_1) => {
    let var_2 = new cbggg_ShaderProgram();
    cbggg_ShaderProgram__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_ShaderProgram_compileShaders = ($this, $vertexShader, $fragmentShader) => {
    let var$3;
    $this.$vertexShaderHandle = cbggg_ShaderProgram_loadShader($this, 35633, $vertexShader);
    var$3 = cbggg_ShaderProgram_loadShader($this, 35632, $fragmentShader);
    $this.$fragmentShaderHandle = var$3;
    if ($this.$vertexShaderHandle != (-1) && var$3 != (-1)) {
        var$3 = cbg_Gdx_gl20.$glCreateProgram();
        if (!var$3)
            var$3 = (-1);
        $vertexShader = cbg_Gdx_gl20;
        if (var$3 == (-1))
            var$3 = (-1);
        else {
            $vertexShader.$glAttachShader(var$3, $this.$vertexShaderHandle);
            $vertexShader.$glAttachShader(var$3, $this.$fragmentShaderHandle);
            $vertexShader.$glLinkProgram(var$3);
            $fragmentShader = jn_ByteBuffer_allocateDirect(4);
            jn_ByteBuffer_order($fragmentShader, jn_ByteOrder_nativeOrder());
            $fragmentShader = jn_ByteBufferJsImpl_asIntBuffer($fragmentShader);
            $vertexShader.$glGetProgramiv(var$3, 35714, $fragmentShader);
            if (!jn_IntBufferImpl_get($fragmentShader, 0)) {
                $this.$log1 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$3);
                var$3 = (-1);
            }
        }
        $this.$program0 = var$3;
        if (var$3 != (-1)) {
            $this.$isCompiled = 1;
            return;
        }
        $this.$isCompiled = 0;
        return;
    }
    $this.$isCompiled = 0;
},
cbggg_ShaderProgram_loadShader = ($this, $type, $source) => {
    let $gl, $intbuf, $shader, $infoLog;
    $gl = cbg_Gdx_gl20;
    $intbuf = cbgu_BufferUtils_newIntBuffer(1);
    $shader = $gl.$glCreateShader($type);
    if (!$shader)
        return (-1);
    $gl.$glShaderSource($shader, $source);
    $gl.$glCompileShader($shader);
    $gl.$glGetShaderiv($shader, 35713, $intbuf);
    if (jn_IntBufferImpl_get($intbuf, 0))
        return $shader;
    $infoLog = $gl.$glGetShaderInfoLog($shader);
    $gl = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($gl);
    jl_AbstractStringBuilder_append($gl, $this.$log1);
    jl_AbstractStringBuilder_append($gl, $type != 35633 ? $rt_s(510) : $rt_s(511));
    $this.$log1 = jl_AbstractStringBuilder_toString($gl);
    $source = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($source);
    jl_AbstractStringBuilder_append($source, $this.$log1);
    jl_AbstractStringBuilder_append($source, $infoLog);
    $this.$log1 = jl_AbstractStringBuilder_toString($source);
    return (-1);
},
cbggg_ShaderProgram_getLog = $this => {
    let var$1;
    if (!$this.$isCompiled)
        return $this.$log1;
    var$1 = cbg_Gdx_gl20.$glGetProgramInfoLog($this.$program0);
    $this.$log1 = var$1;
    return var$1;
},
cbggg_ShaderProgram_fetchUniformLocation0 = ($this, $name) => {
    cbggg_ShaderProgram_$callClinit();
    return cbggg_ShaderProgram_fetchUniformLocation($this, $name, cbggg_ShaderProgram_pedantic);
},
cbggg_ShaderProgram_fetchUniformLocation = ($this, $name, $pedantic) => {
    let var$3, var$4, var$5;
    var$3 = cbgu_ObjectIntMap_get($this.$uniforms1, $name, (-2));
    if (var$3 == (-2)) {
        var$3 = cbg_Gdx_gl20.$glGetUniformLocation($this.$program0, $name);
        if (var$3 == (-1) && $pedantic) {
            if (!$this.$isCompiled) {
                $name = new jl_IllegalStateException;
                var$4 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$4);
                jl_AbstractStringBuilder_append(var$4, $rt_s(512));
                jl_AbstractStringBuilder_append(var$4, cbggg_ShaderProgram_getLog($this));
                jl_Exception__init_($name, jl_AbstractStringBuilder_toString(var$4));
                $rt_throw($name);
            }
            var$4 = new jl_IllegalArgumentException;
            var$5 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$5);
            jl_AbstractStringBuilder_append(var$5, $rt_s(513));
            jl_AbstractStringBuilder_append(var$5, $name);
            jl_AbstractStringBuilder_append(var$5, $rt_s(514));
            jl_Exception__init_(var$4, jl_AbstractStringBuilder_toString(var$5));
            $rt_throw(var$4);
        }
        cbgu_ObjectIntMap_put($this.$uniforms1, $name, var$3);
    }
    return var$3;
},
cbggg_ShaderProgram_setUniformi0 = ($this, $name, $value) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform1i(cbggg_ShaderProgram_fetchUniformLocation0($this, $name), $value);
},
cbggg_ShaderProgram_setUniformi = ($this, $location, $value) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform1i($location, $value);
},
cbggg_ShaderProgram_setUniformf1 = ($this, $location, $value) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform1f($location, $value);
},
cbggg_ShaderProgram_setUniformf3 = ($this, $location, $value1, $value2) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform2f($location, $value1, $value2);
},
cbggg_ShaderProgram_setUniformf0 = ($this, $location, $value1, $value2, $value3) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform3f($location, $value1, $value2, $value3);
},
cbggg_ShaderProgram_setUniformf4 = ($this, $name, $value1, $value2, $value3, $value4) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform4f(cbggg_ShaderProgram_fetchUniformLocation0($this, $name), $value1, $value2, $value3, $value4);
},
cbggg_ShaderProgram_setUniformf = ($this, $location, $value1, $value2, $value3, $value4) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform4f($location, $value1, $value2, $value3, $value4);
},
cbggg_ShaderProgram_setUniform3fv = ($this, $location, $values, $offset, $length) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $length = $length / 3 | 0;
    cgxgbt_TeaGL20_glUniform3fv($gl, $location, $length, $values, $offset);
},
cbggg_ShaderProgram_setUniformMatrix0 = ($this, $name, $matrix) => {
    cbggg_ShaderProgram_setUniformMatrix1($this, cbggg_ShaderProgram_fetchUniformLocation0($this, $name), $matrix, 0);
},
cbggg_ShaderProgram_setUniformMatrix1 = ($this, $location, $matrix, $transpose) => {
    let $gl, var$5;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    var$5 = $matrix.$val;
    cgxgbt_TeaGL20_glUniformMatrix4fv($gl, $location, 1, $transpose, var$5, 0);
},
cbggg_ShaderProgram_setUniformMatrix = ($this, $location, $matrix) => {
    let var$3, var$4;
    var$3 = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    var$4 = $matrix.$val0;
    cgxgbt_TeaGL20_glUniformMatrix3fv(var$3, $location, 1, 0, var$4, 0);
},
cbggg_ShaderProgram_setUniformMatrix4fv = ($this, $location, $values, $offset, $length) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $length = $length / 16 | 0;
    cgxgbt_TeaGL20_glUniformMatrix4fv($gl, $location, $length, 0, $values, $offset);
},
cbggg_ShaderProgram_setUniformf2 = ($this, $location, $values) => {
    cbggg_ShaderProgram_setUniformf0($this, $location, $values.$x, $values.$y, $values.$z);
},
cbggg_ShaderProgram_setVertexAttribute = ($this, $location, $size, $type, $normalize, $stride, $offset) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glVertexAttribPointer($location, $size, $type, $normalize, $stride, $offset);
},
cbggg_ShaderProgram_bind = $this => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUseProgram($this.$program0);
},
cbggg_ShaderProgram_dispose = $this => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    $gl.$glUseProgram(0);
    $gl.$glDeleteShader($this.$vertexShaderHandle);
    $gl.$glDeleteShader($this.$fragmentShaderHandle);
    $gl.$glDeleteProgram($this.$program0);
    cbggg_ShaderProgram_$callClinit();
    if (cbgu_ObjectMap_get(cbggg_ShaderProgram_shaders, cbg_Gdx_app) !== null)
        cbgu_Array_removeValue(cbgu_ObjectMap_get(cbggg_ShaderProgram_shaders, cbg_Gdx_app), $this, 1);
},
cbggg_ShaderProgram_disableVertexAttribute0 = ($this, $name) => {
    let $gl, var$3, $location;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    var$3 = cbg_Gdx_gl20;
    $location = cbgu_ObjectIntMap_get($this.$attributes5, $name, (-2));
    if ($location == (-2)) {
        $location = var$3.$glGetAttribLocation($this.$program0, $name);
        cbgu_ObjectIntMap_put($this.$attributes5, $name, $location);
    }
    if ($location == (-1))
        return;
    $gl.$glDisableVertexAttribArray($location);
},
cbggg_ShaderProgram_disableVertexAttribute = ($this, $location) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glDisableVertexAttribArray($location);
},
cbggg_ShaderProgram_enableVertexAttribute = ($this, $location) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glEnableVertexAttribArray($location);
},
cbggg_ShaderProgram_checkManaged = $this => {
    if ($this.$invalidated) {
        cbggg_ShaderProgram_compileShaders($this, $this.$vertexShaderSource, $this.$fragmentShaderSource);
        $this.$invalidated = 0;
    }
},
cbggg_ShaderProgram_getAttributeLocation = ($this, $name) => {
    return cbgu_ObjectIntMap_get($this.$attributes5, $name, (-1));
},
cbggg_ShaderProgram__clinit_ = () => {
    cbggg_ShaderProgram_pedantic = 1;
    cbggg_ShaderProgram_prependVertexCode = $rt_s(8);
    cbggg_ShaderProgram_prependFragmentCode = $rt_s(8);
    cbggg_ShaderProgram_shaders = cbgu_ObjectMap__init_();
    cbggg_ShaderProgram_intbuf = cbgu_BufferUtils_newIntBuffer(1);
};
function cbggg_BitmapFont$Glyph() {
    let a = this; jl_Object.call(a);
    a.$id0 = 0;
    a.$srcX = 0;
    a.$srcY = 0;
    a.$width = 0;
    a.$height = 0;
    a.$u = 0.0;
    a.$v = 0.0;
    a.$u2 = 0.0;
    a.$v2 = 0.0;
    a.$xoffset = 0;
    a.$yoffset = 0;
    a.$xadvance = 0;
    a.$kerning = null;
    a.$fixedWidth = 0;
    a.$page = 0;
}
let cbggg_BitmapFont$Glyph__init_0 = $this => {
    $this.$page = 0;
},
cbggg_BitmapFont$Glyph__init_ = () => {
    let var_0 = new cbggg_BitmapFont$Glyph();
    cbggg_BitmapFont$Glyph__init_0(var_0);
    return var_0;
},
cbggg_BitmapFont$Glyph_setKerning = ($this, $ch, $value) => {
    let var$3, var$4, $page;
    if ($this.$kerning === null)
        $this.$kerning = $rt_createArray($rt_arraycls($rt_bytecls), 128);
    var$3 = $this.$kerning.data;
    var$4 = $ch >>> 9 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        $page = $rt_createByteArray(512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $value << 24 >> 24;
},
cbggg_BitmapFont$Glyph_toString = $this => {
    return jl_Character_toString($this.$id0 & 65535);
};
function cgxjl_JParserLibraryLoader$loadWasm$lambda$_3_0() {
    let a = this; jl_Object.call(a);
    a.$_023 = null;
    a.$_19 = null;
    a.$_27 = 0;
    a.$_33 = null;
}
let cgxjl_JParserLibraryLoader$loadWasm$lambda$_3_0_onLoad = (var$0, var$1, var$2) => {
    let var$3, var$4, var$5, var$6;
    var$3 = var$0.$_023;
    var$4 = var$0.$_19;
    var$5 = var$0.$_27;
    var$6 = var$0.$_33;
    cgxjl_JParserLibraryLoader_$callClinit();
    if (!var$1) {
        if (var$5)
            cgxjl_JParserLibraryLoader_loadJS(var$4, var$3, var$6);
        else
            cgxjl_JParserLibraryLoader$1_onLoad(var$4, 0, var$2);
    } else {
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_StringBuilder_append(jl_StringBuilder_append(var$2, var$3), $rt_s(515));
        var$6 = jl_AbstractStringBuilder_toString(var$2);
        var$2 = new cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_10_0;
        var$2.$_024 = var$3;
        var$2.$_110 = var$4;
        window[$rt_ustr(var$6)] = otji_JS_function(otji_JSWrapper_unwrap(var$2), "onInit");
    }
};
function cgxjl_JParserLibraryLoader$loadJS$lambda$_4_0() {
    jl_Object.call(this);
    this.$_00 = null;
}
let cgxjl_JParserLibraryLoader$loadJS$lambda$_4_0_onLoad = (var$0, var$1, var$2) => {
    let var$3;
    var$3 = var$0.$_00;
    cgxjl_JParserLibraryLoader_$callClinit();
    if (!var$1)
        cgxjl_JParserLibraryLoader$1_onLoad(var$3, 0, var$2);
    else {
        var$2 = null;
        cgxjl_JParserLibraryLoader$1_onLoad(var$3, 1, var$2);
    }
},
cbgg_Mesh$1 = $rt_classWithoutFields(),
cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = null,
cbgg_Mesh$1_$callClinit = () => {
    cbgg_Mesh$1_$callClinit = $rt_eraseClinit(cbgg_Mesh$1);
    cbgg_Mesh$1__clinit_();
},
cbgg_Mesh$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cbgg_Mesh$VertexDataType_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = var$1;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObject.$ordinal0] = 1;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObjectSubData.$ordinal0] = 2;
    var$2[cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO.$ordinal0] = 3;
    var$2[cbgg_Mesh$VertexDataType_VertexArray.$ordinal0] = 4;
},
cbggg_VertexData = $rt_classWithoutFields(0);
function cbggg_VertexBufferObject() {
    let a = this; jl_Object.call(a);
    a.$attributes2 = null;
    a.$byteBuffer3 = null;
    a.$buffer4 = null;
    a.$bufferHandle2 = 0;
    a.$isStatic = 0;
    a.$usage2 = 0;
    a.$isDirty3 = 0;
    a.$isBound0 = 0;
}
let cbggg_VertexBufferObject__init_0 = ($this, $isStatic, $numVertices, $attributes) => {
    $this.$isDirty3 = 0;
    $this.$isBound0 = 0;
    $this.$isStatic = $isStatic;
    $this.$attributes2 = $attributes;
    $attributes = cbgu_BufferUtils_newUnsafeByteBuffer($rt_imul($attributes.$vertexSize, $numVertices));
    $this.$byteBuffer3 = $attributes;
    $attributes = jn_ByteBufferJsImpl_asFloatBuffer($attributes);
    $this.$buffer4 = $attributes;
    jn_Buffer_flip($attributes);
    $this.$bufferHandle2 = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    $this.$usage2 = !$isStatic ? 35048 : 35044;
},
cbggg_VertexBufferObject__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObject();
    cbggg_VertexBufferObject__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObject_getAttributes = $this => {
    return $this.$attributes2;
},
cbggg_VertexBufferObject_getNumVertices = $this => {
    return $this.$buffer4.$limit0 / ($this.$attributes2.$vertexSize / 4 | 0) | 0;
},
cbggg_VertexBufferObject_getNumMaxVertices = $this => {
    return $this.$buffer4.$capacityImpl() / ($this.$attributes2.$vertexSize / 4 | 0) | 0;
},
cbggg_VertexBufferObject_setVertices = ($this, $vertices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty3 = 1;
    cbgu_BufferUtils_copy($vertices, $this.$buffer4, $count, $offset);
    jn_Buffer_position($this.$buffer4, 0);
    jn_Buffer_limit($this.$buffer4, $count);
    if ($this.$isBound0) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$buffer4;
        var$4.$glBufferData(34962, var$5.$limit0, var$5, $this.$usage2);
        $this.$isDirty3 = 0;
    }
},
cbggg_VertexBufferObject_bind = ($this, $shader, $locations) => {
    let $gl, $attribute, $numAttributes, $i, var$7, $location;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle2);
    if ($this.$isDirty3) {
        $attribute = $this.$buffer4;
        $gl.$glBufferData(34962, $attribute.$limit0, $attribute, $this.$usage2);
        $this.$isDirty3 = 0;
    }
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes2);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$7 = $locations.data;
                $attribute = cbgg_VertexAttributes_get($this.$attributes2, $i);
                $location = var$7[$i];
                if ($location >= 0) {
                    cbggg_ShaderProgram_enableVertexAttribute($shader, $location);
                    cbggg_ShaderProgram_setVertexAttribute($shader, $location, $attribute.$numComponents, $attribute.$type2, $attribute.$normalized, $this.$attributes2.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = cbgg_VertexAttributes_get($this.$attributes2, $i);
            $location = cbggg_ShaderProgram_getAttributeLocation($shader, $attribute.$alias);
            if ($location >= 0) {
                cbggg_ShaderProgram_enableVertexAttribute($shader, $location);
                cbggg_ShaderProgram_setVertexAttribute($shader, $location, $attribute.$numComponents, $attribute.$type2, $attribute.$normalized, $this.$attributes2.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound0 = 1;
},
cbggg_VertexBufferObject_unbind = ($this, $shader, $locations) => {
    let $gl, $numAttributes, $i, $location;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes2);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                cbggg_ShaderProgram_disableVertexAttribute0($shader, (cbgg_VertexAttributes_get($this.$attributes2, $i)).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    cbggg_ShaderProgram_disableVertexAttribute($shader, $location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound0 = 0;
},
cbggg_VertexBufferObject_dispose = $this => {
    let $gl, var$2;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, 0);
    var$2 = $this.$bufferHandle2;
    cgxgbt_TeaGL20_glDeleteBuffer($gl, var$2);
    $this.$bufferHandle2 = 0;
    cbgu_BufferUtils_disposeUnsafeByteBuffer($this.$byteBuffer3);
},
cbggg_IndexData = $rt_classWithoutFields(0);
function cbggg_IndexBufferObject() {
    let a = this; jl_Object.call(a);
    a.$byteBuffer1 = null;
    a.$buffer0 = null;
    a.$bufferHandle0 = 0;
    a.$isDirect0 = 0;
    a.$isDirty = 0;
    a.$isBound = 0;
    a.$usage0 = 0;
}
let cbggg_IndexBufferObject__init_1 = ($this, $isStatic, $maxIndices) => {
    let var$3;
    $this.$isDirty = 1;
    $this.$isBound = 0;
    $this.$isDirect0 = 1;
    var$3 = cbgu_BufferUtils_newUnsafeByteBuffer($maxIndices * 2 | 0);
    $this.$byteBuffer1 = var$3;
    var$3 = jn_ByteBufferJsImpl_asShortBuffer(var$3);
    $this.$buffer0 = var$3;
    jn_Buffer_flip(var$3);
    $this.$bufferHandle0 = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    $this.$usage0 = !$isStatic ? 35048 : 35044;
},
cbggg_IndexBufferObject__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_IndexBufferObject();
    cbggg_IndexBufferObject__init_1(var_2, var_0, var_1);
    return var_2;
},
cbggg_IndexBufferObject__init_0 = ($this, $maxIndices) => {
    let var$2, var$3, var$4;
    $this.$isDirty = 1;
    $this.$isBound = 0;
    $this.$isDirect0 = 1;
    cbgu_BufferUtils_$callClinit();
    if (cgxgbt_TeaTool_isProd) {
        var$2 = jn_ByteBuffer_allocateDirect($maxIndices * 2 | 0);
        jn_ByteBuffer_order(var$2, jn_ByteOrder_nativeOrder());
        var$2 = jn_ByteBufferJsImpl_asShortBuffer(var$2);
    } else {
        var$3 = $rt_createShortArray($maxIndices);
        var$4 = var$3.data.length;
        var$2 = jn_ShortBufferOverTypedArray__init_(0, var$4, 0, var$3.data, var$3);
        var$2.$position0 = 0;
        var$2.$limit0 = 0 + var$4 | 0;
    }
    $this.$buffer0 = var$2;
    jn_Buffer_flip(var$2);
    $this.$bufferHandle0 = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    $this.$usage0 = 35044;
},
cbggg_IndexBufferObject__init_2 = var_0 => {
    let var_1 = new cbggg_IndexBufferObject();
    cbggg_IndexBufferObject__init_0(var_1, var_0);
    return var_1;
},
cbggg_IndexBufferObject_getNumIndices = $this => {
    return $this.$buffer0.$limit0;
},
cbggg_IndexBufferObject_getNumMaxIndices = $this => {
    return $this.$buffer0.$capacityImpl();
},
cbggg_IndexBufferObject_setIndices = ($this, $indices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty = 1;
    jn_Buffer_clear($this.$buffer0);
    jn_ShortBuffer_put($this.$buffer0, $indices, $offset, $count);
    jn_Buffer_flip($this.$buffer0);
    if ($this.$isBound) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$buffer0;
        var$4.$glBufferData(34963, var$5.$limit0, var$5, $this.$usage0);
        $this.$isDirty = 0;
    }
},
cbggg_IndexBufferObject_getBuffer = ($this, $forWriting) => {
    $this.$isDirty = $this.$isDirty | $forWriting;
    return $this.$buffer0;
},
cbggg_IndexBufferObject_bind = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$bufferHandle0;
    if (!var$1) {
        var$2 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$2, $rt_s(516));
        $rt_throw(var$2);
    }
    cbg_Gdx_gl20.$glBindBuffer(34963, var$1);
    if ($this.$isDirty) {
        var$2 = cbg_Gdx_gl20;
        var$3 = $this.$buffer0;
        var$2.$glBufferData(34963, var$3.$limit0, var$3, $this.$usage0);
        $this.$isDirty = 0;
    }
    $this.$isBound = 1;
},
cbggg_IndexBufferObject_unbind = $this => {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound = 0;
},
cbggg_IndexBufferObject_dispose = $this => {
    let $gl, var$2;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34963, 0);
    var$2 = $this.$bufferHandle0;
    cgxgbt_TeaGL20_glDeleteBuffer($gl, var$2);
    $this.$bufferHandle0 = 0;
    cbgu_BufferUtils_disposeUnsafeByteBuffer($this.$byteBuffer1);
    $this.$byteBuffer1 = null;
    $this.$buffer0 = null;
};
function cbggg_VertexBufferObjectSubData() {
    let a = this; jl_Object.call(a);
    a.$attributes1 = null;
    a.$buffer1 = null;
    a.$byteBuffer = null;
    a.$bufferHandle1 = 0;
    a.$isDirect = 0;
    a.$isStatic1 = 0;
    a.$usage1 = 0;
    a.$isDirty1 = 0;
    a.$isBound1 = 0;
}
let cbggg_VertexBufferObjectSubData_getAttributes = $this => {
    return $this.$attributes1;
},
cbggg_VertexBufferObjectSubData_getNumVertices = $this => {
    return ($this.$buffer1.$limit0 * 4 | 0) / $this.$attributes1.$vertexSize | 0;
},
cbggg_VertexBufferObjectSubData_getNumMaxVertices = $this => {
    return $this.$byteBuffer.$capacityImpl() / $this.$attributes1.$vertexSize | 0;
},
cbggg_VertexBufferObjectSubData_setVertices = ($this, $vertices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty1 = 1;
    if ($this.$isDirect) {
        cbgu_BufferUtils_copy($vertices, $this.$byteBuffer, $count, $offset);
        jn_Buffer_position($this.$buffer1, 0);
        jn_Buffer_limit($this.$buffer1, $count);
    } else {
        jn_Buffer_clear($this.$buffer1);
        jn_FloatBuffer_put($this.$buffer1, $vertices, $offset, $count);
        jn_Buffer_flip($this.$buffer1);
        jn_Buffer_position($this.$byteBuffer, 0);
        var$4 = $this.$byteBuffer;
        $offset = $this.$buffer1.$limit0 << 2;
        jn_Buffer_limit(var$4, $offset);
    }
    if ($this.$isBound1) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$byteBuffer;
        var$4.$glBufferSubData(34962, 0, var$5.$limit0, var$5);
        $this.$isDirty1 = 0;
    }
},
cbggg_VertexBufferObjectSubData_bind = ($this, $shader, $locations) => {
    let $gl, $attribute, $i, $numAttributes, var$7, $location;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle1);
    if ($this.$isDirty1) {
        $attribute = $this.$byteBuffer;
        $i = $this.$buffer1.$limit0 * 4 | 0;
        jn_Buffer_limit($attribute, $i);
        $attribute = $this.$byteBuffer;
        $gl.$glBufferData(34962, $attribute.$limit0, $attribute, $this.$usage1);
        $this.$isDirty1 = 0;
    }
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes1);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$7 = $locations.data;
                $attribute = cbgg_VertexAttributes_get($this.$attributes1, $i);
                $location = var$7[$i];
                if ($location >= 0) {
                    cbggg_ShaderProgram_enableVertexAttribute($shader, $location);
                    cbggg_ShaderProgram_setVertexAttribute($shader, $location, $attribute.$numComponents, $attribute.$type2, $attribute.$normalized, $this.$attributes1.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = cbgg_VertexAttributes_get($this.$attributes1, $i);
            $location = cbggg_ShaderProgram_getAttributeLocation($shader, $attribute.$alias);
            if ($location >= 0) {
                cbggg_ShaderProgram_enableVertexAttribute($shader, $location);
                cbggg_ShaderProgram_setVertexAttribute($shader, $location, $attribute.$numComponents, $attribute.$type2, $attribute.$normalized, $this.$attributes1.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound1 = 1;
},
cbggg_VertexBufferObjectSubData_unbind = ($this, $shader, $locations) => {
    let $gl, $numAttributes, $i, $location;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes1);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                cbggg_ShaderProgram_disableVertexAttribute0($shader, (cbgg_VertexAttributes_get($this.$attributes1, $i)).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    cbggg_ShaderProgram_disableVertexAttribute($shader, $location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound1 = 0;
},
cbggg_VertexBufferObjectSubData_dispose = $this => {
    let $gl, var$2;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, 0);
    var$2 = $this.$bufferHandle1;
    cgxgbt_TeaGL20_glDeleteBuffer($gl, var$2);
    $this.$bufferHandle1 = 0;
};
function cbggg_IndexBufferObjectSubData() {
    let a = this; jl_Object.call(a);
    a.$buffer3 = null;
    a.$byteBuffer0 = null;
    a.$bufferHandle3 = 0;
    a.$isDirect1 = 0;
    a.$isDirty0 = 0;
    a.$isBound2 = 0;
    a.$usage4 = 0;
}
let cbggg_IndexBufferObjectSubData__init_0 = ($this, $isStatic, $maxIndices) => {
    let var$3;
    $this.$isDirty0 = 1;
    $this.$isBound2 = 0;
    var$3 = cbgu_BufferUtils_newByteBuffer($maxIndices * 2 | 0);
    $this.$byteBuffer0 = var$3;
    $this.$isDirect1 = 1;
    $this.$usage4 = !$isStatic ? 35048 : 35044;
    var$3 = jn_ByteBufferJsImpl_asShortBuffer(var$3);
    $this.$buffer3 = var$3;
    jn_Buffer_flip(var$3);
    jn_Buffer_flip($this.$byteBuffer0);
    $maxIndices = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    cbg_Gdx_gl20.$glBindBuffer(34963, $maxIndices);
    cbg_Gdx_gl20.$glBufferData(34963, $this.$byteBuffer0.$capacityImpl(), null, $this.$usage4);
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$bufferHandle3 = $maxIndices;
},
cbggg_IndexBufferObjectSubData__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_IndexBufferObjectSubData();
    cbggg_IndexBufferObjectSubData__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_IndexBufferObjectSubData_getNumIndices = $this => {
    return $this.$buffer3.$limit0;
},
cbggg_IndexBufferObjectSubData_getNumMaxIndices = $this => {
    return $this.$buffer3.$capacityImpl();
},
cbggg_IndexBufferObjectSubData_setIndices = ($this, $indices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty0 = 1;
    jn_Buffer_clear($this.$buffer3);
    jn_ShortBuffer_put($this.$buffer3, $indices, $offset, $count);
    jn_Buffer_flip($this.$buffer3);
    jn_Buffer_position($this.$byteBuffer0, 0);
    var$4 = $this.$byteBuffer0;
    $offset = $count << 1;
    jn_Buffer_limit(var$4, $offset);
    if ($this.$isBound2) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$byteBuffer0;
        var$4.$glBufferSubData(34963, 0, var$5.$limit0, var$5);
        $this.$isDirty0 = 0;
    }
},
cbggg_IndexBufferObjectSubData_getBuffer = ($this, $forWriting) => {
    $this.$isDirty0 = $this.$isDirty0 | $forWriting;
    return $this.$buffer3;
},
cbggg_IndexBufferObjectSubData_bind = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$bufferHandle3;
    if (!var$1) {
        var$2 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$2, $rt_s(517));
        $rt_throw(var$2);
    }
    cbg_Gdx_gl20.$glBindBuffer(34963, var$1);
    if ($this.$isDirty0) {
        var$2 = $this.$byteBuffer0;
        var$3 = $this.$buffer3.$limit0 * 2 | 0;
        jn_Buffer_limit(var$2, var$3);
        var$2 = cbg_Gdx_gl20;
        var$4 = $this.$byteBuffer0;
        var$2.$glBufferSubData(34963, 0, var$4.$limit0, var$4);
        $this.$isDirty0 = 0;
    }
    $this.$isBound2 = 1;
},
cbggg_IndexBufferObjectSubData_unbind = $this => {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound2 = 0;
},
cbggg_IndexBufferObjectSubData_dispose = $this => {
    let $gl, var$2;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34963, 0);
    var$2 = $this.$bufferHandle3;
    cgxgbt_TeaGL20_glDeleteBuffer($gl, var$2);
    $this.$bufferHandle3 = 0;
};
function cbggg_VertexBufferObjectWithVAO() {
    let a = this; jl_Object.call(a);
    a.$attributes3 = null;
    a.$byteBuffer2 = null;
    a.$buffer2 = null;
    a.$bufferHandle = 0;
    a.$isStatic0 = 0;
    a.$usage3 = 0;
    a.$isDirty2 = 0;
    a.$isBound3 = 0;
    a.$vaoHandle = 0;
    a.$cachedLocations = null;
}
let cbggg_VertexBufferObjectWithVAO_tmpHandle = null,
cbggg_VertexBufferObjectWithVAO_$callClinit = () => {
    cbggg_VertexBufferObjectWithVAO_$callClinit = $rt_eraseClinit(cbggg_VertexBufferObjectWithVAO);
    cbggg_VertexBufferObjectWithVAO__clinit_();
},
cbggg_VertexBufferObjectWithVAO__init_0 = ($this, $isStatic, $numVertices, $attributes) => {
    cbggg_VertexBufferObjectWithVAO_$callClinit();
    $this.$isDirty2 = 0;
    $this.$isBound3 = 0;
    $this.$vaoHandle = (-1);
    $this.$cachedLocations = cbgu_IntArray__init_();
    $this.$isStatic0 = $isStatic;
    $this.$attributes3 = $attributes;
    $attributes = cbgu_BufferUtils_newUnsafeByteBuffer($rt_imul($attributes.$vertexSize, $numVertices));
    $this.$byteBuffer2 = $attributes;
    $attributes = jn_ByteBufferJsImpl_asFloatBuffer($attributes);
    $this.$buffer2 = $attributes;
    jn_Buffer_flip($attributes);
    $this.$bufferHandle = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
    $this.$usage3 = !$isStatic ? 35048 : 35044;
    jn_Buffer_clear(cbggg_VertexBufferObjectWithVAO_tmpHandle);
    cbg_Gdx_gl30.$glGenVertexArrays(1, cbggg_VertexBufferObjectWithVAO_tmpHandle);
    $this.$vaoHandle = jn_IntBufferImpl_get0(cbggg_VertexBufferObjectWithVAO_tmpHandle);
},
cbggg_VertexBufferObjectWithVAO__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObjectWithVAO();
    cbggg_VertexBufferObjectWithVAO__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObjectWithVAO_getAttributes = $this => {
    return $this.$attributes3;
},
cbggg_VertexBufferObjectWithVAO_getNumVertices = $this => {
    return ($this.$buffer2.$limit0 * 4 | 0) / $this.$attributes3.$vertexSize | 0;
},
cbggg_VertexBufferObjectWithVAO_getNumMaxVertices = $this => {
    return ($this.$buffer2.$capacityImpl() * 4 | 0) / $this.$attributes3.$vertexSize | 0;
},
cbggg_VertexBufferObjectWithVAO_setVertices = ($this, $vertices, $offset, $count) => {
    let var$4, var$5;
    $this.$isDirty2 = 1;
    cbgu_BufferUtils_copy($vertices, $this.$buffer2, $count, $offset);
    jn_Buffer_position($this.$buffer2, 0);
    jn_Buffer_limit($this.$buffer2, $count);
    if ($this.$isBound3) {
        var$4 = cbg_Gdx_gl20;
        var$5 = $this.$buffer2;
        var$4.$glBufferData(34962, var$5.$limit0, var$5, $this.$usage3);
        $this.$isDirty2 = 0;
    }
},
cbggg_VertexBufferObjectWithVAO_bind = ($this, $shader, $locations) => {
    let $gl, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindVertexArray($this.$vaoHandle);
    var$4 = !$this.$cachedLocations.$size1 ? 0 : 1;
    a: {
        var$5 = cbgg_VertexAttributes_size($this.$attributes3);
        if (var$4) {
            if ($locations === null) {
                var$6 = 0;
                while (var$4 && var$6 < var$5) {
                    var$4 = cbggg_ShaderProgram_getAttributeLocation($shader, (cbgg_VertexAttributes_get($this.$attributes3, var$6)).$alias) != cbgu_IntArray_get($this.$cachedLocations, var$6) ? 0 : 1;
                    var$6 = var$6 + 1 | 0;
                }
            } else {
                var$7 = $locations.data;
                var$4 = var$7.length != $this.$cachedLocations.$size1 ? 0 : 1;
                var$6 = 0;
                while (var$4) {
                    if (var$6 >= var$5)
                        break a;
                    var$4 = var$7[var$6] != cbgu_IntArray_get($this.$cachedLocations, var$6) ? 0 : 1;
                    var$6 = var$6 + 1 | 0;
                }
            }
        }
    }
    b: {
        if (!var$4) {
            cbg_Gdx_gl.$glBindBuffer(34962, $this.$bufferHandle);
            if ($this.$cachedLocations.$size1) {
                var$6 = cbgg_VertexAttributes_size($this.$attributes3);
                var$8 = 0;
                while (var$8 < var$6) {
                    var$4 = cbgu_IntArray_get($this.$cachedLocations, var$8);
                    if (var$4 >= 0)
                        cbggg_ShaderProgram_disableVertexAttribute($shader, var$4);
                    var$8 = var$8 + 1 | 0;
                }
            }
            cbgu_IntArray_clear($this.$cachedLocations);
            var$9 = 0;
            while (true) {
                if (var$9 >= var$5)
                    break b;
                var$10 = cbgg_VertexAttributes_get($this.$attributes3, var$9);
                if ($locations !== null) {
                    var$7 = $locations.data;
                    cbgu_IntArray_add($this.$cachedLocations, var$7[var$9]);
                } else
                    cbgu_IntArray_add($this.$cachedLocations, cbggg_ShaderProgram_getAttributeLocation($shader, var$10.$alias));
                var$6 = cbgu_IntArray_get($this.$cachedLocations, var$9);
                if (var$6 >= 0) {
                    cbggg_ShaderProgram_enableVertexAttribute($shader, var$6);
                    cbggg_ShaderProgram_setVertexAttribute($shader, var$6, var$10.$numComponents, var$10.$type2, var$10.$normalized, $this.$attributes3.$vertexSize, var$10.$offset);
                }
                var$9 = var$9 + 1 | 0;
            }
        }
    }
    if ($this.$isDirty2) {
        $gl.$glBindBuffer(34962, $this.$bufferHandle);
        $shader = $this.$buffer2;
        jn_Buffer_limit($shader, $shader.$limit0);
        $shader = $this.$buffer2;
        $gl.$glBufferData(34962, $shader.$limit0, $shader, $this.$usage3);
        $this.$isDirty2 = 0;
    }
    $this.$isBound3 = 1;
},
cbggg_VertexBufferObjectWithVAO_unbind = ($this, $shader, $locations) => {
    cbg_Gdx_gl30.$glBindVertexArray(0);
    $this.$isBound3 = 0;
},
cbggg_VertexBufferObjectWithVAO_dispose = $this => {
    let $gl, var$2;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindBuffer(34962, 0);
    var$2 = $this.$bufferHandle;
    cgxgbt_TeaGL20_glDeleteBuffer($gl, var$2);
    $this.$bufferHandle = 0;
    if ($this.$vaoHandle != (-1)) {
        cbggg_VertexBufferObjectWithVAO_$callClinit();
        jn_Buffer_clear(cbggg_VertexBufferObjectWithVAO_tmpHandle);
        $gl = cbggg_VertexBufferObjectWithVAO_tmpHandle;
        var$2 = $this.$vaoHandle;
        jn_IntBufferImpl_put0($gl, var$2);
        jn_Buffer_flip(cbggg_VertexBufferObjectWithVAO_tmpHandle);
        cbg_Gdx_gl30.$glDeleteVertexArrays(1, cbggg_VertexBufferObjectWithVAO_tmpHandle);
        $this.$vaoHandle = (-1);
    }
    cbgu_BufferUtils_disposeUnsafeByteBuffer($this.$byteBuffer2);
},
cbggg_VertexBufferObjectWithVAO__clinit_ = () => {
    cbggg_VertexBufferObjectWithVAO_tmpHandle = cbgu_BufferUtils_newIntBuffer(1);
},
cbggg_VertexArray = $rt_classWithoutFields(cbggg_VertexBufferObject),
cbggg_IndexArray = $rt_classWithoutFields(cbggg_IndexBufferObject);
function cbgu_ObjectIntMap() {
    let a = this; jl_Object.call(a);
    a.$size11 = 0;
    a.$keyTable3 = null;
    a.$valueTable1 = null;
    a.$loadFactor0 = 0.0;
    a.$threshold4 = 0;
    a.$shift3 = 0;
    a.$mask6 = 0;
}
let cbgu_ObjectIntMap__init_0 = $this => {
    let var$1, var$2;
    $this.$loadFactor0 = 0.800000011920929;
    var$1 = cbgu_ObjectSet_tableSize(51, 0.800000011920929);
    $this.$threshold4 = var$1 * 0.800000011920929 | 0;
    var$2 = var$1 - 1 | 0;
    $this.$mask6 = var$2;
    $this.$shift3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$2));
    $this.$keyTable3 = $rt_createArray(jl_Object, var$1);
    $this.$valueTable1 = $rt_createIntArray(var$1);
},
cbgu_ObjectIntMap__init_ = () => {
    let var_0 = new cbgu_ObjectIntMap();
    cbgu_ObjectIntMap__init_0(var_0);
    return var_0;
},
cbgu_ObjectIntMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt(jl_String_hashCode($item)), Long_create(2135587861, 2654435769)), $this.$shift3));
},
cbgu_ObjectIntMap_locateKey = ($this, $key) => {
    let $other, $keyTable, $i;
    if ($key === null) {
        $other = new jl_IllegalArgumentException;
        jl_Exception__init_($other, $rt_s(26));
        $rt_throw($other);
    }
    $keyTable = $this.$keyTable3;
    $i = cbgu_ObjectIntMap_place($this, $key);
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if (jl_String_equals($other, $key))
            break;
        $i = ($i + 1 | 0) & $this.$mask6;
    }
    return $i;
},
cbgu_ObjectIntMap_put = ($this, $key, $value) => {
    let $i, var$4, var$5, var$6, var$7, var$8, var$9;
    $i = cbgu_ObjectIntMap_locateKey($this, $key);
    if ($i >= 0) {
        $this.$valueTable1.data[$i] = $value;
        return;
    }
    $i =  -($i + 1 | 0) | 0;
    var$4 = $this.$keyTable3.data;
    var$4[$i] = $key;
    $this.$valueTable1.data[$i] = $value;
    $value = $this.$size11 + 1 | 0;
    $this.$size11 = $value;
    if ($value >= $this.$threshold4)
        a: {
            $value = var$4.length;
            $i = $value << 1;
            $this.$threshold4 = $i * $this.$loadFactor0 | 0;
            var$5 = $i - 1 | 0;
            $this.$mask6 = var$5;
            $this.$shift3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$5));
            var$4 = $this.$keyTable3;
            var$6 = $this.$valueTable1;
            $this.$keyTable3 = $rt_createArray(jl_Object, $i);
            $this.$valueTable1 = $rt_createIntArray($i);
            if ($this.$size11 > 0) {
                $i = 0;
                while (true) {
                    if ($i >= $value)
                        break a;
                    $key = var$4.data[$i];
                    if ($key !== null) {
                        var$5 = var$6.data[$i];
                        var$7 = $this.$keyTable3;
                        var$8 = cbgu_ObjectIntMap_place($this, $key);
                        while (true) {
                            var$9 = var$7.data;
                            if (var$9[var$8] === null)
                                break;
                            var$8 = (var$8 + 1 | 0) & $this.$mask6;
                        }
                        var$9[var$8] = $key;
                        $this.$valueTable1.data[var$8] = var$5;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
},
cbgu_ObjectIntMap_get = ($this, $key, $defaultValue) => {
    let $i;
    $i = cbgu_ObjectIntMap_locateKey($this, $key);
    if ($i >= 0)
        $defaultValue = $this.$valueTable1.data[$i];
    return $defaultValue;
},
cbgu_BufferUtils = $rt_classWithoutFields(),
cbgu_BufferUtils_unsafeBuffers = null,
cbgu_BufferUtils_allocatedUnsafe = 0,
cbgu_BufferUtils_$callClinit = () => {
    cbgu_BufferUtils_$callClinit = $rt_eraseClinit(cbgu_BufferUtils);
    cbgu_BufferUtils__clinit_();
},
cbgu_BufferUtils_copy = ($src, $dst, $numFloats, $offset) => {
    let $floatBuffer, var$6;
    cbgu_BufferUtils_$callClinit();
    $floatBuffer = null;
    var$6 = $dst instanceof jn_ByteBuffer;
    if (var$6)
        $floatBuffer = jn_ByteBufferJsImpl_asFloatBuffer($dst);
    else if ($dst instanceof jn_FloatBuffer)
        $floatBuffer = $dst;
    if ($floatBuffer === null) {
        $floatBuffer = new cbgu_GdxRuntimeException;
        jl_Exception__init_($floatBuffer, $rt_s(518));
        $rt_throw($floatBuffer);
    }
    jn_Buffer_clear($floatBuffer);
    $dst.$position(0);
    jn_FloatBuffer_put($floatBuffer, $src, $offset, $numFloats);
    $dst.$position(0);
    if (!var$6)
        $dst.$limit($numFloats);
    else
        $dst.$limit($numFloats << 2);
},
cbgu_BufferUtils_newFloatBuffer = $numFloats => {
    let $buffer, var$3, var$4;
    cbgu_BufferUtils_$callClinit();
    if (cgxgbt_TeaTool_isProd) {
        $buffer = jn_ByteBuffer_allocateDirect($numFloats * 4 | 0);
        jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
        return jn_ByteBufferJsImpl_asFloatBuffer($buffer);
    }
    var$3 = $rt_createFloatArray($numFloats);
    var$4 = var$3.data.length;
    $buffer = jn_FloatBufferOverTypedArray__init_(0, var$4, 0, var$3.data, var$3);
    $buffer.$position0 = 0;
    $buffer.$limit0 = 0 + var$4 | 0;
    return $buffer;
},
cbgu_BufferUtils_newByteBuffer = $numBytes => {
    let $buffer;
    cbgu_BufferUtils_$callClinit();
    if (!cgxgbt_TeaTool_isProd)
        return jn_ByteBuffer_wrap($rt_createByteArray($numBytes));
    $buffer = jn_ByteBuffer_allocateDirect($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer;
},
cbgu_BufferUtils_newIntBuffer = $numInts => {
    let $buffer, var$3, var$4;
    cbgu_BufferUtils_$callClinit();
    if (cgxgbt_TeaTool_isProd) {
        $buffer = jn_ByteBuffer_allocateDirect($numInts * 4 | 0);
        jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
        return jn_ByteBufferJsImpl_asIntBuffer($buffer);
    }
    var$3 = $rt_createIntArray($numInts);
    var$4 = var$3.data.length;
    $buffer = jn_IntBufferOverTypedArray__init_(0, var$4, 0, var$3.data, var$3);
    $buffer.$position0 = 0;
    $buffer.$limit0 = 0 + var$4 | 0;
    return $buffer;
},
cbgu_BufferUtils_disposeUnsafeByteBuffer = $buffer => {
    let $size;
    cbgu_BufferUtils_$callClinit();
    $size = $buffer.$capacityImpl();
    if (cbgu_Array_removeValue(cbgu_BufferUtils_unsafeBuffers, $buffer, 1)) {
        cbgu_BufferUtils_allocatedUnsafe = cbgu_BufferUtils_allocatedUnsafe - $size | 0;
        return;
    }
    $buffer = new jl_IllegalArgumentException;
    jl_Exception__init_($buffer, $rt_s(519));
    $rt_throw($buffer);
},
cbgu_BufferUtils_newUnsafeByteBuffer = $numBytes => {
    let $buffer;
    cbgu_BufferUtils_$callClinit();
    $buffer = cbgu_BufferUtils_newByteBuffer($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    cbgu_BufferUtils_allocatedUnsafe = cbgu_BufferUtils_allocatedUnsafe + $numBytes | 0;
    cbgu_Array_add(cbgu_BufferUtils_unsafeBuffers, $buffer);
    return $buffer;
},
cbgu_BufferUtils__clinit_ = () => {
    cbgu_BufferUtils_unsafeBuffers = cbgu_Array__init_();
    cbgu_BufferUtils_allocatedUnsafe = 0;
},
cbgg_TextureData$Factory = $rt_classWithoutFields();
function cgxjl_JParserLibraryLoader$loadScript$lambda$_5_0() {
    jl_Object.call(this);
    this.$_01 = null;
}
let cgxjl_JParserLibraryLoader$loadScript$lambda$_5_0_handleEvent$exported$0 = (var$1, var$2) => {
    var$1 = var$1.$_01;
    cgxjl_JParserLibraryLoader_$callClinit();
    var$1.$onLoad(1, null);
};
function cgxjl_JParserLibraryLoader$loadScript$lambda$_5_1() {
    let a = this; jl_Object.call(a);
    a.$_07 = null;
    a.$_14 = null;
    a.$_23 = null;
}
let cgxjl_JParserLibraryLoader$loadScript$lambda$_5_1_handleEvent$exported$0 = (var$1, var$2) => {
    let var$3, var$4, var$5;
    var$1 = var$1;
    var$2 = var$1.$_07;
    var$3 = var$1.$_14;
    var$1 = var$1.$_23;
    cgxjl_JParserLibraryLoader_$callClinit();
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, var$2), var$3);
    var$5 = jl_AbstractStringBuilder_toString(var$4);
    var$2 = new js_ScriptException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(520)), var$5);
    js_ScriptException__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
    var$1.$onLoad(0, var$2);
};
function jn_Buffer() {
    let a = this; jl_Object.call(a);
    a.$position0 = 0;
    a.$limit0 = 0;
    a.$mark = 0;
}
let jn_Buffer__init_ = $this => {
    $this.$mark = (-1);
},
jn_Buffer_position = ($this, $newPosition) => {
    let var$2, var$3, var$4;
    if ($newPosition >= 0 && $newPosition <= $this.$limit0) {
        $this.$position0 = $newPosition;
        if ($newPosition < $this.$mark)
            $this.$mark = 0;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(521)), $newPosition), $rt_s(522)), var$3), 93);
    jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_Buffer_limit = ($this, $newLimit) => {
    let var$2;
    if ($newLimit >= 0 && $newLimit <= $this.$capacityImpl()) {
        if ($this.$mark > $newLimit)
            $this.$mark = (-1);
        $this.$limit0 = $newLimit;
        if ($this.$position0 > $newLimit)
            $this.$position0 = $newLimit;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Exception__init_0(var$2);
    $rt_throw(var$2);
},
jn_Buffer_clear = $this => {
    $this.$position0 = 0;
    $this.$limit0 = $this.$capacityImpl();
    $this.$mark = (-1);
    return $this;
},
jn_Buffer_flip = $this => {
    $this.$limit0 = $this.$position0;
    $this.$position0 = 0;
    $this.$mark = (-1);
    return $this;
},
jn_Buffer_remaining = $this => {
    return $this.$limit0 - $this.$position0 | 0;
},
jn_Buffer_hasRemaining = $this => {
    return $this.$position0 >= $this.$limit0 ? 0 : 1;
},
jn_FloatBuffer = $rt_classWithoutFields(jn_Buffer),
jn_FloatBuffer_put = ($this, $src, $offset, $length) => {
    let var$4;
    if ($this.$readOnly()) {
        var$4 = new jn_ReadOnlyBufferException;
        jl_Exception__init_0(var$4);
        $rt_throw(var$4);
    }
    if (jn_Buffer_remaining($this) < $length) {
        var$4 = new jn_BufferOverflowException;
        jl_Exception__init_0(var$4);
        $rt_throw(var$4);
    }
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        $this.$putImpl($this.$position0, $src, $offset, $length);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$4);
    $rt_throw(var$4);
},
jn_FloatBuffer_limit0 = ($this, $newLimit) => {
    jn_Buffer_limit($this, $newLimit);
    return $this;
},
jn_FloatBuffer_position0 = ($this, $newPosition) => {
    jn_Buffer_position($this, $newPosition);
    return $this;
},
jn_FloatBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_FloatBuffer_clear = $this => {
    jn_Buffer_clear($this);
    return $this;
},
jn_FloatBuffer_limit = ($this, var$1) => {
    jn_Buffer_limit($this, var$1);
    return $this;
},
jn_FloatBuffer_position = ($this, var$1) => {
    jn_Buffer_position($this, var$1);
    return $this;
},
jn_ShortBuffer = $rt_classWithoutFields(jn_Buffer),
jn_ShortBuffer_put = ($this, $src, $offset, $length) => {
    let var$4;
    if ($this.$readOnly()) {
        var$4 = new jn_ReadOnlyBufferException;
        jl_Exception__init_0(var$4);
        $rt_throw(var$4);
    }
    if (jn_Buffer_remaining($this) < $length) {
        var$4 = new jn_BufferOverflowException;
        jl_Exception__init_0(var$4);
        $rt_throw(var$4);
    }
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        $this.$putImpl0($this.$position0, $src, $offset, $length);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$4);
    $rt_throw(var$4);
},
jn_ShortBuffer_limit = ($this, $newLimit) => {
    jn_Buffer_limit($this, $newLimit);
    return $this;
},
jn_ShortBuffer_position0 = ($this, $newPosition) => {
    jn_Buffer_position($this, $newPosition);
    return $this;
},
jn_ShortBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_ShortBuffer_clear = $this => {
    jn_Buffer_clear($this);
    return $this;
},
jn_ShortBuffer_limit0 = ($this, var$1) => {
    jn_Buffer_limit($this, var$1);
    return $this;
},
jn_ShortBuffer_position = ($this, var$1) => {
    jn_Buffer_position($this, var$1);
    return $this;
},
cgxgbt_TeaTool = $rt_classWithoutFields(),
cgxgbt_TeaTool_isProd = 0,
cgxgbt_TeaTool__clinit_ = () => {
    cgxgbt_TeaTool_isProd = 1;
},
jn_IntBuffer = $rt_classWithoutFields(jn_Buffer),
jn_IntBuffer_position0 = ($this, $newPosition) => {
    jn_Buffer_position($this, $newPosition);
    return $this;
},
jn_IntBuffer_clear = $this => {
    jn_Buffer_clear($this);
    return $this;
},
jn_IntBuffer_position = ($this, var$1) => {
    jn_Buffer_position($this, var$1);
    return $this;
};
function jn_ByteBuffer() {
    jn_Buffer.call(this);
    this.$order0 = null;
}
let jn_ByteBuffer_allocateDirect = $capacity => {
    let $result, var$3;
    if ($capacity >= 0) {
        $result = jn_ByteBufferJsImpl__init_(null, 0, new Int8Array($capacity), 1, 0);
        $result.$limit0 = $capacity;
        return $result;
    }
    $result = new jl_IllegalArgumentException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(523)), $capacity);
    jl_Exception__init_($result, jl_AbstractStringBuilder_toString(var$3));
    $rt_throw($result);
},
jn_ByteBuffer_allocate = $capacity => {
    let $array, $result, var$4;
    if ($capacity >= 0) {
        $array = $rt_createByteArray($capacity);
        $result = jn_ByteBufferJsImpl__init_($array, 0, $array.data, 0, 0);
        $result.$limit0 = $capacity;
        return $result;
    }
    $result = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(523)), $capacity);
    jl_Exception__init_($result, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw($result);
},
jn_ByteBuffer_wrap0 = ($array, $offset, $length) => {
    let $data, $result;
    ju_Objects_checkFromIndexSize($offset, $length, $array.data.length);
    $data = $array.data;
    $result = jn_ByteBufferJsImpl__init_($array, 0, $data, 0, 0);
    $result.$position0 = $offset;
    $result.$limit0 = $offset + $length | 0;
    return $result;
},
jn_ByteBuffer_wrap = $array => {
    return jn_ByteBuffer_wrap0($array, 0, $array.data.length);
},
jn_ByteBuffer_get = ($this, $dst, $offset, $length) => {
    let var$4, var$5, var$6;
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $dst.data.length) {
        if ($length > jn_Buffer_remaining($this)) {
            var$4 = new jn_BufferUnderflowException;
            jl_Exception__init_0(var$4);
            $rt_throw(var$4);
        }
        var$5 = $this.$position0;
        var$4 = $this;
        var$6 = new Int8Array(var$4.$data0.buffer, var$4.$data0.byteOffset + var$5 | 0, $length);
        $dst.data.set(var$6, $offset);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$4);
    $rt_throw(var$4);
},
jn_ByteBuffer_put0 = ($this, $src, $offset, $length) => {
    let var$4, var$5, var$6, var$7;
    if (!$length)
        return $this;
    var$4 = $this;
    if (var$4.$readOnly0) {
        var$5 = new jn_ReadOnlyBufferException;
        jl_Exception__init_0(var$5);
        $rt_throw(var$5);
    }
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        if ($length > jn_Buffer_remaining($this)) {
            var$5 = new jn_BufferOverflowException;
            jl_Exception__init_0(var$5);
            $rt_throw(var$5);
        }
        var$6 = $this.$position0;
        var$7 = new Int8Array($src.data.buffer, $offset, $length);
        var$4.$data0.set(var$7, var$6);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$5);
    $rt_throw(var$5);
},
jn_ByteBuffer_put = ($this, $src) => {
    return jn_ByteBuffer_put0($this, $src, 0, $src.data.length);
},
jn_ByteBuffer_array = $this => {
    let var$1, var$2;
    var$1 = $this.$array4;
    if (var$1 !== null)
        return var$1;
    var$2 = new jl_UnsupportedOperationException;
    jl_Exception__init_0(var$2);
    $rt_throw(var$2);
},
jn_ByteBuffer_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = $this.$position0;
    var$2 = $this.$limit0;
    var$3 = $this.$capacityImpl();
    var$4 = $this.$mark;
    if (var$4 < 0)
        var$5 = $rt_s(428);
    else {
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(524)), var$4);
        var$5 = jl_AbstractStringBuilder_toString(var$5);
    }
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$6, $rt_s(525)), var$1), $rt_s(526)), var$2), $rt_s(527)), var$3), $rt_s(528)), var$5), 93);
    return jl_AbstractStringBuilder_toString(var$6);
},
jn_ByteBuffer_hashCode = $this => {
    let $hashCode, $pos, var$3, $i;
    $hashCode = 0;
    $pos = $this.$position0;
    var$3 = $this;
    $i = $pos;
    while ($i < $this.$limit0) {
        $hashCode = (31 * $hashCode | 0) + jn_ByteBufferJsImpl_get(var$3, $pos) | 0;
        $i = $i + 1 | 0;
    }
    return $hashCode;
},
jn_ByteBuffer_equals = ($this, $obj) => {
    let $other, $sz, $a, $b, $i, var$7, var$8;
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jn_ByteBuffer))
        return 0;
    $other = $obj;
    $sz = jn_Buffer_remaining($this);
    if ($sz != jn_Buffer_remaining($other))
        return 0;
    $a = $this.$position0;
    $b = $other.$position0;
    $i = 0;
    $other = $other;
    while ($i < $sz) {
        var$7 = $a + 1 | 0;
        $a = jn_ByteBufferJsImpl_get($this, $a);
        var$8 = $b + 1 | 0;
        if ($a != jn_ByteBufferJsImpl_get($other, $b))
            return 0;
        $i = $i + 1 | 0;
        $a = var$7;
        $b = var$8;
    }
    return 1;
},
jn_ByteBuffer_order = ($this, $bo) => {
    $this.$order0 = $bo;
    return $this;
},
jn_ByteBuffer_limit = ($this, var$1) => {
    jn_Buffer_limit($this, var$1);
    return $this;
},
jn_ByteBuffer_position = ($this, var$1) => {
    jn_Buffer_position($this, var$1);
    return $this;
};
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name2 = null;
}
let jn_ByteOrder_BIG_ENDIAN = null,
jn_ByteOrder_LITTLE_ENDIAN = null,
jn_ByteOrder_nativeOrder0 = null,
jn_ByteOrder__init_0 = ($this, $name) => {
    $this.$name2 = $name;
},
jn_ByteOrder__init_ = var_0 => {
    let var_1 = new jn_ByteOrder();
    jn_ByteOrder__init_0(var_1, var_0);
    return var_1;
},
jn_ByteOrder_nativeOrder = () => {
    let $buffer;
    if (jn_ByteOrder_nativeOrder0 === null) {
        $buffer = new ArrayBuffer(2);
        (new Int16Array($buffer))[0] = 1;
        jn_ByteOrder_nativeOrder0 = (new Int8Array($buffer))[0] ? jn_ByteOrder_LITTLE_ENDIAN : jn_ByteOrder_BIG_ENDIAN;
    }
    return jn_ByteOrder_nativeOrder0;
},
jn_ByteOrder__clinit_ = () => {
    jn_ByteOrder_BIG_ENDIAN = jn_ByteOrder__init_($rt_s(529));
    jn_ByteOrder_LITTLE_ENDIAN = jn_ByteOrder__init_($rt_s(530));
},
cbgg_TextureData = $rt_classWithoutFields(0);
function cbggg_FileTextureData() {
    let a = this; jl_Object.call(a);
    a.$file0 = null;
    a.$width3 = 0;
    a.$height4 = 0;
    a.$format = null;
    a.$pixmap = null;
    a.$useMipMaps1 = 0;
    a.$isPrepared0 = 0;
}
let cbggg_FileTextureData_copyToPOT = 0,
cbggg_FileTextureData_isPrepared = $this => {
    return $this.$isPrepared0;
},
cbggg_FileTextureData_prepare = $this => {
    let var$1;
    if ($this.$isPrepared0) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$1, $rt_s(531));
        $rt_throw(var$1);
    }
    if ($this.$pixmap === null) {
        var$1 = cbggg_FileTextureData_ensurePot($this, cbgg_Pixmap__init_0($this.$file0));
        $this.$pixmap = var$1;
        $this.$width3 = cbgg_Pixmap_getWidth(var$1);
        $this.$height4 = cbgg_Pixmap_getHeight($this.$pixmap);
        if ($this.$format === null)
            $this.$format = cbgg_Pixmap_getFormat($this.$pixmap);
    }
    $this.$isPrepared0 = 1;
},
cbggg_FileTextureData_ensurePot = ($this, $pixmap) => {
    let $pixmapWidth, $pixmapHeight, $potWidth, $potHeight, $tmp_0;
    a: {
        if (cbg_Gdx_gl20 === null && cbggg_FileTextureData_copyToPOT) {
            $pixmapWidth = cbgg_Pixmap_getWidth($pixmap);
            $pixmapHeight = cbgg_Pixmap_getHeight($pixmap);
            $potWidth = cbgm_MathUtils_nextPowerOfTwo($pixmapWidth);
            $potHeight = cbgm_MathUtils_nextPowerOfTwo($pixmapHeight);
            if ($pixmapWidth != $potWidth)
                break a;
            if ($pixmapHeight != $potHeight)
                break a;
        }
        return $pixmap;
    }
    $tmp_0 = cbgg_Pixmap__init_($potWidth, $potHeight, cbgg_Pixmap_getFormat($pixmap));
    cbgg_Pixmap_drawPixmap($tmp_0, $pixmap, 0, 0, 0, 0, $pixmapWidth, $pixmapHeight);
    cbgg_Pixmap_dispose($pixmap);
    return $tmp_0;
},
cbggg_FileTextureData_consumePixmap = $this => {
    let var$1, $pixmap;
    if (!$this.$isPrepared0) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$1, $rt_s(532));
        $rt_throw(var$1);
    }
    $this.$isPrepared0 = 0;
    $pixmap = $this.$pixmap;
    $this.$pixmap = null;
    return $pixmap;
},
cbggg_FileTextureData_disposePixmap = $this => {
    return 1;
},
cbggg_FileTextureData_getWidth = $this => {
    return $this.$width3;
},
cbggg_FileTextureData_getHeight = $this => {
    return $this.$height4;
},
cbggg_FileTextureData_getFormat = $this => {
    return $this.$format;
},
cbggg_FileTextureData_useMipMaps = $this => {
    return $this.$useMipMaps1;
},
cbggg_FileTextureData_isManaged = $this => {
    return 1;
},
cbggg_FileTextureData_getType = $this => {
    return cbgg_TextureData$TextureDataType_Pixmap;
},
cbggg_FileTextureData_consumeCustomData = ($this, $target) => {
    let var$2;
    var$2 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$2, $rt_s(533));
    $rt_throw(var$2);
},
cbggg_PixmapNativeInterface = $rt_classWithoutFields(0);
function cbgg_Pixmap() {
    let a = this; jl_Object.call(a);
    a.$blending0 = null;
    a.$filter = null;
    a.$color3 = 0;
    a.$nativePixmap = null;
    a.$disposed0 = 0;
}
let cbgg_Pixmap__init_1 = ($this, $file) => {
    let var$2, $path, $bytes, var$5, var$6, var$7, $$je;
    $this.$blending0 = cbgg_Pixmap$Blending_SourceOver;
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    $this.$color3 = 0;
    var$2 = $file;
    $path = var$2.$file;
    if (!cgxgbt_TeaFileHandle_exists(var$2)) {
        $file = new cbgu_GdxRuntimeException;
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(534)), $path);
        jl_Exception__init_($file, jl_AbstractStringBuilder_toString(var$2));
        $rt_throw($file);
    }
    var$2 = cgxgbt_TeaFileHandle_read(var$2);
    a: {
        try {
            try {
                $bytes = cbgu_StreamUtils_copyStreamToByteArray(var$2, cbgf_FileHandle_estimateLength($file));
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    var$5 = $$je;
                } else {
                    throw $$e;
                }
            }
            $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(535)), $file)), var$5));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            $file = $$je;

        }
        cbgu_StreamUtils_closeQuietly(var$2);
        $rt_throw($file);
    }
    var$6 = $bytes.data;
    cbgu_StreamUtils_closeQuietly(var$2);
    $file = new cbggg_Gdx2DPixmap;
    var$7 = var$6.length;
    var$2 = new cbggg_Gdx2DPixmapNative;
    var$2.$nativeData0 = cbggg_Gdx2DPixmapNative_loadNative$js_body$_26(otji_JS_wrap($bytes), 0, var$7);
    cbggg_Gdx2DPixmapNative_updateNativeData(var$2);
    $file.$nativePixmap0 = var$2;
    $this.$nativePixmap = $file;
},
cbgg_Pixmap__init_0 = var_0 => {
    let var_1 = new cbgg_Pixmap();
    cbgg_Pixmap__init_1(var_1, var_0);
    return var_1;
},
cbgg_Pixmap__init_2 = ($this, $width, $height, $format) => {
    let var$4;
    $this.$blending0 = cbgg_Pixmap$Blending_SourceOver;
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    $this.$color3 = 0;
    var$4 = new cbggg_Gdx2DPixmap;
    var$4.$nativePixmap0 = cbggg_Gdx2DPixmapNative__init_0($width, $height, cbgg_Pixmap$Format_toGdx2DPixmapFormat($format));
    $this.$nativePixmap = var$4;
    cbgg_Pixmap_setColor($this, 0.0, 0.0, 0.0, 0.0);
    $format = $this.$nativePixmap;
    $width = $this.$color3;
    $format = $format.$nativePixmap0;
    Gdx.Gdx.prototype.g2d_clear($format.$basePtr, $width);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($format);
},
cbgg_Pixmap__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Pixmap();
    cbgg_Pixmap__init_2(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Pixmap_setColor = ($this, $r, $g, $b, $a) => {
    $this.$color3 = ($r * 255.0 | 0) << 24 | ($g * 255.0 | 0) << 16 | ($b * 255.0 | 0) << 8 | $a * 255.0 | 0;
},
cbgg_Pixmap_drawPixmap = ($this, $pixmap, $x, $y, $srcx, $srcy, $srcWidth, $srcHeight) => {
    let var$8;
    var$8 = $this.$nativePixmap;
    $pixmap = $pixmap.$nativePixmap;
    cbggg_Gdx2DPixmapNative_drawPixmap(var$8.$nativePixmap0, $pixmap.$nativePixmap0.$basePtr, $srcx, $srcy, $x, $y, $srcWidth, $srcHeight);
},
cbgg_Pixmap_fillRectangle = ($this, $x, $y, $width, $height) => {
    let var$5, var$6, var$7;
    var$5 = $this.$nativePixmap;
    var$6 = $this.$color3;
    var$7 = var$5.$nativePixmap0;
    Gdx.Gdx.prototype.g2d_fill_rect(var$7.$basePtr, $x, $y, $width, $height, var$6);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer(var$7);
},
cbgg_Pixmap_getWidth = $this => {
    return $this.$nativePixmap.$nativePixmap0.$width6;
},
cbgg_Pixmap_getHeight = $this => {
    return $this.$nativePixmap.$nativePixmap0.$height5;
},
cbgg_Pixmap_dispose = $this => {
    let var$1;
    if ($this.$disposed0) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$1, $rt_s(536));
        $rt_throw(var$1);
    }
    cbggg_Gdx2DPixmapNative_dispose($this.$nativePixmap.$nativePixmap0);
    $this.$disposed0 = 1;
},
cbgg_Pixmap_getGLFormat = $this => {
    return cbggg_Gdx2DPixmap_getGLInternalFormat($this.$nativePixmap);
},
cbgg_Pixmap_getGLInternalFormat = $this => {
    return cbggg_Gdx2DPixmap_getGLInternalFormat($this.$nativePixmap);
},
cbgg_Pixmap_getGLType = $this => {
    return cbggg_Gdx2DPixmap_toGlType($this.$nativePixmap.$nativePixmap0.$format0);
},
cbgg_Pixmap_getPixels = $this => {
    return $this.$nativePixmap.$nativePixmap0.$buffer5;
},
cbgg_Pixmap_getFormat = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$nativePixmap.$nativePixmap0.$format0;
    if (var$1 == 1)
        var$2 = cbgg_Pixmap$Format_Alpha;
    else if (var$1 == 2)
        var$2 = cbgg_Pixmap$Format_LuminanceAlpha;
    else if (var$1 == 5)
        var$2 = cbgg_Pixmap$Format_RGB565;
    else if (var$1 == 6)
        var$2 = cbgg_Pixmap$Format_RGBA4444;
    else if (var$1 == 3)
        var$2 = cbgg_Pixmap$Format_RGB888;
    else {
        if (var$1 != 4) {
            var$2 = new cbgu_GdxRuntimeException;
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(537)), var$1);
            jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
            $rt_throw(var$2);
        }
        var$2 = cbgg_Pixmap$Format_RGBA8888;
    }
    return var$2;
},
cbgg_Pixmap_setBlending = ($this, $blending) => {
    let var$2, var$3;
    $this.$blending0 = $blending;
    var$2 = $this.$nativePixmap;
    var$3 = $blending !== cbgg_Pixmap$Blending_None ? 1 : 0;
    cbggg_Gdx2DPixmapNative_setBlend(var$2.$nativePixmap0, var$3);
},
cbgf_FileHandle = $rt_classWithoutFields(),
cbgf_FileHandle_estimateLength = $this => {
    let var$1, $length;
    var$1 = $this;
    $length = Long_lo((cgxgbtf_MemoryFileStorage_length(cgxgbt_TeaFiles_getFileDB(var$1.$teaFiles, var$1.$type1), var$1)));
    if (!$length)
        $length = 512;
    return $length;
},
jn_ArrayBufferViewProvider = $rt_classWithoutFields(0);
function jn_ByteBufferJsImpl() {
    let a = this; jn_ByteBuffer.call(a);
    a.$array4 = null;
    a.$arrayOffset = 0;
    a.$data0 = null;
    a.$direct = 0;
    a.$readOnly0 = 0;
}
let jn_ByteBufferJsImpl__init_0 = ($this, $array, $arrayOffset, $data, $direct, $readOnly) => {
    jn_Buffer__init_($this);
    $this.$order0 = jn_ByteOrder_BIG_ENDIAN;
    $this.$array4 = $array;
    $this.$arrayOffset = $arrayOffset;
    $this.$data0 = $data;
    $this.$direct = $direct;
    $this.$readOnly0 = $readOnly;
},
jn_ByteBufferJsImpl__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_ByteBufferJsImpl();
    jn_ByteBufferJsImpl__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_ByteBufferJsImpl_capacityImpl = $this => {
    return $this.$data0.length;
},
jn_ByteBufferJsImpl_get = ($this, $index) => {
    let var$2;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$data0[$index];
    var$2 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$2);
    $rt_throw(var$2);
},
jn_ByteBufferJsImpl_asShortBuffer = $this => {
    let $sz, $slice, var$3, var$4, var$5;
    $sz = jn_Buffer_remaining($this) / 2 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Int16Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz);
        return jn_ShortBufferOverTypedArray__init_(0, $sz, $this.$readOnly0, $slice, null);
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz * 2 | 0);
    var$3 = new jn_ShortBufferOverDataView;
    var$4 = $this.$readOnly0;
    var$5 = $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1;
    jn_ShortBufferImpl__init_(var$3, 0, $sz);
    var$3.$readOnly4 = var$4;
    var$3.$data11 = $slice;
    var$3.$littleEndian2 = var$5;
    return var$3;
},
jn_ByteBufferJsImpl_asIntBuffer = $this => {
    let $sz, $slice, var$3, var$4, var$5;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Int32Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz);
        return jn_IntBufferOverTypedArray__init_(0, $sz, $this.$readOnly0, $slice, null);
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz * 4 | 0);
    var$3 = new jn_IntBufferOverDataView;
    var$4 = $this.$readOnly0;
    var$5 = $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1;
    jn_IntBufferImpl__init_(var$3, 0, $sz);
    var$3.$readOnly3 = var$4;
    var$3.$data9 = $slice;
    var$3.$littleEndian1 = var$5;
    return var$3;
},
jn_ByteBufferJsImpl_asFloatBuffer = $this => {
    let $sz, $slice, var$3, var$4, var$5;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Float32Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz);
        return jn_FloatBufferOverTypedArray__init_(0, $sz, $this.$readOnly0, $slice, null);
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position0 | 0, $sz * 4 | 0);
    var$3 = new jn_FloatBufferOverDataView;
    var$4 = $this.$readOnly0;
    var$5 = $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1;
    jn_FloatBufferImpl__init_(var$3, 0, $sz);
    var$3.$readOnly7 = var$4;
    var$3.$data6 = $slice;
    var$3.$littleEndian = var$5;
    return var$3;
},
jn_ByteBufferJsImpl_getArrayBufferView = $this => {
    return $this.$data0;
},
cbgg_Pixmap$Blending = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Blending_None = null,
cbgg_Pixmap$Blending_SourceOver = null,
cbgg_Pixmap$Blending_$VALUES = null,
cbgg_Pixmap$Blending__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_Pixmap$Blending;
    jl_Enum__init_(var$1, $rt_s(538), 0);
    cbgg_Pixmap$Blending_None = var$1;
    var$1 = new cbgg_Pixmap$Blending;
    jl_Enum__init_(var$1, $rt_s(539), 1);
    cbgg_Pixmap$Blending_SourceOver = var$1;
    var$2 = $rt_createArray(cbgg_Pixmap$Blending, 2);
    var$3 = var$2.data;
    var$3[0] = cbgg_Pixmap$Blending_None;
    var$3[1] = var$1;
    cbgg_Pixmap$Blending_$VALUES = var$2;
},
cbgg_Pixmap$Filter = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Filter_NearestNeighbour = null,
cbgg_Pixmap$Filter_BiLinear = null,
cbgg_Pixmap$Filter_$VALUES = null,
cbgg_Pixmap$Filter__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_Pixmap$Filter;
    jl_Enum__init_(var$1, $rt_s(540), 0);
    cbgg_Pixmap$Filter_NearestNeighbour = var$1;
    var$1 = new cbgg_Pixmap$Filter;
    jl_Enum__init_(var$1, $rt_s(541), 1);
    cbgg_Pixmap$Filter_BiLinear = var$1;
    var$2 = $rt_createArray(cbgg_Pixmap$Filter, 2);
    var$3 = var$2.data;
    var$3[0] = cbgg_Pixmap$Filter_NearestNeighbour;
    var$3[1] = var$1;
    cbgg_Pixmap$Filter_$VALUES = var$2;
};
function cbggg_Gdx2DPixmap() {
    jl_Object.call(this);
    this.$nativePixmap0 = null;
}
let cbggg_Gdx2DPixmap_toGlFormat = $format => {
    let var$2, var$3;
    switch ($format) {
        case 1:
            break;
        case 2:
            return 6410;
        case 3:
        case 5:
            return 6407;
        case 4:
        case 6:
            return 6408;
        default:
            var$2 = new cbgu_GdxRuntimeException;
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(542)), $format);
            jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
            $rt_throw(var$2);
    }
    return 6406;
},
cbggg_Gdx2DPixmap_toGlType = $format => {
    let var$2, var$3;
    switch ($format) {
        case 1:
        case 2:
        case 3:
        case 4:
            break;
        case 5:
            return 33635;
        case 6:
            return 32819;
        default:
            var$2 = new cbgu_GdxRuntimeException;
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_StringBuilder_append1(jl_StringBuilder_append(var$3, $rt_s(542)), $format);
            jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
            $rt_throw(var$2);
    }
    return 5121;
},
cbggg_Gdx2DPixmap_getGLInternalFormat = $this => {
    return cbggg_Gdx2DPixmap_toGlFormat($this.$nativePixmap0.$format0);
},
jn_IntBufferImpl = $rt_classWithoutFields(jn_IntBuffer),
jn_IntBufferImpl__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position0 = $position;
    $this.$limit0 = $limit;
},
jn_IntBufferImpl_get0 = $this => {
    let var$1, var$2;
    var$1 = $this.$position0;
    if (var$1 < $this.$limit0) {
        $this.$position0 = var$1 + 1 | 0;
        return $this.$getElement(var$1);
    }
    var$2 = new jn_BufferUnderflowException;
    jl_Exception__init_0(var$2);
    $rt_throw(var$2);
},
jn_IntBufferImpl_put0 = ($this, $b) => {
    let var$2, var$3;
    if ($this.$readOnly()) {
        var$2 = new jn_ReadOnlyBufferException;
        jl_Exception__init_0(var$2);
        $rt_throw(var$2);
    }
    var$3 = $this.$position0;
    if (var$3 < $this.$limit0) {
        $this.$position0 = var$3 + 1 | 0;
        $this.$putElement(var$3, $b);
        return $this;
    }
    var$2 = new jn_BufferOverflowException;
    jl_Exception__init_0(var$2);
    $rt_throw(var$2);
},
jn_IntBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$getElement($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(543)), $index), $rt_s(522)), var$3), 41);
    jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_IntBufferImpl_put = ($this, $index, $b) => {
    let var$3, var$4;
    if ($this.$readOnly()) {
        var$3 = new jn_ReadOnlyBufferException;
        jl_Exception__init_0(var$3);
        $rt_throw(var$3);
    }
    if ($index >= 0 && $index < $this.$limit0) {
        $this.$putElement($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    $b = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(543)), $index), $rt_s(522)), $b), 41);
    jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$3);
},
jn_IntBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_IntBufferOverTypedArray() {
    let a = this; jn_IntBufferImpl.call(a);
    a.$readOnly6 = 0;
    a.$data8 = null;
    a.$array8 = null;
}
let jn_IntBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_IntBufferImpl__init_($this, $position, $limit);
    $this.$readOnly6 = $readOnly;
    $this.$data8 = $data;
    $this.$array8 = $array;
},
jn_IntBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_IntBufferOverTypedArray();
    jn_IntBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_IntBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly6;
},
jn_IntBufferOverTypedArray_getElement = ($this, $index) => {
    return $this.$data8[$index];
},
jn_IntBufferOverTypedArray_putElement = ($this, $index, $value) => {
    $this.$data8[$index] = $value;
},
jn_IntBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data8.length;
},
jn_IntBufferOverTypedArray_getArrayBufferView = $this => {
    return $this.$data8;
},
otjt_Int32Array = $rt_classWithoutFields(otjt_TypedArray),
jn_FloatBufferImpl = $rt_classWithoutFields(jn_FloatBuffer),
jn_FloatBufferImpl__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position0 = $position;
    $this.$limit0 = $limit;
},
jn_FloatBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit0)
        return $this.$getElement0($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit0;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(543)), $index), $rt_s(522)), var$3), 41);
    jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_FloatBufferImpl_put = ($this, $index, $b) => {
    let var$3, var$4, var$5;
    if ($this.$readOnly()) {
        var$3 = new jn_ReadOnlyBufferException;
        jl_Exception__init_0(var$3);
        $rt_throw(var$3);
    }
    if ($index >= 0 && $index < $this.$limit0) {
        $this.$putElement0($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = $this.$limit0;
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $rt_s(543)), $index), $rt_s(522)), var$4), 41);
    jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$5));
    $rt_throw(var$3);
},
jn_FloatBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_FloatBufferOverTypedArray() {
    let a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly5 = 0;
    a.$data5 = null;
    a.$array9 = null;
}
let jn_FloatBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_FloatBufferImpl__init_($this, $position, $limit);
    $this.$readOnly5 = $readOnly;
    $this.$data5 = $data;
    $this.$array9 = $array;
},
jn_FloatBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_FloatBufferOverTypedArray();
    jn_FloatBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_FloatBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly5;
},
jn_FloatBufferOverTypedArray_getElement = ($this, $index) => {
    return $this.$data5[$index];
},
jn_FloatBufferOverTypedArray_putElement = ($this, $index, $value) => {
    $this.$data5[$index] = $value;
},
jn_FloatBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data5.length;
},
jn_FloatBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let $slice;
    $slice = $src.data.buffer;
    $offset = $offset * 4 | 0;
    $slice = new Float32Array($slice, $offset, $length);
    $this.$data5.set($slice, $index);
},
jn_FloatBufferOverTypedArray_getArrayBufferView = $this => {
    return $this.$data5;
},
otjt_Float32Array = $rt_classWithoutFields(otjt_TypedArray);
function cbggg_Gdx2DPixmapNative() {
    let a = this; jl_Object.call(a);
    a.$basePtr = 0;
    a.$width6 = 0;
    a.$height5 = 0;
    a.$format0 = 0;
    a.$heapStartIndex = 0;
    a.$heapEndIndex = 0;
    a.$nativeData0 = null;
    a.$buffer5 = null;
}
let cbggg_Gdx2DPixmapNative__init_ = ($this, $width, $height, $format) => {
    $this.$nativeData0 = cbggg_Gdx2DPixmapNative_newPixmapNative$js_body$_27($width, $height, $format);
    cbggg_Gdx2DPixmapNative_updateNativeData($this);
},
cbggg_Gdx2DPixmapNative__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_Gdx2DPixmapNative();
    cbggg_Gdx2DPixmapNative__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_Gdx2DPixmapNative_updateNativeData = $this => {
    $this.$basePtr = $this.$nativeData0[0];
    $this.$width6 = $this.$nativeData0[1];
    $this.$height5 = $this.$nativeData0[2];
    $this.$format0 = $this.$nativeData0[3];
    $this.$heapStartIndex = $this.$nativeData0[4];
    $this.$heapEndIndex = $this.$nativeData0[5];
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_copyHeapToBuffer = $this => {
    let $heapData;
    $heapData = cbggg_Gdx2DPixmapNative_getHeapData($this, 0);
    if ($this.$buffer5 === null)
        $this.$buffer5 = jn_ByteBuffer_allocateDirect($heapData.length);
    (jn_JSBufferHelper_toInt8Array(jn_JSBufferHelper_getArrayBufferView($this.$buffer5))).set($heapData);
},
cbggg_Gdx2DPixmapNative_dispose = $this => {
    let var$1;
    Gdx.Gdx.prototype.g2d_free($this.$basePtr);
    var$1 = $this.$buffer5;
    if (var$1 !== null) {
        otcin_Buffers_free(var$1);
        $this.$buffer5 = null;
    }
    $this.$nativeData0 = null;
},
cbggg_Gdx2DPixmapNative_drawPixmap = ($this, $basePtr, $srcX, $srcY, $dstX, $dstY, $width, $height) => {
    let var$8;
    var$8 = $this.$basePtr;
    Gdx.Gdx.prototype.g2d_draw_pixmap($basePtr, var$8, $srcX, $srcY, $width, $height, $dstX, $dstY, $width, $height);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_setBlend = ($this, $blend) => {
    Gdx.Gdx.prototype.g2d_set_blend($this.$basePtr, $blend);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_getHeapData = ($this, $shouldCopy) => {
    let var$2;
    var$2 = $this.$heapStartIndex;
    if (!var$2 && !$this.$heapEndIndex)
        return null;
    return cbggg_Gdx2DPixmapNative_getHeapDataNative$js_body$_25(!!$shouldCopy, var$2, $this.$heapEndIndex);
},
cbggg_Gdx2DPixmapNative_getHeapDataNative$js_body$_25 = (var$1, var$2, var$3) => {
    var heapArray = Gdx.HEAP8.subarray(var$2, var$3);
    if (var$1) {
        var newArray = new Int8Array(heapArray);
        return newArray;
    }
    return heapArray;
},
cbggg_Gdx2DPixmapNative_loadNative$js_body$_26 = (var$1, var$2, var$3) => {
    var cBufferSize = var$1.length * Uint8Array.BYTES_PER_ELEMENT;
    var cBuffer = Gdx._malloc(cBufferSize);
    Gdx.writeArrayToMemory(var$1, cBuffer);
    var pixmap = Gdx.Gdx.prototype.g2d_load(cBuffer, var$2, var$3);
    Gdx._free(cBuffer);
    var pixels = Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = Gdx.getPointer(pixmap);
    var format = pixmap.get_format();
    var width = pixmap.get_width();
    var height = pixmap.get_height();
    var bytesPerPixel = Gdx.Gdx.prototype.g2d_bytes_per_pixel(format);
    var bytesSize = width * height * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var nativeData = new Int32Array(6);
    nativeData[0] = pixmapAddr;
    nativeData[1] = width;
    nativeData[2] = height;
    nativeData[3] = format;
    nativeData[4] = startIndex;
    nativeData[5] = endIndex;
    return nativeData;
},
cbggg_Gdx2DPixmapNative_newPixmapNative$js_body$_27 = (var$1, var$2, var$3) => {
    var pixmap = Gdx.Gdx.prototype.g2d_new(var$1, var$2, var$3);
    var pixels = Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = Gdx.getPointer(pixmap);
    var var$3 = pixmap.get_format();
    var var$1 = pixmap.get_width();
    var var$2 = pixmap.get_height();
    var bytesPerPixel = Gdx.Gdx.prototype.g2d_bytes_per_pixel(var$3);
    var bytesSize = var$1 * var$2 * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var nativeData = new Int32Array(6);
    nativeData[0] = pixmapAddr;
    nativeData[1] = var$1;
    nativeData[2] = var$2;
    nativeData[3] = var$3;
    nativeData[4] = startIndex;
    nativeData[5] = endIndex;
    return nativeData;
};
function cbgg_Texture$TextureFilter() {
    jl_Enum.call(this);
    this.$glEnum0 = 0;
}
let cbgg_Texture$TextureFilter_Nearest = null,
cbgg_Texture$TextureFilter_Linear = null,
cbgg_Texture$TextureFilter_MipMap = null,
cbgg_Texture$TextureFilter_MipMapNearestNearest = null,
cbgg_Texture$TextureFilter_MipMapLinearNearest = null,
cbgg_Texture$TextureFilter_MipMapNearestLinear = null,
cbgg_Texture$TextureFilter_MipMapLinearLinear = null,
cbgg_Texture$TextureFilter_$VALUES = null,
cbgg_Texture$TextureFilter__init_0 = ($this, var$1, var$2, var$3) => {
    jl_Enum__init_($this, var$1, var$2);
    $this.$glEnum0 = var$3;
},
cbgg_Texture$TextureFilter__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Texture$TextureFilter();
    cbgg_Texture$TextureFilter__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Texture$TextureFilter__clinit_ = () => {
    let var$1, var$2, var$3;
    cbgg_Texture$TextureFilter_Nearest = cbgg_Texture$TextureFilter__init_($rt_s(544), 0, 9728);
    cbgg_Texture$TextureFilter_Linear = cbgg_Texture$TextureFilter__init_($rt_s(545), 1, 9729);
    cbgg_Texture$TextureFilter_MipMap = cbgg_Texture$TextureFilter__init_($rt_s(546), 2, 9987);
    cbgg_Texture$TextureFilter_MipMapNearestNearest = cbgg_Texture$TextureFilter__init_($rt_s(547), 3, 9984);
    cbgg_Texture$TextureFilter_MipMapLinearNearest = cbgg_Texture$TextureFilter__init_($rt_s(548), 4, 9985);
    cbgg_Texture$TextureFilter_MipMapNearestLinear = cbgg_Texture$TextureFilter__init_($rt_s(549), 5, 9986);
    var$1 = cbgg_Texture$TextureFilter__init_($rt_s(550), 6, 9987);
    cbgg_Texture$TextureFilter_MipMapLinearLinear = var$1;
    var$2 = $rt_createArray(cbgg_Texture$TextureFilter, 7);
    var$3 = var$2.data;
    var$3[0] = cbgg_Texture$TextureFilter_Nearest;
    var$3[1] = cbgg_Texture$TextureFilter_Linear;
    var$3[2] = cbgg_Texture$TextureFilter_MipMap;
    var$3[3] = cbgg_Texture$TextureFilter_MipMapNearestNearest;
    var$3[4] = cbgg_Texture$TextureFilter_MipMapLinearNearest;
    var$3[5] = cbgg_Texture$TextureFilter_MipMapNearestLinear;
    var$3[6] = var$1;
    cbgg_Texture$TextureFilter_$VALUES = var$2;
};
function cbgg_Texture$TextureWrap() {
    jl_Enum.call(this);
    this.$glEnum = 0;
}
let cbgg_Texture$TextureWrap_MirroredRepeat = null,
cbgg_Texture$TextureWrap_ClampToEdge = null,
cbgg_Texture$TextureWrap_Repeat = null,
cbgg_Texture$TextureWrap_$VALUES = null,
cbgg_Texture$TextureWrap__init_0 = ($this, var$1, var$2, $glEnum) => {
    jl_Enum__init_($this, var$1, var$2);
    $this.$glEnum = $glEnum;
},
cbgg_Texture$TextureWrap__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Texture$TextureWrap();
    cbgg_Texture$TextureWrap__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Texture$TextureWrap__clinit_ = () => {
    let var$1, var$2, var$3;
    cbgg_Texture$TextureWrap_MirroredRepeat = cbgg_Texture$TextureWrap__init_($rt_s(551), 0, 33648);
    cbgg_Texture$TextureWrap_ClampToEdge = cbgg_Texture$TextureWrap__init_($rt_s(552), 1, 33071);
    var$1 = cbgg_Texture$TextureWrap__init_($rt_s(553), 2, 10497);
    cbgg_Texture$TextureWrap_Repeat = var$1;
    var$2 = $rt_createArray(cbgg_Texture$TextureWrap, 3);
    var$3 = var$2.data;
    var$3[0] = cbgg_Texture$TextureWrap_MirroredRepeat;
    var$3[1] = cbgg_Texture$TextureWrap_ClampToEdge;
    var$3[2] = var$1;
    cbgg_Texture$TextureWrap_$VALUES = var$2;
},
cbgg_Pixmap$Format = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Format_Alpha = null,
cbgg_Pixmap$Format_Intensity = null,
cbgg_Pixmap$Format_LuminanceAlpha = null,
cbgg_Pixmap$Format_RGB565 = null,
cbgg_Pixmap$Format_RGBA4444 = null,
cbgg_Pixmap$Format_RGB888 = null,
cbgg_Pixmap$Format_RGBA8888 = null,
cbgg_Pixmap$Format_$VALUES = null,
cbgg_Pixmap$Format_toGdx2DPixmapFormat = $format => {
    let var$2, var$3;
    if ($format === cbgg_Pixmap$Format_Alpha)
        return 1;
    if ($format === cbgg_Pixmap$Format_Intensity)
        return 1;
    if ($format === cbgg_Pixmap$Format_LuminanceAlpha)
        return 2;
    if ($format === cbgg_Pixmap$Format_RGB565)
        return 5;
    if ($format === cbgg_Pixmap$Format_RGBA4444)
        return 6;
    if ($format === cbgg_Pixmap$Format_RGB888)
        return 3;
    if ($format === cbgg_Pixmap$Format_RGBA8888)
        return 4;
    var$2 = new cbgu_GdxRuntimeException;
    $format = jl_String_valueOf($format);
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(554)), $format);
    jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(var$3));
    $rt_throw(var$2);
},
cbgg_Pixmap$Format__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(177), 0);
    cbgg_Pixmap$Format_Alpha = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(555), 1);
    cbgg_Pixmap$Format_Intensity = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(556), 2);
    cbgg_Pixmap$Format_LuminanceAlpha = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(557), 3);
    cbgg_Pixmap$Format_RGB565 = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(558), 4);
    cbgg_Pixmap$Format_RGBA4444 = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(559), 5);
    cbgg_Pixmap$Format_RGB888 = var$1;
    var$1 = new cbgg_Pixmap$Format;
    jl_Enum__init_(var$1, $rt_s(560), 6);
    cbgg_Pixmap$Format_RGBA8888 = var$1;
    var$2 = $rt_createArray(cbgg_Pixmap$Format, 7);
    var$3 = var$2.data;
    var$3[0] = cbgg_Pixmap$Format_Alpha;
    var$3[1] = cbgg_Pixmap$Format_Intensity;
    var$3[2] = cbgg_Pixmap$Format_LuminanceAlpha;
    var$3[3] = cbgg_Pixmap$Format_RGB565;
    var$3[4] = cbgg_Pixmap$Format_RGBA4444;
    var$3[5] = cbgg_Pixmap$Format_RGB888;
    var$3[6] = var$1;
    cbgg_Pixmap$Format_$VALUES = var$2;
},
jn_ShortBufferImpl = $rt_classWithoutFields(jn_ShortBuffer),
jn_ShortBufferImpl__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position0 = $position;
    $this.$limit0 = $limit;
},
jn_ShortBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function jn_ShortBufferOverTypedArray() {
    let a = this; jn_ShortBufferImpl.call(a);
    a.$readOnly2 = 0;
    a.$data12 = null;
    a.$array10 = null;
}
let jn_ShortBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_ShortBufferImpl__init_($this, $position, $limit);
    $this.$readOnly2 = $readOnly;
    $this.$data12 = $data;
    $this.$array10 = $array;
},
jn_ShortBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_ShortBufferOverTypedArray();
    jn_ShortBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_ShortBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly2;
},
jn_ShortBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data12.length;
},
jn_ShortBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let $slice;
    $slice = $src.data.buffer;
    $offset = $offset * 2 | 0;
    $slice = new Int16Array($slice, $offset, $length);
    $this.$data12.set($slice, $index);
},
jn_ShortBufferOverTypedArray_getArrayBufferView = $this => {
    return $this.$data12;
},
otjt_Int16Array = $rt_classWithoutFields(otjt_TypedArray),
jn_JSBufferHelper = $rt_classWithoutFields(),
jn_JSBufferHelper_getArrayBufferView = $buffer => {
    let $provider;
    if ($rt_isInstance($buffer, jn_ArrayBufferViewProvider))
        return $buffer.$getArrayBufferView0();
    $provider = new jl_IllegalArgumentException;
    jl_Exception__init_($provider, $rt_s(561));
    $rt_throw($provider);
},
jn_JSBufferHelper_toInt8Array = $view => {
    return new Int8Array($view.buffer, $view.byteOffset, $view.byteLength);
};
function jn_IntBufferOverDataView() {
    let a = this; jn_IntBufferImpl.call(a);
    a.$readOnly3 = 0;
    a.$data9 = null;
    a.$littleEndian1 = 0;
}
let jn_IntBufferOverDataView_readOnly = $this => {
    return $this.$readOnly3;
},
jn_IntBufferOverDataView_getElement = ($this, $index) => {
    return $this.$data9.getInt32($index * 4 | 0, !!$this.$littleEndian1);
},
jn_IntBufferOverDataView_putElement = ($this, $index, $value) => {
    let var$3, var$4;
    var$3 = $this.$data9;
    $index = $index * 4 | 0;
    var$4 = $this.$littleEndian1;
    var$3.setInt32($index, $value, !!var$4);
},
jn_IntBufferOverDataView_capacityImpl = $this => {
    return $this.$data9.byteLength / 4 | 0;
},
jn_IntBufferOverDataView_getArrayBufferView = $this => {
    return $this.$data9;
};
function jn_FloatBufferOverDataView() {
    let a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly7 = 0;
    a.$data6 = null;
    a.$littleEndian = 0;
}
let jn_FloatBufferOverDataView_readOnly = $this => {
    return $this.$readOnly7;
},
jn_FloatBufferOverDataView_getElement = ($this, $index) => {
    return $this.$data6.getFloat32($index * 4 | 0, !!$this.$littleEndian);
},
jn_FloatBufferOverDataView_putElement = ($this, $index, $value) => {
    let var$3, var$4;
    var$3 = $this.$data6;
    $index = $index * 4 | 0;
    var$4 = $this.$littleEndian;
    var$3.setFloat32($index, $value, !!var$4);
},
jn_FloatBufferOverDataView_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, var$7, var$8, var$9;
    $index = $index * 4 | 0;
    while (true) {
        var$5 = $length + (-1) | 0;
        if ($length <= 0)
            break;
        var$6 = $src.data;
        var$7 = $this.$data6;
        var$8 = $offset + 1 | 0;
        var$9 = var$6[$offset];
        $offset = $this.$littleEndian;
        var$7.setFloat32($index, var$9, !!$offset);
        $index = $index + 4 | 0;
        $length = var$5;
        $offset = var$8;
    }
},
jn_FloatBufferOverDataView_capacityImpl = $this => {
    return $this.$data6.byteLength / 4 | 0;
},
jn_FloatBufferOverDataView_getArrayBufferView = $this => {
    return $this.$data6;
};
function jn_ShortBufferOverDataView() {
    let a = this; jn_ShortBufferImpl.call(a);
    a.$readOnly4 = 0;
    a.$data11 = null;
    a.$littleEndian2 = 0;
}
let jn_ShortBufferOverDataView_readOnly = $this => {
    return $this.$readOnly4;
},
jn_ShortBufferOverDataView_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, var$7, var$8;
    $index = $index * 2 | 0;
    while (true) {
        var$5 = $length + (-1) | 0;
        if ($length <= 0)
            break;
        var$6 = $src.data;
        var$7 = $this.$data11;
        var$8 = $offset + 1 | 0;
        $offset = var$6[$offset];
        $length = $this.$littleEndian2;
        var$7.setInt16($index, $offset, !!$length);
        $index = $index + 2 | 0;
        $length = var$5;
        $offset = var$8;
    }
},
jn_ShortBufferOverDataView_capacityImpl = $this => {
    return $this.$data11.byteLength / 2 | 0;
},
jn_ShortBufferOverDataView_getArrayBufferView = $this => {
    return $this.$data11;
},
jl_UnsupportedOperationException = $rt_classWithoutFields(jl_RuntimeException),
jn_ReadOnlyBufferException = $rt_classWithoutFields(jl_UnsupportedOperationException),
jn_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException),
cbgu_ScreenUtils = $rt_classWithoutFields();
function caju_JoltInstance() {
    let a = this; jl_Object.call(a);
    a.$physicsSystem = null;
    a.$factory = null;
    a.$mObjectVsBroadPhaseLayerFilter = null;
    a.$BP_LAYER_NON_MOVING = null;
    a.$BP_LAYER_MOVING = null;
    a.$mBroadPhaseLayerInterface = null;
    a.$mObjectLayerPairFilter = null;
    a.$mTempAllocator = null;
    a.$mJobSystem = null;
}
let caju_JoltInstance_getPhysicsSystem = $this => {
    return $this.$physicsSystem;
};
function cbgg_Camera() {
    let a = this; jl_Object.call(a);
    a.$position3 = null;
    a.$direction0 = null;
    a.$up = null;
    a.$projection = null;
    a.$view = null;
    a.$combined = null;
    a.$invProjectionView = null;
    a.$near = 0.0;
    a.$far = 0.0;
    a.$viewportWidth = 0.0;
    a.$viewportHeight = 0.0;
    a.$frustum = null;
    a.$tmpVec = null;
    a.$ray = null;
}
let cbgg_Camera_lookAt = ($this, $x, $y, $z) => {
    let $dot;
    cbgm_Vector3_nor(cbgm_Vector3_sub(cbgm_Vector3_set($this.$tmpVec, $x, $y, $z), $this.$position3));
    if (!cbgm_Vector3_isZero($this.$tmpVec)) {
        $dot = cbgm_Vector3_dot($this.$tmpVec, $this.$up);
        if (jl_Math_abs($dot - 1.0) < 9.999999717180685E-10)
            cbgm_Vector3_scl(cbgm_Vector3_set0($this.$up, $this.$direction0), (-1.0));
        else if (jl_Math_abs($dot + 1.0) < 9.999999717180685E-10)
            cbgm_Vector3_set0($this.$up, $this.$direction0);
        cbgm_Vector3_set0($this.$direction0, $this.$tmpVec);
        cbgm_Vector3_crs(cbgm_Vector3_set0($this.$tmpVec, $this.$direction0), $this.$up);
        cbgm_Vector3_nor(cbgm_Vector3_crs(cbgm_Vector3_set0($this.$up, $this.$tmpVec), $this.$direction0));
    }
};
function cbgg_PerspectiveCamera() {
    let a = this; cbgg_Camera.call(a);
    a.$fieldOfView = 0.0;
    a.$tmp1 = null;
}
let cbgg_PerspectiveCamera__init_0 = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    $this.$position3 = cbgm_Vector3__init_();
    $this.$direction0 = cbgm_Vector3__init_0(0.0, 0.0, (-1.0));
    $this.$up = cbgm_Vector3__init_0(0.0, 1.0, 0.0);
    $this.$projection = cbgm_Matrix4__init_();
    $this.$view = cbgm_Matrix4__init_();
    $this.$combined = cbgm_Matrix4__init_();
    $this.$invProjectionView = cbgm_Matrix4__init_();
    $this.$near = 1.0;
    $this.$far = 100.0;
    $this.$viewportWidth = 0.0;
    $this.$viewportHeight = 0.0;
    var$1 = new cbgm_Frustum;
    cbgm_Frustum_$callClinit();
    var$1.$planes = $rt_createArray(cbgm_Plane, 6);
    var$2 = $rt_createArray(cbgm_Vector3, 8);
    var$3 = var$2.data;
    var$3[0] = cbgm_Vector3__init_();
    var$3[1] = cbgm_Vector3__init_();
    var$3[2] = cbgm_Vector3__init_();
    var$3[3] = cbgm_Vector3__init_();
    var$3[4] = cbgm_Vector3__init_();
    var$3[5] = cbgm_Vector3__init_();
    var$3[6] = cbgm_Vector3__init_();
    var$3[7] = cbgm_Vector3__init_();
    var$1.$planePoints = var$2;
    var$1.$planePointsArray = $rt_createFloatArray(24);
    var$4 = 0;
    while (var$4 < 6) {
        var$2 = var$1.$planes.data;
        var$5 = new cbgm_Plane;
        var$6 = cbgm_Vector3__init_();
        var$7 = cbgm_Vector3__init_();
        var$5.$normal = var$7;
        var$5.$d = 0.0;
        cbgm_Vector3_nor(cbgm_Vector3_set0(var$7, var$6));
        var$5.$d = 0.0;
        var$2[var$4] = var$5;
        var$4 = var$4 + 1 | 0;
    }
    $this.$frustum = var$1;
    $this.$tmpVec = cbgm_Vector3__init_();
    var$1 = new cbgmc_Ray;
    var$5 = cbgm_Vector3__init_();
    var$6 = cbgm_Vector3__init_();
    cbgmc_Ray_$callClinit();
    var$1.$origin = cbgm_Vector3__init_();
    var$1.$direction3 = cbgm_Vector3__init_();
    cbgm_Vector3_set0(var$1.$origin, var$5);
    cbgm_Vector3_nor(cbgm_Vector3_set0(var$1.$direction3, var$6));
    $this.$ray = var$1;
    $this.$fieldOfView = 67.0;
    $this.$tmp1 = cbgm_Vector3__init_();
},
cbgg_PerspectiveCamera__init_ = () => {
    let var_0 = new cbgg_PerspectiveCamera();
    cbgg_PerspectiveCamera__init_0(var_0);
    return var_0;
},
cbgg_PerspectiveCamera_update = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = $this.$viewportWidth / $this.$viewportHeight;
    var$2 = $this.$projection;
    var$3 = jl_Math_abs($this.$near);
    var$4 = jl_Math_abs($this.$far);
    var$5 = $this.$fieldOfView;
    cbgm_Matrix4_idt(var$2);
    var$5 = 1.0 / jl_Math_tan(var$5 * 0.017453292519943295 / 2.0);
    var$6 = var$4 + var$3;
    var$7 = var$3 - var$4;
    var$6 = var$6 / var$7;
    var$3 = 2.0 * var$4 * var$3 / var$7;
    var$8 = var$2.$val.data;
    var$8[0] = var$5 / var$1;
    var$8[1] = 0.0;
    var$8[2] = 0.0;
    var$8[3] = 0.0;
    var$8[4] = 0.0;
    var$8[5] = var$5;
    var$8[6] = 0.0;
    var$8[7] = 0.0;
    var$8[8] = 0.0;
    var$8[9] = 0.0;
    var$8[10] = var$6;
    var$8[11] = (-1.0);
    var$8[12] = 0.0;
    var$8[13] = 0.0;
    var$8[14] = var$3;
    var$8[15] = 0.0;
    var$2 = $this.$view;
    var$9 = $this.$position3;
    var$10 = cbgm_Vector3_add(cbgm_Vector3_set0($this.$tmp1, var$9), $this.$direction0);
    var$11 = $this.$up;
    cbgm_Vector3_sub(cbgm_Vector3_set0(cbgm_Matrix4_tmpVec, var$10), var$9);
    cbgm_Matrix4_setToLookAt(var$2, cbgm_Matrix4_tmpVec, var$11);
    var$11 = cbgm_Matrix4_tmpMat;
    var$1 =  -var$9.$x;
    var$3 =  -var$9.$y;
    var$4 =  -var$9.$z;
    cbgm_Matrix4_idt(var$11);
    var$8 = var$11.$val.data;
    var$8[12] = var$1;
    var$8[13] = var$3;
    var$8[14] = var$4;
    cbgm_Matrix4_mul(var$2, var$11);
    cbgm_Matrix4_set($this.$combined, $this.$projection);
    cbgm_Matrix4_mul0($this.$combined.$val, $this.$view.$val);
    cbgm_Matrix4_set($this.$invProjectionView, $this.$combined);
    cbgm_Matrix4_matrix4_inv($this.$invProjectionView.$val);
    cbgm_Frustum_update($this.$frustum, $this.$invProjectionView);
};
function cbguv_Viewport() {
    let a = this; jl_Object.call(a);
    a.$camera5 = null;
    a.$worldWidth = 0.0;
    a.$worldHeight = 0.0;
    a.$screenX = 0;
    a.$screenY = 0;
    a.$screenWidth = 0;
    a.$screenHeight = 0;
    a.$tmp2 = null;
}
function cbguv_ScreenViewport() {
    cbguv_Viewport.call(this);
    this.$unitsPerPixel = 0.0;
}
let cbguv_ScreenViewport__init_0 = ($this, $camera) => {
    $this.$tmp2 = cbgm_Vector3__init_();
    $this.$unitsPerPixel = 1.0;
    $this.$camera5 = $camera;
},
cbguv_ScreenViewport__init_ = var_0 => {
    let var_1 = new cbguv_ScreenViewport();
    cbguv_ScreenViewport__init_0(var_1, var_0);
    return var_1;
};
function ji_IDLBase() {
    jl_Object.call(this);
    this.$nativeData = null;
}
let ji_IDLBase_ENABLE_LOGGING = 0,
ji_IDLBase__init_ = $this => {
    let var$1;
    var$1 = new ji_IDLNativeData;
    var$1.$idlBase = $this;
    $this.$nativeData = var$1;
},
ji_IDLBase_getNativeData = $this => {
    return $this.$nativeData;
},
ji_IDLBase_deleteNative = $this => {
    return;
},
ji_IDLBase_onNativeAddressChanged = $this => {
    return;
},
ji_IDLBase_onNativeDispose = $this => {
    $this.$nativeData = null;
},
ji_IDLBase__clinit_ = () => {
    ji_IDLBase_ENABLE_LOGGING = 1;
},
j_Jolt = $rt_classWithoutFields(ji_IDLBase),
j_Jolt_JobSystemThreadPool_TEMP_STATIC_GEN_1 = null,
j_Jolt_T_01 = null,
j_Jolt_T_02 = null,
j_Jolt_T_03 = null,
j_Jolt_deleteNative = $this => {
    j_Jolt_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
j_Jolt_New_PhysicsSystem = () => {
    let $pointer, $PhysicsSystem_NEW;
    $pointer = j_Jolt_internal_native_New_PhysicsSystem$js_body$_6();
    if (!$pointer)
        return null;
    $PhysicsSystem_NEW = new jp_PhysicsSystem;
    ji_IDLBase__init_($PhysicsSystem_NEW);
    ji_IDLNativeData_reset($PhysicsSystem_NEW.$nativeData, Long_fromInt($pointer), 1);
    return $PhysicsSystem_NEW;
},
j_Jolt_New_Vec3 = () => {
    let $pointer, $Vec3_NEW;
    $pointer = j_Jolt_internal_native_New_Vec3_0$js_body$_32();
    if (!$pointer)
        return null;
    $Vec3_NEW = new jm_Vec3;
    ji_IDLBase__init_($Vec3_NEW);
    ji_IDLNativeData_reset($Vec3_NEW.$nativeData, Long_fromInt($pointer), 1);
    return $Vec3_NEW;
},
j_Jolt_RegisterTypes = () => {
    jolt.Jolt.prototype.RegisterTypes();
},
j_Jolt__clinit_ = () => {
    let var$1;
    var$1 = new j_Jolt;
    ji_IDLBase__init_(var$1);
    j_Jolt_T_01 = var$1;
    var$1 = new j_Jolt;
    ji_IDLBase__init_(var$1);
    j_Jolt_T_02 = var$1;
    var$1 = new j_Jolt;
    ji_IDLBase__init_(var$1);
    j_Jolt_T_03 = var$1;
},
j_Jolt_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Jolt);
    jolt.destroy(jsObj);
},
j_Jolt_internal_native_New_PhysicsSystem$js_body$_6 = () => {
    var returnedJSObj = jolt.Jolt.prototype.New_PhysicsSystem();
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
j_Jolt_internal_native_New_Factory$js_body$_8 = () => {
    var returnedJSObj = jolt.Jolt.prototype.New_Factory();
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
j_Jolt_internal_native_New_TempAllocatorImpl$js_body$_10 = var$1 => {
    var returnedJSObj = jolt.Jolt.prototype.New_TempAllocatorImpl(var$1);
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
j_Jolt_internal_native_New_JobSystemThreadPool$js_body$_16 = var$1 => {
    var returnedJSObj = jolt.Jolt.prototype.New_JobSystemThreadPool(var$1);
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
j_Jolt_internal_native_New_BodyCreationSettings_2$js_body$_24 = (var$1, var$2, var$3, var$4, var$5) => {
    var returnedJSObj = jolt.Jolt.prototype.New_BodyCreationSettings_2(var$1, var$2, var$3, var$4, var$5);
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
j_Jolt_internal_native_New_Vec3_0$js_body$_32 = () => {
    var returnedJSObj = jolt.Jolt.prototype.New_Vec3_0();
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
jm_Quat = $rt_classWithoutFields(ji_IDLBase),
jm_Quat_T_01 = null,
jm_Quat_T_02 = null,
jm_Quat_T_03 = null,
jm_Quat__init_0 = $this => {
    let var$1;
    ji_IDLBase__init_($this);
    var$1 = jm_Quat_internal_native_create$js_body$_1();
    ji_IDLNativeData_reset($this.$nativeData, Long_fromInt(var$1), 1);
},
jm_Quat__init_ = () => {
    let var_0 = new jm_Quat();
    jm_Quat__init_0(var_0);
    return var_0;
},
jm_Quat_deleteNative = $this => {
    jm_Quat_internal_native_deleteNative$js_body$_8(Long_lo($this.$nativeData.$cPointer));
},
jm_Quat__clinit_ = () => {
    let var$1;
    var$1 = new jm_Quat;
    ji_IDLBase__init_(var$1);
    jm_Quat_T_01 = var$1;
    var$1 = new jm_Quat;
    ji_IDLBase__init_(var$1);
    jm_Quat_T_02 = var$1;
    var$1 = new jm_Quat;
    ji_IDLBase__init_(var$1);
    jm_Quat_T_03 = var$1;
},
jm_Quat_internal_native_create$js_body$_1 = () => {
    var jsObj = new jolt.Quat();
    return jolt.getPointer(jsObj);
},
jm_Quat_internal_native_deleteNative$js_body$_8 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Quat);
    jolt.destroy(jsObj);
},
jm_Quat_internal_native_Set$js_body$_64 = (var$1, var$2, var$3, var$4, var$5) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Quat);
    jsObj.Set(var$2, var$3, var$4, var$5);
};
function nmgss_SceneManager() {
    let a = this; jl_Object.call(a);
    a.$renderableProviders = null;
    a.$batch = null;
    a.$depthBatch = null;
    a.$skyBox = null;
    a.$transmissionSource = null;
    a.$mirrorSource = null;
    a.$cascadeShadowMap0 = null;
    a.$environment0 = null;
    a.$computedEnvironement = null;
    a.$camera0 = null;
    a.$renderableSorter = null;
    a.$pointLights1 = null;
    a.$spotLights0 = null;
}
let nmgss_SceneManager__init_ = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = nmgss_PBRShaderProvider_createDefaultConfig();
    var$1.$numBones = 24;
    var$2 = new nmgss_PBRShaderProvider;
    cbgggu_DefaultShaderProvider__init_(var$2, var$1);
    var$1 = var$2.$config1;
    if (var$1.$vertexShader === null)
        var$1.$vertexShader = nmgss_PBRShaderProvider_getDefaultVertexShader();
    var$1 = var$2.$config1;
    if (var$1.$fragmentShader === null)
        var$1.$fragmentShader = nmgss_PBRShaderProvider_getDefaultFragmentShader();
    var$3 = cbgggs_DepthShader$Config__init_0();
    var$3.$vertexShader = nmgss_PBRDepthShaderProvider_getDefaultVertexShader();
    var$3.$fragmentShader = nmgss_PBRDepthShaderProvider_getDefaultFragmentShader();
    var$3.$numBones = 24;
    var$4 = new nmgss_PBRDepthShaderProvider;
    cbgggu_BaseShaderProvider__init_(var$4);
    var$4.$config2 = var$3;
    if (var$3.$vertexShader === null)
        var$3.$vertexShader = nmgss_PBRDepthShaderProvider_getDefaultVertexShader();
    if (var$3.$fragmentShader === null)
        var$3.$fragmentShader = nmgss_PBRDepthShaderProvider_getDefaultFragmentShader();
    var$1 = new nmgss_SceneRenderableSorter;
    var$1.$tmpV10 = cbgm_Vector3__init_();
    var$1.$tmpV20 = cbgm_Vector3__init_();
    $this.$renderableProviders = cbgu_Array__init_();
    var$3 = new cbggg_Environment;
    cbggg_Attributes__init_(var$3);
    $this.$environment0 = var$3;
    var$3 = new nmgsu_EnvironmentCache;
    cbggg_Attributes__init_(var$3);
    $this.$computedEnvironement = var$3;
    $this.$pointLights1 = cbggga_PointLightsAttribute__init_0();
    $this.$spotLights0 = cbggga_SpotLightsAttribute__init_0();
    $this.$renderableSorter = var$1;
    $this.$batch = cbggg_ModelBatch__init_(null, var$2, var$1);
    $this.$depthBatch = cbggg_ModelBatch__init_(null, var$4, null);
    var$3 = $this.$environment0;
    var$1 = new cbggga_ColorAttribute;
    cbggga_ColorAttribute_$callClinit();
    cbggga_ColorAttribute__init_1(var$1, cbggga_ColorAttribute_AmbientLight, 1.0, 1.0, 1.0, 1.0);
    cbggg_Attributes_set(var$3, var$1);
},
nmgss_SceneManager__init_0 = () => {
    let var_0 = new nmgss_SceneManager();
    nmgss_SceneManager__init_(var_0);
    return var_0;
},
nmgss_SceneManager_render = $this => {
    let var$1, var$2, var$3;
    if ($this.$camera0 === null)
        return;
    nmgss_PBRCommon_$callClinit();
    if (nmgss_PBRCommon_seamlessCubemapsShouldBeEnabled === null) {
        if (cbg_Application$ApplicationType_WebGL !== cbg_Application$ApplicationType_Desktop) {
            var$1 = cbg_Gdx_gl30 === null ? 0 : 1;
            nmgss_PBRCommon_seamlessCubemapsShouldBeEnabled = jl_Boolean_valueOf(0);
        } else {
            var$1 = !cbggg_GLVersion_isVersionEqualToOrHigher(cbg_Gdx_graphics.$glVersion, 3, 2) && !cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(562)) ? 0 : 1;
            nmgss_PBRCommon_seamlessCubemapsShouldBeEnabled = jl_Boolean_valueOf(var$1);
        }
        if (!var$1)
            cgxgbt_TeaApplication_error(cbg_Gdx_app, $rt_s(563), $rt_s(564));
    }
    if (nmgss_PBRCommon_seamlessCubemapsShouldBeEnabled.$value5)
        cbg_Gdx_gl.$glEnable(34895);
    a: {
        b: {
            var$2 = $this.$environment0;
            cbggga_DirectionalLightsAttribute_$callClinit();
            var$2 = cbggg_Attributes_get(var$2, cbggga_DirectionalLightsAttribute_Type);
            if (var$2 !== null) {
                var$3 = cbgu_Array_iterator(var$2.$lights1);
                while (true) {
                    if (!cbgu_Array$ArrayIterator_hasNext(var$3))
                        break b;
                    var$2 = cbgu_Array$ArrayIterator_next(var$3);
                    if (var$2 instanceof nmgsl_DirectionalShadowLight) {
                        var$2 = var$2;
                        break a;
                    }
                }
            }
        }
        var$2 = null;
    }
    if (var$2 === null)
        $this.$environment0.$shadowMap = null;
    else {
        var$2.$begin();
        nmgss_SceneManager_renderDepth($this, var$2.$getCamera());
        var$2.$end1();
        $this.$environment0.$shadowMap = var$2;
    }
    $this.$computedEnvironement.$shadowMap = $this.$environment0.$shadowMap;
    var$2 = $this.$cascadeShadowMap0;
    if (var$2 !== null) {
        var$2 = var$2.$lights2.$iterator();
        while (var$2.$hasNext()) {
            var$3 = var$2.$next();
            var$3.$begin();
            nmgss_SceneManager_renderDepth($this, var$3.$getCamera());
            var$3.$end1();
        }
        cbggg_Attributes_set($this.$computedEnvironement, $this.$cascadeShadowMap0.$attribute0);
    }
    var$2 = $this.$mirrorSource;
    if (var$2 !== null) {
        var$2.$begin0($this.$camera0, $this.$computedEnvironement, $this.$skyBox);
        nmgss_SceneManager_renderColors($this);
        $this.$mirrorSource.$end1();
    }
    var$2 = $this.$transmissionSource;
    if (var$2 !== null) {
        var$2.$begin1($this.$camera0);
        $this.$transmissionSource.$render2($this.$renderableProviders, $this.$environment0);
        var$2 = $this.$skyBox;
        if (var$2 !== null)
            $this.$transmissionSource.$render3(var$2);
        $this.$transmissionSource.$end1();
        cbggg_Attributes_set($this.$computedEnvironement, $this.$transmissionSource.$attribute);
    }
    nmgss_SceneManager_renderColors($this);
},
nmgss_SceneManager_renderDepth = ($this, $camera) => {
    let var$2;
    cbggg_ModelBatch_begin($this.$depthBatch, $camera);
    $camera = $this.$depthBatch;
    var$2 = cbgu_Array_iterator($this.$renderableProviders);
    while (cbgu_Array$ArrayIterator_hasNext(var$2)) {
        cbggg_ModelBatch_render($camera, cbgu_Array$ArrayIterator_next(var$2));
    }
    cbggg_ModelBatch_end($this.$depthBatch);
},
nmgss_SceneManager_renderColors = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7;
    cbggg_ModelBatch_begin($this.$batch, $this.$camera0);
    var$1 = $this.$batch;
    var$2 = $this.$renderableProviders;
    var$3 = $this.$computedEnvironement;
    var$4 = cbgu_Array_iterator(var$2);
    while (cbgu_Array$ArrayIterator_hasNext(var$4)) {
        var$2 = cbgu_Array$ArrayIterator_next(var$4);
        var$5 = var$1.$renderables;
        var$6 = var$5.$size0;
        var$7 = var$1.$renderablesPool;
        cbggg_ModelInstance_getRenderables0(var$2, var$5, var$7);
        while (true) {
            var$2 = var$1.$renderables;
            if (var$6 >= var$2.$size0)
                break;
            var$2 = cbgu_Array_get(var$2, var$6);
            var$2.$environment = var$3;
            var$2.$shader = cbgggu_BaseShaderProvider_getShader(var$1.$shaderProvider, var$2);
            var$6 = var$6 + 1 | 0;
        }
    }
    var$1 = $this.$skyBox;
    if (var$1 !== null)
        cbggg_ModelBatch_render($this.$batch, var$1);
    cbggg_ModelBatch_end($this.$batch);
},
nmgss_SceneManager_setSkyBox = ($this, $skyBox) => {
    $this.$skyBox = $skyBox;
},
nmgss_SceneManager_setAmbientLight = ($this, $lum) => {
    let var$2;
    var$2 = $this.$environment0;
    cbggga_ColorAttribute_$callClinit();
    cbgg_Color_set((cbggg_Attributes_get(var$2, cbggga_ColorAttribute_AmbientLight)).$color2, $lum, $lum, $lum, 1.0);
};
function cbggge_BaseLight() {
    jl_Object.call(this);
    this.$color1 = null;
}
let cbggge_BaseLight__init_ = $this => {
    $this.$color1 = cbgg_Color__init_0(0.0, 0.0, 0.0, 1.0);
};
function cbggge_DirectionalLight() {
    cbggge_BaseLight.call(this);
    this.$direction = null;
}
let cbggge_DirectionalLight__init_ = $this => {
    cbggge_BaseLight__init_($this);
    $this.$direction = cbgm_Vector3__init_();
},
cbggge_DirectionalLight__init_0 = () => {
    let var_0 = new cbggge_DirectionalLight();
    cbggge_DirectionalLight__init_(var_0);
    return var_0;
},
cbggge_DirectionalLight_set = ($this, $copyFrom) => {
    let var$2;
    var$2 = $copyFrom.$color1;
    $copyFrom = $copyFrom.$direction;
    if (var$2 !== null)
        cbgg_Color_set0($this.$color1, var$2);
    if ($copyFrom !== null)
        cbgm_Vector3_nor(cbgm_Vector3_set0($this.$direction, $copyFrom));
    return $this;
},
cbggge_DirectionalLight_equals = ($this, $arg0) => {
    let var$2, var$3, var$4, var$5, var$6, var$7;
    a: {
        if ($arg0 instanceof cbggge_DirectionalLight) {
            $arg0 = $arg0;
            var$2 = $this;
            if (!($arg0 instanceof nmgsl_DirectionalLightEx))
                var$3 = 0;
            else
                b: {
                    c: {
                        $arg0 = $arg0;
                        if ($arg0 !== null) {
                            if ($arg0 === var$2)
                                break c;
                            if (cbgg_Color_equals(var$2.$baseColor, $arg0.$baseColor)) {
                                var$4 = var$2.$intensity1;
                                var$5 = $arg0.$intensity1;
                                var$3 = (var$4 <= var$5 ? 0 : 1) - (var$5 <= var$4 ? 0 : 1) | 0;
                                if (!var$3) {
                                    var$6 = 1.0 / var$4;
                                    var$7 = 1.0 / var$5;
                                    var$3 = (((var$6 <= var$7 ? 0 : 1) - (var$7 <= var$6 ? 0 : 1) | 0) + (var$5 !== var$5 ? 0 : 1) | 0) - (var$4 !== var$4 ? 0 : 1) | 0;
                                }
                                if (!var$3 && cbgm_Vector3_equals(var$2.$direction, $arg0.$direction))
                                    break c;
                            }
                        }
                        var$3 = 0;
                        break b;
                    }
                    var$3 = 1;
                }
            if (var$3) {
                var$3 = 1;
                break a;
            }
        }
        var$3 = 0;
    }
    return var$3;
},
cbggge_DirectionalLight_equals0 = ($this, $other) => {
    let var$2;
    a: {
        b: {
            if ($other !== null) {
                if ($other === $this)
                    break b;
                if (cbgg_Color_equals($this.$color1, $other.$color1) && cbgm_Vector3_equals($this.$direction, $other.$direction))
                    break b;
            }
            var$2 = 0;
            break a;
        }
        var$2 = 1;
    }
    return var$2;
};
function nmgsl_DirectionalLightEx() {
    let a = this; cbggge_DirectionalLight.call(a);
    a.$baseColor = null;
    a.$intensity1 = 0.0;
}
let nmgsl_DirectionalLightEx__init_ = $this => {
    cbggge_DirectionalLight__init_($this);
    $this.$baseColor = cbgg_Color__init_1(cbgg_Color_WHITE);
    $this.$intensity1 = 1.0;
},
nmgsl_DirectionalLightEx__init_0 = () => {
    let var_0 = new nmgsl_DirectionalLightEx();
    nmgsl_DirectionalLightEx__init_(var_0);
    return var_0;
};
function nmgsu_IBLBuilder() {
    let a = this; jl_Object.call(a);
    a.$nearGroundColor = null;
    a.$farGroundColor = null;
    a.$nearSkyColor = null;
    a.$farSkyColor = null;
    a.$lights3 = null;
    a.$renderSun = 0;
    a.$renderGradient0 = 0;
    a.$sunShader = null;
    a.$shapes = null;
    a.$sunShapes = null;
}
let nmgsu_IBLBuilder_createOutdoor = $sun => {
    let $ibl, $light, var$4, var$5;
    $ibl = new nmgsu_IBLBuilder;
    $ibl.$nearGroundColor = new cbgg_Color;
    $ibl.$farGroundColor = new cbgg_Color;
    $ibl.$nearSkyColor = new cbgg_Color;
    $ibl.$farSkyColor = new cbgg_Color;
    $ibl.$lights3 = cbgu_Array__init_();
    $ibl.$renderSun = 1;
    $ibl.$renderGradient0 = 1;
    $light = cbggg_ShapeRenderer__init_(20, null);
    $ibl.$shapes = $light;
    cbgm_Matrix4_setToOrtho2D($light.$projectionMatrix, 0.0, 0.0, 1.0, 1.0);
    var$4 = new cbggg_ShaderProgram;
    var$5 = cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(565));
    $light = cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(566));
    cbggg_ShaderProgram_$callClinit();
    cbggg_ShaderProgram__init_(var$4, cgxgbt_TeaFileHandle_readString(var$5), cgxgbt_TeaFileHandle_readString($light));
    $ibl.$sunShader = var$4;
    if (!var$4.$isCompiled) {
        $sun = new cbgu_GdxRuntimeException;
        jl_Exception__init_($sun, cbggg_ShaderProgram_getLog(var$4));
        $rt_throw($sun);
    }
    $light = cbggg_ShapeRenderer__init_(20, var$4);
    $ibl.$sunShapes = $light;
    cbgm_Matrix4_setToOrtho2D($light.$projectionMatrix, 0.0, 0.0, 1.0, 1.0);
    cbgg_Color_set($ibl.$nearGroundColor, 0.5, 0.44999998807907104, 0.4000000059604645, 1.0);
    cbgg_Color_set($ibl.$farGroundColor, 0.30000001192092896, 0.25, 0.20000000298023224, 1.0);
    cbgg_Color_set($ibl.$nearSkyColor, 0.699999988079071, 0.800000011920929, 1.0, 1.0);
    cbgg_Color_set($ibl.$farSkyColor, 0.8999999761581421, 0.949999988079071, 1.0, 1.0);
    $light = new nmgsu_IBLBuilder$Light;
    nmgsu_IBLBuilder$Light_$callClinit();
    $light.$color6 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    var$5 = cbgm_Vector3__init_0(0.0, (-1.0), 0.0);
    $light.$direction4 = var$5;
    $light.$exponent1 = 30.0;
    cbgm_Vector3_nor(cbgm_Vector3_set0(var$5, $sun.$direction));
    cbgg_Color_set0($light.$color6, $sun.$color1);
    $light.$exponent1 = 30.0;
    cbgu_Array_add($ibl.$lights3, $light);
    return $ibl;
},
nmgsu_IBLBuilder_dispose = $this => {
    cbggg_ShaderProgram_dispose($this.$sunShader);
    cbggg_ShapeRenderer_dispose($this.$sunShapes);
    cbggg_ShapeRenderer_dispose($this.$shapes);
},
nmgsu_IBLBuilder_buildEnvMap = ($this, $size) => {
    let $fbo, $map, var$4, $side;
    $fbo = new nmgsu_IBLBuilder$1;
    $map = cbgg_Pixmap$Format_RGBA8888;
    $fbo.$this$028 = $this;
    cbggg_FrameBufferCubemap__init_($fbo, $map, $size, $size, 0);
    var$4 = $fbo;
    cbggg_GLFrameBuffer_begin(var$4);
    while (cbggg_FrameBufferCubemap_nextSide($fbo)) {
        cbg_Gdx_gl.$glClearColor(0.0, 0.0, 0.0, 0.0);
        cbg_Gdx_gl.$glClear(16384);
        $side = cbggg_FrameBufferCubemap_getSide($fbo);
        nmgsu_IBLBuilder_renderGradient($this, $side, 0.0);
        nmgsu_IBLBuilder_renderLights($this, $side, 0);
    }
    cbggg_GLFrameBuffer_end(var$4);
    $map = cbggg_GLFrameBuffer_getColorBufferTexture(var$4);
    cbggg_GLFrameBuffer_dispose(var$4);
    return $map;
},
nmgsu_IBLBuilder_buildIrradianceMap = ($this, $size) => {
    let $fbo, $map, var$4, $side;
    $fbo = new nmgsu_IBLBuilder$2;
    $map = cbgg_Pixmap$Format_RGBA8888;
    $fbo.$this$049 = $this;
    cbggg_FrameBufferCubemap__init_($fbo, $map, $size, $size, 0);
    var$4 = $fbo;
    cbggg_GLFrameBuffer_begin(var$4);
    while (cbggg_FrameBufferCubemap_nextSide($fbo)) {
        cbg_Gdx_gl.$glClearColor(0.0, 0.0, 0.0, 0.0);
        cbg_Gdx_gl.$glClear(16384);
        $side = cbggg_FrameBufferCubemap_getSide($fbo);
        nmgsu_IBLBuilder_renderGradient($this, $side, 0.5);
        nmgsu_IBLBuilder_renderLights($this, $side, 1);
    }
    cbggg_GLFrameBuffer_end(var$4);
    $map = cbggg_GLFrameBuffer_getColorBufferTexture(var$4);
    cbggg_GLFrameBuffer_dispose(var$4);
    return $map;
},
nmgsu_IBLBuilder_buildRadianceMap = ($this, $mipMapLevels) => {
    let var$2, $maps, $index, $level, var$6, $size, $fbo, $map, $side, var$11, $s, $data, var$14;
    var$2 = $mipMapLevels * 6 | 0;
    $maps = $rt_createArray(cbgg_Pixmap, var$2).data;
    $index = 0;
    $level = 0;
    var$6 = $mipMapLevels;
    while ($level < $mipMapLevels) {
        $size = 1 << (($mipMapLevels - $level | 0) - 1 | 0);
        $fbo = new cbggg_FrameBuffer;
        $map = cbgg_Pixmap$Format_RGBA8888;
        cbggg_GLFrameBuffer__init_($fbo);
        $side = new cbggg_GLFrameBuffer$FrameBufferBuilder;
        cbggg_GLFrameBuffer$GLFrameBufferBuilder__init_($side, $size, $size);
        cbggg_GLFrameBuffer$GLFrameBufferBuilder_addBasicColorTextureAttachment($side, $map);
        $fbo.$bufferBuilder = $side;
        var$11 = $fbo;
        cbggg_GLFrameBuffer_build(var$11);
        cbggg_GLFrameBuffer_begin(var$11);
        $s = 0;
        while ($s < 6) {
            cbg_Gdx_gl.$glClearColor(0.0, 0.0, 0.0, 0.0);
            cbg_Gdx_gl.$glClear(16384);
            $side = (cbgg_Cubemap$CubemapSide_values()).data[$s];
            nmgsu_IBLBuilder_renderGradient($this, $side, $level / var$6);
            nmgsu_IBLBuilder_renderLights($this, $side, 0);
            cbg_Gdx_gl.$glPixelStorei(3333, 1);
            $data = cbgg_Pixmap__init_($size, $size, cbgg_Pixmap$Format_RGBA8888);
            $side = cbgg_Pixmap_getPixels($data);
            cbg_Gdx_gl.$glReadPixels(0, 0, $size, $size, 6408, 5121, $side);
            $fbo = $data.$nativePixmap.$nativePixmap0;
            $side = cbggg_Gdx2DPixmapNative_getHeapData($fbo, 0);
            $fbo = cgxgbtdt_TypedArrays_getInt8Array($fbo.$buffer5);
            $side.set($fbo);
            $maps[$index] = $data;
            $index = $index + 1 | 0;
            $s = $s + 1 | 0;
        }
        cbggg_GLFrameBuffer_end(var$11);
        cbggg_GLFrameBuffer_dispose(var$11);
        $level = $level + 1 | 0;
    }
    $data = new nmgsu_FacedMultiCubemapData;
    $data.$levels = $mipMapLevels;
    $data.$data1 = $rt_createArray(cbgg_TextureData, var$2);
    var$14 = 0;
    while (var$14 < $mipMapLevels) {
        $s = 0;
        while ($s < 6) {
            $index = (var$14 * 6 | 0) + $s | 0;
            $fbo = $maps[$index];
            $data.$data1.data[$index] = cbggg_PixmapTextureData__init_($fbo, null, 0, 1);
            $s = $s + 1 | 0;
        }
        var$14 = var$14 + 1 | 0;
    }
    $map = cbgg_Cubemap__init_0($data);
    $side = cbgg_Texture$TextureFilter_MipMap;
    $data = cbgg_Texture$TextureFilter_Linear;
    cbgg_GLTexture_setFilter($map, $side, $data);
    return $map;
},
nmgsu_IBLBuilder_renderGradient = ($this, $side, $blur) => {
    let $aveSky, $aveGnd, $ave, $aveHorizon, var$7, $t2, $t, $ngc, $nsc, $fgc, $fsc;
    if (!$this.$renderGradient0)
        return;
    $aveSky = cbgg_Color_lerp(cbgg_Color_cpy($this.$farSkyColor), $this.$nearSkyColor, 0.5);
    $aveGnd = cbgg_Color_lerp(cbgg_Color_cpy($this.$farGroundColor), $this.$nearGroundColor, 0.5);
    $ave = cbgg_Color_lerp(cbgg_Color_cpy($aveSky), $aveGnd, 0.5);
    $aveHorizon = cbgg_Color_lerp(cbgg_Color_cpy($this.$farGroundColor), $this.$farSkyColor, 0.5);
    var$7 = 1.0 - $blur;
    $t2 = 1.0 - jl_Math_pow(var$7, 4.0);
    $t = 1.0 - jl_Math_pow(var$7, 1.0);
    $ngc = cbgg_Color_lerp(cbgg_Color_cpy($this.$nearGroundColor), $ave, $t);
    $nsc = cbgg_Color_lerp(cbgg_Color_cpy($this.$nearSkyColor), $ave, $t);
    $fgc = cbgg_Color_lerp(cbgg_Color_lerp(cbgg_Color_cpy($this.$farGroundColor), $aveHorizon, $t2), $ave, $t);
    $fsc = cbgg_Color_lerp(cbgg_Color_lerp(cbgg_Color_cpy($this.$farSkyColor), $aveHorizon, $t2), $ave, $t);
    cbggg_ShapeRenderer_begin($this.$shapes, cbggg_ShapeRenderer$ShapeType_Filled);
    cbgg_Cubemap$CubemapSide_$callClinit();
    if ($side === cbgg_Cubemap$CubemapSide_PositiveY)
        cbggg_ShapeRenderer_rect($this.$shapes, 0.0, 0.0, 1.0, 1.0, $nsc, $nsc, $nsc, $nsc);
    else if ($side === cbgg_Cubemap$CubemapSide_NegativeY)
        cbggg_ShapeRenderer_rect($this.$shapes, 0.0, 0.0, 1.0, 1.0, $ngc, $ngc, $ngc, $ngc);
    else {
        cbggg_ShapeRenderer_rect($this.$shapes, 0.0, 0.0, 1.0, 0.5, $nsc, $nsc, $fsc, $fsc);
        cbggg_ShapeRenderer_rect($this.$shapes, 0.0, 0.5, 1.0, 0.5, $fgc, $fgc, $ngc, $ngc);
    }
    cbggg_ShapeRenderer_end($this.$shapes);
},
nmgsu_IBLBuilder_renderLights = ($this, $side, $blured) => {
    let var$3, $light, var$5, var$6;
    cbg_Gdx_gl.$glEnable(3042);
    cbg_Gdx_gl.$glBlendFunc(770, 1);
    var$3 = cbgu_Array_iterator($this.$lights3);
    while (cbgu_Array$ArrayIterator_hasNext(var$3)) {
        $light = cbgu_Array$ArrayIterator_next(var$3);
        if ($blured) {
            var$5 = $this.$sunShapes;
            var$6 = $this.$sunShader;
            nmgsu_IBLBuilder$Light_$callClinit();
            nmgsu_IBLBuilder$Light_render($light, $side, var$5, var$6, 0.5, 1.0);
        } else {
            var$6 = $this.$sunShapes;
            var$5 = $this.$sunShader;
            nmgsu_IBLBuilder$Light_$callClinit();
            nmgsu_IBLBuilder$Light_render($light, $side, var$6, var$5, 1.0, $light.$exponent1);
        }
    }
    cbg_Gdx_gl.$glDisable(3042);
    cbg_Gdx_gl.$glBlendFunc(770, 771);
};
function cbggg_Attribute() {
    let a = this; jl_Object.call(a);
    a.$type0 = Long_ZERO;
    a.$typeBit = 0;
}
let cbggg_Attribute_types = null,
cbggg_Attribute_$callClinit = () => {
    cbggg_Attribute_$callClinit = $rt_eraseClinit(cbggg_Attribute);
    cbggg_Attribute__clinit_();
},
cbggg_Attribute_register = $alias => {
    let var$2, var$3, var$4, var$5, var$6, $result, var$8;
    cbggg_Attribute_$callClinit();
    var$2 = 0;
    a: {
        while (true) {
            var$3 = cbggg_Attribute_types;
            if (var$2 >= var$3.$size0)
                break;
            b: {
                var$3 = cbgu_Array_get(var$3, var$2);
                if (var$3 === $alias)
                    var$4 = 0;
                else {
                    var$5 = jl_Math_min(var$3.$nativeString.length, $alias.$nativeString.length);
                    var$6 = 0;
                    while (true) {
                        if (var$6 >= var$5) {
                            var$4 = var$3.$nativeString.length - $alias.$nativeString.length | 0;
                            break b;
                        }
                        var$4 = jl_String_charAt(var$3, var$6) - jl_String_charAt($alias, var$6) | 0;
                        if (var$4)
                            break;
                        var$6 = var$6 + 1 | 0;
                    }
                }
            }
            if (!var$4) {
                $result = Long_shl(Long_fromInt(1), var$2);
                break a;
            }
            var$2 = var$2 + 1 | 0;
        }
        $result = Long_ZERO;
    }
    if (Long_gt($result, Long_ZERO))
        return $result;
    var$3 = cbggg_Attribute_types;
    if (var$3.$size0 < 64) {
        cbgu_Array_add(var$3, $alias);
        return Long_shl(Long_fromInt(1), cbggg_Attribute_types.$size0 - 1 | 0);
    }
    var$3 = new cbgu_GdxRuntimeException;
    var$8 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$8);
    jl_AbstractStringBuilder_append(var$8, $rt_s(567));
    jl_AbstractStringBuilder_append(var$8, $alias);
    jl_AbstractStringBuilder_append(var$8, $rt_s(568));
    jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$8));
    $rt_throw(var$3);
},
cbggg_Attribute__init_ = ($this, $type) => {
    let var$2, var$3, var$4;
    cbggg_Attribute_$callClinit();
    $this.$type0 = $type;
    if (Long_eq($type, Long_ZERO))
        var$2 = 64;
    else {
        var$2 = 0;
        var$3 = Long_shl($type, 32);
        if (Long_ne(var$3, Long_ZERO))
            var$2 = 32;
        else
            var$3 = $type;
        $type = Long_shl(var$3, 16);
        if (Long_eq($type, Long_ZERO))
            $type = var$3;
        else
            var$2 = var$2 | 16;
        var$3 = Long_shl($type, 8);
        if (Long_eq(var$3, Long_ZERO))
            var$3 = $type;
        else
            var$2 = var$2 | 8;
        var$4 = Long_shl(var$3, 4);
        if (Long_eq(var$4, Long_ZERO))
            var$4 = var$3;
        else
            var$2 = var$2 | 4;
        $type = Long_shl(var$4, 2);
        if (Long_eq($type, Long_ZERO))
            $type = var$4;
        else
            var$2 = var$2 | 2;
        if (Long_ne(Long_shl($type, 1), Long_ZERO))
            var$2 = var$2 | 1;
        var$2 = (64 - var$2 | 0) - 1 | 0;
    }
    $this.$typeBit = var$2;
},
cbggg_Attribute_equals = ($this, $other) => {
    return $other.$hashCode() != $this.$hashCode() ? 0 : 1;
},
cbggg_Attribute_equals0 = ($this, $obj) => {
    let $other;
    if ($obj === null)
        return 0;
    if ($obj === $this)
        return 1;
    if (!($obj instanceof cbggg_Attribute))
        return 0;
    $other = $obj;
    if (Long_eq($this.$type0, $other.$type0))
        return cbggg_Attribute_equals($this, $other);
    return 0;
},
cbggg_Attribute_toString = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$type0;
    cbggg_Attribute_$callClinit();
    var$2 = (-1);
    var$3 = Long_compare(var$1, Long_ZERO);
    a: {
        while (var$3) {
            var$2 = var$2 + 1 | 0;
            if (var$2 >= 63)
                break a;
            if (Long_ne(Long_and(Long_shr(var$1, var$2), Long_fromInt(1)), Long_ZERO))
                break a;
        }
    }
    b: {
        if (var$2 >= 0) {
            var$4 = cbggg_Attribute_types;
            if (var$2 < var$4.$size0) {
                var$4 = cbgu_Array_get(var$4, var$2);
                break b;
            }
        }
        var$4 = null;
    }
    return var$4;
},
cbggg_Attribute_hashCode = $this => {
    return 7489 * $this.$typeBit | 0;
},
cbggg_Attribute__clinit_ = () => {
    cbggg_Attribute_types = cbgu_Array__init_();
};
function cbggga_TextureAttribute() {
    let a = this; cbggg_Attribute.call(a);
    a.$textureDescription = null;
    a.$offsetU = 0.0;
    a.$offsetV = 0.0;
    a.$scaleU = 0.0;
    a.$scaleV = 0.0;
    a.$uvIndex = 0;
}
let cbggga_TextureAttribute_Diffuse = Long_ZERO,
cbggga_TextureAttribute_Specular = Long_ZERO,
cbggga_TextureAttribute_Bump = Long_ZERO,
cbggga_TextureAttribute_Normal = Long_ZERO,
cbggga_TextureAttribute_Ambient = Long_ZERO,
cbggga_TextureAttribute_Emissive = Long_ZERO,
cbggga_TextureAttribute_Reflection = Long_ZERO,
cbggga_TextureAttribute_Mask = Long_ZERO,
cbggga_TextureAttribute_$callClinit = () => {
    cbggga_TextureAttribute_$callClinit = $rt_eraseClinit(cbggga_TextureAttribute);
    cbggga_TextureAttribute__clinit_();
},
cbggga_TextureAttribute__init_ = ($this, $type) => {
    let var$2;
    cbggga_TextureAttribute_$callClinit();
    cbggg_Attribute__init_($this, $type);
    $this.$offsetU = 0.0;
    $this.$offsetV = 0.0;
    $this.$scaleU = 1.0;
    $this.$scaleV = 1.0;
    $this.$uvIndex = 0;
    if (Long_eq(Long_and($type, cbggga_TextureAttribute_Mask), Long_ZERO) ? 0 : 1) {
        $this.$textureDescription = cbgggu_TextureDescriptor__init_();
        return;
    }
    var$2 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$2, $rt_s(569));
    $rt_throw(var$2);
},
cbggga_TextureAttribute__init_0 = var_0 => {
    let var_1 = new cbggga_TextureAttribute();
    cbggga_TextureAttribute__init_(var_1, var_0);
    return var_1;
},
cbggga_TextureAttribute_hashCode = $this => {
    return (991 * ((991 * ((991 * ((991 * ((991 * ((991 * cbggg_Attribute_hashCode($this) | 0) + cbgggu_TextureDescriptor_hashCode($this.$textureDescription) | 0) | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$offsetU) | 0) | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$offsetV) | 0) | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$scaleU) | 0) | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$scaleV) | 0) | 0) + $this.$uvIndex | 0;
},
cbggga_TextureAttribute__clinit_ = () => {
    let var$1;
    cbggga_TextureAttribute_Diffuse = cbggg_Attribute_register($rt_s(570));
    cbggga_TextureAttribute_Specular = cbggg_Attribute_register($rt_s(571));
    cbggga_TextureAttribute_Bump = cbggg_Attribute_register($rt_s(572));
    cbggga_TextureAttribute_Normal = cbggg_Attribute_register($rt_s(573));
    cbggga_TextureAttribute_Ambient = cbggg_Attribute_register($rt_s(574));
    cbggga_TextureAttribute_Emissive = cbggg_Attribute_register($rt_s(575));
    var$1 = cbggg_Attribute_register($rt_s(576));
    cbggga_TextureAttribute_Reflection = var$1;
    cbggga_TextureAttribute_Mask = Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(cbggga_TextureAttribute_Diffuse, cbggga_TextureAttribute_Specular), cbggga_TextureAttribute_Bump), cbggga_TextureAttribute_Normal), cbggga_TextureAttribute_Ambient), cbggga_TextureAttribute_Emissive), var$1);
};
function nmgsa_PBRTextureAttribute() {
    cbggga_TextureAttribute.call(this);
    this.$rotationUV = 0.0;
}
let nmgsa_PBRTextureAttribute_BaseColorTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_EmissiveTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_NormalTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_MetallicRoughnessTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_OcclusionTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_BRDFLUTTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_TransmissionTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_ThicknessTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_SpecularFactorTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_IridescenceTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_IridescenceThicknessTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_TransmissionSourceTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_SpecularColorTexture = Long_ZERO,
nmgsa_PBRTextureAttribute_$callClinit = () => {
    nmgsa_PBRTextureAttribute_$callClinit = $rt_eraseClinit(nmgsa_PBRTextureAttribute);
    nmgsa_PBRTextureAttribute__clinit_();
},
nmgsa_PBRTextureAttribute__init_ = ($this, $type, $texture) => {
    nmgsa_PBRTextureAttribute_$callClinit();
    cbggga_TextureAttribute_$callClinit();
    cbggga_TextureAttribute__init_($this, $type);
    $this.$textureDescription.$texture = $texture;
    $this.$rotationUV = 0.0;
},
nmgsa_PBRTextureAttribute__init_0 = (var_0, var_1) => {
    let var_2 = new nmgsa_PBRTextureAttribute();
    nmgsa_PBRTextureAttribute__init_(var_2, var_0, var_1);
    return var_2;
},
nmgsa_PBRTextureAttribute_createBaseColorTexture = $texture => {
    nmgsa_PBRTextureAttribute_$callClinit();
    return nmgsa_PBRTextureAttribute__init_0(nmgsa_PBRTextureAttribute_BaseColorTexture, $texture);
},
nmgsa_PBRTextureAttribute_copy = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    var$1 = new nmgsa_PBRTextureAttribute;
    nmgsa_PBRTextureAttribute_$callClinit();
    cbggga_TextureAttribute_$callClinit();
    var$2 = $this.$type0;
    var$3 = $this.$textureDescription;
    var$4 = $this.$offsetU;
    var$5 = $this.$offsetV;
    var$6 = $this.$scaleU;
    var$7 = $this.$scaleV;
    var$8 = $this.$uvIndex;
    cbggga_TextureAttribute__init_(var$1, var$2);
    cbgggu_TextureDescriptor_set(var$1.$textureDescription, var$3);
    var$1.$offsetU = var$4;
    var$1.$offsetV = var$5;
    var$1.$scaleU = var$6;
    var$1.$scaleV = var$7;
    var$1.$uvIndex = var$8;
    var$1.$rotationUV = 0.0;
    var$1.$rotationUV = $this.$rotationUV;
    return var$1;
},
nmgsa_PBRTextureAttribute__clinit_ = () => {
    let var$1;
    nmgsa_PBRTextureAttribute_BaseColorTexture = cbggg_Attribute_register($rt_s(570));
    nmgsa_PBRTextureAttribute_EmissiveTexture = cbggg_Attribute_register($rt_s(575));
    nmgsa_PBRTextureAttribute_NormalTexture = cbggg_Attribute_register($rt_s(573));
    nmgsa_PBRTextureAttribute_MetallicRoughnessTexture = cbggg_Attribute_register($rt_s(577));
    nmgsa_PBRTextureAttribute_OcclusionTexture = cbggg_Attribute_register($rt_s(578));
    nmgsa_PBRTextureAttribute_BRDFLUTTexture = cbggg_Attribute_register($rt_s(579));
    nmgsa_PBRTextureAttribute_TransmissionTexture = cbggg_Attribute_register($rt_s(580));
    nmgsa_PBRTextureAttribute_ThicknessTexture = cbggg_Attribute_register($rt_s(581));
    nmgsa_PBRTextureAttribute_SpecularFactorTexture = cbggg_Attribute_register($rt_s(582));
    nmgsa_PBRTextureAttribute_IridescenceTexture = cbggg_Attribute_register($rt_s(583));
    nmgsa_PBRTextureAttribute_IridescenceThicknessTexture = cbggg_Attribute_register($rt_s(584));
    nmgsa_PBRTextureAttribute_TransmissionSourceTexture = cbggg_Attribute_register($rt_s(585));
    var$1 = cbggg_Attribute_register($rt_s(586));
    nmgsa_PBRTextureAttribute_SpecularColorTexture = var$1;
    cbggga_TextureAttribute_$callClinit();
    cbggga_TextureAttribute_Mask = Long_or(cbggga_TextureAttribute_Mask, Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(nmgsa_PBRTextureAttribute_MetallicRoughnessTexture, nmgsa_PBRTextureAttribute_OcclusionTexture), nmgsa_PBRTextureAttribute_BaseColorTexture), nmgsa_PBRTextureAttribute_NormalTexture), nmgsa_PBRTextureAttribute_EmissiveTexture), nmgsa_PBRTextureAttribute_BRDFLUTTexture), nmgsa_PBRTextureAttribute_TransmissionTexture), nmgsa_PBRTextureAttribute_ThicknessTexture),
    nmgsa_PBRTextureAttribute_SpecularFactorTexture), nmgsa_PBRTextureAttribute_IridescenceTexture), nmgsa_PBRTextureAttribute_IridescenceThicknessTexture), nmgsa_PBRTextureAttribute_TransmissionSourceTexture), var$1));
};
function cbggg_Attributes() {
    let a = this; jl_Object.call(a);
    a.$mask = Long_ZERO;
    a.$attributes = null;
    a.$sorted = 0;
}
let cbggg_Attributes__init_ = $this => {
    $this.$attributes = cbgu_Array__init_();
    $this.$sorted = 1;
},
cbggg_Attributes__init_0 = () => {
    let var_0 = new cbggg_Attributes();
    cbggg_Attributes__init_(var_0);
    return var_0;
},
cbggg_Attributes_sort = $this => {
    if (!$this.$sorted) {
        cbgu_Array_sort($this.$attributes, $this);
        $this.$sorted = 1;
    }
},
cbggg_Attributes_getMask = $this => {
    return $this.$mask;
},
cbggg_Attributes_get = ($this, $type) => {
    let $i, var$3;
    a: {
        if (cbggg_Attributes_has($this, $type)) {
            $i = 0;
            while (true) {
                var$3 = $this.$attributes;
                if ($i >= var$3.$size0)
                    break a;
                if (Long_eq((cbgu_Array_get(var$3, $i)).$type0, $type))
                    return cbgu_Array_get($this.$attributes, $i);
                $i = $i + 1 | 0;
            }
        }
    }
    return null;
},
cbggg_Attributes_get0 = ($this, $clazz, $type) => {
    return cbggg_Attributes_get($this, $type);
},
cbggg_Attributes_clear = $this => {
    $this.$mask = Long_ZERO;
    cbgu_Array_clear($this.$attributes);
},
cbggg_Attributes_set = ($this, $attribute) => {
    let $idx, var$3;
    $idx = cbggg_Attributes_indexOf($this, $attribute.$type0);
    if ($idx >= 0)
        cbgu_Array_set($this.$attributes, $idx, $attribute);
    else {
        var$3 = $attribute.$type0;
        $this.$mask = Long_or($this.$mask, var$3);
        cbgu_Array_add($this.$attributes, $attribute);
        $this.$sorted = 0;
    }
    cbggg_Attributes_sort($this);
},
cbggg_Attributes_set0 = ($this, $attributes) => {
    let var$2;
    var$2 = cbggg_Attributes_iterator($attributes);
    while (cbgu_Array$ArrayIterator_hasNext(var$2)) {
        cbggg_Attributes_set($this, cbgu_Array$ArrayIterator_next(var$2));
    }
},
cbggg_Attributes_remove = ($this, $mask) => {
    let $i, $type;
    $i = $this.$attributes.$size0 - 1 | 0;
    while ($i >= 0) {
        $type = (cbgu_Array_get($this.$attributes, $i)).$type0;
        if (Long_eq(Long_and($mask, $type), $type)) {
            cbgu_Array_removeIndex($this.$attributes, $i);
            $this.$mask = Long_and($this.$mask, Long_xor($type, Long_fromInt(-1)));
            $this.$sorted = 0;
        }
        $i = $i + (-1) | 0;
    }
    cbggg_Attributes_sort($this);
},
cbggg_Attributes_has = ($this, $type) => {
    return Long_ne($type, Long_ZERO) && Long_eq(Long_and($this.$mask, $type), $type) ? 1 : 0;
},
cbggg_Attributes_indexOf = ($this, $type) => {
    let $i, var$3;
    a: {
        if (cbggg_Attributes_has($this, $type)) {
            $i = 0;
            while (true) {
                var$3 = $this.$attributes;
                if ($i >= var$3.$size0)
                    break a;
                if (Long_eq((cbgu_Array_get(var$3, $i)).$type0, $type))
                    break;
                $i = $i + 1 | 0;
            }
            return $i;
        }
    }
    return (-1);
},
cbggg_Attributes_iterator = $this => {
    return cbgu_Array_iterator($this.$attributes);
},
cbggg_Attributes_attributesHash = $this => {
    let $n, $result, $m, $i, var$5;
    cbggg_Attributes_sort($this);
    $n = $this.$attributes.$size0;
    $result = Long_add(Long_fromInt(71), $this.$mask);
    $m = 1;
    $i = 0;
    while ($i < $n) {
        var$5 = Long_mul($this.$mask, Long_fromInt((cbgu_Array_get($this.$attributes, $i)).$hashCode()));
        $m = ($m * 7 | 0) & 65535;
        $result = Long_add($result, Long_mul(var$5, Long_fromInt($m)));
        $i = $i + 1 | 0;
    }
    return Long_lo(Long_xor($result, Long_shr($result, 32)));
},
cbggg_Attributes_hashCode = $this => {
    return cbggg_Attributes_attributesHash($this);
},
cbggg_Attributes_compare = ($this, var$1, var$2) => {
    var$1 = var$1;
    var$2 = var$2;
    return Long_lo(Long_sub(var$1.$type0, var$2.$type0));
};
function cbggga_CubemapAttribute() {
    cbggg_Attribute.call(this);
    this.$textureDescription0 = null;
}
let cbggga_CubemapAttribute_EnvironmentMap = Long_ZERO,
cbggga_CubemapAttribute_Mask = Long_ZERO,
cbggga_CubemapAttribute_$callClinit = () => {
    cbggga_CubemapAttribute_$callClinit = $rt_eraseClinit(cbggga_CubemapAttribute);
    cbggga_CubemapAttribute__clinit_();
},
cbggga_CubemapAttribute__init_ = ($this, $type) => {
    let var$2;
    cbggga_CubemapAttribute_$callClinit();
    cbggg_Attribute__init_($this, $type);
    if (Long_eq(Long_and($type, cbggga_CubemapAttribute_Mask), Long_ZERO) ? 0 : 1) {
        $this.$textureDescription0 = cbgggu_TextureDescriptor__init_();
        return;
    }
    var$2 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$2, $rt_s(569));
    $rt_throw(var$2);
},
cbggga_CubemapAttribute__init_4 = var_0 => {
    let var_1 = new cbggga_CubemapAttribute();
    cbggga_CubemapAttribute__init_(var_1, var_0);
    return var_1;
},
cbggga_CubemapAttribute__init_0 = ($this, $type, $textureDescription) => {
    cbggga_CubemapAttribute_$callClinit();
    cbggga_CubemapAttribute__init_($this, $type);
    cbgggu_TextureDescriptor_set($this.$textureDescription0, $textureDescription);
},
cbggga_CubemapAttribute__init_2 = (var_0, var_1) => {
    let var_2 = new cbggga_CubemapAttribute();
    cbggga_CubemapAttribute__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggga_CubemapAttribute__init_1 = ($this, $type, $texture) => {
    cbggga_CubemapAttribute_$callClinit();
    cbggga_CubemapAttribute__init_($this, $type);
    $this.$textureDescription0.$texture = $texture;
},
cbggga_CubemapAttribute__init_3 = (var_0, var_1) => {
    let var_2 = new cbggga_CubemapAttribute();
    cbggga_CubemapAttribute__init_1(var_2, var_0, var_1);
    return var_2;
},
cbggga_CubemapAttribute_copy = $this => {
    let var$1;
    var$1 = new cbggga_CubemapAttribute;
    cbggga_CubemapAttribute_$callClinit();
    cbggga_CubemapAttribute__init_0(var$1, $this.$type0, $this.$textureDescription0);
    return var$1;
},
cbggga_CubemapAttribute_hashCode = $this => {
    return (967 * cbggg_Attribute_hashCode($this) | 0) + cbgggu_TextureDescriptor_hashCode($this.$textureDescription0) | 0;
},
cbggga_CubemapAttribute__clinit_ = () => {
    let var$1;
    var$1 = cbggg_Attribute_register($rt_s(587));
    cbggga_CubemapAttribute_EnvironmentMap = var$1;
    cbggga_CubemapAttribute_Mask = var$1;
},
nmgsa_PBRCubemapAttribute = $rt_classWithoutFields(cbggga_CubemapAttribute),
nmgsa_PBRCubemapAttribute_DiffuseEnv = Long_ZERO,
nmgsa_PBRCubemapAttribute_SpecularEnv = Long_ZERO,
nmgsa_PBRCubemapAttribute_$callClinit = () => {
    nmgsa_PBRCubemapAttribute_$callClinit = $rt_eraseClinit(nmgsa_PBRCubemapAttribute);
    nmgsa_PBRCubemapAttribute__clinit_();
},
nmgsa_PBRCubemapAttribute__init_0 = ($this, $type, $cubemap) => {
    nmgsa_PBRCubemapAttribute_$callClinit();
    cbggga_CubemapAttribute__init_1($this, $type, $cubemap);
},
nmgsa_PBRCubemapAttribute__init_ = (var_0, var_1) => {
    let var_2 = new nmgsa_PBRCubemapAttribute();
    nmgsa_PBRCubemapAttribute__init_0(var_2, var_0, var_1);
    return var_2;
},
nmgsa_PBRCubemapAttribute_createDiffuseEnv = $diffuseCubemap => {
    nmgsa_PBRCubemapAttribute_$callClinit();
    return nmgsa_PBRCubemapAttribute__init_(nmgsa_PBRCubemapAttribute_DiffuseEnv, $diffuseCubemap);
},
nmgsa_PBRCubemapAttribute_createSpecularEnv = $specularCubemap => {
    nmgsa_PBRCubemapAttribute_$callClinit();
    return nmgsa_PBRCubemapAttribute__init_(nmgsa_PBRCubemapAttribute_SpecularEnv, $specularCubemap);
},
nmgsa_PBRCubemapAttribute_copy = $this => {
    let var$1, var$2, var$3;
    var$1 = new nmgsa_PBRCubemapAttribute;
    var$2 = $this.$type0;
    var$3 = $this.$textureDescription0;
    nmgsa_PBRCubemapAttribute_$callClinit();
    cbggga_CubemapAttribute__init_0(var$1, var$2, var$3);
    return var$1;
},
nmgsa_PBRCubemapAttribute__clinit_ = () => {
    let var$1;
    nmgsa_PBRCubemapAttribute_DiffuseEnv = cbggg_Attribute_register($rt_s(588));
    var$1 = cbggg_Attribute_register($rt_s(589));
    nmgsa_PBRCubemapAttribute_SpecularEnv = var$1;
    cbggga_CubemapAttribute_$callClinit();
    cbggga_CubemapAttribute_Mask = Long_or(cbggga_CubemapAttribute_Mask, Long_or(nmgsa_PBRCubemapAttribute_DiffuseEnv, var$1));
},
cbggg_RenderableProvider = $rt_classWithoutFields(0),
nmgss_Updatable = $rt_classWithoutFields(0);
function nmgss_SceneSkybox() {
    let a = this; jl_Object.call(a);
    a.$lodBias = 0.0;
    a.$environment1 = null;
    a.$directionInverse = null;
    a.$envRotationInverse = null;
    a.$lodEnabled = 0;
    a.$quadModel = null;
    a.$quad = null;
    a.$shaderProvider0 = null;
    a.$ownShaderProvider = 0;
}
let nmgss_SceneSkybox__init_0 = ($this, $cubemap) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    $this.$lodBias = 0.0;
    var$2 = new cbggg_Environment;
    cbggg_Attributes__init_(var$2);
    $this.$environment1 = var$2;
    $this.$directionInverse = cbgm_Matrix4__init_();
    $this.$envRotationInverse = cbgm_Matrix4__init_();
    var$2 = nmgss_PBRShaderConfig$SRGB_NONE;
    if (!$this.$lodEnabled)
        var$3 = $rt_s(8);
    else {
        if (!cbggg_GLVersion_isVersionEqualToOrHigher(cbg_Gdx_graphics.$glVersion, 3, 0)) {
            $cubemap = new jl_IllegalArgumentException;
            jl_Exception__init_($cubemap, $rt_s(590));
            $rt_throw($cubemap);
        }
        var$3 = cbg_Application$ApplicationType_WebGL !== cbg_Application$ApplicationType_Desktop ? $rt_s(591) : $rt_s(592);
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_append(var$4, var$3);
        jl_AbstractStringBuilder_append(var$4, $rt_s(593));
        var$3 = jl_AbstractStringBuilder_toString(var$4);
    }
    if (var$2 !== nmgss_PBRShaderConfig$SRGB_NONE) {
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_append(var$4, var$3);
        jl_AbstractStringBuilder_append(var$4, $rt_s(594));
        var$3 = jl_AbstractStringBuilder_toString(var$4);
        if (var$2 === nmgss_PBRShaderConfig$SRGB_FAST) {
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            jl_AbstractStringBuilder_append(var$2, var$3);
            jl_AbstractStringBuilder_append(var$2, $rt_s(595));
            var$3 = jl_AbstractStringBuilder_toString(var$2);
        }
    }
    if ($this.$lodEnabled) {
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_AbstractStringBuilder_append(var$2, var$3);
        jl_AbstractStringBuilder_append(var$2, $rt_s(596));
        var$3 = jl_AbstractStringBuilder_toString(var$2);
    }
    var$2 = cbgggs_DefaultShader$Config__init_0();
    var$5 = cbg_Gdx_files;
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_AbstractStringBuilder_append(var$6, $rt_s(597));
    jl_AbstractStringBuilder_append(var$6, $rt_s(598));
    var$6 = jl_AbstractStringBuilder_toString(var$6);
    var$2.$vertexShader = cgxgbt_TeaFileHandle_readString(cgxgbt_TeaFiles_classpath(var$5, var$6));
    var$5 = cbg_Gdx_files;
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_AbstractStringBuilder_append(var$6, $rt_s(597));
    jl_AbstractStringBuilder_append(var$6, $rt_s(599));
    var$6 = jl_AbstractStringBuilder_toString(var$6);
    var$2.$fragmentShader = cgxgbt_TeaFileHandle_readString(cgxgbt_TeaFiles_classpath(var$5, var$6));
    $this.$ownShaderProvider = 1;
    var$4 = new nmgss_SceneSkybox$SkyboxShaderProvider;
    var$4.$this$017 = $this;
    cbgggu_DefaultShaderProvider__init_(var$4, var$2);
    var$4.$fsPrefix = var$3;
    $this.$shaderProvider0 = var$4;
    var$2 = cbgggu_ModelBuilder__init_();
    var$3 = cbggg_Material__init_3();
    cbgggu_ModelBuilder_begin(var$2);
    var$7 = cbgggu_ModelBuilder_part(var$2, $rt_s(600), 4, Long_fromInt(1), var$3);
    cbgggu_MeshBuilder_rect1(var$7, cbgggu_MeshPartBuilder$VertexInfo_setUV(cbgggu_MeshPartBuilder$VertexInfo_setNor(cbgggu_MeshPartBuilder$VertexInfo_setPos(cbgggu_MeshPartBuilder$VertexInfo_set(var$7.$vertTmp1, null, null, null, null), (-1.0), (-1.0), 0.0), 0.0, 0.0, (-1.0)), 0.0, 1.0), cbgggu_MeshPartBuilder$VertexInfo_setUV(cbgggu_MeshPartBuilder$VertexInfo_setNor(cbgggu_MeshPartBuilder$VertexInfo_setPos(cbgggu_MeshPartBuilder$VertexInfo_set(var$7.$vertTmp2, null, null, null, null), 1.0, (-1.0), 0.0), 0.0,
    0.0, (-1.0)), 1.0, 1.0), cbgggu_MeshPartBuilder$VertexInfo_setUV(cbgggu_MeshPartBuilder$VertexInfo_setNor(cbgggu_MeshPartBuilder$VertexInfo_setPos(cbgggu_MeshPartBuilder$VertexInfo_set(var$7.$vertTmp3, null, null, null, null), 1.0, 1.0, 0.0), 0.0, 0.0, (-1.0)), 1.0, 0.0), cbgggu_MeshPartBuilder$VertexInfo_setUV(cbgggu_MeshPartBuilder$VertexInfo_setNor(cbgggu_MeshPartBuilder$VertexInfo_setPos(cbgggu_MeshPartBuilder$VertexInfo_set(var$7.$vertTmp4, null, null, null, null), (-1.0), 1.0, 0.0), 0.0, 0.0, (-1.0)),
    0.0, 0.0));
    var$2 = cbgggu_ModelBuilder_end(var$2);
    $this.$quadModel = var$2;
    $this.$quad = cbgggm_NodePart_setRenderable(cbgu_Array_first((cbgu_Array_first(var$2.$nodes0)).$parts), cbggg_Renderable__init_());
    var$2 = $this.$environment1;
    var$3 = new cbggga_CubemapAttribute;
    cbggga_CubemapAttribute_$callClinit();
    cbggga_CubemapAttribute__init_1(var$3, cbggga_CubemapAttribute_EnvironmentMap, $cubemap);
    cbggg_Attributes_set(var$2, var$3);
    $cubemap = $this.$quad;
    $cubemap.$environment = $this.$environment1;
    $cubemap.$userData = nmgss_SceneRenderableSorter$Hints_OPAQUE_LAST;
    var$2 = new cbggg_Material;
    var$8 = $rt_createArray(cbggg_Attribute, 1);
    var$9 = var$8.data;
    var$3 = cbgg_Color_WHITE;
    cbggga_ColorAttribute_$callClinit();
    var$9[0] = cbggga_ColorAttribute__init_2(cbggga_ColorAttribute_Diffuse, var$3);
    cbggg_Material__init_(var$2, var$8);
    $cubemap.$material = var$2;
    $cubemap = $this.$quad.$material;
    var$2 = new cbggga_DepthTestAttribute;
    cbggga_DepthTestAttribute_$callClinit();
    cbggga_DepthTestAttribute__init_(var$2, cbggga_DepthTestAttribute_Type, 515, 0.0, 1.0, 0);
    cbggg_Attributes_set($cubemap, var$2);
},
nmgss_SceneSkybox__init_ = var_0 => {
    let var_1 = new nmgss_SceneSkybox();
    nmgss_SceneSkybox__init_0(var_1, var_0);
    return var_1;
},
nmgss_SceneSkybox_getRenderables = ($this, $renderables, $pool) => {
    $pool = $this.$quad;
    $pool.$shader = cbgggu_BaseShaderProvider_getShader($this.$shaderProvider0, $pool);
    cbgu_Array_add($renderables, $this.$quad);
},
jnci_UTF8Charset = $rt_classWithoutFields(jnc_Charset),
jnci_UTF8Charset_INSTANCE = null,
jnci_UTF8Charset_$callClinit = () => {
    jnci_UTF8Charset_$callClinit = $rt_eraseClinit(jnci_UTF8Charset);
    jnci_UTF8Charset__clinit_();
},
jnci_UTF8Charset_newDecoder = $this => {
    let var$1;
    var$1 = new jnci_UTF8Decoder;
    jnci_BufferedDecoder__init_(var$1, $this, 0.3333333432674408, 0.5);
    return var$1;
},
jnci_UTF8Charset_newEncoder = $this => {
    let var$1, var$2, var$3, var$4, var$5;
    var$1 = new jnci_UTF8Encoder;
    var$2 = $rt_createByteArray(1);
    var$3 = var$2.data;
    var$3[0] = 63;
    var$4 = jnc_CodingErrorAction_REPORT;
    var$1.$malformedAction0 = var$4;
    var$1.$unmappableAction = var$4;
    var$5 = var$3.length;
    if (var$5 && var$5 >= var$1.$maxBytesPerChar) {
        var$1.$charset0 = $this;
        var$1.$replacement1 = var$2.$clone0();
        var$1.$averageBytesPerChar = 2.0;
        var$1.$maxBytesPerChar = 4.0;
        var$1.$inArray0 = $rt_createCharArray(512);
        var$1.$outArray = $rt_createByteArray(512);
        return var$1;
    }
    var$4 = new jl_IllegalArgumentException;
    jl_Exception__init_(var$4, $rt_s(601));
    $rt_throw(var$4);
},
jnci_UTF8Charset__clinit_ = () => {
    let var$1;
    var$1 = new jnci_UTF8Charset;
    jnci_UTF8Charset_$callClinit();
    jnc_Charset__init_(var$1, $rt_s(602), $rt_createArray(jl_String, 0));
    jnci_UTF8Charset_INSTANCE = var$1;
};
function cgxgbt_TeaFileHandle() {
    let a = this; cbgf_FileHandle.call(a);
    a.$file = null;
    a.$type1 = null;
    a.$teaFiles = null;
}
let cgxgbt_TeaFileHandle__init_0 = ($this, $teaFiles, $fileName, $type) => {
    if ($type !== cbg_Files$FileType_Internal && $type !== cbg_Files$FileType_Classpath && $type !== cbg_Files$FileType_Local) {
        $teaFiles = new cbgu_GdxRuntimeException;
        $fileName = jl_String_valueOf($type);
        $type = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($type);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append($type, $rt_s(603)), $fileName), $rt_s(604));
        jl_Exception__init_($teaFiles, jl_AbstractStringBuilder_toString($type));
        $rt_throw($teaFiles);
    }
    $this.$file = cgxgbt_TeaFileHandle_fixSlashes($fileName);
    $this.$type1 = $type;
    $this.$teaFiles = $teaFiles;
},
cgxgbt_TeaFileHandle__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbt_TeaFileHandle();
    cgxgbt_TeaFileHandle__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbt_TeaFileHandle_path = $this => {
    return $this.$file;
},
cgxgbt_TeaFileHandle_nameWithoutExtension = $this => {
    let $dotIndex, $name;
    $dotIndex = jl_String_lastIndexOf0($this.$file, 47);
    $name = $dotIndex < 0 ? $this.$file : jl_String_substring0($this.$file, $dotIndex + 1 | 0);
    $dotIndex = jl_String_lastIndexOf0($name, 46);
    if ($dotIndex == (-1))
        return $name;
    return jl_String_substring($name, 0, $dotIndex);
},
cgxgbt_TeaFileHandle_type = $this => {
    return $this.$type1;
},
cgxgbt_TeaFileHandle_read = $this => {
    let $exists, $input, var$3, var$4, var$5;
    $exists = cgxgbtf_MemoryFileStorage_exists(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, $this.$type1), $this);
    $input = $this.$type1;
    var$3 = cbg_Files$FileType_Classpath;
    if ($input !== var$3 && !($input === cbg_Files$FileType_Internal && !$exists) && !($input === cbg_Files$FileType_Local && !$exists))
        return cgxgbtf_MemoryFileStorage_read(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, $input), $this);
    $input = cgxgbtf_MemoryFileStorage_read(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, var$3), $this);
    if ($input !== null)
        return $input;
    $input = new cbgu_GdxRuntimeException;
    var$3 = $this.$file;
    var$4 = jl_String_valueOf($this.$type1);
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(605)), var$3), $rt_s(606)), var$4), 41);
    jl_Exception__init_($input, jl_AbstractStringBuilder_toString(var$5));
    $rt_throw($input);
},
cgxgbt_TeaFileHandle_readString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, $$je;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_0(var$1, cbgf_FileHandle_estimateLength($this));
    var$2 = null;
    a: {
        b: {
            try {
                var$3 = var$2;
                var$4 = var$2;
                var$3 = var$2;
                var$4 = var$2;
                var$2 = new ji_InputStreamReader;
                var$4 = var$2;
                var$3 = var$2;
                ji_InputStreamReader__init_0(var$2, cgxgbt_TeaFileHandle_read($this));
                var$3 = var$2;
                var$4 = var$2;
                var$5 = $rt_createCharArray(256);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    var$1 = $$je;
                    break b;
                } else{
                    var$1 = $$je;
                    break a;
                }
            }
            var$6 = var$2;
            while (true) {
                try {
                    var$3 = var$2;
                    var$4 = var$2;
                    var$7 = ji_Reader_read(var$6, var$5);
                    if (var$7 == (-1))
                        break;
                    var$3 = var$2;
                    var$4 = var$2;
                    jl_StringBuilder_append6(var$1, var$5, 0, var$7);
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ji_IOException) {
                        var$1 = $$je;
                        break b;
                    } else{
                        var$1 = $$je;
                        break a;
                    }
                }
            }
            try {
                var$3 = var$2;
                var$4 = var$2;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    var$1 = $$je;
                    break b;
                } else{
                    var$1 = $$je;
                    break a;
                }
            }
            cbgu_StreamUtils_closeQuietly(var$2);
            return jl_AbstractStringBuilder_toString(var$1);
        }
        try {
            var$4 = var$3;
            $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(607)), $this)), var$1));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$1 = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly(var$4);
    $rt_throw(var$1);
},
cgxgbt_TeaFileHandle_child = ($this, $name) => {
    let var$2, var$3, var$4, var$5, var$6;
    var$2 = new cgxgbt_TeaFileHandle;
    var$3 = $this.$teaFiles;
    if (jl_String_isEmpty($this.$file))
        var$4 = $rt_s(8);
    else {
        var$4 = $this.$file;
        var$5 = !jl_String_endsWith(var$4, $rt_s(81)) ? $rt_s(81) : $rt_s(8);
        var$6 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$6);
        jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$4), var$5);
        var$4 = jl_AbstractStringBuilder_toString(var$6);
    }
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$4), $name);
    cgxgbt_TeaFileHandle__init_0(var$2, var$3, jl_AbstractStringBuilder_toString(var$6), $this.$type1);
    return var$2;
},
cgxgbt_TeaFileHandle_parent = $this => {
    let var$1, $index, $dir;
    var$1 = $this.$file;
    $index = jl_String_lastIndexOf1(var$1, $rt_s(81), var$1.$nativeString.length);
    $dir = $rt_s(8);
    if ($index > 0)
        $dir = jl_String_substring($this.$file, 0, $index);
    return cgxgbt_TeaFileHandle__init_($this.$teaFiles, $dir, $this.$type1);
},
cgxgbt_TeaFileHandle_exists = $this => {
    let $exists;
    a: {
        $exists = cgxgbtf_MemoryFileStorage_exists(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, $this.$type1), $this);
        cgxgbt_TeaFileHandle$1_$callClinit();
        switch (cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType.data[$this.$type1.$ordinal0]) {
            case 1:
                if (!$exists)
                    break a;
                return 1;
            case 2:
                break a;
            default:
        }
        return $exists;
    }
    return cgxgbtf_MemoryFileStorage_exists(cgxgbt_TeaFiles_getFileDB($this.$teaFiles, cbg_Files$FileType_Classpath), $this);
},
cgxgbt_TeaFileHandle_toString = $this => {
    return $this.$file;
},
cgxgbt_TeaFileHandle_fixSlashes = $path => {
    $path = jl_String_replace($path, $rt_s(421), $rt_s(81));
    if (jl_String_endsWith($path, $rt_s(81)))
        $path = jl_String_substring($path, 0, $path.$nativeString.length - 1 | 0);
    return $path;
},
cbg_Files$FileType = $rt_classWithoutFields(jl_Enum),
cbg_Files$FileType_Classpath = null,
cbg_Files$FileType_Internal = null,
cbg_Files$FileType_External = null,
cbg_Files$FileType_Absolute = null,
cbg_Files$FileType_Local = null,
cbg_Files$FileType_$VALUES = null,
cbg_Files$FileType__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbg_Files$FileType;
    jl_Enum__init_(var$1, $rt_s(608), 0);
    cbg_Files$FileType_Classpath = var$1;
    var$1 = new cbg_Files$FileType;
    jl_Enum__init_(var$1, $rt_s(609), 1);
    cbg_Files$FileType_Internal = var$1;
    var$1 = new cbg_Files$FileType;
    jl_Enum__init_(var$1, $rt_s(610), 2);
    cbg_Files$FileType_External = var$1;
    var$1 = new cbg_Files$FileType;
    jl_Enum__init_(var$1, $rt_s(611), 3);
    cbg_Files$FileType_Absolute = var$1;
    var$1 = new cbg_Files$FileType;
    jl_Enum__init_(var$1, $rt_s(612), 4);
    cbg_Files$FileType_Local = var$1;
    var$2 = $rt_createArray(cbg_Files$FileType, 5);
    var$3 = var$2.data;
    var$3[0] = cbg_Files$FileType_Classpath;
    var$3[1] = cbg_Files$FileType_Internal;
    var$3[2] = cbg_Files$FileType_External;
    var$3[3] = cbg_Files$FileType_Absolute;
    var$3[4] = var$1;
    cbg_Files$FileType_$VALUES = var$2;
},
jl_Readable = $rt_classWithoutFields(0);
function ji_Reader() {
    jl_Object.call(this);
    this.$lock = null;
}
let ji_Reader__init_ = $this => {
    $this.$lock = new jl_Object;
},
ji_Reader_read = ($this, $cbuf) => {
    let var$2;
    var$2 = $cbuf.data.length;
    return ji_InputStreamReader_read($this, $cbuf, 0, var$2);
};
function ji_BufferedReader() {
    let a = this; ji_Reader.call(a);
    a.$innerReader = null;
    a.$buffer6 = null;
    a.$index2 = 0;
    a.$count1 = 0;
    a.$eof = 0;
    a.$mark0 = 0;
}
let ji_BufferedReader__init_0 = ($this, $innerReader, $size) => {
    ji_Reader__init_($this);
    $this.$mark0 = (-1);
    if ($size < 0) {
        $innerReader = new jl_IllegalArgumentException;
        jl_Exception__init_0($innerReader);
        $rt_throw($innerReader);
    }
    $this.$innerReader = $innerReader;
    $this.$buffer6 = $rt_createCharArray(jl_Math_max(64, $size));
},
ji_BufferedReader__init_ = (var_0, var_1) => {
    let var_2 = new ji_BufferedReader();
    ji_BufferedReader__init_0(var_2, var_0, var_1);
    return var_2;
},
ji_BufferedReader_close = $this => {
    ji_BufferedReader_requireOpened($this);
    $this.$innerReader = null;
},
ji_BufferedReader_readLine = $this => {
    let $line, var$2, $ch, var$4;
    ji_BufferedReader_requireOpened($this);
    if ($this.$eof && $this.$index2 >= $this.$count1)
        return null;
    $line = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($line);
    a: {
        b: {
            while (true) {
                var$2 = $this.$index2;
                $ch = $this.$count1;
                if (var$2 >= $ch && !ji_BufferedReader_fillBuffer($this, 0, $ch - var$2 | 0)) {
                    if (!($line.$length1 ? 0 : 1))
                        break a;
                    return null;
                }
                var$4 = $this.$buffer6.data;
                $ch = $this.$index2;
                var$2 = $ch + 1 | 0;
                $this.$index2 = var$2;
                $ch = var$4[$ch];
                if ($ch == 10)
                    break;
                if ($ch == 13)
                    break b;
                jl_AbstractStringBuilder_append0($line, $ch);
            }
            break a;
        }
        $ch = $this.$count1;
        if (!(var$2 >= $ch && !ji_BufferedReader_fillBuffer($this, 0, $ch - var$2 | 0))) {
            var$4 = $this.$buffer6.data;
            var$2 = $this.$index2;
            if (var$4[var$2] == 10)
                $this.$index2 = var$2 + 1 | 0;
        }
    }
    return jl_AbstractStringBuilder_toString($line);
},
ji_BufferedReader_fillBuffer = ($this, $offset, $readLimit) => {
    let $totalRead, var$4, var$5, $charsRead;
    if ($this.$eof)
        return 0;
    $readLimit = jl_Math_min($readLimit, $this.$buffer6.data.length - $this.$index2 | 0);
    $totalRead = 0;
    a: {
        b: while (true) {
            var$4 = $this.$innerReader;
            var$5 = $this.$buffer6;
            $charsRead = var$5.data.length - $offset | 0;
            $charsRead = ji_InputStreamReader_read(var$4, var$5, $offset, $charsRead);
            if ($charsRead == (-1)) {
                $this.$eof = 1;
                break a;
            }
            c: {
                $offset = $offset + $charsRead | 0;
                $totalRead = $totalRead + $charsRead | 0;
                if ($offset < $readLimit) {
                    var$4 = $this.$innerReader;
                    if (!jn_Buffer_hasRemaining(var$4.$outBuffer) && !jn_Buffer_hasRemaining(var$4.$inBuffer) && ji_ByteArrayInputStream_available(var$4.$stream) <= 0 ? 0 : 1)
                        break c;
                }
                if ($totalRead > 0)
                    break b;
            }
        }
    }
    $this.$count1 = $offset;
    $this.$index2 = 0;
    $this.$mark0 = (-1);
    return $totalRead <= 0 ? 0 : 1;
},
ji_BufferedReader_requireOpened = $this => {
    let var$1;
    if ($this.$innerReader !== null)
        return;
    var$1 = new ji_IOException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
};
function ji_InputStreamReader() {
    let a = this; ji_Reader.call(a);
    a.$stream = null;
    a.$decoder = null;
    a.$inData = null;
    a.$inBuffer = null;
    a.$outData = null;
    a.$outBuffer = null;
    a.$streamEof = 0;
    a.$eof0 = 0;
}
let ji_InputStreamReader__init_1 = ($this, $in, $charsetName) => {
    let var$3, $$je;
    a: {
        try {
            var$3 = jnc_Charset_forName($charsetName.$toString());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_UnsupportedCharsetException) {
                break a;
            } else {
                throw $$e;
            }
        }
        ji_InputStreamReader__init_($this, $in, var$3);
        return;
    }
    $in = new ji_UnsupportedEncodingException;
    jl_Exception__init_($in, $charsetName);
    $rt_throw($in);
},
ji_InputStreamReader__init_3 = (var_0, var_1) => {
    let var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_1(var_2, var_0, var_1);
    return var_2;
},
ji_InputStreamReader__init_ = ($this, $in, $charset) => {
    let var$3, var$4;
    $charset = jnc_CharsetDecoder_onUnmappableCharacter(jnc_CharsetDecoder_onMalformedInput($charset.$newDecoder(), jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE);
    ji_Reader__init_($this);
    var$3 = $rt_createByteArray(8192);
    $this.$inData = var$3;
    $this.$inBuffer = jn_ByteBuffer_wrap(var$3);
    var$3 = $rt_createCharArray(1024);
    $this.$outData = var$3;
    var$4 = jn_CharBuffer_wrap(var$3);
    $this.$outBuffer = var$4;
    $this.$stream = $in;
    $this.$decoder = $charset;
    jn_Buffer_position(var$4, var$4.$limit0);
    $in = $this.$inBuffer;
    jn_Buffer_position($in, $in.$limit0);
},
ji_InputStreamReader__init_4 = (var_0, var_1) => {
    let var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_(var_2, var_0, var_1);
    return var_2;
},
ji_InputStreamReader__init_0 = ($this, $in) => {
    jnci_UTF8Charset_$callClinit();
    ji_InputStreamReader__init_($this, $in, jnci_UTF8Charset_INSTANCE);
},
ji_InputStreamReader__init_2 = var_0 => {
    let var_1 = new ji_InputStreamReader();
    ji_InputStreamReader__init_0(var_1, var_0);
    return var_1;
},
ji_InputStreamReader_close = $this => {
    return;
},
ji_InputStreamReader_read = ($this, $cbuf, $off, $len) => {
    let $bytesRead, $sz;
    a: {
        if (jn_Buffer_hasRemaining($this.$outBuffer)) {
            if ($len)
                break a;
            return 0;
        }
        if ($this.$eof0)
            return (-1);
        if (!$len)
            return 0;
        ji_InputStreamReader_ensureBufferHasData($this, 1);
    }
    $bytesRead = 0;
    while (true) {
        $sz = jl_Math_min($len, jn_Buffer_remaining($this.$outBuffer));
        jn_CharBuffer_get($this.$outBuffer, $cbuf, $off + $bytesRead | 0, $sz);
        $len = $len - $sz | 0;
        $bytesRead = $bytesRead + $sz | 0;
        if ($len <= 0)
            break;
        if (!ji_InputStreamReader_ensureBufferHasData($this, 0))
            break;
    }
    return $bytesRead;
},
ji_InputStreamReader_ensureBufferHasData = ($this, $force) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    if (jn_Buffer_hasRemaining($this.$outBuffer))
        return 1;
    if ($this.$eof0)
        $force = 0;
    else {
        var$2 = $this.$outBuffer;
        if (jn_CharBufferImpl_isReadOnly(var$2)) {
            var$2 = new jn_ReadOnlyBufferException;
            jl_Exception__init_0(var$2);
            $rt_throw(var$2);
        }
        a: {
            var$3 = jn_Buffer_remaining(var$2);
            var$4 = var$2.$position0;
            if (var$4 > 0) {
                var$5 = 0;
                var$6 = var$2;
                while (true) {
                    if (var$5 >= var$3)
                        break a;
                    var$7 = var$4 + 1 | 0;
                    var$4 = var$6.$data2[var$4] & 65535;
                    var$6.$data2[var$5] = var$4;
                    var$5 = var$5 + 1 | 0;
                    var$4 = var$7;
                }
            }
        }
        var$2.$position0 = var$3;
        var$2.$limit0 = var$2.$capacityImpl();
        var$2.$mark = (-1);
        var$7 = $force ? 0 : 1;
        $force = 1;
        var$8 = 0;
        b: {
            while (true) {
                if (jn_Buffer_hasRemaining($this.$inBuffer)) {
                    var$2 = $this.$outBuffer;
                    var$4 = var$2.$position0;
                    var$2 = jnc_CharsetDecoder_decode($this.$decoder, $this.$inBuffer, var$2, $this.$streamEof);
                    var$8 = 1;
                    var$7 = var$7 | ($this.$outBuffer.$position0 <= var$4 ? 0 : 1);
                    if (jnc_CoderResult_isOverflow(var$2))
                        break b;
                    if (!jnc_CoderResult_isUnderflow(var$2))
                        continue;
                }
                if (ji_ByteArrayInputStream_available($this.$stream) <= 0 && var$7) {
                    $force = 0;
                    break b;
                }
                if ($this.$streamEof)
                    var$3 = 0;
                else {
                    var$2 = $this.$inBuffer;
                    if (var$2.$readOnly0)
                        break;
                    var$3 = jn_Buffer_remaining(var$2);
                    if (var$2.$position0 > 0) {
                        var$6 = var$2.$data0;
                        var$6.set(new Int8Array(var$6.buffer, var$2.$data0.byteOffset + var$2.$position0 | 0, var$3), 0);
                    }
                    var$2.$position0 = var$3;
                    var$2.$limit0 = var$2.$capacityImpl();
                    var$2.$mark = (-1);
                    c: {
                        while (true) {
                            if (!jn_Buffer_hasRemaining($this.$inBuffer))
                                break c;
                            var$2 = $this.$stream;
                            var$9 = jn_ByteBuffer_array($this.$inBuffer);
                            var$6 = $this.$inBuffer;
                            var$4 = var$6.$position0;
                            var$3 = jn_Buffer_remaining(var$6);
                            var$3 = ji_ByteArrayInputStream_read(var$2, var$9, var$4, var$3);
                            if (var$3 == (-1))
                                break;
                            if (var$3 > 0) {
                                var$2 = $this.$inBuffer;
                                jn_Buffer_position(var$2, var$2.$position0 + var$3 | 0);
                                break c;
                            }
                        }
                        $this.$streamEof = 1;
                    }
                    jn_Buffer_flip($this.$inBuffer);
                    var$3 = 1;
                }
                if (!var$3)
                    break b;
            }
            var$2 = new jn_ReadOnlyBufferException;
            jl_Exception__init_0(var$2);
            $rt_throw(var$2);
        }
        if (!jn_Buffer_hasRemaining($this.$inBuffer) && $this.$streamEof && !(var$8 && !jnc_CoderResult_isUnderflow(jnc_CharsetDecoder_flush($this.$decoder, $this.$outBuffer))))
            $this.$eof0 = 1;
        jn_Buffer_flip($this.$outBuffer);
    }
    return $force;
};
function ju_StringTokenizer() {
    let a = this; jl_Object.call(a);
    a.$string0 = null;
    a.$delimiters = null;
    a.$returnDelimiters = 0;
    a.$position1 = 0;
}
let ju_StringTokenizer__init_0 = ($this, $string, $delimiters) => {
    if ($string === null) {
        $string = new jl_NullPointerException;
        jl_Exception__init_0($string);
        $rt_throw($string);
    }
    $this.$string0 = $string;
    $this.$delimiters = $delimiters;
    $this.$returnDelimiters = 0;
    $this.$position1 = 0;
},
ju_StringTokenizer__init_ = (var_0, var_1) => {
    let var_2 = new ju_StringTokenizer();
    ju_StringTokenizer__init_0(var_2, var_0, var_1);
    return var_2;
},
ju_StringTokenizer_hasMoreTokens = $this => {
    let var$1, $length, $i;
    if ($this.$delimiters === null) {
        var$1 = new jl_NullPointerException;
        jl_Exception__init_0(var$1);
        $rt_throw(var$1);
    }
    a: {
        $length = $this.$string0.$nativeString.length;
        $i = $this.$position1;
        if ($i < $length) {
            if ($this.$returnDelimiters)
                return 1;
            while (true) {
                if ($i >= $length)
                    break a;
                if (jl_String_indexOf($this.$delimiters, jl_String_charAt($this.$string0, $i), 0) == (-1))
                    return 1;
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
},
ju_StringTokenizer_nextToken = $this => {
    let var$1, $i, $length, var$4, var$5;
    if ($this.$delimiters === null) {
        var$1 = new jl_NullPointerException;
        jl_Exception__init_0(var$1);
        $rt_throw(var$1);
    }
    $i = $this.$position1;
    $length = $this.$string0.$nativeString.length;
    if ($i < $length) {
        if ($this.$returnDelimiters) {
            if (jl_String_indexOf($this.$delimiters, jl_String_charAt($this.$string0, $this.$position1), 0) >= 0) {
                var$1 = $this.$string0;
                $i = $this.$position1;
                $this.$position1 = $i + 1 | 0;
                var$4 = jl_String_charAt(var$1, $i);
                var$1 = new jl_String;
                var$5 = $rt_createCharArray(1);
                var$5.data[0] = var$4;
                jl_String__init_1(var$1, var$5);
                return var$1;
            }
            $this.$position1 = $this.$position1 + 1 | 0;
            while (true) {
                var$4 = $this.$position1;
                if (var$4 >= $length)
                    break;
                if (jl_String_indexOf($this.$delimiters, jl_String_charAt($this.$string0, var$4), 0) >= 0)
                    return jl_String_substring($this.$string0, $i, $this.$position1);
                $this.$position1 = $this.$position1 + 1 | 0;
            }
            return jl_String_substring0($this.$string0, $i);
        }
        while (true) {
            var$4 = $rt_compare($i, $length);
            if (var$4 >= 0)
                break;
            if (jl_String_indexOf($this.$delimiters, jl_String_charAt($this.$string0, $i), 0) < 0)
                break;
            $i = $i + 1 | 0;
        }
        $this.$position1 = $i;
        if (var$4 < 0) {
            $this.$position1 = $i + 1 | 0;
            while (true) {
                var$4 = $this.$position1;
                if (var$4 >= $length)
                    break;
                if (jl_String_indexOf($this.$delimiters, jl_String_charAt($this.$string0, var$4), 0) >= 0)
                    return jl_String_substring($this.$string0, $i, $this.$position1);
                $this.$position1 = $this.$position1 + 1 | 0;
            }
            return jl_String_substring0($this.$string0, $i);
        }
    }
    var$1 = new ju_NoSuchElementException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
cbgu_StreamUtils = $rt_classWithoutFields(),
cbgu_StreamUtils_EMPTY_BYTES = null,
cbgu_StreamUtils_copyStreamToByteArray = ($input, $estimatedSize) => {
    let $baos, var$4, var$5, var$6;
    $baos = new cbgu_StreamUtils$OptimizedByteArrayOutputStream;
    ji_ByteArrayOutputStream__init_($baos, jl_Math_max(0, $estimatedSize));
    var$4 = $rt_createByteArray(4096);
    $estimatedSize = var$4.data.length;
    var$5 = $input;
    $input = $baos;
    while (true) {
        var$6 = ji_ByteArrayInputStream_read(var$5, var$4, 0, $estimatedSize);
        if (var$6 == (-1))
            break;
        ji_ByteArrayOutputStream_write($input, var$4, 0, var$6);
    }
    return cbgu_StreamUtils$OptimizedByteArrayOutputStream_toByteArray($baos);
},
cbgu_StreamUtils_closeQuietly = $c => {
    let $$je;
    a: {
        if ($c !== null)
            try {
                $c.$close();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
    }
},
cbgu_StreamUtils__clinit_ = () => {
    cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
};
function cbggg_BitmapFontCache() {
    let a = this; jl_Object.call(a);
    a.$font0 = null;
    a.$integer = 0;
    a.$layouts = null;
    a.$pooledLayouts = null;
    a.$glyphCount0 = 0;
    a.$x3 = 0.0;
    a.$y3 = 0.0;
    a.$color8 = null;
    a.$currentTint = 0.0;
    a.$pageVertices = null;
    a.$idx0 = null;
    a.$pageGlyphIndices = null;
    a.$tempGlyphCount = null;
}
let cbggg_BitmapFontCache_tempColor = null,
cbggg_BitmapFontCache_requirePageGlyphs = ($this, $page, $glyphCount) => {
    let var$3, var$4, $vertexCount, var$6, var$7, $newVertices, $vertices;
    var$3 = $this.$pageGlyphIndices;
    if (var$3 !== null) {
        var$3 = var$3.data;
        if ($glyphCount > var$3[$page].$items1.data.length) {
            var$4 = var$3[$page];
            $vertexCount = $glyphCount - var$3[$page].$size1 | 0;
            if ($vertexCount < 0) {
                var$4 = new jl_IllegalArgumentException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                jl_AbstractStringBuilder_append(var$6, $rt_s(410));
                jl_Exception__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$6, $vertexCount)));
                $rt_throw(var$4);
            }
            var$7 = var$4.$size1 + $vertexCount | 0;
            if (var$7 > var$4.$items1.data.length)
                cbgu_IntArray_resize(var$4, jl_Math_max(jl_Math_max(8, var$7), var$4.$size1 * 1.75 | 0));
        }
    }
    var$3 = $this.$idx0.data;
    $vertexCount = var$3[$page] + ($glyphCount * 20 | 0) | 0;
    $newVertices = $this.$pageVertices.data;
    $vertices = $newVertices[$page];
    if ($vertices === null)
        $newVertices[$page] = $rt_createFloatArray($vertexCount);
    else if ($vertices.data.length < $vertexCount) {
        $newVertices = $rt_createFloatArray($vertexCount);
        jl_System_fastArraycopy($vertices, 0, $newVertices, 0, var$3[$page]);
        $this.$pageVertices.data[$page] = $newVertices;
    }
},
cbggg_BitmapFontCache_addGlyph = ($this, $glyph, $x, $y, $color) => {
    let var$5, $scaleX, $scaleY, $width, $height, $u, $u2, $v, $v2, $x2, $y2, $page, $vertices, $idx, var$19, var$20;
    var$5 = $this.$font0.$data10;
    $scaleX = var$5.$scaleX;
    $scaleY = var$5.$scaleY;
    $x = $x + $glyph.$xoffset * $scaleX;
    $y = $y + $glyph.$yoffset * $scaleY;
    $width = $glyph.$width * $scaleX;
    $height = $glyph.$height * $scaleY;
    $u = $glyph.$u;
    $u2 = $glyph.$u2;
    $v = $glyph.$v;
    $v2 = $glyph.$v2;
    if ($this.$integer) {
        $x = jl_Math_round($x);
        $y = jl_Math_round($y);
        $width = jl_Math_round($width);
        $height = jl_Math_round($height);
    }
    $x2 = $x + $width;
    $y2 = $y + $height;
    $page = $glyph.$page;
    $vertices = $this.$idx0.data;
    $idx = $vertices[$page];
    $vertices[$page] = $vertices[$page] + 20 | 0;
    $vertices = $this.$pageGlyphIndices;
    if ($vertices !== null) {
        $glyph = $vertices.data[$page];
        var$19 = $this.$glyphCount0;
        $this.$glyphCount0 = var$19 + 1 | 0;
        cbgu_IntArray_add($glyph, var$19);
    }
    $vertices = $this.$pageVertices.data[$page].data;
    var$20 = $idx + 1 | 0;
    $vertices[$idx] = $x;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $y;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $color;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $u;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $v;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $x;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $y2;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $color;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $u;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $v2;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $x2;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $y2;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $color;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $u2;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $v2;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $x2;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $y;
    var$19 = var$20 + 1 | 0;
    $vertices[var$20] = $color;
    var$20 = var$19 + 1 | 0;
    $vertices[var$19] = $u2;
    $vertices[var$20] = $v;
},
cbggg_BitmapFontCache__clinit_ = () => {
    cbggg_BitmapFontCache_tempColor = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
},
otcin_Buffers = $rt_classWithoutFields(),
otcin_Buffers_free = $buffer => {
    let var$2;
    if (!$buffer.$direct) {
        var$2 = new jl_IllegalArgumentException;
        jl_Exception__init_(var$2, $rt_s(613));
        $rt_throw(var$2);
    }
    if ($rt_isInstance($buffer, jn_NativeBuffer))
        $buffer.$release();
};
function cajs_JoltScreen$CubeData() {
    let a = this; jl_Object.call(a);
    a.$body = null;
    a.$modelInstance = null;
}
let cajs_JoltScreen$CubeData__init_0 = $this => {
    return;
},
cajs_JoltScreen$CubeData__init_ = () => {
    let var_0 = new cajs_JoltScreen$CubeData();
    cajs_JoltScreen$CubeData__init_0(var_0);
    return var_0;
};
function cbggg_ModelInstance() {
    let a = this; jl_Object.call(a);
    a.$materials = null;
    a.$nodes = null;
    a.$animations = null;
    a.$model0 = null;
    a.$transform = null;
    a.$userData0 = null;
}
let cbggg_ModelInstance_defaultShareKeyframes = 0,
cbggg_ModelInstance__init_0 = ($this, $model) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$2 = null;
    $this.$materials = cbgu_Array__init_();
    $this.$nodes = cbgu_Array__init_();
    $this.$animations = cbgu_Array__init_();
    $this.$model0 = $model;
    $this.$transform = cbgm_Matrix4__init_();
    if (var$2 === null) {
        var$3 = $model.$nodes0;
        var$4 = 0;
        var$5 = var$3.$size0;
        while (var$4 < var$5) {
            var$6 = cbgu_Array_get(var$3, var$4);
            cbgu_Array_add($this.$nodes, cbgggm_Node_copy(var$6));
            var$4 = var$4 + 1 | 0;
        }
        cbggg_ModelInstance_invalidate($this);
    } else {
        var$3 = $model.$nodes0;
        var$4 = 0;
        var$5 = var$3.$size0;
        while (var$4 < var$5) {
            var$7 = var$2.data;
            var$8 = cbgu_Array_get(var$3, var$4);
            var$9 = var$7.length;
            var$10 = 0;
            a: {
                while (true) {
                    if (var$10 >= var$9)
                        break a;
                    if (var$7[var$10].$equals(var$8.$id))
                        break;
                    var$10 = var$10 + 1 | 0;
                }
                cbgu_Array_add($this.$nodes, cbgggm_Node_copy(var$8));
            }
            var$4 = var$4 + 1 | 0;
        }
        cbggg_ModelInstance_invalidate($this);
    }
    $model = $model.$animations0;
    var$4 = cbggg_ModelInstance_defaultShareKeyframes;
    var$3 = cbgu_Array_iterator($model);
    while (cbgu_Array$ArrayIterator_hasNext(var$3)) {
        cbggg_ModelInstance_copyAnimation($this, cbgu_Array$ArrayIterator_next(var$3), var$4);
    }
    var$4 = $this.$nodes.$size0;
    var$5 = 0;
    while (var$5 < var$4) {
        cbgggm_Node_calculateTransforms(cbgu_Array_get($this.$nodes, var$5), 1);
        var$5 = var$5 + 1 | 0;
    }
    var$5 = 0;
    while (var$5 < var$4) {
        cbgggm_Node_calculateBoneTransforms(cbgu_Array_get($this.$nodes, var$5), 1);
        var$5 = var$5 + 1 | 0;
    }
},
cbggg_ModelInstance__init_ = var_0 => {
    let var_1 = new cbggg_ModelInstance();
    cbggg_ModelInstance__init_0(var_1, var_0);
    return var_1;
},
cbggg_ModelInstance_invalidate0 = ($this, $node) => {
    let $i, $n, $part, $bindPose, $j, var$7, var$8, var$9, $midx, $n_0, var$12, var$13;
    $i = 0;
    $n = $node.$parts.$size0;
    while ($i < $n) {
        a: {
            $part = cbgu_Array_get($node.$parts, $i);
            $bindPose = $part.$invBoneBindTransforms;
            if ($bindPose !== null) {
                $j = 0;
                while (true) {
                    if ($j >= $bindPose.$size4)
                        break a;
                    var$7 = $bindPose.$keys.data;
                    var$7[$j] = cbggg_ModelInstance_getNode($this, var$7[$j].$id);
                    $j = $j + 1 | 0;
                }
            }
        }
        if (!cbgu_Array_contains($this.$materials, $part.$material0, 1)) {
            b: {
                c: {
                    $bindPose = $this.$materials;
                    var$8 = $part.$material0;
                    var$9 = $bindPose.$items;
                    if (var$8 === null) {
                        $midx = 0;
                        $n_0 = $bindPose.$size0;
                        while (true) {
                            if ($midx >= $n_0)
                                break c;
                            if (var$9.data[$midx] === var$8)
                                break;
                            $midx = $midx + 1 | 0;
                        }
                        break b;
                    }
                    $midx = 0;
                    $j = $bindPose.$size0;
                    while (true) {
                        if ($midx >= $j)
                            break c;
                        $bindPose = var$9.data[$midx];
                        if (cbggg_Material_equals(var$8, $bindPose))
                            break;
                        $midx = $midx + 1 | 0;
                    }
                    break b;
                }
                $midx = (-1);
            }
            if ($midx >= 0)
                $part.$material0 = cbgu_Array_get($this.$materials, $midx);
            else {
                $bindPose = $this.$materials;
                var$8 = $part.$material0;
                var$12 = cbggg_Material__init_2(var$8.$id1);
                var$13 = cbggg_Attributes_iterator(var$8);
                while (cbgu_Array$ArrayIterator_hasNext(var$13)) {
                    cbggg_Attributes_set(var$12, (cbgu_Array$ArrayIterator_next(var$13)).$copy1());
                }
                $part.$material0 = var$12;
                cbgu_Array_add($bindPose, var$12);
            }
        }
        $i = $i + 1 | 0;
    }
    $i = 0;
    $n_0 = $node.$children0.$size0;
    while ($i < $n_0) {
        cbggg_ModelInstance_invalidate0($this, cbgu_Array_get($node.$children0, $i));
        $i = $i + 1 | 0;
    }
},
cbggg_ModelInstance_invalidate = $this => {
    let $i, $n;
    $i = 0;
    $n = $this.$nodes.$size0;
    while ($i < $n) {
        cbggg_ModelInstance_invalidate0($this, cbgu_Array_get($this.$nodes, $i));
        $i = $i + 1 | 0;
    }
},
cbggg_ModelInstance_copyAnimation = ($this, $sourceAnim, $shareKeyframes) => {
    let $animation, var$4, $nanim, $node, $nodeAnim, $kf;
    $animation = new cbgggm_Animation;
    $animation.$nodeAnimations = cbgu_Array__init_();
    $animation.$id3 = $sourceAnim.$id3;
    $animation.$duration = $sourceAnim.$duration;
    var$4 = cbgu_Array_iterator($sourceAnim.$nodeAnimations);
    while (cbgu_Array$ArrayIterator_hasNext(var$4)) {
        $nanim = cbgu_Array$ArrayIterator_next(var$4);
        $node = cbggg_ModelInstance_getNode($this, $nanim.$node0.$id);
        if ($node === null)
            continue;
        a: {
            $nodeAnim = new cbgggm_NodeAnimation;
            $nodeAnim.$translation = null;
            $nodeAnim.$rotation = null;
            $nodeAnim.$scaling = null;
            $nodeAnim.$node0 = $node;
            if ($shareKeyframes) {
                $nodeAnim.$translation = $nanim.$translation;
                $nodeAnim.$rotation = $nanim.$rotation;
                $nodeAnim.$scaling = $nanim.$scaling;
            } else {
                b: {
                    if ($nanim.$translation !== null) {
                        $nodeAnim.$translation = cbgu_Array__init_();
                        $sourceAnim = cbgu_Array_iterator($nanim.$translation);
                        while (true) {
                            if (!cbgu_Array$ArrayIterator_hasNext($sourceAnim))
                                break b;
                            $kf = cbgu_Array$ArrayIterator_next($sourceAnim);
                            cbgu_Array_add($nodeAnim.$translation, cbgggm_NodeKeyframe__init_($kf.$keytime, $kf.$value2));
                        }
                    }
                }
                c: {
                    if ($nanim.$rotation !== null) {
                        $nodeAnim.$rotation = cbgu_Array__init_();
                        $sourceAnim = cbgu_Array_iterator($nanim.$rotation);
                        while (true) {
                            if (!cbgu_Array$ArrayIterator_hasNext($sourceAnim))
                                break c;
                            $kf = cbgu_Array$ArrayIterator_next($sourceAnim);
                            cbgu_Array_add($nodeAnim.$rotation, cbgggm_NodeKeyframe__init_($kf.$keytime, $kf.$value2));
                        }
                    }
                }
                if ($nanim.$scaling !== null) {
                    $nodeAnim.$scaling = cbgu_Array__init_();
                    $sourceAnim = cbgu_Array_iterator($nanim.$scaling);
                    while (true) {
                        if (!cbgu_Array$ArrayIterator_hasNext($sourceAnim))
                            break a;
                        $kf = cbgu_Array$ArrayIterator_next($sourceAnim);
                        cbgu_Array_add($nodeAnim.$scaling, cbgggm_NodeKeyframe__init_($kf.$keytime, $kf.$value2));
                    }
                }
            }
        }
        if (!($nodeAnim.$translation === null && $nodeAnim.$rotation === null && $nodeAnim.$scaling === null))
            cbgu_Array_add($animation.$nodeAnimations, $nodeAnim);
    }
    if ($animation.$nodeAnimations.$size0 > 0)
        cbgu_Array_add($this.$animations, $animation);
},
cbggg_ModelInstance_getRenderables0 = ($this, $renderables, $pool) => {
    let var$3;
    var$3 = cbgu_Array_iterator($this.$nodes);
    while (cbgu_Array$ArrayIterator_hasNext(var$3)) {
        cbggg_ModelInstance_getRenderables($this, cbgu_Array$ArrayIterator_next(var$3), $renderables, $pool);
    }
},
cbggg_ModelInstance_getRenderables = ($this, $node, $renderables, $pool) => {
    let $child, var$5, $nodePart, var$7, var$8, var$9;
    a: {
        $child = $node.$parts;
        if ($child.$size0 > 0) {
            var$5 = cbgu_Array_iterator($child);
            $child = $pool;
            while (true) {
                if (!cbgu_Array$ArrayIterator_hasNext(var$5))
                    break a;
                $nodePart = cbgu_Array$ArrayIterator_next(var$5);
                if ($nodePart.$enabled) {
                    b: {
                        var$7 = cbgu_FlushablePool_obtain($child);
                        var$7.$environment = null;
                        var$7.$material = null;
                        var$8 = var$7.$meshPart;
                        var$9 = null;
                        var$8.$id2 = $rt_s(8);
                        var$8.$mesh = var$9;
                        var$8.$offset0 = 0;
                        var$8.$size9 = 0;
                        var$8.$primitiveType = 0;
                        cbgm_Vector3_set(var$8.$center, 0.0, 0.0, 0.0);
                        cbgm_Vector3_set(var$8.$halfExtents, 0.0, 0.0, 0.0);
                        var$8.$radius = (-1.0);
                        var$7.$shader = null;
                        var$7.$userData = null;
                        var$9 = var$7;
                        cbgggm_NodePart_setRenderable($nodePart, var$9);
                        if ($nodePart.$bones0 === null) {
                            $nodePart = $this.$transform;
                            if ($nodePart !== null) {
                                cbgm_Matrix4_mul(cbgm_Matrix4_set(var$9.$worldTransform, $nodePart), $node.$globalTransform);
                                break b;
                            }
                        }
                        $nodePart = $this.$transform;
                        if ($nodePart === null)
                            cbgm_Matrix4_idt(var$9.$worldTransform);
                        else
                            cbgm_Matrix4_set(var$9.$worldTransform, $nodePart);
                    }
                    var$9.$userData = $this.$userData0;
                    cbgu_Array_add($renderables, var$9);
                }
            }
        }
    }
    var$5 = cbgu_Array_iterator($node.$children0);
    while (cbgu_Array$ArrayIterator_hasNext(var$5)) {
        cbggg_ModelInstance_getRenderables($this, cbgu_Array$ArrayIterator_next(var$5), $renderables, $pool);
    }
},
cbggg_ModelInstance_getNode = ($this, $id) => {
    return cbgggm_Node_getNode($this.$nodes, $id, 1, 0);
},
cbggg_ModelInstance__clinit_ = () => {
    cbggg_ModelInstance_defaultShareKeyframes = 1;
},
jg_JoltGdx = $rt_classWithoutFields(),
jg_JoltGdx_mat44_to_matrix4 = ($in, $out) => {
    let $outArray, $col, var$5, $vec4, $row, var$8, var$9;
    $outArray = $out.$val;
    $col = 0;
    while ($col < 4) {
        var$5 = jm_Mat44_internal_native_GetColumn4$js_body$_124(Long_lo($in.$nativeData.$cPointer), $col);
        if (!var$5)
            $vec4 = null;
        else {
            if ($in.$Vec4_TEMP_GEN_1 === null) {
                $out = new jm_Vec4;
                ji_IDLBase__init_($out);
                $in.$Vec4_TEMP_GEN_1 = $out;
            }
            ji_IDLNativeData_reset($in.$Vec4_TEMP_GEN_1.$nativeData, Long_fromInt(var$5), 0);
            $vec4 = $in.$Vec4_TEMP_GEN_1;
        }
        $row = 0;
        while ($row < 4) {
            var$8 = $outArray.data;
            var$9 = jm_Vec4_internal_native_GetComponent$js_body$_42(Long_lo($vec4.$nativeData.$cPointer), $row);
            var$8[($col * 4 | 0) + $row | 0] = var$9;
            $row = $row + 1 | 0;
        }
        $col = $col + 1 | 0;
    }
},
jpc_ObjectLayerPairFilter = $rt_classWithoutFields(ji_IDLBase),
jpc_ObjectLayerPairFilter_deleteNative = $this => {
    jpc_ObjectLayerPairFilter_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jpc_ObjectLayerPairFilter_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.ObjectLayerPairFilterJS);
    jolt.destroy(jsObj);
},
jpc_ObjectLayerPairFilterTable = $rt_classWithoutFields(jpc_ObjectLayerPairFilter),
jpc_ObjectLayerPairFilterTable_T_01 = null,
jpc_ObjectLayerPairFilterTable_T_02 = null,
jpc_ObjectLayerPairFilterTable_T_03 = null,
jpc_ObjectLayerPairFilterTable__init_0 = ($this, var$1, $c) => {
    ji_IDLBase__init_($this);
},
jpc_ObjectLayerPairFilterTable__init_ = (var_0, var_1) => {
    let var_2 = new jpc_ObjectLayerPairFilterTable();
    jpc_ObjectLayerPairFilterTable__init_0(var_2, var_0, var_1);
    return var_2;
},
jpc_ObjectLayerPairFilterTable_EnableCollision = ($this, $inLayer1, $inLayer2) => {
    jpc_ObjectLayerPairFilterTable_internal_native_EnableCollision$js_body$_8(Long_lo($this.$nativeData.$cPointer), $inLayer1, $inLayer2);
},
jpc_ObjectLayerPairFilterTable__clinit_ = () => {
    jpc_ObjectLayerPairFilterTable_T_01 = jpc_ObjectLayerPairFilterTable__init_(1, 1);
    jpc_ObjectLayerPairFilterTable_T_02 = jpc_ObjectLayerPairFilterTable__init_(1, 1);
    jpc_ObjectLayerPairFilterTable_T_03 = jpc_ObjectLayerPairFilterTable__init_(1, 1);
},
jpc_ObjectLayerPairFilterTable_internal_native_create_int$js_body$_1 = var$1 => {
    var jsObj = new jolt.ObjectLayerPairFilterTable(var$1);
    return jolt.getPointer(jsObj);
},
jpc_ObjectLayerPairFilterTable_internal_native_EnableCollision$js_body$_8 = (var$1, var$2, var$3) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.ObjectLayerPairFilterTable);
    jsObj.EnableCollision(var$2, var$3);
},
caju_JoltLayers = $rt_classWithoutFields(),
caju_JoltLayers_NON_MOVING = 0,
caju_JoltLayers_MOVING = 0,
caju_JoltLayers_DEBRIS = 0,
caju_JoltLayers_SENSOR = 0,
caju_JoltLayers_NUM_LAYERS = 0,
caju_JoltLayers__clinit_ = () => {
    caju_JoltLayers_NON_MOVING = 4;
    caju_JoltLayers_MOVING = 5;
    caju_JoltLayers_DEBRIS = 6;
    caju_JoltLayers_SENSOR = 7;
    caju_JoltLayers_NUM_LAYERS = 8;
},
jpcb_BroadPhaseLayerInterface = $rt_classWithoutFields(ji_IDLBase),
jpcb_BroadPhaseLayerInterface_T_01 = null,
jpcb_BroadPhaseLayerInterface_T_02 = null,
jpcb_BroadPhaseLayerInterface_T_03 = null,
jpcb_BroadPhaseLayerInterface_deleteNative = $this => {
    jpcb_BroadPhaseLayerInterface_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jpcb_BroadPhaseLayerInterface__clinit_ = () => {
    let var$1;
    var$1 = new jpcb_BroadPhaseLayerInterface;
    ji_IDLBase__init_(var$1);
    jpcb_BroadPhaseLayerInterface_T_01 = var$1;
    var$1 = new jpcb_BroadPhaseLayerInterface;
    ji_IDLBase__init_(var$1);
    jpcb_BroadPhaseLayerInterface_T_02 = var$1;
    var$1 = new jpcb_BroadPhaseLayerInterface;
    ji_IDLBase__init_(var$1);
    jpcb_BroadPhaseLayerInterface_T_03 = var$1;
},
jpcb_BroadPhaseLayerInterface_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BroadPhaseLayerInterface);
    jolt.destroy(jsObj);
},
jpcb_BroadPhaseLayerInterfaceTable = $rt_classWithoutFields(jpcb_BroadPhaseLayerInterface),
jpcb_BroadPhaseLayerInterfaceTable_T_01 = null,
jpcb_BroadPhaseLayerInterfaceTable_T_02 = null,
jpcb_BroadPhaseLayerInterfaceTable_T_03 = null,
jpcb_BroadPhaseLayerInterfaceTable__init_0 = ($this, var$1, $c) => {
    ji_IDLBase__init_($this);
},
jpcb_BroadPhaseLayerInterfaceTable__init_ = (var_0, var_1) => {
    let var_2 = new jpcb_BroadPhaseLayerInterfaceTable();
    jpcb_BroadPhaseLayerInterfaceTable__init_0(var_2, var_0, var_1);
    return var_2;
},
jpcb_BroadPhaseLayerInterfaceTable_MapObjectToBroadPhaseLayer = ($this, $inObjectLayer, $inBroadPhaseLayer) => {
    let var$3, var$4;
    var$3 = Long_lo($this.$nativeData.$cPointer);
    var$4 = Long_lo(($inBroadPhaseLayer === null ? Long_ZERO : $inBroadPhaseLayer.$nativeData.$cPointer));
    jpcb_BroadPhaseLayerInterfaceTable_internal_native_MapObjectToBroadPhaseLayer$js_body$_4(var$3, $inObjectLayer, var$4);
},
jpcb_BroadPhaseLayerInterfaceTable__clinit_ = () => {
    jpcb_BroadPhaseLayerInterfaceTable_T_01 = jpcb_BroadPhaseLayerInterfaceTable__init_(1, 1);
    jpcb_BroadPhaseLayerInterfaceTable_T_02 = jpcb_BroadPhaseLayerInterfaceTable__init_(1, 1);
    jpcb_BroadPhaseLayerInterfaceTable_T_03 = jpcb_BroadPhaseLayerInterfaceTable__init_(1, 1);
},
jpcb_BroadPhaseLayerInterfaceTable_internal_native_create_int_int$js_body$_1 = (var$1, var$2) => {
    var jsObj = new jolt.BroadPhaseLayerInterfaceTable(var$1, var$2);
    return jolt.getPointer(jsObj);
},
jpcb_BroadPhaseLayerInterfaceTable_internal_native_MapObjectToBroadPhaseLayer$js_body$_4 = (var$1, var$2, var$3) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BroadPhaseLayerInterfaceTable);
    jsObj.MapObjectToBroadPhaseLayer(var$2, var$3);
},
jpcb_BroadPhaseLayer = $rt_classWithoutFields(ji_IDLBase);
let jpcb_BroadPhaseLayer_T_01 = null,
jpcb_BroadPhaseLayer_T_02 = null,
jpcb_BroadPhaseLayer_T_03 = null,
jpcb_BroadPhaseLayer__init_0 = ($this, var$1) => {
    let var$2;
    ji_IDLBase__init_($this);
    var$2 = jpcb_BroadPhaseLayer_internal_native_create_short$js_body$_1(var$1);
    ji_IDLNativeData_reset($this.$nativeData, Long_fromInt(var$2), 1);
},
jpcb_BroadPhaseLayer__init_ = var_0 => {
    let var_1 = new jpcb_BroadPhaseLayer();
    jpcb_BroadPhaseLayer__init_0(var_1, var_0);
    return var_1;
},
jpcb_BroadPhaseLayer_deleteNative = $this => {
    jpcb_BroadPhaseLayer_internal_native_deleteNative$js_body$_6(Long_lo($this.$nativeData.$cPointer));
},
jpcb_BroadPhaseLayer__clinit_ = () => {
    let var$1;
    var$1 = new jpcb_BroadPhaseLayer;
    ji_IDLBase__init_(var$1);
    jpcb_BroadPhaseLayer_T_01 = var$1;
    var$1 = new jpcb_BroadPhaseLayer;
    ji_IDLBase__init_(var$1);
    jpcb_BroadPhaseLayer_T_02 = var$1;
    var$1 = new jpcb_BroadPhaseLayer;
    ji_IDLBase__init_(var$1);
    jpcb_BroadPhaseLayer_T_03 = var$1;
},
jpcb_BroadPhaseLayer_internal_native_create_short$js_body$_1 = var$1 => {
    var jsObj = new jolt.BroadPhaseLayer(var$1);
    return jolt.getPointer(jsObj);
},
jpcb_BroadPhaseLayer_internal_native_deleteNative$js_body$_6 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BroadPhaseLayer);
    jolt.destroy(jsObj);
},
jpcb_ObjectVsBroadPhaseLayerFilter = $rt_classWithoutFields(ji_IDLBase),
jpcb_ObjectVsBroadPhaseLayerFilter_T_01 = null,
jpcb_ObjectVsBroadPhaseLayerFilter_T_02 = null,
jpcb_ObjectVsBroadPhaseLayerFilter_T_03 = null,
jpcb_ObjectVsBroadPhaseLayerFilter_deleteNative = $this => {
    jpcb_ObjectVsBroadPhaseLayerFilter_internal_native_deleteNative$js_body$_6(Long_lo($this.$nativeData.$cPointer));
},
jpcb_ObjectVsBroadPhaseLayerFilter__clinit_ = () => {
    let var$1;
    var$1 = new jpcb_ObjectVsBroadPhaseLayerFilter;
    ji_IDLBase__init_(var$1);
    jpcb_ObjectVsBroadPhaseLayerFilter_T_01 = var$1;
    var$1 = new jpcb_ObjectVsBroadPhaseLayerFilter;
    ji_IDLBase__init_(var$1);
    jpcb_ObjectVsBroadPhaseLayerFilter_T_02 = var$1;
    var$1 = new jpcb_ObjectVsBroadPhaseLayerFilter;
    ji_IDLBase__init_(var$1);
    jpcb_ObjectVsBroadPhaseLayerFilter_T_03 = var$1;
},
jpcb_ObjectVsBroadPhaseLayerFilter_internal_native_deleteNative$js_body$_6 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.ObjectVsBroadPhaseLayerFilter);
    jolt.destroy(jsObj);
},
jpcb_ObjectVsBroadPhaseLayerFilterTable = $rt_classWithoutFields(jpcb_ObjectVsBroadPhaseLayerFilter),
jpcb_ObjectVsBroadPhaseLayerFilterTable_T_01 = null,
jpcb_ObjectVsBroadPhaseLayerFilterTable_T_02 = null,
jpcb_ObjectVsBroadPhaseLayerFilterTable_T_03 = null,
jpcb_ObjectVsBroadPhaseLayerFilterTable__init_0 = ($this, var$1, $c) => {
    ji_IDLBase__init_($this);
},
jpcb_ObjectVsBroadPhaseLayerFilterTable__init_ = (var_0, var_1) => {
    let var_2 = new jpcb_ObjectVsBroadPhaseLayerFilterTable();
    jpcb_ObjectVsBroadPhaseLayerFilterTable__init_0(var_2, var_0, var_1);
    return var_2;
},
jpcb_ObjectVsBroadPhaseLayerFilterTable__clinit_ = () => {
    jpcb_ObjectVsBroadPhaseLayerFilterTable_T_01 = jpcb_ObjectVsBroadPhaseLayerFilterTable__init_(1, 1);
    jpcb_ObjectVsBroadPhaseLayerFilterTable_T_02 = jpcb_ObjectVsBroadPhaseLayerFilterTable__init_(1, 1);
    jpcb_ObjectVsBroadPhaseLayerFilterTable_T_03 = jpcb_ObjectVsBroadPhaseLayerFilterTable__init_(1, 1);
},
jpcb_ObjectVsBroadPhaseLayerFilterTable_internal_native_create_BroadPhaseLayerInterface_int_ObjectLayerPairFilter_int$js_body$_1 = (var$1, var$2, var$3, var$4) => {
    var jsObj = new jolt.ObjectVsBroadPhaseLayerFilterTable(var$1, var$2, var$3, var$4);
    return jolt.getPointer(jsObj);
},
jc_Factory = $rt_classWithoutFields(ji_IDLBase),
jc_Factory_T_01 = null,
jc_Factory_T_02 = null,
jc_Factory_T_03 = null,
jc_Factory_deleteNative = $this => {
    jc_Factory_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jc_Factory_set_sInstance = $sInstance => {
    jolt.Factory.prototype.set_sInstance(Long_lo(($sInstance === null ? Long_ZERO : $sInstance.$nativeData.$cPointer)));
},
jc_Factory__clinit_ = () => {
    let var$1;
    var$1 = new jc_Factory;
    ji_IDLBase__init_(var$1);
    jc_Factory_T_01 = var$1;
    var$1 = new jc_Factory;
    ji_IDLBase__init_(var$1);
    jc_Factory_T_02 = var$1;
    var$1 = new jc_Factory;
    ji_IDLBase__init_(var$1);
    jc_Factory_T_03 = var$1;
},
jc_Factory_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Factory);
    jolt.destroy(jsObj);
},
jm_Vec3 = $rt_classWithoutFields(ji_IDLBase),
jm_Vec3_deleteNative = $this => {
    jm_Vec3_internal_native_deleteNative$js_body$_5(Long_lo($this.$nativeData.$cPointer));
},
jm_Vec3_Set = ($this, $inX, $inY, $inZ) => {
    jm_Vec3_internal_native_Set$js_body$_63(Long_lo($this.$nativeData.$cPointer), $inX, $inY, $inZ);
},
jm_Vec3_internal_native_deleteNative$js_body$_5 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Vec3);
    jolt.destroy(jsObj);
},
jm_Vec3_internal_native_Set$js_body$_63 = (var$1, var$2, var$3, var$4) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Vec3);
    jsObj.Set(var$2, var$3, var$4);
};
function cbggg_Environment() {
    cbggg_Attributes.call(this);
    this.$shadowMap = null;
}
let cbggg_Environment_add = ($this, var$1) => {
    let var$2;
    cbggga_DirectionalLightsAttribute_$callClinit();
    var$2 = cbggg_Attributes_get($this, cbggga_DirectionalLightsAttribute_Type);
    if (var$2 === null) {
        var$2 = cbggga_DirectionalLightsAttribute__init_0();
        cbggg_Attributes_set($this, var$2);
    }
    cbgu_Array_add(var$2.$lights1, var$1);
    return $this;
};
function nmgsu_IBLBuilder$Light() {
    let a = this; jl_Object.call(a);
    a.$color6 = null;
    a.$direction4 = null;
    a.$exponent1 = 0.0;
}
let nmgsu_IBLBuilder$Light_localSunDir = null,
nmgsu_IBLBuilder$Light_localDir = null,
nmgsu_IBLBuilder$Light_localUp = null,
nmgsu_IBLBuilder$Light_matrix = null,
nmgsu_IBLBuilder$Light_$callClinit = () => {
    nmgsu_IBLBuilder$Light_$callClinit = $rt_eraseClinit(nmgsu_IBLBuilder$Light);
    nmgsu_IBLBuilder$Light__clinit_();
},
nmgsu_IBLBuilder$Light_render = ($this, $side, $shapes, $shader, $strength, $exponent) => {
    let var$6, var$7, var$8;
    cbggg_ShaderProgram_bind($shader);
    var$6 = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($shader);
    var$6.$glUniform1f(cbggg_ShaderProgram_fetchUniformLocation0($shader, $rt_s(614)), $exponent);
    var$7 = $this.$color6;
    cbggg_ShaderProgram_setUniformf4($shader, $rt_s(615), var$7.$r, var$7.$g, var$7.$b, 0.0);
    var$7 = $this.$color6;
    cbggg_ShaderProgram_setUniformf4($shader, $rt_s(616), var$7.$r, var$7.$g, var$7.$b, $strength);
    nmgsu_IBLBuilder$Light_$callClinit();
    cbgm_Vector3_set0(nmgsu_IBLBuilder$Light_localDir, $side.$direction2);
    cbgm_Vector3_set0(nmgsu_IBLBuilder$Light_localUp, $side.$up0);
    cbgg_Cubemap$CubemapSide_$callClinit();
    if (!($side !== cbgg_Cubemap$CubemapSide_NegativeX && $side !== cbgg_Cubemap$CubemapSide_PositiveX)) {
        $side = nmgsu_IBLBuilder$Light_localDir;
        $side.$x =  -$side.$x;
    }
    cbgm_Matrix4_tra(cbgm_Matrix4_setToLookAt(nmgsu_IBLBuilder$Light_matrix, nmgsu_IBLBuilder$Light_localDir, nmgsu_IBLBuilder$Light_localUp));
    $side = cbgm_Vector3_set0(nmgsu_IBLBuilder$Light_localSunDir, $this.$direction4);
    cbgm_Vector3_mul(cbgm_Vector3_set($side, $side.$x * (-1.0), $side.$y * (-1.0), $side.$z * 1.0), nmgsu_IBLBuilder$Light_matrix);
    var$6 = nmgsu_IBLBuilder$Light_localSunDir;
    $strength = var$6.$x;
    $exponent = var$6.$y;
    var$8 = var$6.$z;
    var$6 = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($shader);
    var$6.$glUniform3f(cbggg_ShaderProgram_fetchUniformLocation0($shader, $rt_s(617)), $strength, $exponent, var$8);
    cbggg_ShapeRenderer_begin($shapes, cbggg_ShapeRenderer$ShapeType_Filled);
    cbggg_ShapeRenderer_rect0($shapes, 0.0, 0.0, 1.0, 1.0);
    cbggg_ShapeRenderer_end($shapes);
},
nmgsu_IBLBuilder$Light__clinit_ = () => {
    nmgsu_IBLBuilder$Light_localSunDir = cbgm_Vector3__init_();
    nmgsu_IBLBuilder$Light_localDir = cbgm_Vector3__init_();
    nmgsu_IBLBuilder$Light_localUp = cbgm_Vector3__init_();
    nmgsu_IBLBuilder$Light_matrix = cbgm_Matrix4__init_();
};
function cbggg_Material() {
    cbggg_Attributes.call(this);
    this.$id1 = null;
}
let cbggg_Material_counter = 0,
cbggg_Material__init_0 = $this => {
    let var$1, var$2;
    var$1 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$1);
    jl_AbstractStringBuilder_append(var$1, $rt_s(618));
    var$2 = cbggg_Material_counter + 1 | 0;
    cbggg_Material_counter = var$2;
    cbggg_Material__init_1($this, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$1, var$2)));
},
cbggg_Material__init_3 = () => {
    let var_0 = new cbggg_Material();
    cbggg_Material__init_0(var_0);
    return var_0;
},
cbggg_Material__init_1 = ($this, $id) => {
    cbggg_Attributes__init_($this);
    $this.$id1 = $id;
},
cbggg_Material__init_2 = var_0 => {
    let var_1 = new cbggg_Material();
    cbggg_Material__init_1(var_1, var_0);
    return var_1;
},
cbggg_Material__init_ = ($this, $attributes) => {
    let var$2, var$3;
    $attributes = $attributes.data;
    cbggg_Material__init_0($this);
    var$2 = $attributes.length;
    var$3 = 0;
    while (var$3 < var$2) {
        cbggg_Attributes_set($this, $attributes[var$3]);
        var$3 = var$3 + 1 | 0;
    }
},
cbggg_Material__init_4 = var_0 => {
    let var_1 = new cbggg_Material();
    cbggg_Material__init_(var_1, var_0);
    return var_1;
},
cbggg_Material_hashCode = $this => {
    return cbggg_Attributes_attributesHash($this) + (3 * jl_String_hashCode($this.$id1) | 0) | 0;
},
cbggg_Material_equals = ($this, $other) => {
    let var$2, var$3;
    a: {
        b: {
            if ($other instanceof cbggg_Material) {
                if ($other === $this)
                    break b;
                if (jl_String_equals($other.$id1, $this.$id1)) {
                    if (!($other instanceof cbggg_Attributes))
                        var$2 = 0;
                    else if ($other === $this)
                        var$2 = 1;
                    else
                        c: {
                            $other = $other;
                            if ($other === $this)
                                var$2 = 1;
                            else if ($other !== null && Long_eq($this.$mask, $other.$mask)) {
                                cbggg_Attributes_sort($this);
                                cbggg_Attributes_sort($other);
                                var$2 = 0;
                                while (true) {
                                    var$3 = $this.$attributes;
                                    if (var$2 >= var$3.$size0)
                                        break;
                                    if (!cbggg_Attribute_equals(cbgu_Array_get(var$3, var$2), cbgu_Array_get($other.$attributes, var$2))) {
                                        var$2 = 0;
                                        break c;
                                    }
                                    var$2 = var$2 + 1 | 0;
                                }
                                var$2 = 1;
                            } else
                                var$2 = 0;
                        }
                    if (var$2)
                        break b;
                }
            }
            var$2 = 0;
            break a;
        }
        var$2 = 1;
    }
    return var$2;
},
cbggg_Material__clinit_ = () => {
    cbggg_Material_counter = 0;
};
function cbggga_FloatAttribute() {
    cbggg_Attribute.call(this);
    this.$value = 0.0;
}
let cbggga_FloatAttribute_Shininess = Long_ZERO,
cbggga_FloatAttribute_AlphaTest = Long_ZERO,
cbggga_FloatAttribute_$callClinit = () => {
    cbggga_FloatAttribute_$callClinit = $rt_eraseClinit(cbggga_FloatAttribute);
    cbggga_FloatAttribute__clinit_();
},
cbggga_FloatAttribute__init_ = ($this, $type, $value) => {
    cbggga_FloatAttribute_$callClinit();
    cbggg_Attribute__init_($this, $type);
    $this.$value = $value;
},
cbggga_FloatAttribute__init_0 = (var_0, var_1) => {
    let var_2 = new cbggga_FloatAttribute();
    cbggga_FloatAttribute__init_(var_2, var_0, var_1);
    return var_2;
},
cbggga_FloatAttribute_copy = $this => {
    return cbggga_FloatAttribute__init_0($this.$type0, $this.$value);
},
cbggga_FloatAttribute_hashCode = $this => {
    return (977 * cbggg_Attribute_hashCode($this) | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$value) | 0;
},
cbggga_FloatAttribute__clinit_ = () => {
    cbggga_FloatAttribute_Shininess = cbggg_Attribute_register($rt_s(619));
    cbggga_FloatAttribute_AlphaTest = cbggg_Attribute_register($rt_s(620));
};
function cbgggu_ModelBuilder() {
    let a = this; jl_Object.call(a);
    a.$model = null;
    a.$node = null;
    a.$builders = null;
    a.$tmpTransform = null;
}
let cbgggu_ModelBuilder__init_0 = $this => {
    $this.$builders = cbgu_Array__init_();
    $this.$tmpTransform = cbgm_Matrix4__init_();
},
cbgggu_ModelBuilder__init_ = () => {
    let var_0 = new cbgggu_ModelBuilder();
    cbgggu_ModelBuilder__init_0(var_0);
    return var_0;
},
cbgggu_ModelBuilder_begin = $this => {
    let var$1;
    if ($this.$model !== null) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$1, $rt_s(621));
        $rt_throw(var$1);
    }
    $this.$node = null;
    var$1 = new cbggg_Model;
    var$1.$materials0 = cbgu_Array__init_();
    var$1.$nodes0 = cbgu_Array__init_();
    var$1.$animations0 = cbgu_Array__init_();
    var$1.$meshes = cbgu_Array__init_();
    var$1.$meshParts = cbgu_Array__init_();
    var$1.$disposables = cbgu_Array__init_();
    var$1.$nodePartBones = cbgu_ObjectMap__init_();
    $this.$model = var$1;
    cbgu_Array_clear($this.$builders);
},
cbgggu_ModelBuilder_end = $this => {
    let $result, var$2, $mb, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    $result = $this.$model;
    if ($result === null) {
        $result = new cbgu_GdxRuntimeException;
        jl_Exception__init_($result, $rt_s(622));
        $rt_throw($result);
    }
    cbgggu_ModelBuilder_endnode($this);
    $this.$model = null;
    var$2 = cbgu_Array_iterator($this.$builders);
    while (true) {
        if (!cbgu_Array$ArrayIterator_hasNext(var$2)) {
            cbgu_Array_clear($this.$builders);
            cbgu_Array_clear($result.$materials0);
            cbgu_Array_clear($result.$meshes);
            cbgu_Array_clear($result.$meshParts);
            var$2 = cbgu_Array_iterator($result.$nodes0);
            while (cbgu_Array$ArrayIterator_hasNext(var$2)) {
                cbgggu_ModelBuilder_rebuildReferences($result, cbgu_Array$ArrayIterator_next(var$2));
            }
            return $result;
        }
        $mb = cbgu_Array$ArrayIterator_next(var$2);
        var$4 = new cbgg_Mesh;
        var$5 = jl_Math_min($mb.$vertices.$size2 / $mb.$stride | 0, 65536);
        var$6 = $mb.$indices.$size5;
        var$7 = $mb.$attributes4;
        cbgg_Mesh_$callClinit();
        var$4.$autoBind = 1;
        var$4.$isInstanced = 0;
        var$4.$tmpV = cbgm_Vector3__init_();
        var$4.$vertices0 = cbgg_Mesh_makeVertexBuffer(var$4, 1, var$5, var$7);
        var$4.$indices0 = cbggg_IndexBufferObject__init_(1, var$6);
        var$4.$isVertexArray = 0;
        cbgg_Mesh_addManagedMesh(cbg_Gdx_app, var$4);
        cbgggu_MeshBuilder_endpart($mb);
        var$8 = $mb.$attributes4;
        if (var$8 === null) {
            $mb = new cbgu_GdxRuntimeException;
            jl_Exception__init_($mb, $rt_s(622));
            $rt_throw($mb);
        }
        if (!cbgg_VertexAttributes_equals(var$8, cbgg_Mesh_getVertexAttributes(var$4)))
            break;
        if ($rt_imul(cbgg_Mesh_getMaxVertices(var$4), $mb.$stride) < $mb.$vertices.$size2) {
            $result = new cbgu_GdxRuntimeException;
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            jl_AbstractStringBuilder_append(var$2, $rt_s(623));
            var$2 = jl_StringBuilder_append1(var$2, cbgg_Mesh_getMaxVertices(var$4));
            jl_AbstractStringBuilder_append(var$2, $rt_s(624));
            var$2 = jl_StringBuilder_append1(var$2, $mb.$stride);
            jl_AbstractStringBuilder_append(var$2, $rt_s(625));
            jl_Exception__init_($result, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$2, $mb.$vertices.$size2)));
            $rt_throw($result);
        }
        if (cbgg_Mesh_getMaxIndices(var$4) < $mb.$indices.$size5) {
            $result = new cbgu_GdxRuntimeException;
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            jl_AbstractStringBuilder_append(var$2, $rt_s(626));
            var$2 = jl_StringBuilder_append1(var$2, cbgg_Mesh_getMaxIndices(var$4));
            jl_AbstractStringBuilder_append(var$2, $rt_s(625));
            jl_Exception__init_($result, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$2, $mb.$indices.$size5)));
            $rt_throw($result);
        }
        var$8 = $mb.$vertices;
        cbgg_Mesh_setVertices(var$4, var$8.$items0, 0, var$8.$size2);
        var$8 = $mb.$indices;
        var$9 = var$8.$items2;
        var$10 = var$8.$size5;
        var$4.$indices0.$setIndices(var$9, 0, var$10);
        var$7 = cbgu_Array_iterator($mb.$parts0);
        while (cbgu_Array$ArrayIterator_hasNext(var$7)) {
            (cbgu_Array$ArrayIterator_next(var$7)).$mesh = var$4;
        }
        cbgu_Array_clear($mb.$parts0);
        $mb.$attributes4 = null;
        cbgu_FloatArray_clear($mb.$vertices);
        cbgu_ShortArray_clear($mb.$indices);
    }
    $mb = new cbgu_GdxRuntimeException;
    jl_Exception__init_($mb, $rt_s(627));
    $rt_throw($mb);
},
cbgggu_ModelBuilder_endnode = $this => {
    if ($this.$node !== null)
        $this.$node = null;
},
cbgggu_ModelBuilder_part = ($this, $id, $primitiveType, $attributes, $material) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
    cbgggu_MeshBuilder_$callClinit();
    var$5 = cbgu_Array__init_();
    if (Long_eq(Long_and($attributes, Long_fromInt(1)), Long_fromInt(1)))
        cbgu_Array_add(var$5, cbgg_VertexAttribute__init_(1, 3, $rt_s(466)));
    if (Long_eq(Long_and($attributes, Long_fromInt(2)), Long_fromInt(2)))
        cbgu_Array_add(var$5, cbgg_VertexAttribute__init_(2, 4, $rt_s(467)));
    if (Long_eq(Long_and($attributes, Long_fromInt(4)), Long_fromInt(4)))
        cbgu_Array_add(var$5, cbgg_VertexAttribute__init_(4, 4, $rt_s(467)));
    if (Long_eq(Long_and($attributes, Long_fromInt(8)), Long_fromInt(8)))
        cbgu_Array_add(var$5, cbgg_VertexAttribute__init_(8, 3, $rt_s(628)));
    if (Long_eq(Long_and($attributes, Long_fromInt(16)), Long_fromInt(16)))
        cbgu_Array_add(var$5, cbgg_VertexAttribute__init_(16, 2, $rt_s(468)));
    var$6 = $rt_createArray(cbgg_VertexAttribute, var$5.$size0);
    var$7 = var$6.data;
    var$8 = 0;
    var$9 = var$7.length;
    while (var$8 < var$9) {
        var$7[var$8] = cbgu_Array_get(var$5, var$8);
        var$8 = var$8 + 1 | 0;
    }
    var$10 = cbgg_VertexAttributes__init_(var$6);
    var$11 = cbgu_Array_iterator($this.$builders);
    a: {
        while (true) {
            if (!cbgu_Array$ArrayIterator_hasNext(var$11)) {
                var$12 = new cbgggu_MeshBuilder;
                var$12.$vertTmp1 = cbgggu_MeshPartBuilder$VertexInfo__init_();
                var$12.$vertTmp2 = cbgggu_MeshPartBuilder$VertexInfo__init_();
                var$12.$vertTmp3 = cbgggu_MeshPartBuilder$VertexInfo__init_();
                var$12.$vertTmp4 = cbgggu_MeshPartBuilder$VertexInfo__init_();
                var$12.$tempC1 = new cbgg_Color;
                var$12.$vertices = cbgu_FloatArray__init_();
                var$12.$indices = cbgu_ShortArray__init_();
                var$12.$parts0 = cbgu_Array__init_();
                var$12.$color4 = cbgg_Color__init_1(cbgg_Color_WHITE);
                var$12.$hasColor = 0;
                var$12.$uOffset = 0.0;
                var$12.$uScale = 1.0;
                var$12.$vOffset = 0.0;
                var$12.$vScale = 1.0;
                var$12.$hasUVTransform = 0;
                var$12.$vertexTransformationEnabled = 0;
                var$12.$positionTransform = cbgm_Matrix4__init_();
                var$12.$normalTransform = cbgm_Matrix3__init_();
                var$12.$bounds = cbgmc_BoundingBox__init_();
                var$12.$lastIndex = (-1);
                var$12.$tmpNormal = cbgm_Vector3__init_();
                cbgggu_MeshBuilder_begin(var$12, var$10, (-1));
                cbgu_Array_add($this.$builders, var$12);
                break a;
            }
            var$12 = cbgu_Array$ArrayIterator_next(var$11);
            if (cbgg_VertexAttributes_equals(var$12.$attributes4, var$10) && var$12.$lastIndex < 32768)
                break;
        }
    }
    var$5 = cbgggm_MeshPart__init_();
    if (var$12.$attributes4 === null) {
        $id = new jl_RuntimeException;
        jl_Exception__init_($id, $rt_s(622));
        $rt_throw($id);
    }
    cbgggu_MeshBuilder_endpart(var$12);
    var$12.$part0 = var$5;
    var$5.$id2 = $id;
    var$5.$primitiveType = $primitiveType;
    var$12.$primitiveType0 = $primitiveType;
    cbgu_Array_add(var$12.$parts0, var$5);
    cbgggu_MeshBuilder_setColor(var$12, null);
    cbgggu_MeshBuilder_setVertexTransform(var$12, null);
    cbgggu_MeshBuilder_setUVRange(var$12, null);
    var$5 = var$12.$part0;
    if ($this.$node === null) {
        var$10 = cbgggm_Node__init_();
        if ($this.$model === null) {
            $material = new cbgu_GdxRuntimeException;
            jl_Exception__init_($material, $rt_s(622));
            $rt_throw($material);
        }
        cbgggu_ModelBuilder_endnode($this);
        cbgu_Array_add($this.$model.$nodes0, var$10);
        $this.$node = var$10;
        var$11 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$11);
        jl_AbstractStringBuilder_append(var$11, $rt_s(629));
        var$10.$id = jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$11, $this.$model.$nodes0.$size0));
    }
    var$10 = $this.$node.$parts;
    $id = new cbgggm_NodePart;
    $id.$enabled = 1;
    $id.$meshPart0 = var$5;
    $id.$material0 = $material;
    cbgu_Array_add(var$10, $id);
    return var$12;
},
cbgggu_ModelBuilder_createBox = ($this, $width, $height, $depth, $material, $attributes) => {
    let var$6, var$7, var$8, var$9, var$10, var$11;
    cbgggu_ModelBuilder_begin($this);
    $material = cbgggu_ModelBuilder_part($this, $rt_s(630), 4, $attributes, $material);
    var$6 = $width * 0.5;
    var$7 = $height * 0.5;
    var$8 = $depth * 0.5;
    var$9 = 0.0 - var$6;
    $width = 0.0 - var$7;
    $height = 0.0 - var$8;
    $depth = 0.0 + var$6;
    var$10 = 0.0 + var$7;
    var$11 = 0.0 + var$8;
    cbgggus_BoxShapeBuilder_build($material, cbgm_Vector3_set(cbgggus_BaseShapeBuilder_obtainV3(), var$9, $width, $height), cbgm_Vector3_set(cbgggus_BaseShapeBuilder_obtainV3(), var$9, var$10, $height), cbgm_Vector3_set(cbgggus_BaseShapeBuilder_obtainV3(), $depth, $width, $height), cbgm_Vector3_set(cbgggus_BaseShapeBuilder_obtainV3(), $depth, var$10, $height), cbgm_Vector3_set(cbgggus_BaseShapeBuilder_obtainV3(), var$9, $width, var$11), cbgm_Vector3_set(cbgggus_BaseShapeBuilder_obtainV3(), var$9, var$10, var$11),
    cbgm_Vector3_set(cbgggus_BaseShapeBuilder_obtainV3(), $depth, $width, var$11), cbgm_Vector3_set(cbgggus_BaseShapeBuilder_obtainV3(), $depth, var$10, var$11));
    cbgu_FlushablePool_flush(cbgggus_BaseShapeBuilder_vectorPool);
    cbgu_FlushablePool_flush(cbgggus_BaseShapeBuilder_matrices4Pool);
    return cbgggu_ModelBuilder_end($this);
},
cbgggu_ModelBuilder_rebuildReferences = ($model, $node) => {
    let var$3, $mpm, $child;
    var$3 = cbgu_Array_iterator($node.$parts);
    while (cbgu_Array$ArrayIterator_hasNext(var$3)) {
        $mpm = cbgu_Array$ArrayIterator_next(var$3);
        if (!cbgu_Array_contains($model.$materials0, $mpm.$material0, 1))
            cbgu_Array_add($model.$materials0, $mpm.$material0);
        if (!cbgu_Array_contains($model.$meshParts, $mpm.$meshPart0, 1)) {
            cbgu_Array_add($model.$meshParts, $mpm.$meshPart0);
            if (!cbgu_Array_contains($model.$meshes, $mpm.$meshPart0.$mesh, 1))
                cbgu_Array_add($model.$meshes, $mpm.$meshPart0.$mesh);
            $child = $mpm.$meshPart0.$mesh;
            if (!cbgu_Array_contains($model.$disposables, $child, 1))
                cbgu_Array_add($model.$disposables, $child);
        }
    }
    $mpm = cbgu_Array_iterator($node.$children0);
    while (cbgu_Array$ArrayIterator_hasNext($mpm)) {
        cbgggu_ModelBuilder_rebuildReferences($model, cbgu_Array$ArrayIterator_next($mpm));
    }
},
jr_DebugRendererEm = $rt_classWithoutFields(ji_IDLBase),
jg_DebugRenderer = $rt_classWithoutFields(jr_DebugRendererEm);
function cbggga_ColorAttribute() {
    cbggg_Attribute.call(this);
    this.$color2 = null;
}
let cbggga_ColorAttribute_Diffuse = Long_ZERO,
cbggga_ColorAttribute_Specular = Long_ZERO,
cbggga_ColorAttribute_Ambient = Long_ZERO,
cbggga_ColorAttribute_Emissive = Long_ZERO,
cbggga_ColorAttribute_Reflection = Long_ZERO,
cbggga_ColorAttribute_AmbientLight = Long_ZERO,
cbggga_ColorAttribute_Fog = Long_ZERO,
cbggga_ColorAttribute_Mask = Long_ZERO,
cbggga_ColorAttribute_$callClinit = () => {
    cbggga_ColorAttribute_$callClinit = $rt_eraseClinit(cbggga_ColorAttribute);
    cbggga_ColorAttribute__clinit_();
},
cbggga_ColorAttribute__init_ = ($this, $type) => {
    let var$2;
    cbggga_ColorAttribute_$callClinit();
    cbggg_Attribute__init_($this, $type);
    $this.$color2 = new cbgg_Color;
    if (Long_eq(Long_and($type, cbggga_ColorAttribute_Mask), Long_ZERO) ? 0 : 1)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$2, $rt_s(569));
    $rt_throw(var$2);
},
cbggga_ColorAttribute__init_4 = var_0 => {
    let var_1 = new cbggga_ColorAttribute();
    cbggga_ColorAttribute__init_(var_1, var_0);
    return var_1;
},
cbggga_ColorAttribute__init_0 = ($this, $type, $color) => {
    cbggga_ColorAttribute_$callClinit();
    cbggga_ColorAttribute__init_($this, $type);
    if ($color !== null)
        cbgg_Color_set0($this.$color2, $color);
},
cbggga_ColorAttribute__init_2 = (var_0, var_1) => {
    let var_2 = new cbggga_ColorAttribute();
    cbggga_ColorAttribute__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggga_ColorAttribute__init_1 = ($this, $type, $r, $g, $b, $a) => {
    cbggga_ColorAttribute_$callClinit();
    cbggga_ColorAttribute__init_($this, $type);
    cbgg_Color_set($this.$color2, $r, $g, $b, $a);
},
cbggga_ColorAttribute__init_3 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbggga_ColorAttribute();
    cbggga_ColorAttribute__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbggga_ColorAttribute_copy = $this => {
    let var$1;
    var$1 = new cbggga_ColorAttribute;
    cbggga_ColorAttribute_$callClinit();
    cbggga_ColorAttribute__init_0(var$1, $this.$type0, $this.$color2);
    return var$1;
},
cbggga_ColorAttribute_hashCode = $this => {
    return (953 * cbggg_Attribute_hashCode($this) | 0) + cbgg_Color_toIntBits($this.$color2) | 0;
},
cbggga_ColorAttribute__clinit_ = () => {
    let var$1;
    cbggga_ColorAttribute_Diffuse = cbggg_Attribute_register($rt_s(631));
    cbggga_ColorAttribute_Specular = cbggg_Attribute_register($rt_s(632));
    cbggga_ColorAttribute_Ambient = cbggg_Attribute_register($rt_s(633));
    cbggga_ColorAttribute_Emissive = cbggg_Attribute_register($rt_s(634));
    cbggga_ColorAttribute_Reflection = cbggg_Attribute_register($rt_s(635));
    cbggga_ColorAttribute_AmbientLight = cbggg_Attribute_register($rt_s(636));
    var$1 = cbggg_Attribute_register($rt_s(637));
    cbggga_ColorAttribute_Fog = var$1;
    cbggga_ColorAttribute_Mask = Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(cbggga_ColorAttribute_Ambient, cbggga_ColorAttribute_Diffuse), cbggga_ColorAttribute_Specular), cbggga_ColorAttribute_Emissive), cbggga_ColorAttribute_Reflection), cbggga_ColorAttribute_AmbientLight), var$1);
},
otcit_FloatSynthesizer = $rt_classWithoutFields(),
otcit_FloatSynthesizer_mantissa10Table = null,
otcit_FloatSynthesizer_exp10Table = null,
otcit_FloatSynthesizer_synthesizeFloat = ($mantissa, $exp, $negative) => {
    let $indexInTable, var$5, $binMantissa, $binExp, $binMantissaShift, $iee754;
    $indexInTable = 50 + $exp | 0;
    if ($mantissa && $indexInTable >= 0) {
        var$5 = otcit_FloatSynthesizer_mantissa10Table.data;
        if ($indexInTable >= var$5.length)
            return !$negative ? Infinity : (-Infinity);
        $binMantissa = otcit_FloatAnalyzer_mulAndShiftRight($mantissa, var$5[$indexInTable], 0);
        $binExp = otcit_FloatSynthesizer_exp10Table.data[$indexInTable] - 1 | 0;
        $binMantissaShift = (32 - jl_Integer_numberOfLeadingZeros($binMantissa) | 0) - 30 | 0;
        $mantissa = $binMantissaShift >= 0 ? $binMantissa >>> $binMantissaShift | 0 : $binMantissa << ( -$binMantissaShift | 0);
        $exp = $binExp + $binMantissaShift | 0;
        if ($exp >= 255)
            return !$negative ? Infinity : (-Infinity);
        $mantissa = $mantissa + 32 | 0;
        if ($mantissa & (-1073741824)) {
            $mantissa = $mantissa >>> 1 | 0;
            $exp = $exp + 1 | 0;
        }
        if ($exp <= 0) {
            $mantissa = $mantissa >> jl_Math_min(( -$exp | 0) + 1 | 0, 32);
            $exp = 0;
        }
        $iee754 = ($mantissa >>> 6 | 0) & 8388607 | $exp << 23;
        if ($negative)
            $iee754 = $iee754 ^ (-2147483648);
        return $rt_intBitsToFloat($iee754);
    }
    return $rt_intBitsToFloat(!$negative ? 0 : (-2147483648));
},
otcit_FloatSynthesizer__clinit_ = () => {
    otcit_FloatSynthesizer_mantissa10Table = $rt_createIntArrayFromData([(-1598972629), (-924973963), (-82475629), (-1662160004), (-1003958181), (-181205903), (-1723866425), (-1081091207), (-277622185), (-1784126602), (-1156416428), (-371778711), (-1842974431), (-1229976214), (-463728444), (-1900443013), (-1301811943), (-553523104), (-1956564676), (-1371964021), (-641213203), (-2011370988), (-1440471911), (-726848064), (-2064892776), (-1507374146), (-810475859), (-2117160148), (-1572708361), (-892143627), (-41437709),
    (-1636511304), (-971897307), (-141129809), (-1698818867), (-1049781759), (-238485375), (-1759666096), (-1125840795), (-333559170), (-1819087217), (-1200117198), (-426404673), (-1877115657), (-1272652747), (-517074110), (-1933784055), (-1343488244), (-605618481), (-1989124287), (-1412663534), (-692087594), (-2043167482), (-1480217529), (-776530087), (-2095944040), (-1546188227), (-858993459), (-2147483648), (-1610612736), (-939524096), (-100663296), (-1673527296), (-1018167296), (-198967296), (-1734967296),
    (-1094967296), (-294967296), (-1794967296), (-1169967296), (-388717296), (-1853561046), (-1243209483), (-480270030), (-1910781505), (-1314735057), (-569676998), (-1966660859), (-1384584250), (-656988489), (-2021230542), (-1452796353), (-742253617), (-2074521247), (-1519409734), (-825520344), (-2126562951), (-1584461865), (-906835507), (-59802560), (-1647989336), (-986244846), (-159064233), (-1710027882), (-1063793028), (-255999461), (-1770612399), (-1139523675), (-350662770), (-1829776967)]);
    otcit_FloatSynthesizer_exp10Table = $rt_createIntArrayFromData([(-35), (-32), (-29), (-25), (-22), (-19), (-15), (-12), (-9), (-5), (-2), 1, 5, 8, 11, 15, 18, 21, 25, 28, 31, 35, 38, 41, 45, 48, 51, 55, 58, 61, 64, 68, 71, 74, 78, 81, 84, 88, 91, 94, 98, 101, 104, 108, 111, 114, 118, 121, 124, 128, 131, 134, 138, 141, 144, 148, 151, 154, 158, 161, 164, 167, 171, 174, 177, 181, 184, 187, 191, 194, 197, 201, 204, 207, 211, 214, 217, 221, 224, 227, 231, 234, 237, 241, 244, 247, 251, 254, 257, 260, 264, 267,
    270, 274, 277, 280, 284, 287, 290, 294]);
};
function jp_PhysicsSystem() {
    ji_IDLBase.call(this);
    this.$BodyInterface_TEMP_GEN_0 = null;
}
let jp_PhysicsSystem_T_01 = null,
jp_PhysicsSystem_T_02 = null,
jp_PhysicsSystem_T_03 = null,
jp_PhysicsSystem_deleteNative = $this => {
    jp_PhysicsSystem_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jp_PhysicsSystem_Init = ($this, $inMaxBodies, $inNumBodyMutexes, $inMaxBodyPairs, $inMaxContactConstraints, $inBroadPhaseLayerInterface, $inObjectVsBroadPhaseLayerFilter, $inObjectLayerPairFilter) => {
    let var$8, var$9, var$10, var$11;
    var$8 = Long_lo($this.$nativeData.$cPointer);
    var$9 = Long_lo(($inBroadPhaseLayerInterface === null ? Long_ZERO : $inBroadPhaseLayerInterface.$nativeData.$cPointer));
    var$10 = Long_lo(($inObjectVsBroadPhaseLayerFilter === null ? Long_ZERO : $inObjectVsBroadPhaseLayerFilter.$nativeData.$cPointer));
    var$11 = Long_lo(($inObjectLayerPairFilter === null ? Long_ZERO : $inObjectLayerPairFilter.$nativeData.$cPointer));
    jp_PhysicsSystem_internal_native_Init$js_body$_6(var$8, $inMaxBodies, $inNumBodyMutexes, $inMaxBodyPairs, $inMaxContactConstraints, var$9, var$10, var$11);
},
jp_PhysicsSystem_OptimizeBroadPhase = $this => {
    jp_PhysicsSystem_internal_native_OptimizeBroadPhase$js_body$_42(Long_lo($this.$nativeData.$cPointer));
},
jp_PhysicsSystem_GetBodyInterface = $this => {
    let $pointer, var$2;
    $pointer = jp_PhysicsSystem_internal_native_GetBodyInterface$js_body$_44(Long_lo($this.$nativeData.$cPointer));
    if (!$pointer)
        return null;
    if ($this.$BodyInterface_TEMP_GEN_0 === null) {
        var$2 = new jpb_BodyInterface;
        ji_IDLBase__init_(var$2);
        $this.$BodyInterface_TEMP_GEN_0 = var$2;
    }
    ji_IDLNativeData_reset($this.$BodyInterface_TEMP_GEN_0.$nativeData, Long_fromInt($pointer), 0);
    return $this.$BodyInterface_TEMP_GEN_0;
},
jp_PhysicsSystem__clinit_ = () => {
    let var$1;
    var$1 = new jp_PhysicsSystem;
    ji_IDLBase__init_(var$1);
    jp_PhysicsSystem_T_01 = var$1;
    var$1 = new jp_PhysicsSystem;
    ji_IDLBase__init_(var$1);
    jp_PhysicsSystem_T_02 = var$1;
    var$1 = new jp_PhysicsSystem;
    ji_IDLBase__init_(var$1);
    jp_PhysicsSystem_T_03 = var$1;
},
jp_PhysicsSystem_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.PhysicsSystem);
    jolt.destroy(jsObj);
},
jp_PhysicsSystem_internal_native_Init$js_body$_6 = (var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.PhysicsSystem);
    jsObj.Init(var$2, var$3, var$4, var$5, var$6, var$7, var$8);
},
jp_PhysicsSystem_internal_native_Update$js_body$_8 = (var$1, var$2, var$3, var$4, var$5) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.PhysicsSystem);
    jsObj.Update(var$2, var$3, var$4, var$5);
},
jp_PhysicsSystem_internal_native_OptimizeBroadPhase$js_body$_42 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.PhysicsSystem);
    jsObj.OptimizeBroadPhase();
},
jp_PhysicsSystem_internal_native_GetBodyInterface$js_body$_44 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.PhysicsSystem);
    var returnedJSObj = jsObj.GetBodyInterface();
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
};
function jpb_Body() {
    let a = this; ji_IDLBase.call(a);
    a.$BodyID_TEMP_GEN_0 = null;
    a.$Mat44_TEMP_GEN_1 = null;
}
let jpb_Body_T_01 = null,
jpb_Body_T_02 = null,
jpb_Body_T_03 = null,
jpb_Body_GetID = $this => {
    let var$1, var$2;
    var$1 = jpb_Body_internal_native_GetID$js_body$_2(Long_lo($this.$nativeData.$cPointer));
    if (!var$1)
        return null;
    if ($this.$BodyID_TEMP_GEN_0 === null) {
        var$2 = new jpb_BodyID;
        ji_IDLBase__init_(var$2);
        $this.$BodyID_TEMP_GEN_0 = var$2;
    }
    ji_IDLNativeData_reset($this.$BodyID_TEMP_GEN_0.$nativeData, Long_fromInt(var$1), 0);
    return $this.$BodyID_TEMP_GEN_0;
},
jpb_Body_GetWorldTransform = $this => {
    let $pointer, var$2;
    $pointer = jpb_Body_internal_native_GetWorldTransform$js_body$_108(Long_lo($this.$nativeData.$cPointer));
    if (!$pointer)
        return null;
    if ($this.$Mat44_TEMP_GEN_1 === null) {
        var$2 = new jm_Mat44;
        ji_IDLBase__init_(var$2);
        $this.$Mat44_TEMP_GEN_1 = var$2;
    }
    ji_IDLNativeData_reset($this.$Mat44_TEMP_GEN_1.$nativeData, Long_fromInt($pointer), 0);
    return $this.$Mat44_TEMP_GEN_1;
},
jpb_Body__clinit_ = () => {
    let var$1;
    var$1 = new jpb_Body;
    ji_IDLBase__init_(var$1);
    jpb_Body_T_01 = var$1;
    var$1 = new jpb_Body;
    ji_IDLBase__init_(var$1);
    jpb_Body_T_02 = var$1;
    var$1 = new jpb_Body;
    ji_IDLBase__init_(var$1);
    jpb_Body_T_03 = var$1;
},
jpb_Body_internal_native_GetID$js_body$_2 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Body);
    var returnedJSObj = jsObj.GetID();
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
jpb_Body_internal_native_GetWorldTransform$js_body$_108 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Body);
    var returnedJSObj = jsObj.GetWorldTransform();
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
jpb_Body_internal_native_SetUserData$js_body$_130 = (var$1, var$2) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Body);
    jsObj.SetUserData(var$2);
},
jpb_BodyInterface = $rt_classWithoutFields(ji_IDLBase),
jpb_BodyInterface_T_01 = null,
jpb_BodyInterface_T_02 = null,
jpb_BodyInterface_T_03 = null,
jpb_BodyInterface_deleteNative = $this => {
    jpb_BodyInterface_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jpb_BodyInterface_AddBody = ($this, $inBodyID, $inActivationMode) => {
    let var$3, var$4, var$5;
    var$3 = Long_lo($this.$nativeData.$cPointer);
    var$4 = Long_lo(($inBodyID === null ? Long_ZERO : $inBodyID.$nativeData.$cPointer));
    var$5 = Long_lo(Long_fromInt($inActivationMode === null ? 0 : $inActivationMode.$value3));
    jpb_BodyInterface_internal_native_AddBody$js_body$_32(var$3, var$4, var$5);
},
jpb_BodyInterface__clinit_ = () => {
    let var$1;
    var$1 = new jpb_BodyInterface;
    ji_IDLBase__init_(var$1);
    jpb_BodyInterface_T_01 = var$1;
    var$1 = new jpb_BodyInterface;
    ji_IDLBase__init_(var$1);
    jpb_BodyInterface_T_02 = var$1;
    var$1 = new jpb_BodyInterface;
    ji_IDLBase__init_(var$1);
    jpb_BodyInterface_T_03 = var$1;
},
jpb_BodyInterface_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BodyInterface);
    jolt.destroy(jsObj);
},
jpb_BodyInterface_internal_native_CreateBody$js_body$_6 = (var$1, var$2) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BodyInterface);
    var returnedJSObj = jsObj.CreateBody(var$2);
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
jpb_BodyInterface_internal_native_DestroyBody$js_body$_28 = (var$1, var$2) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BodyInterface);
    jsObj.DestroyBody(var$2);
},
jpb_BodyInterface_internal_native_AddBody$js_body$_32 = (var$1, var$2, var$3) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BodyInterface);
    jsObj.AddBody(var$2, var$3);
},
jpb_BodyInterface_internal_native_RemoveBody$js_body$_34 = (var$1, var$2) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BodyInterface);
    jsObj.RemoveBody(var$2);
};
function jpcs_Shape() {
    ji_IDLBase.call(this);
    this.$MassProperties_TEMP_GEN_0 = null;
}
let jpcs_Shape_T_01 = null,
jpcs_Shape_T_02 = null,
jpcs_Shape_T_03 = null,
jpcs_Shape__clinit_ = () => {
    let var$1;
    var$1 = new jpcs_Shape;
    ji_IDLBase__init_(var$1);
    jpcs_Shape_T_01 = var$1;
    var$1 = new jpcs_Shape;
    ji_IDLBase__init_(var$1);
    jpcs_Shape_T_02 = var$1;
    var$1 = new jpcs_Shape;
    ji_IDLBase__init_(var$1);
    jpcs_Shape_T_03 = var$1;
},
jpcs_Shape_internal_native_GetMassProperties$js_body$_28 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Shape);
    var returnedJSObj = jsObj.GetMassProperties();
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
jpcs_ConvexShape = $rt_classWithoutFields(jpcs_Shape),
jpcs_ConvexShape_T_01 = null,
jpcs_ConvexShape_T_02 = null,
jpcs_ConvexShape_T_03 = null,
jpcs_ConvexShape__init_0 = ($this, var$1, $c) => {
    ji_IDLBase__init_($this);
},
jpcs_ConvexShape__init_ = (var_0, var_1) => {
    let var_2 = new jpcs_ConvexShape();
    jpcs_ConvexShape__init_0(var_2, var_0, var_1);
    return var_2;
},
jpcs_ConvexShape__clinit_ = () => {
    jpcs_ConvexShape_T_01 = jpcs_ConvexShape__init_(1, 1);
    jpcs_ConvexShape_T_02 = jpcs_ConvexShape__init_(1, 1);
    jpcs_ConvexShape_T_03 = jpcs_ConvexShape__init_(1, 1);
},
jpcs_BoxShape = $rt_classWithoutFields(jpcs_ConvexShape),
jpcs_BoxShape_T_01 = null,
jpcs_BoxShape_T_02 = null,
jpcs_BoxShape_T_03 = null,
jpcs_BoxShape__init_0 = ($this, $b, $c) => {
    jpcs_ConvexShape__init_0($this, 1, 1);
},
jpcs_BoxShape__init_ = (var_0, var_1) => {
    let var_2 = new jpcs_BoxShape();
    jpcs_BoxShape__init_0(var_2, var_0, var_1);
    return var_2;
},
jpcs_BoxShape__clinit_ = () => {
    jpcs_BoxShape_T_01 = jpcs_BoxShape__init_(1, 1);
    jpcs_BoxShape_T_02 = jpcs_BoxShape__init_(1, 1);
    jpcs_BoxShape_T_03 = jpcs_BoxShape__init_(1, 1);
},
jpcs_BoxShape_internal_native_create_Vec3$js_body$_5 = var$1 => {
    var jsObj = new jolt.BoxShape(var$1);
    return jolt.getPointer(jsObj);
},
ji_IDLEnum = $rt_classWithoutFields(0);
function je_EMotionType() {
    jl_Enum.call(this);
    this.$value4 = 0;
}
let je_EMotionType_CUSTOM = null,
je_EMotionType_Static = null,
je_EMotionType_Kinematic = null,
je_EMotionType_Dynamic = null,
je_EMotionType_MAP = null,
je_EMotionType_$VALUES = null,
je_EMotionType_$callClinit = () => {
    je_EMotionType_$callClinit = $rt_eraseClinit(je_EMotionType);
    je_EMotionType__clinit_();
},
je_EMotionType__init_0 = ($this, var$1, var$2, $value) => {
    je_EMotionType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$value4 = $value;
},
je_EMotionType__init_ = (var_0, var_1, var_2) => {
    let var_3 = new je_EMotionType();
    je_EMotionType__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
je_EMotionType__clinit_ = () => {
    let $value, var$2, var$3, var$4, var$5, var$6, var$7;
    je_EMotionType_CUSTOM = je_EMotionType__init_($rt_s(638), 0, 0);
    je_EMotionType_Static = je_EMotionType__init_($rt_s(639), 1, jolt.EMotionType_Static);
    je_EMotionType_Kinematic = je_EMotionType__init_($rt_s(640), 2, jolt.EMotionType_Kinematic);
    $value = je_EMotionType__init_($rt_s(641), 3, jolt.EMotionType_Dynamic);
    je_EMotionType_Dynamic = $value;
    var$2 = $rt_createArray(je_EMotionType, 4);
    var$3 = var$2.data;
    var$3[0] = je_EMotionType_CUSTOM;
    var$3[1] = je_EMotionType_Static;
    var$3[2] = je_EMotionType_Kinematic;
    var$3[3] = $value;
    je_EMotionType_$VALUES = var$2;
    je_EMotionType_MAP = ju_HashMap__init_();
    var$2 = (je_EMotionType_$VALUES.$clone0()).data;
    var$4 = var$2.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $value = var$2[var$5];
        if ($value !== je_EMotionType_CUSTOM) {
            var$6 = je_EMotionType_MAP;
            var$7 = jl_Integer_valueOf($value.$value4);
            ju_HashMap_put(var$6, var$7, $value);
        }
        var$5 = var$5 + 1 | 0;
    }
};
function je_EActivation() {
    jl_Enum.call(this);
    this.$value3 = 0;
}
let je_EActivation_CUSTOM = null,
je_EActivation_Activate = null,
je_EActivation_DontActivate = null,
je_EActivation_MAP = null,
je_EActivation_$VALUES = null,
je_EActivation_$callClinit = () => {
    je_EActivation_$callClinit = $rt_eraseClinit(je_EActivation);
    je_EActivation__clinit_();
},
je_EActivation__init_0 = ($this, var$1, var$2, $value) => {
    je_EActivation_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$value3 = $value;
},
je_EActivation__init_ = (var_0, var_1, var_2) => {
    let var_3 = new je_EActivation();
    je_EActivation__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
je_EActivation__clinit_ = () => {
    let $value, var$2, var$3, var$4, var$5, var$6, var$7;
    je_EActivation_CUSTOM = je_EActivation__init_($rt_s(638), 0, 0);
    je_EActivation_Activate = je_EActivation__init_($rt_s(642), 1, jolt.EActivation_Activate);
    $value = je_EActivation__init_($rt_s(643), 2, jolt.EActivation_DontActivate);
    je_EActivation_DontActivate = $value;
    var$2 = $rt_createArray(je_EActivation, 3);
    var$3 = var$2.data;
    var$3[0] = je_EActivation_CUSTOM;
    var$3[1] = je_EActivation_Activate;
    var$3[2] = $value;
    je_EActivation_$VALUES = var$2;
    je_EActivation_MAP = ju_HashMap__init_();
    var$2 = (je_EActivation_$VALUES.$clone0()).data;
    var$4 = var$2.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $value = var$2[var$5];
        if ($value !== je_EActivation_CUSTOM) {
            var$6 = je_EActivation_MAP;
            var$7 = jl_Integer_valueOf($value.$value3);
            ju_HashMap_put(var$6, var$7, $value);
        }
        var$5 = var$5 + 1 | 0;
    }
},
jc_TempAllocator = $rt_classWithoutFields(ji_IDLBase),
jc_TempAllocator_T_01 = null,
jc_TempAllocator_T_02 = null,
jc_TempAllocator_T_03 = null,
jc_TempAllocator_deleteNative = $this => {
    jc_TempAllocator_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jc_TempAllocator__clinit_ = () => {
    let var$1;
    var$1 = new jc_TempAllocator;
    ji_IDLBase__init_(var$1);
    jc_TempAllocator_T_01 = var$1;
    var$1 = new jc_TempAllocator;
    ji_IDLBase__init_(var$1);
    jc_TempAllocator_T_02 = var$1;
    var$1 = new jc_TempAllocator;
    ji_IDLBase__init_(var$1);
    jc_TempAllocator_T_03 = var$1;
},
jc_TempAllocator_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.TempAllocator);
    jolt.destroy(jsObj);
},
jc_TempAllocatorImpl = $rt_classWithoutFields(jc_TempAllocator),
jc_TempAllocatorImpl_T_01 = null,
jc_TempAllocatorImpl_T_02 = null,
jc_TempAllocatorImpl_T_03 = null,
jc_TempAllocatorImpl__init_0 = ($this, var$1, $c) => {
    ji_IDLBase__init_($this);
},
jc_TempAllocatorImpl__init_ = (var_0, var_1) => {
    let var_2 = new jc_TempAllocatorImpl();
    jc_TempAllocatorImpl__init_0(var_2, var_0, var_1);
    return var_2;
},
jc_TempAllocatorImpl_deleteNative = $this => {
    jc_TempAllocatorImpl_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jc_TempAllocatorImpl__clinit_ = () => {
    jc_TempAllocatorImpl_T_01 = jc_TempAllocatorImpl__init_(1, 1);
    jc_TempAllocatorImpl_T_02 = jc_TempAllocatorImpl__init_(1, 1);
    jc_TempAllocatorImpl_T_03 = jc_TempAllocatorImpl__init_(1, 1);
},
jc_TempAllocatorImpl_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.TempAllocatorImpl);
    jolt.destroy(jsObj);
},
jc_JobSystem = $rt_classWithoutFields(ji_IDLBase),
jc_JobSystem_T_01 = null,
jc_JobSystem_T_02 = null,
jc_JobSystem_T_03 = null,
jc_JobSystem_deleteNative = $this => {
    jc_JobSystem_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jc_JobSystem__clinit_ = () => {
    let var$1;
    var$1 = new jc_JobSystem;
    ji_IDLBase__init_(var$1);
    jc_JobSystem_T_01 = var$1;
    var$1 = new jc_JobSystem;
    ji_IDLBase__init_(var$1);
    jc_JobSystem_T_02 = var$1;
    var$1 = new jc_JobSystem;
    ji_IDLBase__init_(var$1);
    jc_JobSystem_T_03 = var$1;
},
jc_JobSystem_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.JobSystem);
    jolt.destroy(jsObj);
},
jc_JobSystemWithBarrier = $rt_classWithoutFields(jc_JobSystem),
jc_JobSystemWithBarrier_T_01 = null,
jc_JobSystemWithBarrier_T_02 = null,
jc_JobSystemWithBarrier_T_03 = null,
jc_JobSystemWithBarrier__init_0 = ($this, var$1, $c) => {
    ji_IDLBase__init_($this);
},
jc_JobSystemWithBarrier__init_ = (var_0, var_1) => {
    let var_2 = new jc_JobSystemWithBarrier();
    jc_JobSystemWithBarrier__init_0(var_2, var_0, var_1);
    return var_2;
},
jc_JobSystemWithBarrier_deleteNative = $this => {
    jc_JobSystemWithBarrier_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jc_JobSystemWithBarrier__clinit_ = () => {
    jc_JobSystemWithBarrier_T_01 = jc_JobSystemWithBarrier__init_(1, 1);
    jc_JobSystemWithBarrier_T_02 = jc_JobSystemWithBarrier__init_(1, 1);
    jc_JobSystemWithBarrier_T_03 = jc_JobSystemWithBarrier__init_(1, 1);
},
jc_JobSystemWithBarrier_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.JobSystemWithBarrier);
    jolt.destroy(jsObj);
},
jc_JobSystemThreadPool = $rt_classWithoutFields(jc_JobSystemWithBarrier),
jc_JobSystemThreadPool_T_01 = null,
jc_JobSystemThreadPool_T_02 = null,
jc_JobSystemThreadPool_T_03 = null,
jc_JobSystemThreadPool__init_0 = ($this, var$1, $c) => {
    jc_JobSystemWithBarrier__init_0($this, 1, 1);
},
jc_JobSystemThreadPool__init_ = (var_0, var_1) => {
    let var_2 = new jc_JobSystemThreadPool();
    jc_JobSystemThreadPool__init_0(var_2, var_0, var_1);
    return var_2;
},
jc_JobSystemThreadPool_deleteNative = $this => {
    jc_JobSystemThreadPool_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jc_JobSystemThreadPool__clinit_ = () => {
    jc_JobSystemThreadPool_T_01 = jc_JobSystemThreadPool__init_(1, 1);
    jc_JobSystemThreadPool_T_02 = jc_JobSystemThreadPool__init_(1, 1);
    jc_JobSystemThreadPool_T_03 = jc_JobSystemThreadPool__init_(1, 1);
},
jc_JobSystemThreadPool_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.JobSystemThreadPool);
    jolt.destroy(jsObj);
};
function cbgm_Frustum() {
    let a = this; jl_Object.call(a);
    a.$planes = null;
    a.$planePoints = null;
    a.$planePointsArray = null;
}
let cbgm_Frustum_clipSpacePlanePoints = null,
cbgm_Frustum_clipSpacePlanePointsArray = null,
cbgm_Frustum_tmpV = null,
cbgm_Frustum_$callClinit = () => {
    cbgm_Frustum_$callClinit = $rt_eraseClinit(cbgm_Frustum);
    cbgm_Frustum__clinit_();
},
cbgm_Frustum_update = ($this, var$1) => {
    let var$2, var$3, var$4, $j, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $i, $v, var$17, var$18;
    cbgm_Frustum_$callClinit();
    var$2 = cbgm_Frustum_clipSpacePlanePointsArray;
    var$3 = var$2.data;
    jl_System_fastArraycopy(var$2, 0, $this.$planePointsArray, 0, var$3.length);
    var$2 = var$1.$val;
    var$4 = $this.$planePointsArray;
    $j = 0;
    cbgm_Matrix4_$callClinit();
    var$6 = 0;
    while (var$6 < 8) {
        var$3 = var$4.data;
        var$7 = var$2.data;
        var$8 = $j + 0 | 0;
        var$9 = var$3[var$8] * var$7[3];
        var$10 = $j + 1 | 0;
        var$9 = var$9 + var$3[var$10] * var$7[7];
        var$11 = $j + 2 | 0;
        var$12 = 1.0 / (var$9 + var$3[var$11] * var$7[11] + var$7[15]);
        var$13 = (var$3[var$8] * var$7[0] + var$3[var$10] * var$7[4] + var$3[var$11] * var$7[8] + var$7[12]) * var$12;
        var$14 = (var$3[var$8] * var$7[1] + var$3[var$10] * var$7[5] + var$3[var$11] * var$7[9] + var$7[13]) * var$12;
        var$9 = (var$3[var$8] * var$7[2] + var$3[var$10] * var$7[6] + var$3[var$11] * var$7[10] + var$7[14]) * var$12;
        var$3[var$8] = var$13;
        var$3[var$10] = var$14;
        var$3[var$11] = var$9;
        $j = $j + 3 | 0;
        var$6 = var$6 + 1 | 0;
    }
    $i = 0;
    $j = 0;
    while ($i < 8) {
        var$3 = var$4.data;
        $v = $this.$planePoints.data[$i];
        var$17 = $j + 1 | 0;
        $v.$x = var$3[$j];
        var$18 = var$17 + 1 | 0;
        $v.$y = var$3[var$17];
        $j = var$18 + 1 | 0;
        $v.$z = var$3[var$18];
        $i = $i + 1 | 0;
    }
    var$1 = $this.$planes.data[0];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set(var$1, var$2[1], var$2[0], var$2[2]);
    var$1 = $this.$planes.data[1];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set(var$1, var$2[4], var$2[5], var$2[7]);
    var$1 = $this.$planes.data[2];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set(var$1, var$2[0], var$2[4], var$2[3]);
    var$1 = $this.$planes.data[3];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set(var$1, var$2[5], var$2[1], var$2[6]);
    var$1 = $this.$planes.data[4];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set(var$1, var$2[2], var$2[3], var$2[6]);
    var$1 = $this.$planes.data[5];
    var$2 = $this.$planePoints.data;
    cbgm_Plane_set(var$1, var$2[4], var$2[0], var$2[1]);
},
cbgm_Frustum_sphereInFrustum = ($this, $center, $radius) => {
    let $i, var$4, var$5;
    $i = 0;
    var$4 =  -$radius;
    while ($i < 6) {
        var$5 = $this.$planes.data;
        if (var$5[$i].$normal.$x * $center.$x + var$5[$i].$normal.$y * $center.$y + var$5[$i].$normal.$z * $center.$z < var$4 - var$5[$i].$d)
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
cbgm_Frustum__clinit_ = () => {
    let var$1, var$2, var$3, $j, var$5, var$6, $v, var$8, var$9;
    var$1 = $rt_createArray(cbgm_Vector3, 8);
    var$2 = var$1.data;
    var$2[0] = cbgm_Vector3__init_0((-1.0), (-1.0), (-1.0));
    var$2[1] = cbgm_Vector3__init_0(1.0, (-1.0), (-1.0));
    var$2[2] = cbgm_Vector3__init_0(1.0, 1.0, (-1.0));
    var$2[3] = cbgm_Vector3__init_0((-1.0), 1.0, (-1.0));
    var$2[4] = cbgm_Vector3__init_0((-1.0), (-1.0), 1.0);
    var$2[5] = cbgm_Vector3__init_0(1.0, (-1.0), 1.0);
    var$2[6] = cbgm_Vector3__init_0(1.0, 1.0, 1.0);
    var$2[7] = cbgm_Vector3__init_0((-1.0), 1.0, 1.0);
    cbgm_Frustum_clipSpacePlanePoints = var$1;
    var$1 = $rt_createFloatArray(24);
    var$3 = var$1.data;
    cbgm_Frustum_clipSpacePlanePointsArray = var$1;
    $j = 0;
    var$5 = var$2.length;
    var$6 = 0;
    while (var$6 < var$5) {
        $v = var$2[var$6];
        var$8 = $j + 1 | 0;
        var$3[$j] = $v.$x;
        var$9 = var$8 + 1 | 0;
        var$3[var$8] = $v.$y;
        $j = var$9 + 1 | 0;
        var$3[var$9] = $v.$z;
        var$6 = var$6 + 1 | 0;
    }
    cbgm_Frustum_tmpV = cbgm_Vector3__init_();
};
function cbgmc_Ray() {
    let a = this; jl_Object.call(a);
    a.$origin = null;
    a.$direction3 = null;
}
let cbgmc_Ray_tmp = null,
cbgmc_Ray_$callClinit = () => {
    cbgmc_Ray_$callClinit = $rt_eraseClinit(cbgmc_Ray);
    cbgmc_Ray__clinit_();
},
cbgmc_Ray__clinit_ = () => {
    cbgmc_Ray_tmp = cbgm_Vector3__init_();
};
function ji_IDLNativeData() {
    let a = this; jl_Object.call(a);
    a.$nativeObject = null;
    a.$idlBase = null;
    a.$cPointer = Long_ZERO;
    a.$cMemOwn = 0;
    a.$disposed = 0;
}
let ji_IDLNativeData_reset = ($this, $cPtr, $cMemoryOwn) => {
    ji_IDLNativeData_dispose($this);
    $this.$cMemOwn = $cMemoryOwn;
    $this.$cPointer = $cPtr;
    $this.$disposed = 0;
    $this.$nativeObject = null;
},
ji_IDLNativeData_getCPointer = $this => {
    return $this.$cPointer;
},
ji_IDLNativeData_dispose = $this => {
    let var$1, var$2;
    if ($this.$cMemOwn) {
        if ($this.$disposed) {
            if (ji_IDLBase_ENABLE_LOGGING) {
                var$1 = ji_IDLNativeData_toString($this);
                var$2 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$2);
                jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(644)), var$1), $rt_s(645));
                ji_IDLNativeData_error($rt_s(646), jl_AbstractStringBuilder_toString(var$2));
            }
        } else if (Long_ne($this.$cPointer, Long_ZERO)) {
            $this.$disposed = 1;
            $this.$idlBase.$deleteNative();
            $this.$cPointer = Long_ZERO;
            $this.$nativeObject = null;
            ji_IDLBase_onNativeDispose($this.$idlBase);
            $this.$idlBase = null;
        } else if (ji_IDLBase_ENABLE_LOGGING) {
            var$1 = ji_IDLNativeData_toString($this);
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(644)), var$1), $rt_s(647));
            ji_IDLNativeData_error($rt_s(646), jl_AbstractStringBuilder_toString(var$2));
        }
    }
},
ji_IDLNativeData_toString = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = jl_Class_getSimpleName(jl_Object_getClass($this));
    var$2 = $this.$cPointer;
    var$3 = $this.$cMemOwn;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    var$1 = jl_StringBuilder_append(var$4, var$1);
    jl_AbstractStringBuilder_append0(var$1, 40);
    var$1 = jl_StringBuilder_append5(var$1, var$2);
    jl_AbstractStringBuilder_append0(var$1, 44);
    jl_AbstractStringBuilder_append0(jl_StringBuilder_append3(var$1, var$3), 41);
    return jl_AbstractStringBuilder_toString(var$4);
},
ji_IDLNativeData_error = ($tag, $message) => {
    let var$3, var$4;
    var$3 = jl_System_err();
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $tag), $rt_s(29)), $message);
    $tag = jl_AbstractStringBuilder_toString(var$4);
    otcic_JsConsolePrintStream_println(var$3, $tag);
},
cbgggu_ShaderProvider = $rt_classWithoutFields(0);
function cbgggu_BaseShaderProvider() {
    jl_Object.call(this);
    this.$shaders0 = null;
}
let cbgggu_BaseShaderProvider__init_ = $this => {
    $this.$shaders0 = cbgu_Array__init_();
},
cbgggu_BaseShaderProvider_getShader = ($this, $renderable) => {
    let $suggestedShader, var$3, $shader;
    $suggestedShader = $renderable.$shader;
    if ($suggestedShader !== null && $suggestedShader.$canRender($renderable))
        return $suggestedShader;
    var$3 = cbgu_Array_iterator($this.$shaders0);
    while (true) {
        if (!cbgu_Array$ArrayIterator_hasNext(var$3)) {
            $shader = $this.$createShader($renderable);
            if ($shader.$canRender($renderable)) {
                $shader.$init();
                cbgu_Array_add($this.$shaders0, $shader);
                return $shader;
            }
            $suggestedShader = new cbgu_GdxRuntimeException;
            jl_Exception__init_($suggestedShader, $rt_s(648));
            $rt_throw($suggestedShader);
        }
        $shader = cbgu_Array$ArrayIterator_next(var$3);
        if ($shader.$canRender($renderable))
            break;
    }
    return $shader;
};
function cbgggu_DefaultShaderProvider() {
    cbgggu_BaseShaderProvider.call(this);
    this.$config1 = null;
}
let cbgggu_DefaultShaderProvider__init_ = ($this, $config) => {
    cbgggu_BaseShaderProvider__init_($this);
    if ($config === null)
        $config = cbgggs_DefaultShader$Config__init_0();
    $this.$config1 = $config;
},
cbgggu_DefaultShaderProvider__init_0 = var_0 => {
    let var_1 = new cbgggu_DefaultShaderProvider();
    cbgggu_DefaultShaderProvider__init_(var_1, var_0);
    return var_1;
},
cbgggu_DefaultShaderProvider_createShader = ($this, $renderable) => {
    return cbgggs_DefaultShader__init_2($renderable, $this.$config1);
},
nmgss_PBRShaderProvider = $rt_classWithoutFields(cbgggu_DefaultShaderProvider),
nmgss_PBRShaderProvider_lightsInfo = null,
nmgss_PBRShaderProvider_defaultVertexShader = null,
nmgss_PBRShaderProvider_defaultFragmentShader = null,
nmgss_PBRShaderProvider_getDefaultVertexShader = () => {
    if (nmgss_PBRShaderProvider_defaultVertexShader === null)
        nmgss_PBRShaderProvider_defaultVertexShader = nmgsu_ShaderParser_parse(cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(649)));
    return nmgss_PBRShaderProvider_defaultVertexShader;
},
nmgss_PBRShaderProvider_getDefaultFragmentShader = () => {
    if (nmgss_PBRShaderProvider_defaultFragmentShader === null)
        nmgss_PBRShaderProvider_defaultFragmentShader = nmgsu_ShaderParser_parse(cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(650)));
    return nmgss_PBRShaderProvider_defaultFragmentShader;
},
nmgss_PBRShaderProvider_createDefaultConfig = () => {
    let $config, var$2;
    $config = new nmgss_PBRShaderConfig;
    cbgggs_DefaultShader$Config__init_($config);
    var$2 = nmgss_PBRShaderConfig$SRGB_ACCURATE;
    $config.$manualSRGB = var$2;
    $config.$transmissionSRGB = var$2;
    $config.$mirrorSRGB = var$2;
    $config.$manualGammaCorrection = 1;
    $config.$gamma = 2.200000047683716;
    $config.$glslVersion = null;
    $config.$numVertexColors = 1;
    $config.$prefix = null;
    $config.$vertexShader = nmgss_PBRShaderProvider_getDefaultVertexShader();
    $config.$fragmentShader = nmgss_PBRShaderProvider_getDefaultFragmentShader();
    return $config;
},
nmgss_PBRShaderProvider_morphTargetsPrefix = $renderable => {
    let $prefix, var$3, $att, $i, var$6, var$7;
    $prefix = $rt_s(8);
    var$3 = cbgg_VertexAttributes_iterator(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
    while (cbgg_VertexAttributes$ReadonlyIterator_hasNext(var$3)) {
        $att = cbgg_VertexAttributes$ReadonlyIterator_next(var$3);
        $i = 0;
        while ($i < 8) {
            var$6 = $att.$usage;
            if (var$6 == 512 && $att.$unit == $i) {
                $renderable = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($renderable);
                jl_AbstractStringBuilder_append($renderable, $prefix);
                jl_AbstractStringBuilder_append($renderable, $rt_s(651));
                $renderable = jl_StringBuilder_append1($renderable, $i);
                jl_AbstractStringBuilder_append($renderable, $rt_s(652));
                $prefix = jl_AbstractStringBuilder_toString($renderable);
            } else if (var$6 == 1024 && $att.$unit == $i) {
                var$7 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$7);
                jl_AbstractStringBuilder_append(var$7, $prefix);
                jl_AbstractStringBuilder_append(var$7, $rt_s(653));
                $renderable = jl_StringBuilder_append1(var$7, $i);
                jl_AbstractStringBuilder_append($renderable, $rt_s(652));
                $prefix = jl_AbstractStringBuilder_toString($renderable);
            } else if (var$6 == 2048 && $att.$unit == $i) {
                $renderable = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($renderable);
                jl_AbstractStringBuilder_append($renderable, $prefix);
                jl_AbstractStringBuilder_append($renderable, $rt_s(654));
                $renderable = jl_StringBuilder_append1($renderable, $i);
                jl_AbstractStringBuilder_append($renderable, $rt_s(652));
                $prefix = jl_AbstractStringBuilder_toString($renderable);
            }
            $i = $i + 1 | 0;
        }
    }
    return $prefix;
},
nmgss_PBRShaderProvider_isGL3 = $this => {
    return cbggg_GLVersion_isVersionEqualToOrHigher(cbg_Gdx_graphics.$glVersion, 3, 0);
},
nmgss_PBRShaderProvider_createPrefixBase = ($this, $renderable, $config) => {
    let $defaultPrefix, $version, $prefix;
    $defaultPrefix = cbgggs_DefaultShader_createPrefix($renderable, $config);
    $version = $config.$glslVersion;
    if (nmgss_PBRShaderProvider_isGL3($this)) {
        $prefix = cbg_Application$ApplicationType_WebGL;
        if ($prefix === cbg_Application$ApplicationType_Desktop) {
            if ($version === null)
                $version = $rt_s(655);
        } else if (!($prefix !== cbg_Application$ApplicationType_Android && $prefix !== cbg_Application$ApplicationType_iOS && $prefix !== $prefix) && $version === null)
            $version = $rt_s(656);
    }
    $prefix = $rt_s(8);
    if ($version !== null) {
        $renderable = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($renderable);
        jl_AbstractStringBuilder_append($renderable, $prefix);
        jl_AbstractStringBuilder_append($renderable, $version);
        $prefix = jl_AbstractStringBuilder_toString($renderable);
    }
    if ($config.$prefix !== null) {
        $renderable = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($renderable);
        jl_AbstractStringBuilder_append($renderable, $prefix);
        jl_AbstractStringBuilder_append($renderable, $config.$prefix);
        $prefix = jl_AbstractStringBuilder_toString($renderable);
    }
    $renderable = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($renderable);
    jl_AbstractStringBuilder_append($renderable, $prefix);
    jl_AbstractStringBuilder_append($renderable, $defaultPrefix);
    return jl_AbstractStringBuilder_toString($renderable);
},
nmgss_PBRShaderProvider_createPrefixSRGB = ($this, $renderable, $config) => {
    let $prefix;
    $prefix = $rt_s(8);
    if ($config.$manualSRGB !== nmgss_PBRShaderConfig$SRGB_NONE) {
        $renderable = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($renderable);
        jl_AbstractStringBuilder_append($renderable, $prefix);
        jl_AbstractStringBuilder_append($renderable, $rt_s(594));
        $prefix = jl_AbstractStringBuilder_toString($renderable);
        if ($config.$manualSRGB === nmgss_PBRShaderConfig$SRGB_FAST) {
            $renderable = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($renderable);
            jl_AbstractStringBuilder_append($renderable, $prefix);
            jl_AbstractStringBuilder_append($renderable, $rt_s(595));
            $prefix = jl_AbstractStringBuilder_toString($renderable);
        }
    }
    if ($config.$manualGammaCorrection) {
        $renderable = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($renderable);
        jl_AbstractStringBuilder_append($renderable, $prefix);
        jl_AbstractStringBuilder_append($renderable, $rt_s(657));
        $renderable = jl_StringBuilder_append2($renderable, $config.$gamma);
        jl_AbstractStringBuilder_append($renderable, $rt_s(30));
        $prefix = jl_AbstractStringBuilder_toString($renderable);
    }
    if ($config.$transmissionSRGB !== nmgss_PBRShaderConfig$SRGB_NONE) {
        $renderable = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($renderable);
        jl_AbstractStringBuilder_append($renderable, $prefix);
        jl_AbstractStringBuilder_append($renderable, $rt_s(658));
        $prefix = jl_AbstractStringBuilder_toString($renderable);
        if ($config.$transmissionSRGB === nmgss_PBRShaderConfig$SRGB_FAST) {
            $renderable = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($renderable);
            jl_AbstractStringBuilder_append($renderable, $prefix);
            jl_AbstractStringBuilder_append($renderable, $rt_s(659));
            $prefix = jl_AbstractStringBuilder_toString($renderable);
        }
    }
    if ($config.$mirrorSRGB !== nmgss_PBRShaderConfig$SRGB_NONE) {
        $renderable = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($renderable);
        jl_AbstractStringBuilder_append($renderable, $prefix);
        jl_AbstractStringBuilder_append($renderable, $rt_s(660));
        $prefix = jl_AbstractStringBuilder_toString($renderable);
        if ($config.$mirrorSRGB === nmgss_PBRShaderConfig$SRGB_FAST) {
            $renderable = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($renderable);
            jl_AbstractStringBuilder_append($renderable, $prefix);
            jl_AbstractStringBuilder_append($renderable, $rt_s(661));
            $prefix = jl_AbstractStringBuilder_toString($renderable);
        }
    }
    return $prefix;
},
nmgss_PBRShaderProvider_createShader0 = ($this, $renderable) => {
    let $config, $prefix, $attribute, $csm, $primitiveType, $isLineOrPoint, $unlit, $hasSpecular, $numCSM, $specualarCubemapAttribute, $specularMirrorAttribute, $textureLodSupported, $textureFilter, $maxUVIndex, $numBoneInfluence, $numMorphTarget, $numColor, $shader;
    $config = $this.$config1;
    $prefix = nmgss_PBRShaderProvider_createPrefixBase($this, $renderable, $config);
    $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), nmgss_PBRShaderProvider_morphTargetsPrefix($renderable)));
    $csm = $renderable.$material;
    nmgsa_PBRColorAttribute_$callClinit();
    if (cbggg_Attributes_has($csm, nmgsa_PBRColorAttribute_BaseColorFactor))
        $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(662)));
    $primitiveType = $renderable.$meshPart.$primitiveType;
    $isLineOrPoint = $primitiveType && $primitiveType != 1 && $primitiveType != 2 && $primitiveType != 3 ? 0 : 1;
    a: {
        if (!$isLineOrPoint) {
            $csm = $renderable.$material;
            nmgsa_PBRFlagAttribute_$callClinit();
            if (!cbggg_Attributes_has($csm, nmgsa_PBRFlagAttribute_Unlit) && cbgg_Mesh_getVertexAttribute($renderable.$meshPart.$mesh, 8) !== null) {
                $unlit = 0;
                break a;
            }
        }
        $unlit = 1;
    }
    if (!$unlit) {
        $csm = $renderable.$material;
        nmgsa_PBRTextureAttribute_$callClinit();
        if (cbggg_Attributes_has($csm, nmgsa_PBRTextureAttribute_MetallicRoughnessTexture))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(663)));
        if (cbggg_Attributes_has($renderable.$material, nmgsa_PBRTextureAttribute_OcclusionTexture))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(664)));
        $csm = $renderable.$material;
        nmgsa_PBRFloatAttribute_$callClinit();
        if (cbggg_Attributes_has($csm, nmgsa_PBRFloatAttribute_TransmissionFactor))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(665)));
        if (cbggg_Attributes_has($renderable.$material, nmgsa_PBRTextureAttribute_TransmissionTexture))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(666)));
        $csm = $renderable.$material;
        nmgsa_PBRVolumeAttribute_$callClinit();
        if (cbggg_Attributes_has($csm, nmgsa_PBRVolumeAttribute_Type))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(667)));
        if (cbggg_Attributes_has($renderable.$material, nmgsa_PBRTextureAttribute_ThicknessTexture))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(668)));
        if (cbggg_Attributes_has($renderable.$material, nmgsa_PBRFloatAttribute_IOR))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(669)));
        $hasSpecular = 0;
        if (cbggg_Attributes_has($renderable.$material, nmgsa_PBRFloatAttribute_SpecularFactor)) {
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(670)));
            $hasSpecular = 1;
        }
        $csm = $renderable.$material;
        nmgsa_PBRHDRColorAttribute_$callClinit();
        if (cbggg_Attributes_has($csm, nmgsa_PBRHDRColorAttribute_Specular)) {
            $hasSpecular = 1;
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(671)));
        }
        if (cbggg_Attributes_has($renderable.$material, nmgsa_PBRTextureAttribute_SpecularFactorTexture)) {
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(672)));
            $hasSpecular = 1;
        }
        if (cbggg_Attributes_has($renderable.$material, nmgsa_PBRTextureAttribute_SpecularColorTexture)) {
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(673)));
            $hasSpecular = 1;
        }
        if ($hasSpecular)
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(674)));
        $csm = $renderable.$material;
        nmgsa_PBRIridescenceAttribute_$callClinit();
        if (cbggg_Attributes_has($csm, nmgsa_PBRIridescenceAttribute_Type))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(675)));
        if (cbggg_Attributes_has($renderable.$material, nmgsa_PBRTextureAttribute_IridescenceTexture))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(676)));
        if (cbggg_Attributes_has($renderable.$material, nmgsa_PBRTextureAttribute_IridescenceThicknessTexture))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(677)));
        $csm = $renderable.$environment;
        nmgsa_ClippingPlaneAttribute_$callClinit();
        if (cbggg_Attributes_has($csm, nmgsa_ClippingPlaneAttribute_Type))
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(678)));
        $csm = $renderable.$environment;
        nmgsa_CascadeShadowMapAttribute_$callClinit();
        $csm = cbggg_Attributes_get0($csm, $rt_cls(nmgsa_CascadeShadowMapAttribute), nmgsa_CascadeShadowMapAttribute_Type);
        if ($csm !== null) {
            $numCSM = $csm.$cascadeShadowMap.$lights2.$size0;
            if ($numCSM > 8)
                $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(679)));
            $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(680)), $numCSM), $rt_s(30)));
        }
        $specualarCubemapAttribute = null;
        $specularMirrorAttribute = null;
        $csm = $renderable.$environment;
        if ($csm !== null) {
            if (cbggg_Attributes_has($csm, nmgsa_PBRTextureAttribute_TransmissionSourceTexture))
                $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(681)));
            $csm = $renderable.$environment;
            nmgsa_PBRCubemapAttribute_$callClinit();
            if (cbggg_Attributes_has($csm, nmgsa_PBRCubemapAttribute_SpecularEnv)) {
                $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(682)));
                $specualarCubemapAttribute = cbggg_Attributes_get0($renderable.$environment, $rt_cls(nmgsa_PBRCubemapAttribute), nmgsa_PBRCubemapAttribute_SpecularEnv);
            } else if (cbggg_Attributes_has($renderable.$environment, nmgsa_PBRCubemapAttribute_DiffuseEnv))
                $specualarCubemapAttribute = cbggg_Attributes_get0($renderable.$environment, $rt_cls(nmgsa_PBRCubemapAttribute), nmgsa_PBRCubemapAttribute_DiffuseEnv);
            else {
                $csm = $renderable.$environment;
                cbggga_CubemapAttribute_$callClinit();
                if (cbggg_Attributes_has($csm, cbggga_CubemapAttribute_EnvironmentMap))
                    $specualarCubemapAttribute = cbggg_Attributes_get0($renderable.$environment, $rt_cls(nmgsa_PBRCubemapAttribute), cbggga_CubemapAttribute_EnvironmentMap);
            }
            $csm = $renderable.$environment;
            nmgsa_MirrorSourceAttribute_$callClinit();
            if (cbggg_Attributes_has($csm, nmgsa_MirrorSourceAttribute_Type)) {
                $csm = $renderable.$material;
                nmgsa_MirrorAttribute_$callClinit();
                if (cbggg_Attributes_has($csm, nmgsa_MirrorAttribute_Specular)) {
                    $specularMirrorAttribute = cbggg_Attributes_get0($renderable.$environment, $rt_cls(nmgsa_MirrorAttribute), nmgsa_MirrorAttribute_Specular);
                    $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(683)));
                }
            }
            if (!($specualarCubemapAttribute === null && $specularMirrorAttribute === null)) {
                $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(684)));
                if (nmgss_PBRShaderProvider_isGL3($this))
                    $textureLodSupported = 1;
                else if (!cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(685)))
                    $textureLodSupported = 0;
                else {
                    $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(686)));
                    $textureLodSupported = 1;
                }
                if ($specualarCubemapAttribute !== null) {
                    $csm = $specualarCubemapAttribute.$textureDescription0;
                    $textureFilter = $csm.$minFilter0;
                    if ($textureFilter === null)
                        $textureFilter = cbgg_GLTexture_getMinFilter($csm.$texture);
                    if ($textureLodSupported && jl_Enum_equals($textureFilter, cbgg_Texture$TextureFilter_MipMap))
                        $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(687)));
                }
                if (cbggg_Attributes_has($renderable.$environment, nmgsa_PBRTextureAttribute_BRDFLUTTexture))
                    $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(688)));
            }
            $csm = $renderable.$environment;
            cbggga_ColorAttribute_$callClinit();
            if (cbggg_Attributes_has($csm, cbggga_ColorAttribute_AmbientLight))
                $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(689)));
            $csm = $renderable.$environment;
            nmgsa_PBRMatrixAttribute_$callClinit();
            if (cbggg_Attributes_has($csm, nmgsa_PBRMatrixAttribute_EnvRotation))
                $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(690)));
        }
    } else
        $attribute = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), $rt_s(691)));
    $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attribute), nmgss_PBRShaderProvider_createPrefixSRGB($this, $renderable, $config)));
    $maxUVIndex = (-1);
    $specualarCubemapAttribute = $renderable.$material;
    cbggga_TextureAttribute_$callClinit();
    $attribute = cbggg_Attributes_get0($specualarCubemapAttribute, $rt_cls(cbggga_TextureAttribute), cbggga_TextureAttribute_Diffuse);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(692)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    $attribute = cbggg_Attributes_get0($renderable.$material, $rt_cls(cbggga_TextureAttribute), cbggga_TextureAttribute_Emissive);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(693)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    $attribute = cbggg_Attributes_get0($renderable.$material, $rt_cls(cbggga_TextureAttribute), cbggga_TextureAttribute_Normal);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(694)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    $specualarCubemapAttribute = $renderable.$material;
    nmgsa_PBRTextureAttribute_$callClinit();
    $attribute = cbggg_Attributes_get0($specualarCubemapAttribute, $rt_cls(cbggga_TextureAttribute), nmgsa_PBRTextureAttribute_MetallicRoughnessTexture);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(695)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    $attribute = cbggg_Attributes_get0($renderable.$material, $rt_cls(cbggga_TextureAttribute), nmgsa_PBRTextureAttribute_OcclusionTexture);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(696)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    $attribute = cbggg_Attributes_get0($renderable.$material, $rt_cls(cbggga_TextureAttribute), nmgsa_PBRTextureAttribute_TransmissionTexture);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(697)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    $attribute = cbggg_Attributes_get0($renderable.$material, $rt_cls(cbggga_TextureAttribute), nmgsa_PBRTextureAttribute_ThicknessTexture);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(698)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    $attribute = cbggg_Attributes_get0($renderable.$material, $rt_cls(cbggga_TextureAttribute), nmgsa_PBRTextureAttribute_SpecularFactorTexture);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(699)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    $attribute = cbggg_Attributes_get0($renderable.$material, $rt_cls(cbggga_TextureAttribute), cbggga_TextureAttribute_Specular);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(700)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    $attribute = cbggg_Attributes_get0($renderable.$material, $rt_cls(cbggga_TextureAttribute), nmgsa_PBRTextureAttribute_IridescenceTexture);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(701)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    $attribute = cbggg_Attributes_get0($renderable.$material, $rt_cls(cbggga_TextureAttribute), nmgsa_PBRTextureAttribute_IridescenceThicknessTexture);
    if ($attribute !== null) {
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(702)), $attribute.$uvIndex), $rt_s(30)));
        $maxUVIndex = jl_Math_max($maxUVIndex, $attribute.$uvIndex);
    }
    if ($maxUVIndex >= 0)
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(703)));
    $hasSpecular = $rt_compare($maxUVIndex, 1);
    if (!$hasSpecular)
        $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(704)));
    else if ($hasSpecular > 0)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(705)));
    $specualarCubemapAttribute = $renderable.$environment;
    if ($specualarCubemapAttribute !== null) {
        nmgsa_FogAttribute_$callClinit();
        if (cbggg_Attributes_has($specualarCubemapAttribute, nmgsa_FogAttribute_FogEquation))
            $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(706)));
    }
    $specularMirrorAttribute = cbgg_VertexAttributes_iterator(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
    while (cbgg_VertexAttributes$ReadonlyIterator_hasNext($specularMirrorAttribute)) {
        $attribute = cbgg_VertexAttributes$ReadonlyIterator_next($specularMirrorAttribute);
        if ($attribute.$usage == 2)
            $csm = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $csm), $rt_s(707)), $attribute.$unit), $rt_s(652)));
    }
    $numBoneInfluence = 0;
    $numMorphTarget = 0;
    $numColor = 0;
    $specualarCubemapAttribute = cbgg_VertexAttributes_iterator(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
    while (true) {
        if (!cbgg_VertexAttributes$ReadonlyIterator_hasNext($specualarCubemapAttribute)) {
            nmgss_PBRCommon_checkVertexAttributes($renderable);
            if ($numBoneInfluence > 8) {
                $specualarCubemapAttribute = cbg_Gdx_app;
                $textureFilter = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(708)), $numBoneInfluence), $rt_s(709)));
                cgxgbt_TeaApplication_error($specualarCubemapAttribute, $rt_s(710), $textureFilter);
            }
            if ($numMorphTarget > 8) {
                $specualarCubemapAttribute = cbg_Gdx_app;
                $textureFilter = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(711)), $numMorphTarget), $rt_s(709)));
                cgxgbt_TeaApplication_error($specualarCubemapAttribute, $rt_s(710), $textureFilter);
            }
            if ($numColor > $config.$numVertexColors) {
                $specualarCubemapAttribute = cbg_Gdx_app;
                $textureFilter = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(712)), $config.$numVertexColors), $rt_s(713)), $numColor), $rt_s(709)));
                cgxgbt_TeaApplication_error($specualarCubemapAttribute, $rt_s(710), $textureFilter);
            }
            $specualarCubemapAttribute = $renderable.$environment;
            if ($specualarCubemapAttribute !== null) {
                nmgsu_LightUtils_getLightsInfo(nmgss_PBRShaderProvider_lightsInfo, $specualarCubemapAttribute);
                if (nmgss_PBRShaderProvider_lightsInfo.$dirLights > $config.$numDirectionalLights) {
                    $specualarCubemapAttribute = cbg_Gdx_app;
                    $textureFilter = jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(714)), nmgss_PBRShaderProvider_lightsInfo.$dirLights), $rt_s(81)), $config.$numDirectionalLights));
                    cgxgbt_TeaApplication_error($specualarCubemapAttribute, $rt_s(710), $textureFilter);
                }
                if (nmgss_PBRShaderProvider_lightsInfo.$pointLights0 > $config.$numPointLights) {
                    $specualarCubemapAttribute = cbg_Gdx_app;
                    $textureFilter = jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(715)), nmgss_PBRShaderProvider_lightsInfo.$pointLights0), $rt_s(81)), $config.$numPointLights));
                    cgxgbt_TeaApplication_error($specualarCubemapAttribute, $rt_s(710), $textureFilter);
                }
                if (nmgss_PBRShaderProvider_lightsInfo.$spotLights1 > $config.$numSpotLights) {
                    $specualarCubemapAttribute = cbg_Gdx_app;
                    $textureFilter = jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(716)), nmgss_PBRShaderProvider_lightsInfo.$spotLights1), $rt_s(81)), $config.$numSpotLights));
                    cgxgbt_TeaApplication_error($specualarCubemapAttribute, $rt_s(710), $textureFilter);
                }
                if (nmgss_PBRShaderProvider_lightsInfo.$miscLights > 0)
                    cgxgbt_TeaApplication_error(cbg_Gdx_app, $rt_s(710), $rt_s(717));
            }
            $shader = nmgss_PBRShaderProvider_createShader($this, $renderable, $config, $csm);
            nmgss_PBRShaderProvider_checkShaderCompilation($this, $shader.$program);
            if (nmgss_PBRShader_canRender($shader, $renderable))
                return $shader;
            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(718)));
        }
        $attribute = cbgg_VertexAttributes$ReadonlyIterator_next($specualarCubemapAttribute);
        $numCSM = $attribute.$usage;
        if ($numCSM == 4)
            break;
        b: {
            if ($numCSM == 2)
                $numColor = jl_Math_max($numColor, $attribute.$unit + 1 | 0);
            else {
                c: {
                    if (!($numCSM == 512 && $attribute.$unit >= 8) && !($numCSM == 1024 && $attribute.$unit >= 8)) {
                        if ($numCSM != 2048)
                            break c;
                        if ($attribute.$unit < 8)
                            break c;
                    }
                    $numMorphTarget = jl_Math_max($numMorphTarget, $attribute.$unit + 1 | 0);
                    break b;
                }
                if ($numCSM == 64)
                    $numBoneInfluence = jl_Math_max($numBoneInfluence, $attribute.$unit + 1 | 0);
            }
        }
    }
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(719)));
},
nmgss_PBRShaderProvider_createShader = ($this, $renderable, $config, $prefix) => {
    return nmgss_PBRShader__init_($renderable, $config, $prefix);
},
nmgss_PBRShaderProvider_checkShaderCompilation = ($this, $program) => {
    let $shaderLog, var$3, var$4;
    $shaderLog = cbggg_ShaderProgram_getLog($program);
    if (!$program.$isCompiled) {
        var$3 = new cbgu_GdxRuntimeException;
        $program = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($program);
        jl_AbstractStringBuilder_append($program, $rt_s(720));
        jl_AbstractStringBuilder_append($program, $shaderLog);
        jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString($program));
        $rt_throw(var$3);
    }
    if (!jl_String_isEmpty($shaderLog)) {
        $program = cbg_Gdx_app;
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_append(var$4, $rt_s(721));
        jl_AbstractStringBuilder_append(var$4, $shaderLog);
        $shaderLog = jl_AbstractStringBuilder_toString(var$4);
        cgxgbt_TeaApplication_error($program, $rt_s(710), $shaderLog);
    } else if (cbg_Gdx_app.$logLevel >= 3) {
        $program = jl_System_err();
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(710)), $rt_s(29)), $rt_s(722));
        $shaderLog = jl_AbstractStringBuilder_toString(var$4);
        otcic_JsConsolePrintStream_println($program, $shaderLog);
    }
},
nmgss_PBRShaderProvider__clinit_ = () => {
    let var$1;
    var$1 = new nmgsu_LightUtils$LightsInfo;
    var$1.$dirLights = 0;
    var$1.$pointLights0 = 0;
    var$1.$spotLights1 = 0;
    var$1.$miscLights = 0;
    nmgss_PBRShaderProvider_lightsInfo = var$1;
    nmgss_PBRShaderProvider_defaultVertexShader = null;
    nmgss_PBRShaderProvider_defaultFragmentShader = null;
};
function cbggg_ShapeRenderer() {
    let a = this; jl_Object.call(a);
    a.$renderer = null;
    a.$matrixDirty = 0;
    a.$projectionMatrix = null;
    a.$transformMatrix = null;
    a.$combinedMatrix = null;
    a.$tmp3 = null;
    a.$color7 = null;
    a.$shapeType = null;
    a.$autoShapeType = 0;
    a.$defaultRectLineWidth = 0.0;
}
let cbggg_ShapeRenderer__init_0 = ($this, $maxVertices, $defaultShader) => {
    let var$3, var$4, var$5, var$6;
    $this.$matrixDirty = 0;
    $this.$projectionMatrix = cbgm_Matrix4__init_();
    $this.$transformMatrix = cbgm_Matrix4__init_();
    $this.$combinedMatrix = cbgm_Matrix4__init_();
    $this.$tmp3 = new cbgm_Vector2;
    $this.$color7 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    $this.$defaultRectLineWidth = 0.75;
    if ($defaultShader !== null)
        $this.$renderer = cbggg_ImmediateModeRenderer20__init_0($maxVertices, 0, 1, 0, $defaultShader);
    else {
        $defaultShader = new cbggg_ImmediateModeRenderer20;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append(var$3, $rt_s(723));
        jl_AbstractStringBuilder_append(var$3, $rt_s(8));
        jl_AbstractStringBuilder_append(var$3, $rt_s(724));
        var$4 = jl_AbstractStringBuilder_toString(var$3);
        var$5 = 0;
        while (var$5 < 0) {
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_AbstractStringBuilder_append(var$3, var$4);
            jl_AbstractStringBuilder_append(var$3, $rt_s(725));
            var$3 = jl_StringBuilder_append1(var$3, var$5);
            jl_AbstractStringBuilder_append(var$3, $rt_s(726));
            var$4 = jl_AbstractStringBuilder_toString(var$3);
            var$5 = var$5 + 1 | 0;
        }
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append(var$3, var$4);
        jl_AbstractStringBuilder_append(var$3, $rt_s(727));
        jl_AbstractStringBuilder_append(var$3, $rt_s(728));
        var$3 = jl_AbstractStringBuilder_toString(var$3);
        var$6 = 0;
        while (var$6 < 0) {
            var$4 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$4);
            jl_AbstractStringBuilder_append(var$4, var$3);
            jl_AbstractStringBuilder_append(var$4, $rt_s(729));
            var$3 = jl_StringBuilder_append1(var$4, var$6);
            jl_AbstractStringBuilder_append(var$3, $rt_s(726));
            var$3 = jl_AbstractStringBuilder_toString(var$3);
            var$6 = var$6 + 1 | 0;
        }
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_append(var$4, var$3);
        jl_AbstractStringBuilder_append(var$4, $rt_s(730));
        var$4 = jl_AbstractStringBuilder_toString(var$4);
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append(var$3, var$4);
        jl_AbstractStringBuilder_append(var$3, $rt_s(731));
        var$3 = jl_AbstractStringBuilder_toString(var$3);
        var$6 = 0;
        while (var$6 < 0) {
            var$4 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$4);
            jl_AbstractStringBuilder_append(var$4, var$3);
            jl_AbstractStringBuilder_append(var$4, $rt_s(732));
            var$3 = jl_StringBuilder_append1(var$4, var$6);
            jl_AbstractStringBuilder_append(var$3, $rt_s(733));
            jl_AbstractStringBuilder_append(var$3, $rt_s(734));
            var$3 = jl_StringBuilder_append1(var$3, var$6);
            jl_AbstractStringBuilder_append(var$3, $rt_s(726));
            var$3 = jl_AbstractStringBuilder_toString(var$3);
            var$6 = var$6 + 1 | 0;
        }
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_AbstractStringBuilder_append(var$4, var$3);
        jl_AbstractStringBuilder_append(var$4, $rt_s(735));
        var$4 = cbggg_ShaderProgram__init_0(jl_AbstractStringBuilder_toString(var$4), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
        if (!var$4.$isCompiled) {
            $defaultShader = new cbgu_GdxRuntimeException;
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_AbstractStringBuilder_append(var$3, $rt_s(471));
            jl_AbstractStringBuilder_append(var$3, cbggg_ShaderProgram_getLog(var$4));
            jl_Exception__init_($defaultShader, jl_AbstractStringBuilder_toString(var$3));
            $rt_throw($defaultShader);
        }
        cbggg_ImmediateModeRenderer20__init_($defaultShader, $maxVertices, 0, 1, 0, var$4);
        $defaultShader.$ownsShader = 1;
        $this.$renderer = $defaultShader;
    }
    cbgm_Matrix4_setToOrtho2D($this.$projectionMatrix, 0.0, 0.0, cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics), cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics));
    $this.$matrixDirty = 1;
},
cbggg_ShapeRenderer__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_ShapeRenderer();
    cbggg_ShapeRenderer__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_ShapeRenderer_begin = ($this, $type) => {
    let var$2, var$3;
    if ($this.$shapeType !== null) {
        $type = new jl_IllegalStateException;
        jl_Exception__init_($type, $rt_s(736));
        $rt_throw($type);
    }
    $this.$shapeType = $type;
    if ($this.$matrixDirty) {
        cbgm_Matrix4_set($this.$combinedMatrix, $this.$projectionMatrix);
        cbgm_Matrix4_mul0($this.$combinedMatrix.$val, $this.$transformMatrix.$val);
        $this.$matrixDirty = 0;
    }
    $type = $this.$renderer;
    var$2 = $this.$combinedMatrix;
    var$3 = $this.$shapeType.$glType;
    $type = $type;
    cbgm_Matrix4_set($type.$projModelView, var$2);
    $type.$primitiveType1 = var$3;
},
cbggg_ShapeRenderer_rect0 = ($this, $x, $y, $width, $height) => {
    let $colorBits, var$6;
    cbggg_ShapeRenderer_check($this, cbggg_ShapeRenderer$ShapeType_Line, cbggg_ShapeRenderer$ShapeType_Filled, 8);
    $colorBits = cbgg_Color_toFloatBits($this.$color7);
    if ($this.$shapeType !== cbggg_ShapeRenderer$ShapeType_Line) {
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $y, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        var$6 = $this.$renderer;
        $width = $x + $width;
        cbggg_ImmediateModeRenderer20_vertex(var$6, $width, $y, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        var$6 = $this.$renderer;
        $height = $y + $height;
        cbggg_ImmediateModeRenderer20_vertex(var$6, $width, $height, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $width, $height, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $height, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $y, 0.0);
    } else {
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $y, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        var$6 = $this.$renderer;
        $width = $x + $width;
        cbggg_ImmediateModeRenderer20_vertex(var$6, $width, $y, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $width, $y, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        var$6 = $this.$renderer;
        $height = $y + $height;
        cbggg_ImmediateModeRenderer20_vertex(var$6, $width, $height, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $width, $height, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $height, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $height, 0.0);
        cbggg_ImmediateModeRenderer20_color0($this.$renderer, $colorBits);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $y, 0.0);
    }
},
cbggg_ShapeRenderer_rect = ($this, $x, $y, $width, $height, $col1, $col2, $col3, $col4) => {
    let var$9, var$10, var$11, var$12, var$13;
    cbggg_ShapeRenderer_check($this, cbggg_ShapeRenderer$ShapeType_Line, cbggg_ShapeRenderer$ShapeType_Filled, 8);
    if ($this.$shapeType !== cbggg_ShapeRenderer$ShapeType_Line) {
        var$9 = $this.$renderer;
        var$10 = $col1.$r;
        var$11 = $col1.$g;
        var$12 = $col1.$b;
        var$13 = $col1.$a;
        cbggg_ImmediateModeRenderer20_color(var$9, var$10, var$11, var$12, var$13);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $y, 0.0);
        var$9 = $this.$renderer;
        var$10 = $col2.$r;
        var$11 = $col2.$g;
        var$12 = $col2.$b;
        var$13 = $col2.$a;
        cbggg_ImmediateModeRenderer20_color(var$9, var$10, var$11, var$12, var$13);
        $col2 = $this.$renderer;
        $width = $x + $width;
        cbggg_ImmediateModeRenderer20_vertex($col2, $width, $y, 0.0);
        $col2 = $this.$renderer;
        var$10 = $col3.$r;
        var$11 = $col3.$g;
        var$12 = $col3.$b;
        var$13 = $col3.$a;
        cbggg_ImmediateModeRenderer20_color($col2, var$10, var$11, var$12, var$13);
        $col2 = $this.$renderer;
        $height = $y + $height;
        cbggg_ImmediateModeRenderer20_vertex($col2, $width, $height, 0.0);
        $col2 = $this.$renderer;
        var$10 = $col3.$r;
        var$11 = $col3.$g;
        var$12 = $col3.$b;
        var$13 = $col3.$a;
        cbggg_ImmediateModeRenderer20_color($col2, var$10, var$11, var$12, var$13);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $width, $height, 0.0);
        $col2 = $this.$renderer;
        $width = $col4.$r;
        var$10 = $col4.$g;
        var$11 = $col4.$b;
        var$12 = $col4.$a;
        cbggg_ImmediateModeRenderer20_color($col2, $width, var$10, var$11, var$12);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $height, 0.0);
        $col2 = $this.$renderer;
        $width = $col1.$r;
        $height = $col1.$g;
        var$10 = $col1.$b;
        var$11 = $col1.$a;
        cbggg_ImmediateModeRenderer20_color($col2, $width, $height, var$10, var$11);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $y, 0.0);
    } else {
        var$9 = $this.$renderer;
        var$10 = $col1.$r;
        var$11 = $col1.$g;
        var$12 = $col1.$b;
        var$13 = $col1.$a;
        cbggg_ImmediateModeRenderer20_color(var$9, var$10, var$11, var$12, var$13);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $y, 0.0);
        var$9 = $this.$renderer;
        var$10 = $col2.$r;
        var$11 = $col2.$g;
        var$12 = $col2.$b;
        var$13 = $col2.$a;
        cbggg_ImmediateModeRenderer20_color(var$9, var$10, var$11, var$12, var$13);
        var$9 = $this.$renderer;
        $width = $x + $width;
        cbggg_ImmediateModeRenderer20_vertex(var$9, $width, $y, 0.0);
        var$9 = $this.$renderer;
        var$10 = $col2.$r;
        var$11 = $col2.$g;
        var$12 = $col2.$b;
        var$13 = $col2.$a;
        cbggg_ImmediateModeRenderer20_color(var$9, var$10, var$11, var$12, var$13);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $width, $y, 0.0);
        $col2 = $this.$renderer;
        var$10 = $col3.$r;
        var$11 = $col3.$g;
        var$12 = $col3.$b;
        var$13 = $col3.$a;
        cbggg_ImmediateModeRenderer20_color($col2, var$10, var$11, var$12, var$13);
        $col2 = $this.$renderer;
        $height = $y + $height;
        cbggg_ImmediateModeRenderer20_vertex($col2, $width, $height, 0.0);
        $col2 = $this.$renderer;
        var$10 = $col3.$r;
        var$11 = $col3.$g;
        var$12 = $col3.$b;
        var$13 = $col3.$a;
        cbggg_ImmediateModeRenderer20_color($col2, var$10, var$11, var$12, var$13);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $width, $height, 0.0);
        $col2 = $this.$renderer;
        $width = $col4.$r;
        var$10 = $col4.$g;
        var$11 = $col4.$b;
        var$12 = $col4.$a;
        cbggg_ImmediateModeRenderer20_color($col2, $width, var$10, var$11, var$12);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $height, 0.0);
        $col2 = $this.$renderer;
        $width = $col4.$r;
        var$10 = $col4.$g;
        var$11 = $col4.$b;
        var$12 = $col4.$a;
        cbggg_ImmediateModeRenderer20_color($col2, $width, var$10, var$11, var$12);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $height, 0.0);
        $col2 = $this.$renderer;
        $width = $col1.$r;
        $height = $col1.$g;
        var$10 = $col1.$b;
        var$11 = $col1.$a;
        cbggg_ImmediateModeRenderer20_color($col2, $width, $height, var$10, var$11);
        cbggg_ImmediateModeRenderer20_vertex($this.$renderer, $x, $y, 0.0);
    }
},
cbggg_ShapeRenderer_check = ($this, $preferred, $other, $newVertices) => {
    let $type, var$5;
    $type = $this.$shapeType;
    if ($type === null) {
        $preferred = new jl_IllegalStateException;
        jl_Exception__init_($preferred, $rt_s(737));
        $rt_throw($preferred);
    }
    if (!($type !== $preferred && $type !== $other)) {
        if ($this.$matrixDirty) {
            cbggg_ShapeRenderer_end($this);
            cbggg_ShapeRenderer_begin($this, $type);
        } else {
            $preferred = $this.$renderer;
            if (($preferred.$maxVertices - $preferred.$numVertices | 0) < $newVertices) {
                cbggg_ShapeRenderer_end($this);
                cbggg_ShapeRenderer_begin($this, $type);
            }
        }
    } else {
        if (!$this.$autoShapeType) {
            if ($other === null) {
                $other = new jl_IllegalStateException;
                $type = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($type);
                jl_AbstractStringBuilder_append($type, $rt_s(738));
                $preferred = jl_StringBuilder_append($type, $preferred);
                jl_AbstractStringBuilder_append($preferred, $rt_s(739));
                jl_Exception__init_($other, jl_AbstractStringBuilder_toString($preferred));
                $rt_throw($other);
            }
            var$5 = new jl_IllegalStateException;
            $type = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($type);
            jl_AbstractStringBuilder_append($type, $rt_s(738));
            $preferred = jl_StringBuilder_append($type, $preferred);
            jl_AbstractStringBuilder_append($preferred, $rt_s(740));
            $preferred = jl_StringBuilder_append($preferred, $other);
            jl_AbstractStringBuilder_append($preferred, $rt_s(739));
            jl_Exception__init_(var$5, jl_AbstractStringBuilder_toString($preferred));
            $rt_throw(var$5);
        }
        cbggg_ShapeRenderer_end($this);
        cbggg_ShapeRenderer_begin($this, $preferred);
    }
},
cbggg_ShapeRenderer_end = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$renderer;
    if (var$1.$numVertices) {
        cbggg_ShaderProgram_bind(var$1.$shader1);
        cbggg_ShaderProgram_setUniformMatrix0(var$1.$shader1, $rt_s(741), var$1.$projModelView);
        var$2 = 0;
        while (var$2 < var$1.$numTexCoords) {
            cbggg_ShaderProgram_setUniformi0(var$1.$shader1, var$1.$shaderUniformNames.data[var$2], var$2);
            var$2 = var$2 + 1 | 0;
        }
        cbgg_Mesh_setVertices(var$1.$mesh0, var$1.$vertices1, 0, var$1.$vertexIdx);
        var$3 = var$1.$mesh0;
        cbgg_Mesh_render(var$3, var$1.$shader1, var$1.$primitiveType1, 0, var$3.$indices0.$getNumMaxIndices() <= 0 ? var$3.$vertices0.$getNumVertices() : var$3.$indices0.$getNumIndices(), var$3.$autoBind);
        var$1.$numSetTexCoords = 0;
        var$1.$vertexIdx = 0;
        var$1.$numVertices = 0;
    }
    $this.$shapeType = null;
},
cbggg_ShapeRenderer_dispose = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$renderer;
    if (var$1.$ownsShader) {
        var$2 = var$1.$shader1;
        if (var$2 !== null)
            cbggg_ShaderProgram_dispose(var$2);
    }
    var$1 = var$1.$mesh0;
    cbgg_Mesh_$callClinit();
    var$2 = cbgg_Mesh_meshes;
    var$3 = cbg_Gdx_app;
    if (ju_HashMap_get(var$2, var$3) !== null) {
        var$2 = cbgg_Mesh_meshes;
        var$3 = cbg_Gdx_app;
        cbgu_Array_removeValue(ju_HashMap_get(var$2, var$3), var$1, 1);
    }
    var$1.$vertices0.$dispose();
    var$2 = var$1.$instances;
    if (var$2 !== null)
        var$2.$dispose();
    var$1.$indices0.$dispose();
};
function cbgggu_TextureDescriptor() {
    let a = this; jl_Object.call(a);
    a.$texture = null;
    a.$minFilter0 = null;
    a.$magFilter0 = null;
    a.$uWrap0 = null;
    a.$vWrap0 = null;
}
let cbgggu_TextureDescriptor__init_0 = $this => {
    $this.$texture = null;
},
cbgggu_TextureDescriptor__init_ = () => {
    let var_0 = new cbgggu_TextureDescriptor();
    cbgggu_TextureDescriptor__init_0(var_0);
    return var_0;
},
cbgggu_TextureDescriptor_set = ($this, $other) => {
    $this.$texture = $other.$texture;
    $this.$minFilter0 = $other.$minFilter0;
    $this.$magFilter0 = $other.$magFilter0;
    $this.$uWrap0 = $other.$uWrap0;
    $this.$vWrap0 = $other.$vWrap0;
},
cbgggu_TextureDescriptor_hashCode = $this => {
    let var$1, $result;
    var$1 = $this.$texture;
    $result = Long_mul(Long_fromInt(811), Long_add(Long_mul(Long_fromInt(811), Long_fromInt(var$1 !== null ? var$1.$glTarget : 0)), Long_fromInt(var$1 === null ? 0 : var$1.$glHandle)));
    var$1 = $this.$minFilter0;
    $result = Long_mul(Long_fromInt(811), Long_add($result, Long_fromInt(var$1 === null ? 0 : var$1.$glEnum0)));
    var$1 = $this.$magFilter0;
    $result = Long_mul(Long_fromInt(811), Long_add($result, Long_fromInt(var$1 === null ? 0 : var$1.$glEnum0)));
    var$1 = $this.$uWrap0;
    $result = Long_mul(Long_fromInt(811), Long_add($result, Long_fromInt(var$1 === null ? 0 : var$1.$glEnum)));
    var$1 = $this.$vWrap0;
    $result = Long_add($result, Long_fromInt(var$1 === null ? 0 : var$1.$glEnum));
    return Long_lo(Long_xor($result, Long_shr($result, 32)));
},
nmgss_PBRShaderConfig$SRGB = $rt_classWithoutFields(jl_Enum),
nmgss_PBRShaderConfig$SRGB_NONE = null,
nmgss_PBRShaderConfig$SRGB_FAST = null,
nmgss_PBRShaderConfig$SRGB_ACCURATE = null,
nmgss_PBRShaderConfig$SRGB_$VALUES = null,
nmgss_PBRShaderConfig$SRGB__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new nmgss_PBRShaderConfig$SRGB;
    jl_Enum__init_(var$1, $rt_s(154), 0);
    nmgss_PBRShaderConfig$SRGB_NONE = var$1;
    var$1 = new nmgss_PBRShaderConfig$SRGB;
    jl_Enum__init_(var$1, $rt_s(742), 1);
    nmgss_PBRShaderConfig$SRGB_FAST = var$1;
    var$1 = new nmgss_PBRShaderConfig$SRGB;
    jl_Enum__init_(var$1, $rt_s(743), 2);
    nmgss_PBRShaderConfig$SRGB_ACCURATE = var$1;
    var$2 = $rt_createArray(nmgss_PBRShaderConfig$SRGB, 3);
    var$3 = var$2.data;
    var$3[0] = nmgss_PBRShaderConfig$SRGB_NONE;
    var$3[1] = nmgss_PBRShaderConfig$SRGB_FAST;
    var$3[2] = var$1;
    nmgss_PBRShaderConfig$SRGB_$VALUES = var$2;
};
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name3 = null;
}
let jnc_CodingErrorAction_IGNORE = null,
jnc_CodingErrorAction_REPLACE = null,
jnc_CodingErrorAction_REPORT = null,
jnc_CodingErrorAction__init_0 = ($this, $name) => {
    $this.$name3 = $name;
},
jnc_CodingErrorAction__init_ = var_0 => {
    let var_1 = new jnc_CodingErrorAction();
    jnc_CodingErrorAction__init_0(var_1, var_0);
    return var_1;
},
jnc_CodingErrorAction__clinit_ = () => {
    jnc_CodingErrorAction_IGNORE = jnc_CodingErrorAction__init_($rt_s(744));
    jnc_CodingErrorAction_REPLACE = jnc_CodingErrorAction__init_($rt_s(745));
    jnc_CodingErrorAction_REPORT = jnc_CodingErrorAction__init_($rt_s(746));
};
function jnc_CharsetDecoder() {
    let a = this; jl_Object.call(a);
    a.$charset1 = null;
    a.$averageCharsPerByte = 0.0;
    a.$maxCharsPerByte = 0.0;
    a.$replacement = null;
    a.$malformedAction = null;
    a.$unmappableAction0 = null;
    a.$state = 0;
}
let jnc_CharsetDecoder_onMalformedInput = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Exception__init_(var$2, $rt_s(747));
    $rt_throw(var$2);
},
jnc_CharsetDecoder_implOnMalformedInput = ($this, $newAction) => {
    return;
},
jnc_CharsetDecoder_onUnmappableCharacter = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$unmappableAction0 = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Exception__init_(var$2, $rt_s(747));
    $rt_throw(var$2);
},
jnc_CharsetDecoder_implOnUnmappableCharacter = ($this, $newAction) => {
    return;
},
jnc_CharsetDecoder_decode = ($this, $in, $out, $endOfInput) => {
    let var$4, var$5, $result, $e, $$je;
    var$4 = $this.$state;
    if (!(var$4 == 2 && !$endOfInput) && var$4 != 3) {
        $this.$state = $endOfInput ? 2 : 1;
        var$5 = $this;
        while (true) {
            try {
                $result = jnci_BufferedDecoder_decodeLoop(var$5, $in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $rt_throw(jnc_CoderMalfunctionError__init_($e));
                } else {
                    throw $$e;
                }
            }
            if (jnc_CoderResult_isOverflow($result))
                return $result;
            if (jnc_CoderResult_isUnderflow($result)) {
                if ($endOfInput && jn_Buffer_hasRemaining($in)) {
                    if ($this.$malformedAction === jnc_CodingErrorAction_REPORT)
                        return jnc_CoderResult_malformedForLength(jn_Buffer_remaining($in));
                    if (jn_Buffer_remaining($out) <= $this.$replacement.$nativeString.length)
                        return jnc_CoderResult_OVERFLOW;
                    jn_Buffer_position($in, $in.$position0 + jn_Buffer_remaining($in) | 0);
                    if ($this.$malformedAction === jnc_CodingErrorAction_REPLACE)
                        jn_CharBuffer_put($out, $this.$replacement);
                }
                return $result;
            }
            if (jnc_CoderResult_isMalformed($result)) {
                $e = $this.$malformedAction;
                if ($e === jnc_CodingErrorAction_REPORT)
                    return $result;
                if ($e === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement.$nativeString.length)
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put($out, $this.$replacement);
                }
                jn_Buffer_position($in, $in.$position0 + jnc_CoderResult_length($result) | 0);
            } else if (jnc_CoderResult_isUnmappable($result)) {
                $e = $this.$unmappableAction0;
                if ($e === jnc_CodingErrorAction_REPORT)
                    break;
                if ($e === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement.$nativeString.length)
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put($out, $this.$replacement);
                }
                jn_Buffer_position($in, $in.$position0 + jnc_CoderResult_length($result) | 0);
            }
        }
        return $result;
    }
    $in = new jl_IllegalStateException;
    jl_Exception__init_0($in);
    $rt_throw($in);
},
jnc_CharsetDecoder_flush = ($this, $out) => {
    let var$2;
    var$2 = $this.$state;
    if (var$2 != 3 && var$2 != 2) {
        $out = new jl_IllegalStateException;
        jl_Exception__init_0($out);
        $rt_throw($out);
    }
    $this.$state = 3;
    return jnc_CoderResult_UNDERFLOW;
},
jnc_CharsetDecoder_decode0 = ($this, $in) => {
    let var$2, $out, $result;
    var$2 = $this.$state;
    if (var$2 && var$2 != 3) {
        $in = new jl_IllegalStateException;
        jl_Exception__init_0($in);
        $rt_throw($in);
    }
    if (!jn_Buffer_remaining($in))
        return jn_CharBuffer_allocate(0);
    if ($this.$state)
        $this.$state = 0;
    $out = jn_CharBuffer_allocate(jl_Math_max(8, jn_Buffer_remaining($in) * $this.$averageCharsPerByte | 0));
    while (true) {
        $result = jnc_CharsetDecoder_decode($this, $in, $out, 0);
        if (jnc_CoderResult_isUnderflow($result))
            break;
        if (jnc_CoderResult_isOverflow($result))
            $out = jnc_CharsetDecoder_expand($this, $out);
        if (!jnc_CoderResult_isError($result))
            continue;
        jnc_CoderResult_throwException($result);
    }
    $in = jnc_CharsetDecoder_decode($this, $in, $out, 1);
    if (jnc_CoderResult_isError($in))
        jnc_CoderResult_throwException($in);
    while (!jnc_CoderResult_isUnderflow(jnc_CharsetDecoder_flush($this, $out))) {
        $out = jnc_CharsetDecoder_expand($this, $out);
    }
    jn_Buffer_flip($out);
    return $out;
},
jnc_CharsetDecoder_expand = ($this, $buffer) => {
    let $array, $result;
    $array = jn_CharBuffer_array($buffer);
    $result = jn_CharBuffer_wrap(ju_Arrays_copyOf1($array, jl_Math_max(8, $array.data.length * 2 | 0)));
    jn_Buffer_position($result, $buffer.$position0);
    return $result;
},
jnc_CharsetDecoder_implFlush = ($this, $out) => {
    return jnc_CoderResult_UNDERFLOW;
},
jnc_CharsetDecoder_implReset = $this => {
    return;
},
cbgg_TextureData$TextureDataType = $rt_classWithoutFields(jl_Enum),
cbgg_TextureData$TextureDataType_Pixmap = null,
cbgg_TextureData$TextureDataType_Custom = null,
cbgg_TextureData$TextureDataType_$VALUES = null,
cbgg_TextureData$TextureDataType__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbgg_TextureData$TextureDataType;
    jl_Enum__init_(var$1, $rt_s(748), 0);
    cbgg_TextureData$TextureDataType_Pixmap = var$1;
    var$1 = new cbgg_TextureData$TextureDataType;
    jl_Enum__init_(var$1, $rt_s(749), 1);
    cbgg_TextureData$TextureDataType_Custom = var$1;
    var$2 = $rt_createArray(cbgg_TextureData$TextureDataType, 2);
    var$3 = var$2.data;
    var$3[0] = cbgg_TextureData$TextureDataType_Pixmap;
    var$3[1] = var$1;
    cbgg_TextureData$TextureDataType_$VALUES = var$2;
},
cbggg_MipMapGenerator = $rt_classWithoutFields(),
cbggg_MipMapGenerator_useHWMipMap = 0,
cbggg_MipMapGenerator_generateMipMapCPU = ($target, $pixmap, $textureWidth, $textureHeight) => {
    let $width, $height, $level, $tmp_0, var$9, var$10, var$11, var$12, var$13;
    cbg_Gdx_gl.$glTexImage2D($target, 0, cbgg_Pixmap_getGLInternalFormat($pixmap), cbgg_Pixmap_getWidth($pixmap), cbgg_Pixmap_getHeight($pixmap), 0, cbgg_Pixmap_getGLFormat($pixmap), cbgg_Pixmap_getGLType($pixmap), cbgg_Pixmap_getPixels($pixmap));
    if (cbg_Gdx_gl20 === null && $textureWidth != $textureHeight) {
        $pixmap = new cbgu_GdxRuntimeException;
        jl_Exception__init_($pixmap, $rt_s(750));
        $rt_throw($pixmap);
    }
    $width = cbgg_Pixmap_getWidth($pixmap) / 2 | 0;
    $height = cbgg_Pixmap_getHeight($pixmap) / 2 | 0;
    $level = 1;
    while ($width > 0 && $height > 0) {
        $tmp_0 = cbgg_Pixmap__init_($width, $height, cbgg_Pixmap_getFormat($pixmap));
        cbgg_Pixmap_setBlending($tmp_0, cbgg_Pixmap$Blending_None);
        var$9 = cbgg_Pixmap_getWidth($pixmap);
        var$10 = cbgg_Pixmap_getHeight($pixmap);
        var$11 = $tmp_0.$nativePixmap;
        var$12 = $pixmap.$nativePixmap;
        var$13 = var$11.$nativePixmap0;
        Gdx.Gdx.prototype.g2d_draw_pixmap(var$12.$nativePixmap0.$basePtr, var$13.$basePtr, 0, 0, var$9, var$10, 0, 0, $width, $height);
        cbggg_Gdx2DPixmapNative_copyHeapToBuffer(var$13);
        if ($level > 1)
            cbgg_Pixmap_dispose($pixmap);
        cbg_Gdx_gl.$glTexImage2D($target, $level, cbgg_Pixmap_getGLInternalFormat($tmp_0), cbgg_Pixmap_getWidth($tmp_0), cbgg_Pixmap_getHeight($tmp_0), 0, cbgg_Pixmap_getGLFormat($tmp_0), cbgg_Pixmap_getGLType($tmp_0), cbgg_Pixmap_getPixels($tmp_0));
        $width = cbgg_Pixmap_getWidth($tmp_0) / 2 | 0;
        $height = cbgg_Pixmap_getHeight($tmp_0) / 2 | 0;
        $level = $level + 1 | 0;
        $pixmap = $tmp_0;
    }
},
cbggg_MipMapGenerator__clinit_ = () => {
    cbggg_MipMapGenerator_useHWMipMap = 1;
},
jn_NativeBuffer = $rt_classWithoutFields(0);
function cbg_Graphics$BufferFormat() {
    let a = this; jl_Object.call(a);
    a.$r1 = 0;
    a.$g1 = 0;
    a.$b1 = 0;
    a.$a1 = 0;
    a.$depth = 0;
    a.$stencil0 = 0;
    a.$samples0 = 0;
    a.$coverageSampling = 0;
}
let jpb_MassProperties = $rt_classWithoutFields(ji_IDLBase),
jpb_MassProperties_T_01 = null,
jpb_MassProperties_T_02 = null,
jpb_MassProperties_T_03 = null,
jpb_MassProperties_deleteNative = $this => {
    jpb_MassProperties_internal_native_deleteNative$js_body$_6(Long_lo($this.$nativeData.$cPointer));
},
jpb_MassProperties__clinit_ = () => {
    let var$1;
    var$1 = new jpb_MassProperties;
    ji_IDLBase__init_(var$1);
    jpb_MassProperties_T_01 = var$1;
    var$1 = new jpb_MassProperties;
    ji_IDLBase__init_(var$1);
    jpb_MassProperties_T_02 = var$1;
    var$1 = new jpb_MassProperties;
    ji_IDLBase__init_(var$1);
    jpb_MassProperties_T_03 = var$1;
},
jpb_MassProperties_internal_native_deleteNative$js_body$_6 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.MassProperties);
    jolt.destroy(jsObj);
},
jpb_MassProperties_internal_native_set_mMass$js_body$_22 = (var$1, var$2) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.MassProperties);
    jsObj.set_mMass(var$2);
},
jpb_BodyCreationSettings = $rt_classWithoutFields(ji_IDLBase),
jpb_BodyCreationSettings_T_01 = null,
jpb_BodyCreationSettings_T_02 = null,
jpb_BodyCreationSettings_T_03 = null,
jpb_BodyCreationSettings_dispose = $this => {
    ji_IDLNativeData_dispose($this.$nativeData);
},
jpb_BodyCreationSettings_deleteNative = $this => {
    jpb_BodyCreationSettings_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jpb_BodyCreationSettings__clinit_ = () => {
    let var$1;
    var$1 = new jpb_BodyCreationSettings;
    ji_IDLBase__init_(var$1);
    jpb_BodyCreationSettings_T_01 = var$1;
    var$1 = new jpb_BodyCreationSettings;
    ji_IDLBase__init_(var$1);
    jpb_BodyCreationSettings_T_02 = var$1;
    var$1 = new jpb_BodyCreationSettings;
    ji_IDLBase__init_(var$1);
    jpb_BodyCreationSettings_T_03 = var$1;
},
jpb_BodyCreationSettings_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BodyCreationSettings);
    jolt.destroy(jsObj);
},
jpb_BodyCreationSettings_internal_native_set_mFriction$js_body$_90 = (var$1, var$2) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BodyCreationSettings);
    jsObj.set_mFriction(var$2);
},
jpb_BodyCreationSettings_internal_native_set_mRestitution$js_body$_94 = (var$1, var$2) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BodyCreationSettings);
    jsObj.set_mRestitution(var$2);
},
jpb_BodyCreationSettings_internal_native_set_mMassPropertiesOverride$js_body$_134 = (var$1, var$2) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BodyCreationSettings);
    jsObj.set_mMassPropertiesOverride(var$2);
};
function jm_Mat44() {
    ji_IDLBase.call(this);
    this.$Vec4_TEMP_GEN_1 = null;
}
let jm_Mat44_T_01 = null,
jm_Mat44_T_02 = null,
jm_Mat44_T_03 = null,
jm_Mat44_deleteNative = $this => {
    jm_Mat44_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jm_Mat44__clinit_ = () => {
    let var$1;
    var$1 = new jm_Mat44;
    ji_IDLBase__init_(var$1);
    jm_Mat44_T_01 = var$1;
    var$1 = new jm_Mat44;
    ji_IDLBase__init_(var$1);
    jm_Mat44_T_02 = var$1;
    var$1 = new jm_Mat44;
    ji_IDLBase__init_(var$1);
    jm_Mat44_T_03 = var$1;
},
jm_Mat44_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Mat44);
    jolt.destroy(jsObj);
},
jm_Mat44_internal_native_GetColumn4$js_body$_124 = (var$1, var$2) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Mat44);
    var returnedJSObj = jsObj.GetColumn4(var$2);
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return jolt.getPointer(returnedJSObj);
},
jm_Vec4 = $rt_classWithoutFields(ji_IDLBase),
jm_Vec4_T_01 = null,
jm_Vec4_T_02 = null,
jm_Vec4_T_03 = null,
jm_Vec4_deleteNative = $this => {
    jm_Vec4_internal_native_deleteNative$js_body$_4(Long_lo($this.$nativeData.$cPointer));
},
jm_Vec4__clinit_ = () => {
    let var$1;
    var$1 = new jm_Vec4;
    ji_IDLBase__init_(var$1);
    jm_Vec4_T_01 = var$1;
    var$1 = new jm_Vec4;
    ji_IDLBase__init_(var$1);
    jm_Vec4_T_02 = var$1;
    var$1 = new jm_Vec4;
    ji_IDLBase__init_(var$1);
    jm_Vec4_T_03 = var$1;
},
jm_Vec4_internal_native_deleteNative$js_body$_4 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Vec4);
    jolt.destroy(jsObj);
},
jm_Vec4_internal_native_GetComponent$js_body$_42 = (var$1, var$2) => {
    var jsObj = jolt.wrapPointer(var$1, jolt.Vec4);
    var returnedJSObj = jsObj.GetComponent(var$2);
    return returnedJSObj;
};
function cbgm_Plane() {
    let a = this; jl_Object.call(a);
    a.$normal = null;
    a.$d = 0.0;
}
let cbgm_Plane_set = ($this, var$1, var$2, $point3) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$4 = cbgm_Vector3_sub(cbgm_Vector3_set0($this.$normal, var$1), var$2);
    var$5 = var$2.$x - $point3.$x;
    var$6 = var$2.$y - $point3.$y;
    var$7 = var$2.$z - $point3.$z;
    var$8 = var$4.$y;
    var$9 = var$8 * var$7;
    var$10 = var$4.$z;
    var$9 = var$9 - var$10 * var$6;
    var$11 = var$10 * var$5;
    var$10 = var$4.$x;
    cbgm_Vector3_nor(cbgm_Vector3_set(var$4, var$9, var$11 - var$10 * var$7, var$10 * var$6 - var$8 * var$5));
    $this.$d =  -cbgm_Vector3_dot(var$1, $this.$normal);
};
function cbgggs_DefaultShader$Config() {
    let a = this; jl_Object.call(a);
    a.$vertexShader = null;
    a.$fragmentShader = null;
    a.$numDirectionalLights = 0;
    a.$numPointLights = 0;
    a.$numSpotLights = 0;
    a.$numBones = 0;
    a.$numBoneWeights = 0;
    a.$ignoreUnimplemented = 0;
    a.$defaultCullFace = 0;
    a.$defaultDepthFunc = 0;
}
let cbgggs_DefaultShader$Config__init_ = $this => {
    $this.$vertexShader = null;
    $this.$fragmentShader = null;
    $this.$numDirectionalLights = 2;
    $this.$numPointLights = 5;
    $this.$numSpotLights = 0;
    $this.$numBones = 12;
    $this.$numBoneWeights = 4;
    $this.$ignoreUnimplemented = 1;
    $this.$defaultCullFace = (-1);
    $this.$defaultDepthFunc = (-1);
},
cbgggs_DefaultShader$Config__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Config();
    cbgggs_DefaultShader$Config__init_(var_0);
    return var_0;
},
cbgggu_RenderableSorter = $rt_classWithoutFields(0);
function nmgss_SceneRenderableSorter() {
    let a = this; jl_Object.call(a);
    a.$camera3 = null;
    a.$tmpV10 = null;
    a.$tmpV20 = null;
}
let nmgss_SceneRenderableSorter_sort = ($this, $camera, $renderables) => {
    $this.$camera3 = $camera;
    cbgu_Array_sort($renderables, $this);
},
nmgss_SceneRenderableSorter_getTranslation = ($this, $worldTransform, $center, $output) => {
    if (cbgm_Vector3_isZero($center))
        cbgm_Matrix4_getTranslation($worldTransform, $output);
    else if (cbgm_Matrix4_hasRotationOrScaling($worldTransform))
        cbgm_Vector3_mul(cbgm_Vector3_set0($output, $center), $worldTransform);
    else
        cbgm_Vector3_add(cbgm_Matrix4_getTranslation($worldTransform, $output), $center);
    return $output;
},
nmgss_SceneRenderableSorter_compare0 = ($this, $o1, $o2) => {
    let $h1, $b1, $b2, $h2, var$7, $shaderCompare, $envCompare, $materialCompare, $meshCompare, $result;
    $h1 = $o1.$material;
    cbggga_BlendingAttribute_$callClinit();
    $b1 = cbggg_Attributes_has($h1, cbggga_BlendingAttribute_Type) && (cbggg_Attributes_get($o1.$material, cbggga_BlendingAttribute_Type)).$blended ? 1 : 0;
    $b2 = cbggg_Attributes_has($o2.$material, cbggga_BlendingAttribute_Type) && (cbggg_Attributes_get($o2.$material, cbggga_BlendingAttribute_Type)).$blended ? 1 : 0;
    $h1 = $o1.$userData;
    $h1 = !($h1 instanceof nmgss_SceneRenderableSorter$Hints) ? null : $h1;
    $h2 = $o2.$userData;
    $h2 = !($h2 instanceof nmgss_SceneRenderableSorter$Hints) ? null : $h2;
    if ($h1 !== $h2) {
        var$7 = nmgss_SceneRenderableSorter$Hints_OPAQUE_LAST;
        if ($h1 === var$7)
            return !$b2 ? 1 : (-1);
        if ($h2 === var$7)
            return !$b1 ? (-1) : 1;
    }
    a: {
        if (!(!$b1 && !$b2)) {
            if ($b1 && !$b2)
                return 1;
            if ($b1)
                break a;
            if (!$b2)
                break a;
            return (-1);
        }
        $shaderCompare = nmgss_SceneRenderableSorter_compareIdentity($this, $o1.$shader, $o2.$shader);
        if ($shaderCompare)
            return $shaderCompare;
        $h1 = $o1.$environment;
        $h2 = $o2.$environment;
        $envCompare = $h1 === null && $h2 === null ? 0 : $h1 === null ? (-1) : $h2 !== null ? nmgss_SceneRenderableSorter_compareIdentity($this, $h1, $h2) : 1;
        if ($envCompare)
            return $envCompare;
        $materialCompare = nmgss_SceneRenderableSorter_compareIdentity($this, $o1.$material, $o2.$material);
        if ($materialCompare)
            return $materialCompare;
        $meshCompare = nmgss_SceneRenderableSorter_compareIdentity($this, $o1.$meshPart.$mesh, $o2.$meshPart.$mesh);
        if ($meshCompare)
            return $meshCompare;
    }
    nmgss_SceneRenderableSorter_getTranslation($this, $o1.$worldTransform, $o1.$meshPart.$center, $this.$tmpV10);
    nmgss_SceneRenderableSorter_getTranslation($this, $o2.$worldTransform, $o2.$meshPart.$center, $this.$tmpV20);
    $b2 = $rt_compare((cbgm_Vector3_dst2($this.$camera3.$position3, $this.$tmpV10) | 0) - (cbgm_Vector3_dst2($this.$camera3.$position3, $this.$tmpV20) | 0) | 0, 0.0);
    $result = $b2 < 0 ? (-1) : $b2 <= 0 ? 0 : 1;
    if ($b1)
        $result =  -$result | 0;
    return $result;
},
nmgss_SceneRenderableSorter_compareIdentity = ($this, $o1, $o2) => {
    if ($o1 === $o2)
        return 0;
    return $rt_compare($o1.$hashCode(), $o2.$hashCode());
},
nmgss_SceneRenderableSorter_compare = ($this, var$1, var$2) => {
    return nmgss_SceneRenderableSorter_compare0($this, var$1, var$2);
};
function cbgm_Vector2() {
    let a = this; jl_Object.call(a);
    a.$x2 = 0.0;
    a.$y1 = 0.0;
}
let cbgm_Vector2_X = null,
cbgm_Vector2_Y = null,
cbgm_Vector2_Zero = null,
cbgm_Vector2__init_0 = $this => {
    return;
},
cbgm_Vector2__init_2 = () => {
    let var_0 = new cbgm_Vector2();
    cbgm_Vector2__init_0(var_0);
    return var_0;
},
cbgm_Vector2__init_1 = ($this, $x, $y) => {
    $this.$x2 = $x;
    $this.$y1 = $y;
},
cbgm_Vector2__init_ = (var_0, var_1) => {
    let var_2 = new cbgm_Vector2();
    cbgm_Vector2__init_1(var_2, var_0, var_1);
    return var_2;
},
cbgm_Vector2_set = ($this, $x, $y) => {
    $this.$x2 = $x;
    $this.$y1 = $y;
    return $this;
},
cbgm_Vector2__clinit_ = () => {
    cbgm_Vector2_X = cbgm_Vector2__init_(1.0, 0.0);
    cbgm_Vector2_Y = cbgm_Vector2__init_(0.0, 1.0);
    cbgm_Vector2_Zero = cbgm_Vector2__init_(0.0, 0.0);
},
cbggg_ImmediateModeRenderer = $rt_classWithoutFields(0);
function cbggg_ImmediateModeRenderer20() {
    let a = this; jl_Object.call(a);
    a.$primitiveType1 = 0;
    a.$vertexIdx = 0;
    a.$numSetTexCoords = 0;
    a.$maxVertices = 0;
    a.$numVertices = 0;
    a.$mesh0 = null;
    a.$shader1 = null;
    a.$ownsShader = 0;
    a.$numTexCoords = 0;
    a.$vertexSize0 = 0;
    a.$normalOffset = 0;
    a.$colorOffset = 0;
    a.$texCoordOffset = 0;
    a.$projModelView = null;
    a.$vertices1 = null;
    a.$shaderUniformNames = null;
}
let cbggg_ImmediateModeRenderer20__init_ = ($this, $maxVertices, $hasNormals, $hasColors, $numTexCoords, $shader) => {
    let var$6, var$7, $attribs, var$9, $i;
    $this.$projModelView = cbgm_Matrix4__init_();
    $this.$maxVertices = $maxVertices;
    $this.$numTexCoords = $numTexCoords;
    $this.$shader1 = $shader;
    $shader = cbgu_Array__init_();
    cbgu_Array_add($shader, cbgg_VertexAttribute__init_(1, 3, $rt_s(466)));
    if ($hasNormals)
        cbgu_Array_add($shader, cbgg_VertexAttribute__init_(8, 3, $rt_s(628)));
    if ($hasColors)
        cbgu_Array_add($shader, cbgg_VertexAttribute__init_(4, 4, $rt_s(467)));
    $hasNormals = 0;
    while ($hasNormals < $numTexCoords) {
        var$6 = new cbgg_VertexAttribute;
        var$7 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$7);
        jl_AbstractStringBuilder_append(var$7, $rt_s(734));
        cbgg_VertexAttribute__init_0(var$6, 16, 2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$7, $hasNormals)));
        cbgu_Array_add($shader, var$6);
        $hasNormals = $hasNormals + 1 | 0;
    }
    $attribs = $rt_createArray(cbgg_VertexAttribute, $shader.$size0);
    var$9 = $attribs.data;
    $hasNormals = 0;
    while ($hasNormals < $shader.$size0) {
        var$9[$hasNormals] = cbgu_Array_get($shader, $hasNormals);
        $hasNormals = $hasNormals + 1 | 0;
    }
    var$6 = new cbgg_Mesh;
    cbgg_Mesh_$callClinit();
    var$6.$autoBind = 1;
    var$6.$isInstanced = 0;
    var$6.$tmpV = cbgm_Vector3__init_();
    var$6.$vertices0 = cbgg_Mesh_makeVertexBuffer(var$6, 0, $maxVertices, cbgg_VertexAttributes__init_($attribs));
    var$6.$indices0 = cbggg_IndexBufferObject__init_(0, 0);
    var$6.$isVertexArray = 0;
    cbgg_Mesh_addManagedMesh(cbg_Gdx_app, var$6);
    $this.$mesh0 = var$6;
    $this.$vertices1 = $rt_createFloatArray($rt_imul($maxVertices, (cbgg_Mesh_getVertexAttributes(var$6)).$vertexSize / 4 | 0));
    $this.$vertexSize0 = (cbgg_Mesh_getVertexAttributes($this.$mesh0)).$vertexSize / 4 | 0;
    $this.$normalOffset = cbgg_Mesh_getVertexAttribute($this.$mesh0, 8) === null ? 0 : (cbgg_Mesh_getVertexAttribute($this.$mesh0, 8)).$offset / 4 | 0;
    $this.$colorOffset = cbgg_Mesh_getVertexAttribute($this.$mesh0, 4) === null ? 0 : (cbgg_Mesh_getVertexAttribute($this.$mesh0, 4)).$offset / 4 | 0;
    $this.$texCoordOffset = cbgg_Mesh_getVertexAttribute($this.$mesh0, 16) === null ? 0 : (cbgg_Mesh_getVertexAttribute($this.$mesh0, 16)).$offset / 4 | 0;
    $this.$shaderUniformNames = $rt_createArray(jl_String, $numTexCoords);
    $i = 0;
    while ($i < $numTexCoords) {
        $attribs = $this.$shaderUniformNames.data;
        $shader = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($shader);
        jl_AbstractStringBuilder_append($shader, $rt_s(751));
        $attribs[$i] = jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($shader, $i));
        $i = $i + 1 | 0;
    }
},
cbggg_ImmediateModeRenderer20__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbggg_ImmediateModeRenderer20();
    cbggg_ImmediateModeRenderer20__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbggg_ImmediateModeRenderer20_color = ($this, $r, $g, $b, $a) => {
    $this.$vertices1.data[$this.$vertexIdx + $this.$colorOffset | 0] = cbgu_NumberUtils_intToFloatColor((255.0 * $a | 0) << 24 | (255.0 * $b | 0) << 16 | (255.0 * $g | 0) << 8 | 255.0 * $r | 0);
},
cbggg_ImmediateModeRenderer20_color0 = ($this, $colorBits) => {
    $this.$vertices1.data[$this.$vertexIdx + $this.$colorOffset | 0] = $colorBits;
},
cbggg_ImmediateModeRenderer20_vertex = ($this, $x, $y, $z) => {
    let $idx, var$5;
    $idx = $this.$vertexIdx;
    var$5 = $this.$vertices1.data;
    var$5[$idx] = $x;
    var$5[$idx + 1 | 0] = $y;
    var$5[$idx + 2 | 0] = $z;
    $this.$numSetTexCoords = 0;
    $this.$vertexIdx = $idx + $this.$vertexSize0 | 0;
    $this.$numVertices = $this.$numVertices + 1 | 0;
},
cbggg_ImmediateModeRenderer20_createFragmentShader = ($hasNormals, $hasColors, $numTexCoords) => {
    let $shader, var$5, $i;
    $shader = $rt_s(752);
    if ($hasColors) {
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        jl_AbstractStringBuilder_append(var$5, $shader);
        jl_AbstractStringBuilder_append(var$5, $rt_s(728));
        $shader = jl_AbstractStringBuilder_toString(var$5);
    }
    $i = 0;
    while ($i < $numTexCoords) {
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        jl_AbstractStringBuilder_append(var$5, $shader);
        jl_AbstractStringBuilder_append(var$5, $rt_s(729));
        $shader = jl_StringBuilder_append1(var$5, $i);
        jl_AbstractStringBuilder_append($shader, $rt_s(726));
        var$5 = jl_AbstractStringBuilder_toString($shader);
        $shader = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($shader);
        jl_AbstractStringBuilder_append($shader, var$5);
        jl_AbstractStringBuilder_append($shader, $rt_s(753));
        $shader = jl_StringBuilder_append1($shader, $i);
        jl_AbstractStringBuilder_append($shader, $rt_s(726));
        $shader = jl_AbstractStringBuilder_toString($shader);
        $i = $i + 1 | 0;
    }
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_AbstractStringBuilder_append(var$5, $shader);
    jl_AbstractStringBuilder_append(var$5, $rt_s(754));
    jl_AbstractStringBuilder_append(var$5, !$hasColors ? $rt_s(755) : $rt_s(756));
    $shader = jl_AbstractStringBuilder_toString(var$5);
    if ($numTexCoords > 0) {
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        jl_AbstractStringBuilder_append(var$5, $shader);
        jl_AbstractStringBuilder_append(var$5, $rt_s(624));
        $shader = jl_AbstractStringBuilder_toString(var$5);
    }
    $i = 0;
    $hasColors = $numTexCoords - 1 | 0;
    while ($i < $numTexCoords) {
        if ($i != $hasColors) {
            var$5 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$5);
            jl_AbstractStringBuilder_append(var$5, $shader);
            jl_AbstractStringBuilder_append(var$5, $rt_s(757));
            $shader = jl_StringBuilder_append1(var$5, $i);
            jl_AbstractStringBuilder_append($shader, $rt_s(758));
            $shader = jl_StringBuilder_append1($shader, $i);
            jl_AbstractStringBuilder_append($shader, $rt_s(759));
            $shader = jl_AbstractStringBuilder_toString($shader);
        } else {
            var$5 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$5);
            jl_AbstractStringBuilder_append(var$5, $shader);
            jl_AbstractStringBuilder_append(var$5, $rt_s(757));
            var$5 = jl_StringBuilder_append1(var$5, $i);
            jl_AbstractStringBuilder_append(var$5, $rt_s(758));
            $shader = jl_StringBuilder_append1(var$5, $i);
            jl_AbstractStringBuilder_append($shader, $rt_s(22));
            $shader = jl_AbstractStringBuilder_toString($shader);
        }
        $i = $i + 1 | 0;
    }
    var$5 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$5);
    jl_AbstractStringBuilder_append(var$5, $shader);
    jl_AbstractStringBuilder_append(var$5, $rt_s(760));
    return jl_AbstractStringBuilder_toString(var$5);
};
function nmgss_SceneSkybox$SkyboxShaderProvider() {
    let a = this; cbgggu_DefaultShaderProvider.call(a);
    a.$fsPrefix = null;
    a.$this$017 = null;
}
let nmgss_SceneSkybox$SkyboxShaderProvider_createShader = ($this, $renderable) => {
    let $oldFS, $shader, var$4, var$5;
    cbggg_ShaderProgram_$callClinit();
    $oldFS = cbggg_ShaderProgram_prependFragmentCode;
    cbggg_ShaderProgram_prependFragmentCode = $this.$fsPrefix;
    $shader = new nmgss_SceneSkybox$SkyboxShader;
    var$4 = $this.$this$017;
    var$5 = $this.$config1;
    $shader.$this$015 = var$4;
    cbgggs_DefaultShader__init_1($shader, $renderable, var$5);
    cbggg_ShaderProgram_prependFragmentCode = $oldFS;
    return $shader;
};
function cbggg_Model() {
    let a = this; jl_Object.call(a);
    a.$materials0 = null;
    a.$nodes0 = null;
    a.$animations0 = null;
    a.$meshes = null;
    a.$meshParts = null;
    a.$disposables = null;
    a.$nodePartBones = null;
}
function cbgggm_Node() {
    let a = this; jl_Object.call(a);
    a.$id = null;
    a.$inheritTransform = 0;
    a.$isAnimated = 0;
    a.$translation0 = null;
    a.$rotation0 = null;
    a.$scale0 = null;
    a.$localTransform = null;
    a.$globalTransform = null;
    a.$parts = null;
    a.$parent0 = null;
    a.$children0 = null;
}
let cbgggm_Node__init_0 = $this => {
    $this.$inheritTransform = 1;
    $this.$translation0 = cbgm_Vector3__init_();
    $this.$rotation0 = cbgm_Quaternion__init_0(0.0, 0.0, 0.0, 1.0);
    $this.$scale0 = cbgm_Vector3__init_0(1.0, 1.0, 1.0);
    $this.$localTransform = cbgm_Matrix4__init_();
    $this.$globalTransform = cbgm_Matrix4__init_();
    $this.$parts = cbgu_Array__init_0(2);
    $this.$children0 = cbgu_Array__init_0(2);
},
cbgggm_Node__init_ = () => {
    let var_0 = new cbgggm_Node();
    cbgggm_Node__init_0(var_0);
    return var_0;
},
cbgggm_Node_calculateTransforms = ($this, $recursive) => {
    let $child, var$3, var$4, var$5;
    if (!$this.$isAnimated) {
        $child = $this.$localTransform;
        var$3 = $this.$translation0;
        var$4 = $this.$rotation0;
        var$5 = $this.$scale0;
        cbgm_Matrix4_set1($child, var$3.$x, var$3.$y, var$3.$z, var$4.$x0, var$4.$y0, var$4.$z0, var$4.$w, var$5.$x, var$5.$y, var$5.$z);
    }
    a: {
        if ($this.$inheritTransform) {
            $child = $this.$parent0;
            if ($child !== null) {
                cbgm_Matrix4_mul(cbgm_Matrix4_set($this.$globalTransform, $child.$globalTransform), $this.$localTransform);
                break a;
            }
        }
        cbgm_Matrix4_set($this.$globalTransform, $this.$localTransform);
    }
    b: {
        if ($recursive) {
            var$3 = cbgu_Array_iterator($this.$children0);
            while (true) {
                if (!cbgu_Array$ArrayIterator_hasNext(var$3))
                    break b;
                cbgggm_Node_calculateTransforms(cbgu_Array$ArrayIterator_next(var$3), 1);
            }
        }
    }
},
cbgggm_Node_calculateBoneTransforms = ($this, $recursive) => {
    let var$2, $part, $child, var$5, $n, $i;
    var$2 = cbgu_Array_iterator($this.$parts);
    while (cbgu_Array$ArrayIterator_hasNext(var$2)) {
        $part = cbgu_Array$ArrayIterator_next(var$2);
        $child = $part.$invBoneBindTransforms;
        if ($child === null)
            continue;
        var$5 = $part.$bones0;
        if (var$5 === null)
            continue;
        var$5 = var$5.data;
        $n = $child.$size4;
        if ($n != var$5.length)
            continue;
        $i = 0;
        while ($i < $n) {
            cbgm_Matrix4_mul(cbgm_Matrix4_set($part.$bones0.data[$i], $part.$invBoneBindTransforms.$keys.data[$i].$globalTransform), $part.$invBoneBindTransforms.$values0.data[$i]);
            $i = $i + 1 | 0;
        }
    }
    a: {
        if ($recursive) {
            $part = cbgu_Array_iterator($this.$children0);
            while (true) {
                if (!cbgu_Array$ArrayIterator_hasNext($part))
                    break a;
                cbgggm_Node_calculateBoneTransforms(cbgu_Array$ArrayIterator_next($part), 1);
            }
        }
    }
},
cbgggm_Node_removeChild = ($this, $child) => {
    if (!cbgu_Array_removeValue($this.$children0, $child, 1))
        return 0;
    $child.$parent0 = null;
    return 1;
},
cbgggm_Node_copy = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$1 = cbgggm_Node__init_();
    var$2 = var$1.$parent0;
    if (var$2 !== null) {
        cbgggm_Node_removeChild(var$2, var$1);
        var$1.$parent0 = null;
    }
    var$1.$id = $this.$id;
    var$1.$isAnimated = $this.$isAnimated;
    var$1.$inheritTransform = $this.$inheritTransform;
    cbgm_Vector3_set0(var$1.$translation0, $this.$translation0);
    var$2 = var$1.$rotation0;
    var$3 = $this.$rotation0;
    cbgm_Quaternion_set(var$2, var$3.$x0, var$3.$y0, var$3.$z0, var$3.$w);
    cbgm_Vector3_set0(var$1.$scale0, $this.$scale0);
    cbgm_Matrix4_set(var$1.$localTransform, $this.$localTransform);
    cbgm_Matrix4_set(var$1.$globalTransform, $this.$globalTransform);
    cbgu_Array_clear(var$1.$parts);
    var$4 = cbgu_Array_iterator($this.$parts);
    a: while (true) {
        if (!cbgu_Array$ArrayIterator_hasNext(var$4)) {
            cbgu_Array_clear(var$1.$children0);
            var$3 = cbgu_Array_iterator($this.$children0);
            while (cbgu_Array$ArrayIterator_hasNext(var$3)) {
                var$2 = cbgggm_Node_copy(cbgu_Array$ArrayIterator_next(var$3));
                var$5 = var$1;
                while (var$5 !== null) {
                    if (var$5 === var$2) {
                        var$1 = new cbgu_GdxRuntimeException;
                        jl_Exception__init_(var$1, $rt_s(761));
                        $rt_throw(var$1);
                    }
                    var$5 = var$5.$parent0;
                }
                var$5 = var$2.$parent0;
                if (var$5 !== null && !cbgggm_Node_removeChild(var$5, var$2)) {
                    var$1 = new cbgu_GdxRuntimeException;
                    jl_Exception__init_(var$1, $rt_s(762));
                    $rt_throw(var$1);
                }
                cbgu_Array_add(var$1.$children0, var$2);
                var$2.$parent0 = var$1;
            }
            return var$1;
        }
        b: {
            var$2 = cbgu_Array$ArrayIterator_next(var$4);
            var$3 = var$1.$parts;
            var$6 = new cbgggm_NodePart;
            var$6.$enabled = 1;
            var$5 = new cbgggm_MeshPart;
            var$7 = var$2.$meshPart0;
            cbgggm_MeshPart_$callClinit();
            var$5.$center = cbgm_Vector3__init_();
            var$5.$halfExtents = cbgm_Vector3__init_();
            var$5.$radius = (-1.0);
            cbgggm_MeshPart_set(var$5, var$7);
            var$6.$meshPart0 = var$5;
            var$6.$material0 = var$2.$material0;
            var$6.$enabled = var$2.$enabled;
            var$5 = var$2.$invBoneBindTransforms;
            if (var$5 === null) {
                var$6.$invBoneBindTransforms = null;
                var$6.$bones0 = null;
            } else {
                var$7 = var$6.$invBoneBindTransforms;
                if (var$7 !== null) {
                    ju_Arrays_fill0(var$7.$keys, 0, var$7.$size4, null);
                    ju_Arrays_fill0(var$7.$values0, 0, var$7.$size4, null);
                    var$7.$size4 = 0;
                } else {
                    var$7 = new cbgu_ArrayMap;
                    var$8 = var$5.$size4;
                    var$7.$ordered3 = 1;
                    var$7.$keys = $rt_createArray(cbgggm_Node, var$8);
                    var$7.$values0 = $rt_createArray(cbgm_Matrix4, var$8);
                    var$6.$invBoneBindTransforms = var$7;
                }
                var$5 = var$6.$invBoneBindTransforms;
                var$2 = var$2.$invBoneBindTransforms;
                var$8 = var$2.$size4;
                if ((0 + var$8 | 0) > var$8)
                    break a;
                var$9 = (var$5.$size4 + var$8 | 0) - 0 | 0;
                if (var$9 >= var$5.$keys.data.length) {
                    var$9 = jl_Math_max(8, var$9 * 1.75 | 0);
                    var$5.$keys = ju_Arrays_copyOf(var$5.$keys, var$9);
                    var$5.$values0 = ju_Arrays_copyOf(var$5.$values0, var$9);
                }
                jl_System_fastArraycopy(var$2.$keys, 0, var$5.$keys, var$5.$size4, var$8);
                jl_System_fastArraycopy(var$2.$values0, 0, var$5.$values0, var$5.$size4, var$8);
                var$5.$size4 = var$5.$size4 + var$8 | 0;
                var$10 = var$6.$bones0;
                if (!(var$10 !== null && var$10.data.length == var$6.$invBoneBindTransforms.$size4))
                    var$6.$bones0 = $rt_createArray(cbgm_Matrix4, var$6.$invBoneBindTransforms.$size4);
                var$11 = 0;
                while (true) {
                    var$10 = var$6.$bones0.data;
                    if (var$11 >= var$10.length)
                        break b;
                    if (var$10[var$11] === null)
                        var$10[var$11] = cbgm_Matrix4__init_();
                    var$11 = var$11 + 1 | 0;
                }
            }
        }
        cbgu_Array_add(var$3, var$6);
    }
    var$1 = new jl_IllegalArgumentException;
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_AbstractStringBuilder_append(var$3, $rt_s(409));
    var$3 = jl_StringBuilder_append1(var$3, 0);
    jl_AbstractStringBuilder_append(var$3, $rt_s(2));
    var$3 = jl_StringBuilder_append1(var$3, var$8);
    jl_AbstractStringBuilder_append(var$3, $rt_s(3));
    jl_Exception__init_(var$1, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$3, var$2.$size4)));
    $rt_throw(var$1);
},
cbgggm_Node_getNode = ($nodes, $id, $recursive, $ignoreCase) => {
    let $n, $i, var$7, $i_0, var$9;
    a: {
        $n = $nodes.$size0;
        if (!$ignoreCase) {
            $i = 0;
            while (true) {
                if ($i >= $n)
                    break a;
                var$7 = cbgu_Array_get($nodes, $i);
                if (jl_String_equals(var$7.$id, $id))
                    break;
                $i = $i + 1 | 0;
            }
            return var$7;
        }
        $i_0 = 0;
        while (true) {
            if ($i_0 >= $n)
                break a;
            b: {
                var$9 = cbgu_Array_get($nodes, $i_0);
                var$7 = var$9.$id;
                if (var$7 === $id)
                    $i = 1;
                else if ($id === null)
                    $i = 0;
                else if (var$7.$nativeString.length != $id.$nativeString.length)
                    $i = 0;
                else {
                    $i = 0;
                    while ($i < var$7.$nativeString.length) {
                        if (jl_Character_toLowerCase(jl_String_charAt(var$7, $i)) != jl_Character_toLowerCase(jl_String_charAt($id, $i))) {
                            $i = 0;
                            break b;
                        }
                        $i = $i + 1 | 0;
                    }
                    $i = 1;
                }
            }
            if ($i)
                break;
            $i_0 = $i_0 + 1 | 0;
        }
        return var$9;
    }
    c: {
        if ($recursive) {
            $i_0 = 0;
            while (true) {
                if ($i_0 >= $n)
                    break c;
                var$9 = cbgggm_Node_getNode((cbgu_Array_get($nodes, $i_0)).$children0, $id, 1, $ignoreCase);
                if (var$9 !== null)
                    break;
                $i_0 = $i_0 + 1 | 0;
            }
            return var$9;
        }
    }
    return null;
};
function cbgggm_NodePart() {
    let a = this; jl_Object.call(a);
    a.$meshPart0 = null;
    a.$material0 = null;
    a.$invBoneBindTransforms = null;
    a.$bones0 = null;
    a.$enabled = 0;
}
let cbgggm_NodePart_setRenderable = ($this, $out) => {
    $out.$material = $this.$material0;
    cbgggm_MeshPart_set($out.$meshPart, $this.$meshPart0);
    $out.$bones = $this.$bones0;
    return $out;
};
function cbggg_Renderable() {
    let a = this; jl_Object.call(a);
    a.$worldTransform = null;
    a.$meshPart = null;
    a.$material = null;
    a.$environment = null;
    a.$bones = null;
    a.$shader = null;
    a.$userData = null;
}
let cbggg_Renderable__init_0 = $this => {
    $this.$worldTransform = cbgm_Matrix4__init_();
    $this.$meshPart = cbgggm_MeshPart__init_();
},
cbggg_Renderable__init_ = () => {
    let var_0 = new cbggg_Renderable();
    cbggg_Renderable__init_0(var_0);
    return var_0;
},
nmgss_SceneRenderableSorter$Hints = $rt_classWithoutFields(jl_Enum),
nmgss_SceneRenderableSorter$Hints_OPAQUE_LAST = null,
nmgss_SceneRenderableSorter$Hints_$VALUES = null,
nmgss_SceneRenderableSorter$Hints__clinit_ = () => {
    let var$1, var$2;
    var$1 = new nmgss_SceneRenderableSorter$Hints;
    jl_Enum__init_(var$1, $rt_s(763), 0);
    nmgss_SceneRenderableSorter$Hints_OPAQUE_LAST = var$1;
    var$2 = $rt_createArray(nmgss_SceneRenderableSorter$Hints, 1);
    var$2.data[0] = var$1;
    nmgss_SceneRenderableSorter$Hints_$VALUES = var$2;
};
function cbggga_DepthTestAttribute() {
    let a = this; cbggg_Attribute.call(a);
    a.$depthFunc0 = 0;
    a.$depthRangeNear = 0.0;
    a.$depthRangeFar = 0.0;
    a.$depthMask = 0;
}
let cbggga_DepthTestAttribute_Type = Long_ZERO,
cbggga_DepthTestAttribute_Mask = Long_ZERO,
cbggga_DepthTestAttribute_$callClinit = () => {
    cbggga_DepthTestAttribute_$callClinit = $rt_eraseClinit(cbggga_DepthTestAttribute);
    cbggga_DepthTestAttribute__clinit_();
},
cbggga_DepthTestAttribute__init_ = ($this, $type, $depthFunc, $depthRangeNear, $depthRangeFar, $depthMask) => {
    let var$6;
    cbggga_DepthTestAttribute_$callClinit();
    cbggg_Attribute__init_($this, $type);
    if (Long_eq(Long_and($type, cbggga_DepthTestAttribute_Mask), Long_ZERO) ? 0 : 1) {
        $this.$depthFunc0 = $depthFunc;
        $this.$depthRangeNear = $depthRangeNear;
        $this.$depthRangeFar = $depthRangeFar;
        $this.$depthMask = $depthMask;
        return;
    }
    var$6 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$6, $rt_s(569));
    $rt_throw(var$6);
},
cbggga_DepthTestAttribute__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbggga_DepthTestAttribute();
    cbggga_DepthTestAttribute__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbggga_DepthTestAttribute_copy = $this => {
    let var$1;
    var$1 = new cbggga_DepthTestAttribute;
    cbggga_DepthTestAttribute_$callClinit();
    cbggga_DepthTestAttribute__init_(var$1, $this.$type0, $this.$depthFunc0, $this.$depthRangeNear, $this.$depthRangeFar, $this.$depthMask);
    return var$1;
},
cbggga_DepthTestAttribute_hashCode = $this => {
    return (971 * ((971 * ((971 * ((971 * cbggg_Attribute_hashCode($this) | 0) + $this.$depthFunc0 | 0) | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$depthRangeNear) | 0) | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$depthRangeFar) | 0) | 0) + (!$this.$depthMask ? 0 : 1) | 0;
},
cbggga_DepthTestAttribute__clinit_ = () => {
    let var$1;
    var$1 = cbggg_Attribute_register($rt_s(764));
    cbggga_DepthTestAttribute_Type = var$1;
    cbggga_DepthTestAttribute_Mask = var$1;
};
function cbggg_PixmapTextureData() {
    let a = this; jl_Object.call(a);
    a.$pixmap0 = null;
    a.$format1 = null;
    a.$useMipMaps0 = 0;
    a.$disposePixmap0 = 0;
    a.$managed = 0;
}
let cbggg_PixmapTextureData__init_0 = ($this, $pixmap, $format, $useMipMaps, $disposePixmap) => {
    $this.$pixmap0 = $pixmap;
    if ($format === null)
        $format = cbgg_Pixmap_getFormat($pixmap);
    $this.$format1 = $format;
    $this.$useMipMaps0 = $useMipMaps;
    $this.$disposePixmap0 = $disposePixmap;
    $this.$managed = 0;
},
cbggg_PixmapTextureData__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_PixmapTextureData();
    cbggg_PixmapTextureData__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_PixmapTextureData_disposePixmap = $this => {
    return $this.$disposePixmap0;
},
cbggg_PixmapTextureData_consumePixmap = $this => {
    return $this.$pixmap0;
},
cbggg_PixmapTextureData_getWidth = $this => {
    return cbgg_Pixmap_getWidth($this.$pixmap0);
},
cbggg_PixmapTextureData_getHeight = $this => {
    return cbgg_Pixmap_getHeight($this.$pixmap0);
},
cbggg_PixmapTextureData_getFormat = $this => {
    return $this.$format1;
},
cbggg_PixmapTextureData_useMipMaps = $this => {
    return $this.$useMipMaps0;
},
cbggg_PixmapTextureData_isManaged = $this => {
    return $this.$managed;
},
cbggg_PixmapTextureData_getType = $this => {
    return cbgg_TextureData$TextureDataType_Pixmap;
},
cbggg_PixmapTextureData_consumeCustomData = ($this, $target) => {
    let var$2;
    var$2 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$2, $rt_s(533));
    $rt_throw(var$2);
},
cbggg_PixmapTextureData_isPrepared = $this => {
    return 1;
},
cbggg_PixmapTextureData_prepare = $this => {
    let var$1;
    var$1 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$1, $rt_s(765));
    $rt_throw(var$1);
},
jn_CharBuffer = $rt_classWithoutFields(jn_Buffer),
jn_CharBuffer_allocate = $capacity => {
    let $array, var$3, var$4;
    if ($capacity >= 0) {
        $array = $rt_createCharArray($capacity);
        return jn_CharBufferOverTypedArray__init_(0, $capacity, 0, $array.data, $array);
    }
    var$3 = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append1(jl_StringBuilder_append(var$4, $rt_s(523)), $capacity);
    jl_Exception__init_(var$3, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw(var$3);
},
jn_CharBuffer_wrap = $array => {
    let var$2, var$3, var$4, var$5;
    var$2 = $array.data.length;
    if (var$2 >= 0) {
        var$3 = var$2 + 0 | 0;
        if (var$3 <= var$2) {
            var$4 = jn_CharBufferOverTypedArray__init_(0, var$2, 0, $array.data, $array);
            var$4.$position0 = 0;
            var$4.$limit0 = var$3;
            return var$4;
        }
    }
    var$5 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$5);
    $rt_throw(var$5);
},
jn_CharBuffer_get = ($this, $dst, $offset, $length) => {
    let var$4, var$5, var$6, var$7;
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $dst.data.length) {
        if ($length > jn_Buffer_remaining($this)) {
            var$4 = new jn_BufferUnderflowException;
            jl_Exception__init_0(var$4);
            $rt_throw(var$4);
        }
        var$5 = $this.$position0;
        var$6 = $this;
        var$7 = new Uint16Array(var$6.$data2.buffer, var$6.$data2.byteOffset + (var$5 * 2 | 0) | 0, $length);
        $dst.data.set(var$7, $offset);
        $this.$position0 = $this.$position0 + $length | 0;
        return $this;
    }
    var$4 = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0(var$4);
    $rt_throw(var$4);
},
jn_CharBuffer_put = ($this, $src) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    var$2 = 0;
    var$3 = $src.$nativeString.length;
    if (jn_CharBufferImpl_isReadOnly($this)) {
        $src = new jn_ReadOnlyBufferException;
        jl_Exception__init_0($src);
        $rt_throw($src);
    }
    if (var$3 >= var$2 && var$3 <= $src.$nativeString.length) {
        var$4 = var$3 - var$2 | 0;
        if (jn_Buffer_remaining($this) < var$4) {
            $src = new jn_BufferOverflowException;
            jl_Exception__init_0($src);
            $rt_throw($src);
        }
        var$5 = $this.$position0;
        var$6 = $this;
        while (true) {
            var$7 = var$3 + (-1) | 0;
            if (var$3 <= 0)
                break;
            var$8 = var$6.$data2;
            var$9 = var$5 + 1 | 0;
            var$10 = var$2 + 1 | 0;
            var$8[var$5] = jl_String_charAt($src, var$2);
            var$3 = var$7;
            var$5 = var$9;
            var$2 = var$10;
        }
        $this.$position0 = $this.$position0 + var$4 | 0;
        return $this;
    }
    $src = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0($src);
    $rt_throw($src);
},
jn_CharBuffer_array = $this => {
    let var$1, var$2;
    var$1 = $this.$array7;
    if (var$1 !== null)
        return var$1;
    var$2 = new jl_UnsupportedOperationException;
    jl_Exception__init_0(var$2);
    $rt_throw(var$2);
},
otjt_Uint8Array = $rt_classWithoutFields(otjt_TypedArray),
otjt_Uint16Array = $rt_classWithoutFields(otjt_TypedArray);
function nmgsu_LightUtils$LightsInfo() {
    let a = this; jl_Object.call(a);
    a.$dirLights = 0;
    a.$pointLights0 = 0;
    a.$spotLights1 = 0;
    a.$miscLights = 0;
}
function nmgss_PBRShaderConfig() {
    let a = this; cbgggs_DefaultShader$Config.call(a);
    a.$manualSRGB = null;
    a.$transmissionSRGB = null;
    a.$mirrorSRGB = null;
    a.$manualGammaCorrection = 0;
    a.$gamma = 0.0;
    a.$glslVersion = null;
    a.$numVertexColors = 0;
    a.$prefix = null;
}
function cbgggu_DepthShaderProvider() {
    cbgggu_BaseShaderProvider.call(this);
    this.$config2 = null;
}
let nmgss_PBRDepthShaderProvider = $rt_classWithoutFields(cbgggu_DepthShaderProvider),
nmgss_PBRDepthShaderProvider_defaultVertexShader = null,
nmgss_PBRDepthShaderProvider_defaultFragmentShader = null,
nmgss_PBRDepthShaderProvider_getDefaultVertexShader = () => {
    if (nmgss_PBRDepthShaderProvider_defaultVertexShader === null)
        nmgss_PBRDepthShaderProvider_defaultVertexShader = cgxgbt_TeaFileHandle_readString(cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(766)));
    return nmgss_PBRDepthShaderProvider_defaultVertexShader;
},
nmgss_PBRDepthShaderProvider_getDefaultFragmentShader = () => {
    if (nmgss_PBRDepthShaderProvider_defaultFragmentShader === null)
        nmgss_PBRDepthShaderProvider_defaultFragmentShader = cgxgbt_TeaFileHandle_readString(cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(767)));
    return nmgss_PBRDepthShaderProvider_defaultFragmentShader;
},
nmgss_PBRDepthShaderProvider_createShader = ($this, $renderable) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    nmgss_PBRCommon_checkVertexAttributes($renderable);
    var$2 = new nmgss_PBRDepthShader;
    var$3 = $this.$config2;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    var$5 = $this.$config2;
    cbgggs_DepthShader_$callClinit();
    var$6 = cbgggs_DefaultShader_createPrefix($renderable, var$5);
    if (!var$5.$depthBufferOnly) {
        var$5 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$5);
        jl_AbstractStringBuilder_append(var$5, var$6);
        jl_AbstractStringBuilder_append(var$5, $rt_s(768));
        var$6 = jl_AbstractStringBuilder_toString(var$5);
    }
    jl_AbstractStringBuilder_append(var$4, var$6);
    var$6 = $rt_s(8);
    var$7 = cbgg_VertexAttributes_iterator(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
    while (cbgg_VertexAttributes$ReadonlyIterator_hasNext(var$7)) {
        var$5 = cbgg_VertexAttributes$ReadonlyIterator_next(var$7);
        var$8 = 0;
        while (var$8 < 8) {
            if (var$5.$usage == 512 && var$5.$unit == var$8) {
                var$9 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$9);
                jl_AbstractStringBuilder_append(var$9, var$6);
                jl_AbstractStringBuilder_append(var$9, $rt_s(651));
                var$6 = jl_StringBuilder_append1(var$9, var$8);
                jl_AbstractStringBuilder_append(var$6, $rt_s(652));
                var$6 = jl_AbstractStringBuilder_toString(var$6);
            }
            var$8 = var$8 + 1 | 0;
        }
    }
    jl_AbstractStringBuilder_append(var$4, var$6);
    var$5 = jl_AbstractStringBuilder_toString(var$4);
    var$7 = var$3.$vertexShader;
    if (var$7 === null) {
        if (cbgggs_DepthShader_defaultVertexShader === null)
            cbgggs_DepthShader_defaultVertexShader = cgxgbt_TeaFileHandle_readString(cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(769)));
        var$7 = cbgggs_DepthShader_defaultVertexShader;
    }
    var$4 = var$3.$fragmentShader;
    if (var$4 === null) {
        if (cbgggs_DepthShader_defaultFragmentShader === null)
            cbgggs_DepthShader_defaultFragmentShader = cgxgbt_TeaFileHandle_readString(cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(770)));
        var$4 = cbgggs_DepthShader_defaultFragmentShader;
    }
    var$9 = new cbggg_ShaderProgram;
    var$6 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$6);
    jl_AbstractStringBuilder_append(var$6, var$5);
    jl_AbstractStringBuilder_append(var$6, var$7);
    var$6 = jl_AbstractStringBuilder_toString(var$6);
    var$7 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$7);
    jl_AbstractStringBuilder_append(var$7, var$5);
    jl_AbstractStringBuilder_append(var$7, var$4);
    cbggg_ShaderProgram__init_(var$9, var$6, jl_AbstractStringBuilder_toString(var$7));
    cbgggs_DefaultShader__init_0(var$2, $renderable, var$3, var$9);
    cbgggs_DepthShader_combineAttributes($renderable);
    var$10 = $renderable.$bones;
    if (var$10 !== null && var$10.data.length > var$3.$numBones) {
        var$4 = new cbgu_GdxRuntimeException;
        var$2 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$2);
        jl_AbstractStringBuilder_append(var$2, $rt_s(771));
        $renderable = jl_StringBuilder_append1(var$2, $renderable.$bones.data.length);
        jl_AbstractStringBuilder_append($renderable, $rt_s(772));
        jl_Exception__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($renderable, var$3.$numBones)));
        $rt_throw(var$4);
    }
    var$2.$numBones0 = var$10 !== null ? var$3.$numBones : 0;
    var$8 = cbgg_VertexAttributes_getBoneWeights(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
    if (var$8 <= var$3.$numBoneWeights) {
        var$4 = new cbggga_FloatAttribute;
        cbggga_FloatAttribute_$callClinit();
        cbggga_FloatAttribute__init_(var$4, cbggga_FloatAttribute_AlphaTest, var$3.$defaultAlphaTest);
        var$2.$alphaTestAttribute = var$4;
        var$2.$morphTargetsMask = nmgss_PBRDepthShader_computeMorphTargetsMask(var$2, $renderable);
        return var$2;
    }
    $renderable = new cbgu_GdxRuntimeException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_AbstractStringBuilder_append(var$4, $rt_s(773));
    var$4 = jl_StringBuilder_append1(var$4, var$8);
    jl_AbstractStringBuilder_append(var$4, $rt_s(772));
    jl_Exception__init_($renderable, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$4, var$3.$numBoneWeights)));
    $rt_throw($renderable);
},
nmgss_PBRDepthShaderProvider__clinit_ = () => {
    nmgss_PBRDepthShaderProvider_defaultVertexShader = null;
    nmgss_PBRDepthShaderProvider_defaultFragmentShader = null;
},
nmgsu_EnvironmentCache = $rt_classWithoutFields(cbggg_Environment),
nmgsu_EnvironmentCache_replaceCache = ($this, $attribute) => {
    let var$2, $idx;
    var$2 = $attribute.$type0;
    $idx = cbggg_Attributes_indexOf($this, var$2);
    cbgu_Array_set($this.$attributes, $idx, $attribute);
};
function cbggga_PointLightsAttribute() {
    cbggg_Attribute.call(this);
    this.$lights = null;
}
let cbggga_PointLightsAttribute_Type = Long_ZERO,
cbggga_PointLightsAttribute_$callClinit = () => {
    cbggga_PointLightsAttribute_$callClinit = $rt_eraseClinit(cbggga_PointLightsAttribute);
    cbggga_PointLightsAttribute__clinit_();
},
cbggga_PointLightsAttribute__init_ = $this => {
    cbggga_PointLightsAttribute_$callClinit();
    cbggg_Attribute__init_($this, cbggga_PointLightsAttribute_Type);
    $this.$lights = cbgu_Array__init_0(1);
},
cbggga_PointLightsAttribute__init_0 = () => {
    let var_0 = new cbggga_PointLightsAttribute();
    cbggga_PointLightsAttribute__init_(var_0);
    return var_0;
},
cbggga_PointLightsAttribute_hashCode = $this => {
    let $result, var$2, $light;
    $result = cbggg_Attribute_hashCode($this);
    var$2 = cbgu_Array_iterator($this.$lights);
    while (cbgu_Array$ArrayIterator_hasNext(var$2)) {
        $light = cbgu_Array$ArrayIterator_next(var$2);
        $result = (1231 * $result | 0) + ($light !== null ? $light.$hashCode() : 0) | 0;
    }
    return $result;
},
cbggga_PointLightsAttribute_copy = $this => {
    let var$1;
    var$1 = new cbggga_PointLightsAttribute;
    cbggga_PointLightsAttribute_$callClinit();
    cbggga_PointLightsAttribute__init_(var$1);
    cbgu_Array_addAll(var$1.$lights, $this.$lights);
    return var$1;
},
cbggga_PointLightsAttribute__clinit_ = () => {
    cbggga_PointLightsAttribute_Type = cbggg_Attribute_register($rt_s(774));
};
function cbggga_SpotLightsAttribute() {
    cbggg_Attribute.call(this);
    this.$lights0 = null;
}
let cbggga_SpotLightsAttribute_Type = Long_ZERO,
cbggga_SpotLightsAttribute_$callClinit = () => {
    cbggga_SpotLightsAttribute_$callClinit = $rt_eraseClinit(cbggga_SpotLightsAttribute);
    cbggga_SpotLightsAttribute__clinit_();
},
cbggga_SpotLightsAttribute__init_ = $this => {
    cbggga_SpotLightsAttribute_$callClinit();
    cbggg_Attribute__init_($this, cbggga_SpotLightsAttribute_Type);
    $this.$lights0 = cbgu_Array__init_0(1);
},
cbggga_SpotLightsAttribute__init_0 = () => {
    let var_0 = new cbggga_SpotLightsAttribute();
    cbggga_SpotLightsAttribute__init_(var_0);
    return var_0;
},
cbggga_SpotLightsAttribute_hashCode = $this => {
    let $result, var$2, $light;
    $result = cbggg_Attribute_hashCode($this);
    var$2 = cbgu_Array_iterator($this.$lights0);
    while (cbgu_Array$ArrayIterator_hasNext(var$2)) {
        $light = cbgu_Array$ArrayIterator_next(var$2);
        $result = (1237 * $result | 0) + ($light !== null ? $light.$hashCode() : 0) | 0;
    }
    return $result;
},
cbggga_SpotLightsAttribute_copy = $this => {
    let var$1;
    var$1 = new cbggga_SpotLightsAttribute;
    cbggga_SpotLightsAttribute_$callClinit();
    cbggga_SpotLightsAttribute__init_(var$1);
    cbgu_Array_addAll(var$1.$lights0, $this.$lights0);
    return var$1;
},
cbggga_SpotLightsAttribute__clinit_ = () => {
    cbggga_SpotLightsAttribute_Type = cbggg_Attribute_register($rt_s(775));
};
function cbggg_ModelBatch() {
    let a = this; jl_Object.call(a);
    a.$camera2 = null;
    a.$renderablesPool = null;
    a.$renderables = null;
    a.$context1 = null;
    a.$ownContext = 0;
    a.$shaderProvider = null;
    a.$sorter = null;
}
let cbggg_ModelBatch__init_0 = ($this, $context, $shaderProvider, $sorter) => {
    let var$4, var$5, var$6, var$7;
    var$4 = new cbggg_ModelBatch$RenderablePool;
    cbgu_FlushablePool__init_(var$4);
    $this.$renderablesPool = var$4;
    $this.$renderables = cbgu_Array__init_();
    if ($sorter === null) {
        $sorter = new cbgggu_DefaultRenderableSorter;
        $sorter.$tmpV1 = cbgm_Vector3__init_();
        $sorter.$tmpV2 = cbgm_Vector3__init_();
    }
    $this.$sorter = $sorter;
    $this.$ownContext = $context !== null ? 0 : 1;
    if ($context === null) {
        $context = new cbgggu_RenderContext;
        var$5 = new cbgggu_DefaultTextureBinder;
        var$5.$reuseCount = 0;
        var$5.$bindCount = 0;
        var$5.$tempDesc = cbgggu_TextureDescriptor__init_();
        var$5.$currentTexture = 0;
        $sorter = cbgu_BufferUtils_newIntBuffer(16);
        cbg_Gdx_gl.$glGetIntegerv(34930, $sorter);
        var$6 = jl_Math_min(jn_IntBufferImpl_get($sorter, 0), 32);
        var$7 = var$6 - 1 | 0;
        if (var$7 >= 0 && (1 + var$7 | 0) <= var$6) {
            var$5.$method = 1;
            var$5.$offset1 = 1;
            var$5.$count2 = var$7;
            var$5.$textures0 = $rt_createArray(cbgg_GLTexture, var$7);
            var$5.$unitsLRU = $rt_createIntArray(var$7);
            $context.$textureBinder = var$5;
        } else {
            $context = new cbgu_GdxRuntimeException;
            jl_Exception__init_($context, $rt_s(776));
            $rt_throw($context);
        }
    }
    $this.$context1 = $context;
    if ($shaderProvider === null)
        $shaderProvider = cbgggu_DefaultShaderProvider__init_0(null);
    $this.$shaderProvider = $shaderProvider;
},
cbggg_ModelBatch__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_ModelBatch();
    cbggg_ModelBatch__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_ModelBatch_begin = ($this, $cam) => {
    let var$2, var$3, var$4;
    if ($this.$camera2 !== null) {
        var$2 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$2, $rt_s(777));
        $rt_throw(var$2);
    }
    $this.$camera2 = $cam;
    if ($this.$ownContext) {
        $cam = $this.$context1;
        cbg_Gdx_gl.$glDisable(2929);
        $cam.$depthFunc = 0;
        cbg_Gdx_gl.$glDepthMask(1);
        $cam.$depthMask0 = 1;
        cbg_Gdx_gl.$glDisable(3042);
        $cam.$blending = 0;
        cbg_Gdx_gl.$glDisable(2884);
        $cam.$blendDFactor = 0;
        $cam.$blendSFactor = 0;
        $cam.$cullFace = 0;
        $cam = $cam.$textureBinder;
        var$3 = 0;
        while (var$3 < $cam.$count2) {
            $cam.$textures0.data[var$3] = null;
            var$4 = $cam.$unitsLRU;
            if (var$4 !== null)
                var$4.data[var$3] = var$3;
            var$3 = var$3 + 1 | 0;
        }
    }
},
cbggg_ModelBatch_end = $this => {
    let var$1, var$2, var$3;
    $this.$sorter.$sort1($this.$camera2, $this.$renderables);
    var$1 = null;
    var$2 = 0;
    while (true) {
        var$3 = $this.$renderables;
        if (var$2 >= var$3.$size0)
            break;
        var$3 = cbgu_Array_get(var$3, var$2);
        if (var$1 !== var$3.$shader) {
            if (var$1 !== null)
                var$1.$end1();
            var$1 = var$3.$shader;
            var$1.$begin4($this.$camera2, $this.$context1);
        }
        cbgggs_BaseShader_render(var$1, var$3);
        var$2 = var$2 + 1 | 0;
    }
    if (var$1 !== null)
        var$1.$end1();
    cbgu_FlushablePool_flush($this.$renderablesPool);
    cbgu_Array_clear($this.$renderables);
    if ($this.$ownContext) {
        var$1 = $this.$context1;
        if (var$1.$depthFunc)
            cbg_Gdx_gl.$glDisable(2929);
        if (!var$1.$depthMask0)
            cbg_Gdx_gl.$glDepthMask(1);
        if (var$1.$blending)
            cbg_Gdx_gl.$glDisable(3042);
        if (var$1.$cullFace > 0)
            cbg_Gdx_gl.$glDisable(2884);
        cbg_Gdx_gl.$glActiveTexture(33984);
    }
    $this.$camera2 = null;
},
cbggg_ModelBatch_render = ($this, $renderableProvider) => {
    let $renderable, $i;
    $renderable = $this.$renderables;
    $i = $renderable.$size0;
    $renderableProvider.$getRenderables($renderable, $this.$renderablesPool);
    while (true) {
        $renderableProvider = $this.$renderables;
        if ($i >= $renderableProvider.$size0)
            break;
        $renderable = cbgu_Array_get($renderableProvider, $i);
        $renderable.$shader = cbgggu_BaseShaderProvider_getShader($this.$shaderProvider, $renderable);
        $i = $i + 1 | 0;
    }
};
function cbgggm_MeshPart() {
    let a = this; jl_Object.call(a);
    a.$id2 = null;
    a.$primitiveType = 0;
    a.$offset0 = 0;
    a.$size9 = 0;
    a.$mesh = null;
    a.$center = null;
    a.$halfExtents = null;
    a.$radius = 0.0;
}
let cbgggm_MeshPart_bounds = null,
cbgggm_MeshPart_$callClinit = () => {
    cbgggm_MeshPart_$callClinit = $rt_eraseClinit(cbgggm_MeshPart);
    cbgggm_MeshPart__clinit_();
},
cbgggm_MeshPart__init_0 = $this => {
    cbgggm_MeshPart_$callClinit();
    $this.$center = cbgm_Vector3__init_();
    $this.$halfExtents = cbgm_Vector3__init_();
    $this.$radius = (-1.0);
},
cbgggm_MeshPart__init_ = () => {
    let var_0 = new cbgggm_MeshPart();
    cbgggm_MeshPart__init_0(var_0);
    return var_0;
},
cbgggm_MeshPart_set = ($this, $other) => {
    $this.$id2 = $other.$id2;
    $this.$mesh = $other.$mesh;
    $this.$offset0 = $other.$offset0;
    $this.$size9 = $other.$size9;
    $this.$primitiveType = $other.$primitiveType;
    cbgm_Vector3_set0($this.$center, $other.$center);
    cbgm_Vector3_set0($this.$halfExtents, $other.$halfExtents);
    $this.$radius = $other.$radius;
    return $this;
},
cbgggm_MeshPart_equals = ($this, $arg0) => {
    let var$2;
    if ($arg0 === null)
        return 0;
    if ($arg0 === $this)
        return 1;
    if (!($arg0 instanceof cbgggm_MeshPart))
        return 0;
    a: {
        b: {
            $arg0 = $arg0;
            if ($arg0 !== $this) {
                if ($arg0 === null)
                    break b;
                if ($arg0.$mesh !== $this.$mesh)
                    break b;
                if ($arg0.$primitiveType != $this.$primitiveType)
                    break b;
                if ($arg0.$offset0 != $this.$offset0)
                    break b;
                if ($arg0.$size9 != $this.$size9)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
},
cbgggm_MeshPart__clinit_ = () => {
    cbgggm_MeshPart_bounds = cbgmc_BoundingBox__init_();
},
nmgsu_ShaderParser = $rt_classWithoutFields(),
nmgsu_ShaderParser_parse = $file => {
    let var$2, $lines, $result, var$5, var$6, $line, $cleanLine, $end, $content, $path, $subFile;
    var$2 = $file;
    $lines = (jl_String_split(cgxgbt_TeaFileHandle_readString(var$2), $rt_s(30))).data;
    $result = $rt_s(8);
    var$5 = $lines.length;
    var$6 = 0;
    while (var$6 < var$5) {
        $line = $lines[var$6];
        $cleanLine = jl_String_trim($line);
        if (!jl_String_startsWith($cleanLine, $rt_s(778))) {
            $file = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($file);
            jl_AbstractStringBuilder_append($file, $result);
            jl_AbstractStringBuilder_append($file, $line);
            jl_AbstractStringBuilder_append($file, $rt_s(30));
            $result = jl_AbstractStringBuilder_toString($file);
        } else {
            $end = jl_String_indexOf0($cleanLine, $rt_s(779), $rt_s(778).$nativeString.length);
            if ($end < 0) {
                $file = new cbgu_GdxRuntimeException;
                $content = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($content);
                jl_AbstractStringBuilder_append($content, $rt_s(780));
                jl_AbstractStringBuilder_append($content, $cleanLine);
                jl_Exception__init_($file, jl_AbstractStringBuilder_toString($content));
                $rt_throw($file);
            }
            $path = jl_String_substring($cleanLine, $rt_s(778).$nativeString.length, $end);
            $file = cgxgbt_TeaFileHandle_parent(var$2);
            $content = cgxgbt_TeaFileHandle_fixSlashes($path);
            $subFile = cgxgbt_TeaFileHandle_child($file, $content);
            $file = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($file);
            jl_AbstractStringBuilder_append($file, $result);
            jl_AbstractStringBuilder_append($file, $rt_s(781));
            jl_AbstractStringBuilder_append($file, $path);
            jl_AbstractStringBuilder_append($file, $rt_s(30));
            $file = jl_AbstractStringBuilder_toString($file);
            $content = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_($content);
            jl_AbstractStringBuilder_append($content, $file);
            jl_AbstractStringBuilder_append($content, nmgsu_ShaderParser_parse($subFile));
            $result = jl_AbstractStringBuilder_toString($content);
        }
        var$6 = var$6 + 1 | 0;
    }
    return $result;
};
function cbgggs_DepthShader$Config() {
    let a = this; cbgggs_DefaultShader$Config.call(a);
    a.$depthBufferOnly = 0;
    a.$defaultAlphaTest = 0.0;
}
let cbgggs_DepthShader$Config__init_ = $this => {
    cbgggs_DefaultShader$Config__init_($this);
    $this.$depthBufferOnly = 0;
    $this.$defaultAlphaTest = 0.5;
    $this.$defaultCullFace = 1028;
},
cbgggs_DepthShader$Config__init_0 = () => {
    let var_0 = new cbgggs_DepthShader$Config();
    cbgggs_DepthShader$Config__init_(var_0);
    return var_0;
};
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
let jnc_IllegalCharsetNameException__init_0 = ($this, $charsetName) => {
    jl_Exception__init_0($this);
    $this.$charsetName = $charsetName;
},
jnc_IllegalCharsetNameException__init_ = var_0 => {
    let var_1 = new jnc_IllegalCharsetNameException();
    jnc_IllegalCharsetNameException__init_0(var_1, var_0);
    return var_1;
},
jn_CharBufferImpl = $rt_classWithoutFields(jn_CharBuffer),
jn_CharBufferImpl_isReadOnly = $this => {
    return $this.$readOnly1;
};
function jn_CharBufferOverTypedArray() {
    let a = this; jn_CharBufferImpl.call(a);
    a.$readOnly1 = 0;
    a.$data2 = null;
    a.$array7 = null;
}
let jn_CharBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_Buffer__init_($this);
    $this.$position0 = $position;
    $this.$limit0 = $limit;
    $this.$readOnly1 = $readOnly;
    $this.$data2 = $data;
    $this.$array7 = $array;
},
jn_CharBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_CharBufferOverTypedArray();
    jn_CharBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_CharBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data2.length;
};
function cbgu_FlushablePool() {
    cbgu_Pool.call(this);
    this.$obtained = null;
}
let cbgu_FlushablePool__init_ = $this => {
    cbgu_Pool__init_($this, 16, 2147483647);
    $this.$obtained = cbgu_Array__init_();
},
cbgu_FlushablePool_obtain = $this => {
    let $result;
    $result = cbgu_Pool_obtain($this);
    cbgu_Array_add($this.$obtained, $result);
    return $result;
},
cbgu_FlushablePool_flush = $this => {
    cbgu_Pool_freeAll($this, $this.$obtained);
    cbgu_Array_clear($this.$obtained);
},
cbggg_ModelBatch$RenderablePool = $rt_classWithoutFields(cbgu_FlushablePool),
cbggg_ModelBatch$RenderablePool_newObject = $this => {
    return cbggg_Renderable__init_();
};
function cbgggu_DefaultRenderableSorter() {
    let a = this; jl_Object.call(a);
    a.$camera4 = null;
    a.$tmpV1 = null;
    a.$tmpV2 = null;
}
let cbgggu_DefaultRenderableSorter_sort = ($this, $camera, $renderables) => {
    $this.$camera4 = $camera;
    cbgu_Array_sort($renderables, $this);
},
cbgggu_DefaultRenderableSorter_getTranslation = ($this, $worldTransform, $center, $output) => {
    if (cbgm_Vector3_isZero($center))
        cbgm_Matrix4_getTranslation($worldTransform, $output);
    else if (cbgm_Matrix4_hasRotationOrScaling($worldTransform))
        cbgm_Vector3_mul(cbgm_Vector3_set0($output, $center), $worldTransform);
    else
        cbgm_Vector3_add(cbgm_Matrix4_getTranslation($worldTransform, $output), $center);
    return $output;
},
cbgggu_DefaultRenderableSorter_compare = ($this, var$1, var$2) => {
    let var$3, var$4, var$5;
    var$1 = var$1;
    var$2 = var$2;
    var$3 = var$1.$material;
    cbggga_BlendingAttribute_$callClinit();
    var$4 = cbggg_Attributes_has(var$3, cbggga_BlendingAttribute_Type) && (cbggg_Attributes_get(var$1.$material, cbggga_BlendingAttribute_Type)).$blended ? 1 : 0;
    if (var$4 != (cbggg_Attributes_has(var$2.$material, cbggga_BlendingAttribute_Type) && (cbggg_Attributes_get(var$2.$material, cbggga_BlendingAttribute_Type)).$blended ? 1 : 0))
        var$5 = !var$4 ? (-1) : 1;
    else {
        cbgggu_DefaultRenderableSorter_getTranslation($this, var$1.$worldTransform, var$1.$meshPart.$center, $this.$tmpV1);
        cbgggu_DefaultRenderableSorter_getTranslation($this, var$2.$worldTransform, var$2.$meshPart.$center, $this.$tmpV2);
        var$5 = $rt_compare((1000.0 * cbgm_Vector3_dst2($this.$camera4.$position3, $this.$tmpV1) | 0) - (1000.0 * cbgm_Vector3_dst2($this.$camera4.$position3, $this.$tmpV2) | 0) | 0, 0.0);
        var$5 = var$5 < 0 ? (-1) : var$5 <= 0 ? 0 : 1;
        if (var$4)
            var$5 =  -var$5 | 0;
    }
    return var$5;
};
function cbgggu_RenderContext() {
    let a = this; jl_Object.call(a);
    a.$textureBinder = null;
    a.$blending = 0;
    a.$blendSFactor = 0;
    a.$blendDFactor = 0;
    a.$depthFunc = 0;
    a.$depthRangeNear0 = 0.0;
    a.$depthRangeFar0 = 0.0;
    a.$depthMask0 = 0;
    a.$cullFace = 0;
}
let cbgggu_RenderContext_setBlending = ($this, $enabled, $sFactor, $dFactor) => {
    if ($enabled != $this.$blending) {
        $this.$blending = $enabled;
        if (!$enabled)
            cbg_Gdx_gl.$glDisable(3042);
        else
            cbg_Gdx_gl.$glEnable(3042);
    }
    if ($enabled && !($this.$blendSFactor == $sFactor && $this.$blendDFactor == $dFactor)) {
        cbg_Gdx_gl.$glBlendFunc($sFactor, $dFactor);
        $this.$blendSFactor = $sFactor;
        $this.$blendDFactor = $dFactor;
    }
},
cbgggu_TextureBinder = $rt_classWithoutFields(0);
function cbgggu_DefaultTextureBinder() {
    let a = this; jl_Object.call(a);
    a.$offset1 = 0;
    a.$count2 = 0;
    a.$textures0 = null;
    a.$unitsLRU = null;
    a.$method = 0;
    a.$reused = 0;
    a.$reuseCount = 0;
    a.$bindCount = 0;
    a.$tempDesc = null;
    a.$currentTexture = 0;
}
let cbgggu_DefaultTextureBinder_bind = ($this, $textureDesc) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    a: {
        b: {
            var$2 = $textureDesc.$texture;
            $this.$reused = 0;
            switch ($this.$method) {
                case 0:
                    var$3 = $this.$offset1;
                    var$4 = 0;
                    c: {
                        while (true) {
                            var$5 = $this.$count2;
                            if (var$4 >= var$5) {
                                var$5 = ($this.$currentTexture + 1 | 0) % var$5 | 0;
                                $this.$currentTexture = var$5;
                                $this.$textures0.data[var$5] = var$2;
                                cbgg_GLTexture_bind0(var$2, var$3 + var$5 | 0);
                                var$5 = $this.$currentTexture;
                                break c;
                            }
                            var$5 = ($this.$currentTexture + var$4 | 0) % var$5 | 0;
                            if ($this.$textures0.data[var$5] === var$2)
                                break;
                            var$4 = var$4 + 1 | 0;
                        }
                        $this.$reused = 1;
                    }
                    var$3 = var$3 + var$5 | 0;
                    break b;
                case 1:
                    var$3 = $this.$offset1;
                    var$5 = 0;
                    d: {
                        while (true) {
                            var$4 = $this.$count2;
                            var$6 = $rt_compare(var$5, var$4);
                            if (var$6 >= 0)
                                break d;
                            var$7 = $this.$unitsLRU.data[var$5];
                            var$8 = $this.$textures0.data;
                            if (var$8[var$7] === var$2) {
                                $this.$reused = 1;
                                break d;
                            }
                            if (var$8[var$7] === null)
                                break;
                            var$5 = var$5 + 1 | 0;
                        }
                    }
                    if (var$6 >= 0)
                        var$5 = var$4 - 1 | 0;
                    var$8 = $this.$unitsLRU.data;
                    var$6 = var$8[var$5];
                    while (var$5 > 0) {
                        var$8[var$5] = var$8[var$5 - 1 | 0];
                        var$5 = var$5 + (-1) | 0;
                    }
                    var$8[0] = var$6;
                    if (!$this.$reused) {
                        $this.$textures0.data[var$6] = var$2;
                        cbgg_GLTexture_bind0(var$2, var$3 + var$6 | 0);
                    }
                    var$3 = var$3 + var$6 | 0;
                    break b;
                default:
            }
            var$3 = (-1);
            break a;
        }
        if (!$this.$reused)
            $this.$bindCount = $this.$bindCount + 1 | 0;
        else {
            $this.$reuseCount = $this.$reuseCount + 1 | 0;
            cbg_Gdx_gl.$glActiveTexture(33984 + var$3 | 0);
        }
        cbgg_GLTexture_unsafeSetWrap0(var$2, $textureDesc.$uWrap0, $textureDesc.$vWrap0);
        cbgg_GLTexture_unsafeSetFilter0(var$2, $textureDesc.$minFilter0, $textureDesc.$magFilter0);
    }
    return var$3;
};
function cbgmc_BoundingBox() {
    let a = this; jl_Object.call(a);
    a.$min1 = null;
    a.$max1 = null;
    a.$cnt = null;
    a.$dim = null;
}
let cbgmc_BoundingBox_tmpVector = null,
cbgmc_BoundingBox_$callClinit = () => {
    cbgmc_BoundingBox_$callClinit = $rt_eraseClinit(cbgmc_BoundingBox);
    cbgmc_BoundingBox__clinit_();
},
cbgmc_BoundingBox__init_0 = $this => {
    cbgmc_BoundingBox_$callClinit();
    $this.$min1 = cbgm_Vector3__init_();
    $this.$max1 = cbgm_Vector3__init_();
    $this.$cnt = cbgm_Vector3__init_();
    $this.$dim = cbgm_Vector3__init_();
    cbgmc_BoundingBox_set($this, cbgm_Vector3_set($this.$min1, 0.0, 0.0, 0.0), cbgm_Vector3_set($this.$max1, 0.0, 0.0, 0.0));
},
cbgmc_BoundingBox__init_ = () => {
    let var_0 = new cbgmc_BoundingBox();
    cbgmc_BoundingBox__init_0(var_0);
    return var_0;
},
cbgmc_BoundingBox_set = ($this, $minimum, $maximum) => {
    let var$3, var$4, var$5, var$6, var$7;
    var$3 = $this.$min1;
    var$4 = $minimum.$x;
    var$5 = $maximum.$x;
    if (var$4 < var$5)
        var$5 = var$4;
    var$4 = $minimum.$y;
    var$6 = $maximum.$y;
    if (var$4 < var$6)
        var$6 = var$4;
    var$4 = $minimum.$z;
    var$7 = $maximum.$z;
    if (var$4 < var$7)
        var$7 = var$4;
    cbgm_Vector3_set(var$3, var$5, var$6, var$7);
    var$3 = $this.$max1;
    var$5 = $minimum.$x;
    var$4 = $maximum.$x;
    if (var$5 > var$4)
        var$4 = var$5;
    var$6 = $minimum.$y;
    var$5 = $maximum.$y;
    if (var$6 > var$5)
        var$5 = var$6;
    var$6 = $minimum.$z;
    var$7 = $maximum.$z;
    if (var$6 > var$7)
        var$7 = var$6;
    cbgm_Vector3_set(var$3, var$4, var$5, var$7);
    cbgm_Vector3_scl(cbgm_Vector3_add(cbgm_Vector3_set0($this.$cnt, $this.$min1), $this.$max1), 0.5);
    cbgm_Vector3_sub(cbgm_Vector3_set0($this.$dim, $this.$max1), $this.$min1);
    return $this;
},
cbgmc_BoundingBox_inf = $this => {
    cbgm_Vector3_set($this.$min1, Infinity, Infinity, Infinity);
    cbgm_Vector3_set($this.$max1, (-Infinity), (-Infinity), (-Infinity));
    cbgm_Vector3_set($this.$cnt, 0.0, 0.0, 0.0);
    cbgm_Vector3_set($this.$dim, 0.0, 0.0, 0.0);
    return $this;
},
cbgmc_BoundingBox_min = ($a, $b) => {
    cbgmc_BoundingBox_$callClinit();
    if ($a > $b)
        $a = $b;
    return $a;
},
cbgmc_BoundingBox_max = ($a, $b) => {
    cbgmc_BoundingBox_$callClinit();
    if ($a > $b)
        $b = $a;
    return $b;
},
cbgmc_BoundingBox__clinit_ = () => {
    cbgmc_BoundingBox_tmpVector = cbgm_Vector3__init_();
};
function cbgu_ArrayMap() {
    let a = this; jl_Object.call(a);
    a.$keys = null;
    a.$values0 = null;
    a.$size4 = 0;
    a.$ordered3 = 0;
}
let cgxgbt_TeaFileHandle$1 = $rt_classWithoutFields(),
cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType = null,
cgxgbt_TeaFileHandle$1_$callClinit = () => {
    cgxgbt_TeaFileHandle$1_$callClinit = $rt_eraseClinit(cgxgbt_TeaFileHandle$1);
    cgxgbt_TeaFileHandle$1__clinit_();
},
cgxgbt_TeaFileHandle$1__clinit_ = () => {
    let var$1, var$2;
    var$1 = $rt_createIntArray((cbg_Files$FileType_$VALUES.$clone0()).data.length);
    var$2 = var$1.data;
    cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType = var$1;
    var$2[cbg_Files$FileType_Internal.$ordinal0] = 1;
    var$2[cbg_Files$FileType_Classpath.$ordinal0] = 2;
},
ji_IOException = $rt_classWithoutFields(jl_Exception);
function cbggg_GLFrameBuffer() {
    let a = this; jl_Object.call(a);
    a.$textureAttachments = null;
    a.$framebufferHandle = 0;
    a.$depthbufferHandle = 0;
    a.$stencilbufferHandle = 0;
    a.$depthStencilPackedBufferHandle = 0;
    a.$hasDepthStencilPackedBuffer = 0;
    a.$colorBufferHandles = null;
    a.$isMRT = 0;
    a.$bufferBuilder = null;
    a.$defaultDrawBuffers = null;
}
let cbggg_GLFrameBuffer_buffers = null,
cbggg_GLFrameBuffer_defaultFramebufferHandle = 0,
cbggg_GLFrameBuffer_defaultFramebufferHandleInitialized = 0,
cbggg_GLFrameBuffer_singleInt = null,
cbggg_GLFrameBuffer_$callClinit = () => {
    cbggg_GLFrameBuffer_$callClinit = $rt_eraseClinit(cbggg_GLFrameBuffer);
    cbggg_GLFrameBuffer__clinit_();
},
cbggg_GLFrameBuffer__init_ = $this => {
    cbggg_GLFrameBuffer_$callClinit();
    $this.$textureAttachments = cbgu_Array__init_();
    $this.$colorBufferHandles = cbgu_IntArray__init_();
},
cbggg_GLFrameBuffer_getColorBufferTexture = $this => {
    return cbgu_Array_first($this.$textureAttachments);
},
cbggg_GLFrameBuffer_build = $this => {
    let $gl, $intbuf, $result, $texture, $width, $height, $colorbufferHandle, $colorAttachmentCounter, $attachmentSpec, $texture_0, $colorBufferSpec, $i;
    $gl = cbg_Gdx_gl20;
    cbggg_GLFrameBuffer_checkValidBuilder($this);
    if (!cbggg_GLFrameBuffer_defaultFramebufferHandleInitialized) {
        cbggg_GLFrameBuffer_defaultFramebufferHandleInitialized = 1;
        if (cgxgbt_TeaApplication_getType(cbg_Gdx_app) !== cbg_Application$ApplicationType_iOS)
            cbggg_GLFrameBuffer_defaultFramebufferHandle = 0;
        else {
            $intbuf = jn_ByteBufferJsImpl_asIntBuffer(jn_ByteBuffer_order(jn_ByteBuffer_allocateDirect(64), jn_ByteOrder_nativeOrder()));
            $gl.$glGetIntegerv(36006, $intbuf);
            cbggg_GLFrameBuffer_defaultFramebufferHandle = jn_IntBufferImpl_get($intbuf, 0);
        }
    }
    $intbuf = $gl;
    $result = cgxgbt_TeaGL20_glGenFramebuffer($intbuf);
    $this.$framebufferHandle = $result;
    $gl.$glBindFramebuffer(36160, $result);
    $texture = $this.$bufferBuilder;
    $width = $texture.$width1;
    $height = $texture.$height1;
    if ($texture.$hasDepthRenderBuffer) {
        $result = cgxgbt_TeaGL20_glGenRenderbuffer($intbuf);
        $this.$depthbufferHandle = $result;
        $gl.$glBindRenderbuffer(36161, $result);
        $texture = $this.$bufferBuilder;
        $result = $texture.$samples;
        if ($result <= 0)
            $gl.$glRenderbufferStorage(36161, $texture.$depthRenderBufferSpec.$internalFormat, $width, $height);
        else
            cbg_Gdx_gl31.$glRenderbufferStorageMultisample(36161, $result, $texture.$depthRenderBufferSpec.$internalFormat, $width, $height);
    }
    if ($this.$bufferBuilder.$hasStencilRenderBuffer) {
        $result = cgxgbt_TeaGL20_glGenRenderbuffer($intbuf);
        $this.$stencilbufferHandle = $result;
        $gl.$glBindRenderbuffer(36161, $result);
        $texture = $this.$bufferBuilder;
        $result = $texture.$samples;
        if ($result <= 0)
            $gl.$glRenderbufferStorage(36161, $texture.$stencilRenderBufferSpec.$internalFormat, $width, $height);
        else
            cbg_Gdx_gl31.$glRenderbufferStorageMultisample(36161, $result, $texture.$stencilRenderBufferSpec.$internalFormat, $width, $height);
    }
    if ($this.$bufferBuilder.$hasPackedStencilDepthRenderBuffer) {
        $result = cgxgbt_TeaGL20_glGenRenderbuffer($intbuf);
        $this.$depthStencilPackedBufferHandle = $result;
        $gl.$glBindRenderbuffer(36161, $result);
        $texture = $this.$bufferBuilder;
        $result = $texture.$samples;
        if ($result <= 0)
            $gl.$glRenderbufferStorage(36161, $texture.$packedStencilDepthRenderBufferSpec.$internalFormat, $width, $height);
        else
            cbg_Gdx_gl31.$glRenderbufferStorageMultisample(36161, $result, $texture.$packedStencilDepthRenderBufferSpec.$internalFormat, $width, $height);
        $this.$hasDepthStencilPackedBuffer = 1;
    }
    $texture = $this.$bufferBuilder.$textureAttachmentSpecs;
    $result = $texture.$size0;
    $colorbufferHandle = $result <= 1 ? 0 : 1;
    $this.$isMRT = $colorbufferHandle;
    $colorAttachmentCounter = 0;
    if ($colorbufferHandle) {
        $texture = cbgu_Array_iterator($texture);
        while (cbgu_Array$ArrayIterator_hasNext($texture)) {
            $attachmentSpec = cbgu_Array$ArrayIterator_next($texture);
            $texture_0 = $this.$createTexture($attachmentSpec);
            cbgu_Array_add($this.$textureAttachments, $texture_0);
            if (cbggg_GLFrameBuffer$FrameBufferTextureAttachmentSpec_isColorTexture($attachmentSpec)) {
                $gl.$glFramebufferTexture2D(36160, 36064 + $colorAttachmentCounter | 0, 3553, cbgg_GLTexture_getTextureObjectHandle($texture_0), 0);
                $colorAttachmentCounter = $colorAttachmentCounter + 1 | 0;
            } else if ($attachmentSpec.$isDepth)
                $gl.$glFramebufferTexture2D(36160, 36096, 3553, cbgg_GLTexture_getTextureObjectHandle($texture_0), 0);
            else if ($attachmentSpec.$isStencil)
                $gl.$glFramebufferTexture2D(36160, 36128, 3553, cbgg_GLTexture_getTextureObjectHandle($texture_0), 0);
        }
    } else if ($result > 0) {
        $texture = $this.$createTexture(cbgu_Array_first($texture));
        cbgu_Array_add($this.$textureAttachments, $texture);
        $gl.$glBindTexture($texture.$glTarget, cbgg_GLTexture_getTextureObjectHandle($texture));
    }
    $attachmentSpec = cbgu_Array_iterator($this.$bufferBuilder.$colorRenderBufferSpecs);
    while (cbgu_Array$ArrayIterator_hasNext($attachmentSpec)) {
        $colorBufferSpec = cbgu_Array$ArrayIterator_next($attachmentSpec);
        $colorbufferHandle = cgxgbt_TeaGL20_glGenRenderbuffer($intbuf);
        $gl.$glBindRenderbuffer(36161, $colorbufferHandle);
        $result = $this.$bufferBuilder.$samples;
        if ($result <= 0)
            $gl.$glRenderbufferStorage(36161, $colorBufferSpec.$internalFormat, $width, $height);
        else
            cbg_Gdx_gl31.$glRenderbufferStorageMultisample(36161, $result, $colorBufferSpec.$internalFormat, $width, $height);
        cbg_Gdx_gl.$glFramebufferRenderbuffer(36160, 36064 + $colorAttachmentCounter | 0, 36161, $colorbufferHandle);
        cbgu_IntArray_add($this.$colorBufferHandles, $colorbufferHandle);
        $colorAttachmentCounter = $colorAttachmentCounter + 1 | 0;
    }
    a: {
        if (!$this.$isMRT) {
            $texture = $this.$bufferBuilder;
            if ($texture.$samples <= 0) {
                if ($texture.$textureAttachmentSpecs.$size0 <= 0)
                    break a;
                $this.$attachFrameBufferColorTexture(cbgu_Array_first($this.$textureAttachments));
                break a;
            }
        }
        $this.$defaultDrawBuffers = cbgu_BufferUtils_newIntBuffer($colorAttachmentCounter);
        $i = 0;
        while ($i < $colorAttachmentCounter) {
            $texture = $this.$defaultDrawBuffers;
            $result = 36064 + $i | 0;
            jn_IntBufferImpl_put0($texture, $result);
            $i = $i + 1 | 0;
        }
        jn_IntBuffer_position($this.$defaultDrawBuffers, 0);
        cbg_Gdx_gl30.$glDrawBuffers($colorAttachmentCounter, $this.$defaultDrawBuffers);
    }
    if ($this.$bufferBuilder.$hasDepthRenderBuffer)
        $gl.$glFramebufferRenderbuffer(36160, 36096, 36161, $this.$depthbufferHandle);
    if ($this.$bufferBuilder.$hasStencilRenderBuffer)
        $gl.$glFramebufferRenderbuffer(36160, 36128, 36161, $this.$stencilbufferHandle);
    if ($this.$bufferBuilder.$hasPackedStencilDepthRenderBuffer)
        $gl.$glFramebufferRenderbuffer(36160, 33306, 36161, $this.$depthStencilPackedBufferHandle);
    $gl.$glBindRenderbuffer(36161, 0);
    $colorBufferSpec = cbgu_Array_iterator($this.$textureAttachments);
    while (cbgu_Array$ArrayIterator_hasNext($colorBufferSpec)) {
        $gl.$glBindTexture((cbgu_Array$ArrayIterator_next($colorBufferSpec)).$glTarget, 0);
    }
    $result = $gl.$glCheckFramebufferStatus(36160);
    if ($result == 36061) {
        $texture = $this.$bufferBuilder;
        if ($texture.$hasDepthRenderBuffer && $texture.$hasStencilRenderBuffer && !(!cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(782)) && !cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(783)))) {
            if ($this.$bufferBuilder.$hasDepthRenderBuffer) {
                cgxgbt_TeaGL20_glDeleteRenderbuffer($intbuf, $this.$depthbufferHandle);
                $this.$depthbufferHandle = 0;
            }
            if ($this.$bufferBuilder.$hasStencilRenderBuffer) {
                cgxgbt_TeaGL20_glDeleteRenderbuffer($intbuf, $this.$stencilbufferHandle);
                $this.$stencilbufferHandle = 0;
            }
            if ($this.$bufferBuilder.$hasPackedStencilDepthRenderBuffer) {
                cgxgbt_TeaGL20_glDeleteRenderbuffer($intbuf, $this.$depthStencilPackedBufferHandle);
                $this.$depthStencilPackedBufferHandle = 0;
            }
            $result = cgxgbt_TeaGL20_glGenRenderbuffer($intbuf);
            $this.$depthStencilPackedBufferHandle = $result;
            $this.$hasDepthStencilPackedBuffer = 1;
            $gl.$glBindRenderbuffer(36161, $result);
            $result = $this.$bufferBuilder.$samples;
            if ($result <= 0)
                $gl.$glRenderbufferStorage(36161, 35056, $width, $height);
            else
                cbg_Gdx_gl31.$glRenderbufferStorageMultisample(36161, $result, 35056, $width, $height);
            $gl.$glBindRenderbuffer(36161, 0);
            $gl.$glFramebufferRenderbuffer(36160, 36096, 36161, $this.$depthStencilPackedBufferHandle);
            $gl.$glFramebufferRenderbuffer(36160, 36128, 36161, $this.$depthStencilPackedBufferHandle);
            $result = $gl.$glCheckFramebufferStatus(36160);
        }
    }
    $gl.$glBindFramebuffer(36160, cbggg_GLFrameBuffer_defaultFramebufferHandle);
    if ($result == 36053) {
        cbggg_GLFrameBuffer_addManagedFrameBuffer(cbg_Gdx_app, $this);
        return;
    }
    $gl = cbgu_Array_iterator($this.$textureAttachments);
    while (cbgu_Array$ArrayIterator_hasNext($gl)) {
        $this.$disposeColorTexture(cbgu_Array$ArrayIterator_next($gl));
    }
    if ($this.$hasDepthStencilPackedBuffer)
        cgxgbt_TeaGL20_glDeleteBuffer($intbuf, $this.$depthStencilPackedBufferHandle);
    else {
        if ($this.$bufferBuilder.$hasDepthRenderBuffer)
            cgxgbt_TeaGL20_glDeleteRenderbuffer($intbuf, $this.$depthbufferHandle);
        if ($this.$bufferBuilder.$hasStencilRenderBuffer)
            cgxgbt_TeaGL20_glDeleteRenderbuffer($intbuf, $this.$stencilbufferHandle);
    }
    cgxgbt_TeaGL20_glDeleteFramebuffer($intbuf, $this.$framebufferHandle);
    if ($result == 36054)
        $rt_throw(jl_IllegalStateException__init_($rt_s(784)));
    if ($result == 36057)
        $rt_throw(jl_IllegalStateException__init_($rt_s(785)));
    if ($result == 36055)
        $rt_throw(jl_IllegalStateException__init_($rt_s(786)));
    if ($result == 36061)
        $rt_throw(jl_IllegalStateException__init_($rt_s(787)));
    if ($result == 36182)
        $rt_throw(jl_IllegalStateException__init_($rt_s(788)));
    $rt_throw(jl_IllegalStateException__init_(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(789)), $result))));
},
cbggg_GLFrameBuffer_checkValidBuilder = $this => {
    let $spec, $supportsPackedDepthStencil, var$3, $runningGL30, var$5;
    $spec = $this.$bufferBuilder;
    $supportsPackedDepthStencil = $spec.$samples;
    if ($supportsPackedDepthStencil > 0) {
        $spec = new cbgu_GdxRuntimeException;
        jl_Exception__init_($spec, $rt_s(790));
        $rt_throw($spec);
    }
    if ($supportsPackedDepthStencil > 0 && $spec.$textureAttachmentSpecs.$size0 > 0) {
        $spec = new cbgu_GdxRuntimeException;
        jl_Exception__init_($spec, $rt_s(791));
        $rt_throw($spec);
    }
    var$3 = cbg_Gdx_graphics;
    $runningGL30 = var$3.$gl30 === null ? 0 : 1;
    a: {
        if (!$runningGL30) {
            $supportsPackedDepthStencil = !cgxgbt_TeaGraphics_supportsExtension(var$3, $rt_s(782)) && !cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(783)) ? 0 : 1;
            $spec = $this.$bufferBuilder;
            if ($spec.$hasPackedStencilDepthRenderBuffer && !$supportsPackedDepthStencil) {
                $spec = new cbgu_GdxRuntimeException;
                jl_Exception__init_($spec, $rt_s(792));
                $rt_throw($spec);
            }
            $spec = $spec.$textureAttachmentSpecs;
            if ($spec.$size0 > 1) {
                $spec = new cbgu_GdxRuntimeException;
                jl_Exception__init_($spec, $rt_s(793));
                $rt_throw($spec);
            }
            var$5 = cbgu_Array_iterator($spec);
            while (true) {
                if (!cbgu_Array$ArrayIterator_hasNext(var$5))
                    break a;
                $spec = cbgu_Array$ArrayIterator_next(var$5);
                if ($spec.$isDepth) {
                    $spec = new cbgu_GdxRuntimeException;
                    jl_Exception__init_($spec, $rt_s(794));
                    $rt_throw($spec);
                }
                if ($spec.$isStencil) {
                    $spec = new cbgu_GdxRuntimeException;
                    jl_Exception__init_($spec, $rt_s(795));
                    $rt_throw($spec);
                }
                if ($spec.$isFloat && !cgxgbt_TeaGraphics_supportsExtension(cbg_Gdx_graphics, $rt_s(796)))
                    break;
            }
            $spec = new cbgu_GdxRuntimeException;
            jl_Exception__init_($spec, $rt_s(797));
            $rt_throw($spec);
        }
    }
    b: {
        $spec = $this.$bufferBuilder;
        if ($spec.$hasPackedStencilDepthRenderBuffer) {
            if ($spec.$hasDepthRenderBuffer)
                break b;
            if ($spec.$hasStencilRenderBuffer)
                break b;
        }
        return;
    }
    var$3 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$3, $rt_s(798));
    $rt_throw(var$3);
},
cbggg_GLFrameBuffer_dispose = $this => {
    let $gl, var$2, var$3, $texture;
    $gl = cbg_Gdx_gl20;
    var$2 = cbgu_Array_iterator($this.$textureAttachments);
    while (cbgu_Array$ArrayIterator_hasNext(var$2)) {
        $this.$disposeColorTexture(cbgu_Array$ArrayIterator_next(var$2));
    }
    var$3 = $this.$depthStencilPackedBufferHandle;
    $gl = $gl;
    cgxgbt_TeaGL20_glDeleteRenderbuffer($gl, var$3);
    cgxgbt_TeaGL20_glDeleteRenderbuffer($gl, $this.$depthbufferHandle);
    cgxgbt_TeaGL20_glDeleteRenderbuffer($gl, $this.$stencilbufferHandle);
    cgxgbt_TeaGL20_glDeleteFramebuffer($gl, $this.$framebufferHandle);
    cbggg_GLFrameBuffer_$callClinit();
    $gl = cbggg_GLFrameBuffer_buffers;
    $texture = cbg_Gdx_app;
    if (ju_HashMap_get($gl, $texture) !== null) {
        $gl = cbggg_GLFrameBuffer_buffers;
        $texture = cbg_Gdx_app;
        cbgu_Array_removeValue(ju_HashMap_get($gl, $texture), $this, 1);
    }
},
cbggg_GLFrameBuffer_bind = $this => {
    cbg_Gdx_gl20.$glBindFramebuffer(36160, $this.$framebufferHandle);
},
cbggg_GLFrameBuffer_begin = $this => {
    $this.$bind();
    cbggg_GLFrameBuffer_setFrameBufferViewport($this);
},
cbggg_GLFrameBuffer_setFrameBufferViewport = $this => {
    let var$1, var$2;
    var$1 = cbg_Gdx_gl20;
    var$2 = $this.$bufferBuilder;
    var$1.$glViewport(0, 0, var$2.$width1, var$2.$height1);
},
cbggg_GLFrameBuffer_end = $this => {
    cbggg_GLFrameBuffer_end0($this, 0, 0, cgxgbt_TeaGraphics_getBackBufferWidth(cbg_Gdx_graphics), cgxgbt_TeaGraphics_getBackBufferHeight(cbg_Gdx_graphics));
},
cbggg_GLFrameBuffer_end0 = ($this, $x, $y, $width, $height) => {
    cbggg_GLFrameBuffer_$callClinit();
    cbg_Gdx_gl20.$glBindFramebuffer(36160, cbggg_GLFrameBuffer_defaultFramebufferHandle);
    cbg_Gdx_gl20.$glViewport($x, $y, $width, $height);
},
cbggg_GLFrameBuffer_addManagedFrameBuffer = ($app, $frameBuffer) => {
    let $managedResources;
    cbggg_GLFrameBuffer_$callClinit();
    $managedResources = ju_HashMap_get(cbggg_GLFrameBuffer_buffers, $app);
    if ($managedResources === null)
        $managedResources = cbgu_Array__init_();
    cbgu_Array_add($managedResources, $frameBuffer);
    ju_HashMap_put(cbggg_GLFrameBuffer_buffers, $app, $managedResources);
},
cbggg_GLFrameBuffer__clinit_ = () => {
    cbggg_GLFrameBuffer_buffers = ju_HashMap__init_();
    cbggg_GLFrameBuffer_defaultFramebufferHandleInitialized = 0;
    cbggg_GLFrameBuffer_singleInt = cbgu_BufferUtils_newIntBuffer(1);
};
function cbggg_FrameBufferCubemap() {
    cbggg_GLFrameBuffer.call(this);
    this.$currentSide = 0;
}
let cbggg_FrameBufferCubemap_cubemapSides = null,
cbggg_FrameBufferCubemap_$callClinit = () => {
    cbggg_FrameBufferCubemap_$callClinit = $rt_eraseClinit(cbggg_FrameBufferCubemap);
    cbggg_FrameBufferCubemap__clinit_();
},
cbggg_FrameBufferCubemap__init_ = ($this, $format, $width, $height, $hasDepth) => {
    let var$5, var$6;
    cbggg_FrameBufferCubemap_$callClinit();
    cbggg_GLFrameBuffer__init_($this);
    var$5 = new cbggg_GLFrameBuffer$FrameBufferCubemapBuilder;
    cbggg_GLFrameBuffer$GLFrameBufferBuilder__init_(var$5, $width, $height);
    var$6 = var$5;
    cbggg_GLFrameBuffer$GLFrameBufferBuilder_addBasicColorTextureAttachment(var$6, $format);
    if ($hasDepth)
        cbggg_GLFrameBuffer$GLFrameBufferBuilder_addBasicDepthRenderBuffer(var$6);
    $this.$bufferBuilder = var$5;
    cbggg_GLFrameBuffer_build($this);
},
cbggg_FrameBufferCubemap__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_FrameBufferCubemap();
    cbggg_FrameBufferCubemap__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_FrameBufferCubemap_createTexture0 = ($this, $attachmentSpec) => {
    let $data, $result, var$4, var$5;
    $data = new cbggg_GLOnlyTextureData;
    $result = $this.$bufferBuilder;
    cbggg_GLOnlyTextureData__init_($data, $result.$width1, $result.$height1, 0, $attachmentSpec.$internalFormat0, $attachmentSpec.$format2, $attachmentSpec.$type6);
    $result = new cbgg_Cubemap;
    cbgg_Cubemap_$callClinit();
    $attachmentSpec = new cbggg_FacedCubemapData;
    var$4 = $rt_createArray(cbgg_TextureData, 6);
    var$5 = var$4.data;
    $attachmentSpec.$data3 = var$4;
    var$5[0] = $data;
    var$5[1] = $data;
    var$5[2] = $data;
    var$5[3] = $data;
    var$5[4] = $data;
    var$5[5] = $data;
    cbgg_Cubemap__init_($result, $attachmentSpec);
    $attachmentSpec = cbgg_Texture$TextureFilter_Linear;
    $data = $result;
    cbgg_GLTexture_setFilter($data, $attachmentSpec, $attachmentSpec);
    $attachmentSpec = cbgg_Texture$TextureWrap_ClampToEdge;
    cbgg_GLTexture_setWrap($data, $attachmentSpec, $attachmentSpec);
    return $result;
},
cbggg_FrameBufferCubemap_attachFrameBufferColorTexture = ($this, $texture) => {
    let $gl, $glHandle, $sides, var$5, var$6;
    $gl = cbg_Gdx_gl20;
    $glHandle = $texture.$glHandle;
    $sides = (cbgg_Cubemap$CubemapSide_values()).data;
    var$5 = $sides.length;
    var$6 = 0;
    while (var$6 < var$5) {
        $gl.$glFramebufferTexture2D(36160, 36064, $sides[var$6].$glEnum1, $glHandle, 0);
        var$6 = var$6 + 1 | 0;
    }
},
cbggg_FrameBufferCubemap_bind = $this => {
    $this.$currentSide = (-1);
    cbggg_GLFrameBuffer_bind($this);
},
cbggg_FrameBufferCubemap_nextSide = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$currentSide;
    var$2 = $rt_compare(var$1, 5);
    if (var$2 > 0) {
        var$3 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$3, $rt_s(799));
        $rt_throw(var$3);
    }
    if (!var$2)
        return 0;
    $this.$currentSide = var$1 + 1 | 0;
    cbggg_FrameBufferCubemap_bindSide($this, cbggg_FrameBufferCubemap_getSide($this));
    return 1;
},
cbggg_FrameBufferCubemap_bindSide = ($this, $side) => {
    cbg_Gdx_gl20.$glFramebufferTexture2D(36160, 36064, $side.$glEnum1, (cbggg_GLFrameBuffer_getColorBufferTexture($this)).$glHandle, 0);
},
cbggg_FrameBufferCubemap_getSide = $this => {
    let var$1, var$2;
    var$1 = $this.$currentSide;
    if (var$1 < 0)
        var$2 = null;
    else {
        cbggg_FrameBufferCubemap_$callClinit();
        var$2 = cbggg_FrameBufferCubemap_cubemapSides.data[var$1];
    }
    return var$2;
},
cbggg_FrameBufferCubemap_attachFrameBufferColorTexture0 = ($this, var$1) => {
    cbggg_FrameBufferCubemap_attachFrameBufferColorTexture($this, var$1);
},
cbggg_FrameBufferCubemap_createTexture = ($this, var$1) => {
    return cbggg_FrameBufferCubemap_createTexture0($this, var$1);
},
cbggg_FrameBufferCubemap__clinit_ = () => {
    cbggg_FrameBufferCubemap_cubemapSides = cbgg_Cubemap$CubemapSide_values();
};
function nmgsu_IBLBuilder$1() {
    cbggg_FrameBufferCubemap.call(this);
    this.$this$028 = null;
}
let nmgsu_IBLBuilder$1_disposeColorTexture = ($this, var$1) => {
    return;
};
function cbgg_Cubemap() {
    cbgg_GLTexture.call(this);
    this.$data15 = null;
}
let cbgg_Cubemap_managedCubemaps = null,
cbgg_Cubemap_$callClinit = () => {
    cbgg_Cubemap_$callClinit = $rt_eraseClinit(cbgg_Cubemap);
    cbgg_Cubemap__clinit_();
},
cbgg_Cubemap__init_ = ($this, $data) => {
    let var$2, var$3;
    cbgg_Cubemap_$callClinit();
    cbgg_GLTexture__init_($this, 34067, cgxgbt_TeaGL20_glGenTexture(cbg_Gdx_gl));
    $this.$data15 = $data;
    if (!$data.$isPrepared())
        $data.$prepare();
    var$2 = $this;
    cbgg_GLTexture_bind(var$2);
    cbgg_GLTexture_unsafeSetFilter(var$2, $this.$minFilter, $this.$magFilter, 1);
    cbgg_GLTexture_unsafeSetWrap(var$2, $this.$uWrap, $this.$vWrap, 1);
    cbgg_GLTexture_unsafeSetAnisotropicFilter(var$2, $this.$anisotropicFilterLevel, 1);
    $data.$consumeCubemapData();
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, 0);
    if ($data.$isManaged()) {
        $data = cbg_Gdx_app;
        var$3 = ju_HashMap_get(cbgg_Cubemap_managedCubemaps, $data);
        if (var$3 === null)
            var$3 = cbgu_Array__init_();
        cbgu_Array_add(var$3, $this);
        ju_HashMap_put(cbgg_Cubemap_managedCubemaps, $data, var$3);
    }
},
cbgg_Cubemap__init_0 = var_0 => {
    let var_1 = new cbgg_Cubemap();
    cbgg_Cubemap__init_(var_1, var_0);
    return var_1;
},
cbgg_Cubemap_getWidth = $this => {
    return $this.$data15.$getWidth();
},
cbgg_Cubemap__clinit_ = () => {
    cbgg_Cubemap_managedCubemaps = ju_HashMap__init_();
};
function nmgsu_IBLBuilder$2() {
    cbggg_FrameBufferCubemap.call(this);
    this.$this$049 = null;
}
let nmgsu_IBLBuilder$2_disposeColorTexture = ($this, var$1) => {
    return;
},
cbgg_CubemapData = $rt_classWithoutFields(0);
function nmgsu_FacedMultiCubemapData() {
    let a = this; jl_Object.call(a);
    a.$data1 = null;
    a.$levels = 0;
}
let nmgsu_FacedMultiCubemapData_isManaged = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$data1.data;
    var$2 = var$1.length;
    var$3 = 0;
    while (var$3 < var$2) {
        if (!var$1[var$3].$managed)
            return 0;
        var$3 = var$3 + 1 | 0;
    }
    return 1;
},
nmgsu_FacedMultiCubemapData_getWidth = $this => {
    let var$1, var$2, $width;
    var$1 = $this.$data1.data;
    cbgg_Cubemap$CubemapSide_$callClinit();
    var$2 = cbgg_Cubemap$CubemapSide_PositiveZ.$index1;
    if (var$1[var$2] === null)
        var$2 = 0;
    else {
        var$2 = cbggg_PixmapTextureData_getWidth(var$1[var$2]);
        if (var$2 <= 0)
            var$2 = 0;
    }
    var$1 = $this.$data1.data;
    $width = cbgg_Cubemap$CubemapSide_NegativeZ.$index1;
    if (var$1[$width] === null)
        $width = var$2;
    else {
        $width = cbggg_PixmapTextureData_getWidth(var$1[$width]);
        if ($width <= var$2)
            $width = var$2;
    }
    var$1 = $this.$data1.data;
    var$2 = cbgg_Cubemap$CubemapSide_PositiveY.$index1;
    if (var$1[var$2] === null)
        var$2 = $width;
    else {
        var$2 = cbggg_PixmapTextureData_getWidth(var$1[var$2]);
        if (var$2 <= $width)
            var$2 = $width;
    }
    var$1 = $this.$data1.data;
    $width = cbgg_Cubemap$CubemapSide_NegativeY.$index1;
    if (var$1[$width] === null)
        $width = var$2;
    else {
        $width = cbggg_PixmapTextureData_getWidth(var$1[$width]);
        if ($width <= var$2)
            $width = var$2;
    }
    return $width;
},
nmgsu_FacedMultiCubemapData_isPrepared = $this => {
    return 0;
},
nmgsu_FacedMultiCubemapData_prepare = $this => {
    let $i, var$2, var$3, var$4;
    $i = 0;
    a: {
        while (true) {
            var$2 = $this.$data1.data;
            var$3 = var$2.length;
            if ($i >= var$3)
                break;
            if (var$2[$i] === null) {
                $i = 0;
                break a;
            }
            $i = $i + 1 | 0;
        }
        $i = 1;
    }
    if (!$i) {
        var$4 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$4, $rt_s(800));
        $rt_throw(var$4);
    }
    $i = 0;
    while ($i < var$3) {
        $i = $i + 1 | 0;
    }
},
nmgsu_FacedMultiCubemapData_consumeCubemapData = $this => {
    let $level, $i, $index, $tmp_0, var$5, $pixmap, $disposePixmap;
    $level = 0;
    while ($level < $this.$levels) {
        $i = 0;
        while ($i < 6) {
            $index = ($level * 6 | 0) + $i | 0;
            if (cbgg_TextureData$TextureDataType_Pixmap === cbgg_TextureData$TextureDataType_Custom) {
                $tmp_0 = $this.$data1.data[$index];
                $index = 34069 + $i | 0;
                cbggg_PixmapTextureData_consumeCustomData($tmp_0, $index);
            } else {
                var$5 = $this.$data1.data;
                $pixmap = var$5[$index].$pixmap0;
                $disposePixmap = var$5[$index].$disposePixmap0;
                if (var$5[$index].$format1 === cbgg_Pixmap_getFormat($pixmap))
                    $tmp_0 = $pixmap;
                else {
                    $tmp_0 = cbgg_Pixmap__init_(cbgg_Pixmap_getWidth($pixmap), cbgg_Pixmap_getHeight($pixmap), $this.$data1.data[$index].$format1);
                    cbgg_Pixmap_setBlending($tmp_0, cbgg_Pixmap$Blending_None);
                    cbgg_Pixmap_drawPixmap($tmp_0, $pixmap, 0, 0, 0, 0, cbgg_Pixmap_getWidth($pixmap), cbgg_Pixmap_getHeight($pixmap));
                    if ($this.$data1.data[$index].$disposePixmap0)
                        cbgg_Pixmap_dispose($pixmap);
                    $disposePixmap = 1;
                }
                cbg_Gdx_gl.$glPixelStorei(3317, 1);
                cbg_Gdx_gl.$glTexImage2D(34069 + $i | 0, $level, cbgg_Pixmap_getGLInternalFormat($tmp_0), cbgg_Pixmap_getWidth($tmp_0), cbgg_Pixmap_getHeight($tmp_0), 0, cbgg_Pixmap_getGLFormat($tmp_0), cbgg_Pixmap_getGLType($tmp_0), cbgg_Pixmap_getPixels($tmp_0));
                if ($disposePixmap)
                    cbgg_Pixmap_dispose($tmp_0);
            }
            $i = $i + 1 | 0;
        }
        $level = $level + 1 | 0;
    }
},
cbggg_FrameBuffer = $rt_classWithoutFields(cbggg_GLFrameBuffer),
cbggg_FrameBuffer_attachFrameBufferColorTexture = ($this, var$1) => {
    var$1 = var$1;
    cbg_Gdx_gl20.$glFramebufferTexture2D(36160, 36064, 3553, var$1.$glHandle, 0);
},
cbggg_FrameBuffer_disposeColorTexture = ($this, var$1) => {
    let var$2, var$3, var$4;
    var$1 = var$1;
    if (var$1.$glHandle) {
        var$2 = var$1;
        var$3 = var$2.$glHandle;
        if (var$3) {
            cgxgbt_TeaGL20_glDeleteTexture(cbg_Gdx_gl, var$3);
            var$2.$glHandle = 0;
        }
        if (var$1.$data4.$isManaged()) {
            cbgg_Texture_$callClinit();
            var$4 = cbgg_Texture_managedTextures;
            var$2 = cbg_Gdx_app;
            if (ju_HashMap_get(var$4, var$2) !== null) {
                var$2 = cbgg_Texture_managedTextures;
                var$4 = cbg_Gdx_app;
                cbgu_Array_removeValue(ju_HashMap_get(var$2, var$4), var$1, 1);
            }
        }
    }
},
cbggg_FrameBuffer_createTexture = ($this, var$1) => {
    let var$2, var$3, var$4;
    a: {
        var$2 = new cbggg_GLOnlyTextureData;
        var$3 = $this.$bufferBuilder;
        cbggg_GLOnlyTextureData__init_(var$2, var$3.$width1, var$3.$height1, 0, var$1.$internalFormat0, var$1.$format2, var$1.$type6);
        var$3 = cbgg_Texture__init_3(var$2);
        if (var$1.$isDepth) {
            var$1 = cbg_Application$ApplicationType_WebGL;
            if (var$1 === var$1) {
                var$4 = 1;
                break a;
            }
        }
        var$4 = 0;
    }
    if (!var$4) {
        var$1 = cbgg_Texture$TextureFilter_Linear;
        cbgg_GLTexture_setFilter(var$3, var$1, var$1);
    }
    var$1 = cbgg_Texture$TextureWrap_ClampToEdge;
    cbgg_GLTexture_setWrap(var$3, var$1, var$1);
    return var$3;
};
function cbgg_Cubemap$CubemapSide() {
    let a = this; jl_Enum.call(a);
    a.$index1 = 0;
    a.$glEnum1 = 0;
    a.$up0 = null;
    a.$direction2 = null;
}
let cbgg_Cubemap$CubemapSide_PositiveX = null,
cbgg_Cubemap$CubemapSide_NegativeX = null,
cbgg_Cubemap$CubemapSide_PositiveY = null,
cbgg_Cubemap$CubemapSide_NegativeY = null,
cbgg_Cubemap$CubemapSide_PositiveZ = null,
cbgg_Cubemap$CubemapSide_NegativeZ = null,
cbgg_Cubemap$CubemapSide_$VALUES = null,
cbgg_Cubemap$CubemapSide_$callClinit = () => {
    cbgg_Cubemap$CubemapSide_$callClinit = $rt_eraseClinit(cbgg_Cubemap$CubemapSide);
    cbgg_Cubemap$CubemapSide__clinit_();
},
cbgg_Cubemap$CubemapSide_values = () => {
    cbgg_Cubemap$CubemapSide_$callClinit();
    return cbgg_Cubemap$CubemapSide_$VALUES.$clone0();
},
cbgg_Cubemap$CubemapSide__init_0 = ($this, var$1, var$2, $index, $glEnum, $upX, $upY, $upZ, $directionX, $directionY, $directionZ) => {
    cbgg_Cubemap$CubemapSide_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$index1 = $index;
    $this.$glEnum1 = $glEnum;
    $this.$up0 = cbgm_Vector3__init_0($upX, $upY, $upZ);
    $this.$direction2 = cbgm_Vector3__init_0($directionX, $directionY, $directionZ);
},
cbgg_Cubemap$CubemapSide__init_ = (var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) => {
    let var_10 = new cbgg_Cubemap$CubemapSide();
    cbgg_Cubemap$CubemapSide__init_0(var_10, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9);
    return var_10;
},
cbgg_Cubemap$CubemapSide__clinit_ = () => {
    let var$1, var$2, var$3;
    cbgg_Cubemap$CubemapSide_PositiveX = cbgg_Cubemap$CubemapSide__init_($rt_s(801), 0, 0, 34069, 0.0, (-1.0), 0.0, 1.0, 0.0, 0.0);
    cbgg_Cubemap$CubemapSide_NegativeX = cbgg_Cubemap$CubemapSide__init_($rt_s(802), 1, 1, 34070, 0.0, (-1.0), 0.0, (-1.0), 0.0, 0.0);
    cbgg_Cubemap$CubemapSide_PositiveY = cbgg_Cubemap$CubemapSide__init_($rt_s(803), 2, 2, 34071, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0);
    cbgg_Cubemap$CubemapSide_NegativeY = cbgg_Cubemap$CubemapSide__init_($rt_s(804), 3, 3, 34072, 0.0, 0.0, (-1.0), 0.0, (-1.0), 0.0);
    cbgg_Cubemap$CubemapSide_PositiveZ = cbgg_Cubemap$CubemapSide__init_($rt_s(805), 4, 4, 34073, 0.0, (-1.0), 0.0, 0.0, 0.0, 1.0);
    var$1 = cbgg_Cubemap$CubemapSide__init_($rt_s(806), 5, 5, 34074, 0.0, (-1.0), 0.0, 0.0, 0.0, (-1.0));
    cbgg_Cubemap$CubemapSide_NegativeZ = var$1;
    var$2 = $rt_createArray(cbgg_Cubemap$CubemapSide, 6);
    var$3 = var$2.data;
    var$3[0] = cbgg_Cubemap$CubemapSide_PositiveX;
    var$3[1] = cbgg_Cubemap$CubemapSide_NegativeX;
    var$3[2] = cbgg_Cubemap$CubemapSide_PositiveY;
    var$3[3] = cbgg_Cubemap$CubemapSide_NegativeY;
    var$3[4] = cbgg_Cubemap$CubemapSide_PositiveZ;
    var$3[5] = var$1;
    cbgg_Cubemap$CubemapSide_$VALUES = var$2;
};
function jnci_BufferedDecoder() {
    let a = this; jnc_CharsetDecoder.call(a);
    a.$inArray = null;
    a.$outArray0 = null;
}
let jnci_BufferedDecoder__init_ = ($this, $cs, $averageCharsPerByte, $maxCharsPerByte) => {
    let var$4;
    $this.$replacement = $rt_s(807);
    var$4 = jnc_CodingErrorAction_REPORT;
    $this.$malformedAction = var$4;
    $this.$unmappableAction0 = var$4;
    if ($averageCharsPerByte <= 0.0) {
        $cs = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$4);
        jl_StringBuilder_append2(jl_StringBuilder_append(var$4, $rt_s(808)), $averageCharsPerByte);
        jl_Exception__init_($cs, jl_AbstractStringBuilder_toString(var$4));
        $rt_throw($cs);
    }
    if ($maxCharsPerByte > 0.0) {
        $this.$charset1 = $cs;
        $this.$averageCharsPerByte = $averageCharsPerByte;
        $this.$maxCharsPerByte = $maxCharsPerByte;
        $this.$inArray = $rt_createByteArray(512);
        $this.$outArray0 = $rt_createCharArray(512);
        return;
    }
    $cs = new jl_IllegalArgumentException;
    var$4 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$4);
    jl_StringBuilder_append2(jl_StringBuilder_append(var$4, $rt_s(809)), $maxCharsPerByte);
    jl_Exception__init_($cs, jl_AbstractStringBuilder_toString(var$4));
    $rt_throw($cs);
},
jnci_BufferedDecoder_decodeLoop = ($this, $in, $out) => {
    let $inArray, $inPos, $inSize, $outArray, $i, var$8, $result, var$10, $outSize, $controller, var$13, var$14;
    $inArray = $this.$inArray;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray0;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                $i = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + $i | 0, var$8.length);
                jn_ByteBuffer_get($in, $inArray, $i, $inSize - $i | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                $result = !jn_Buffer_hasRemaining($in) && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                break a;
            }
            var$8 = $outArray.data;
            $i = jn_Buffer_remaining($out);
            var$10 = var$8.length;
            $outSize = jl_Math_min($i, var$10);
            $controller = new jnci_BufferedDecoder$Controller;
            $controller.$in = $in;
            $controller.$out1 = $out;
            $result = $this.$arrayDecode($inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition;
            if ($result === null && 0 == $controller.$outPosition)
                $result = jnc_CoderResult_UNDERFLOW;
            $outSize = $controller.$outPosition;
            if (jn_CharBufferImpl_isReadOnly($out)) {
                $in = new jn_ReadOnlyBufferException;
                jl_Exception__init_0($in);
                $rt_throw($in);
            }
            if (jn_Buffer_remaining($out) < $outSize) {
                $in = new jn_BufferOverflowException;
                jl_Exception__init_0($in);
                $rt_throw($in);
            }
            if ($outSize < 0)
                break;
            if ((0 + $outSize | 0) > var$10)
                break;
            $i = $out.$position0;
            var$13 = $out;
            var$14 = new Uint16Array($outArray.data.buffer, 0, $outSize);
            var$13.$data2.set(var$14, $i);
            $out.$position0 = $out.$position0 + $outSize | 0;
            if ($result !== null)
                break a;
        }
        $in = new jl_IndexOutOfBoundsException;
        jl_Exception__init_0($in);
        $rt_throw($in);
    }
    jn_Buffer_position($in, $in.$position0 - ($inSize - $inPos | 0) | 0);
    return $result;
},
jnci_UTF8Decoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_UTF8Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, $b2, $b, $b2_0, $b3, $c, $b4, $code;
    $result = null;
    a: {
        b: {
            c: {
                while ($inPos < $inSize) {
                    if ($outPos >= $outSize)
                        break a;
                    var$9 = $inArray.data;
                    $b2 = $inPos + 1 | 0;
                    $b = var$9[$inPos] & 255;
                    if (!($b & 128)) {
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = $b & 65535;
                    } else if (($b & 224) == 192) {
                        if ($b2 >= $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreInput($controller, 2))
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        $inPos = $b2 + 1 | 0;
                        $b2 = var$9[$b2];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2)) {
                            $inPos = $inPos + (-2) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                        $b2 = $inPos;
                    } else if (($b & 240) == 224) {
                        if (($b2 + 2 | 0) > $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreInput($controller, 3))
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        $inPos = $b2 + 1 | 0;
                        $b2_0 = var$9[$b2];
                        $b2 = $inPos + 1 | 0;
                        $b3 = var$9[$inPos];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2_0))
                            break b;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break b;
                        $c = (($b & 15) << 12 | ($b2_0 & 63) << 6 | $b3 & 63) & 65535;
                        if (jl_Character_isSurrogate($c)) {
                            $inPos = $b2 + (-3) | 0;
                            $result = jnc_CoderResult_malformedForLength(3);
                            break a;
                        }
                        var$9 = $outArray.data;
                        $b2_0 = $outPos + 1 | 0;
                        var$9[$outPos] = $c;
                    } else {
                        if (($b & 248) != 240) {
                            $inPos = $b2 + (-1) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        if (($b2 + 3 | 0) > $inSize) {
                            $inPos = $b2 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreInput($controller, 4))
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        if (($outPos + 2 | 0) > $outSize) {
                            $inPos = $b2 + (-1) | 0;
                            if (jnci_BufferedDecoder$Controller_hasMoreOutput($controller, 2))
                                break a;
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        $inPos = $b2 + 1 | 0;
                        $b2_0 = var$9[$b2];
                        $b4 = $inPos + 1 | 0;
                        $b3 = var$9[$inPos];
                        $b2 = $b4 + 1 | 0;
                        $b4 = var$9[$b4];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2_0))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b4))
                            break c;
                        var$9 = $outArray.data;
                        $code = ($b & 7) << 18 | ($b2_0 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                        $inPos = $outPos + 1 | 0;
                        var$9[$outPos] = jl_Character_highSurrogate($code);
                        $b2_0 = $inPos + 1 | 0;
                        var$9[$inPos] = jl_Character_lowSurrogate($code);
                    }
                    $inPos = $b2;
                    $outPos = $b2_0;
                }
                break a;
            }
            $inPos = $b2 + (-3) | 0;
            $result = jnc_CoderResult_malformedForLength(1);
            break a;
        }
        $inPos = $b2 + (-3) | 0;
        $result = jnc_CoderResult_malformedForLength(1);
    }
    $controller.$inPosition = $inPos;
    $controller.$outPosition = $outPos;
    return $result;
},
jnci_UTF8Decoder_checkMidByte = ($this, $b) => {
    return ($b & 192) != 128 ? 0 : 1;
};
function cbggga_DirectionalLightsAttribute() {
    cbggg_Attribute.call(this);
    this.$lights1 = null;
}
let cbggga_DirectionalLightsAttribute_Type = Long_ZERO,
cbggga_DirectionalLightsAttribute_$callClinit = () => {
    cbggga_DirectionalLightsAttribute_$callClinit = $rt_eraseClinit(cbggga_DirectionalLightsAttribute);
    cbggga_DirectionalLightsAttribute__clinit_();
},
cbggga_DirectionalLightsAttribute__init_ = $this => {
    cbggga_DirectionalLightsAttribute_$callClinit();
    cbggg_Attribute__init_($this, cbggga_DirectionalLightsAttribute_Type);
    $this.$lights1 = cbgu_Array__init_0(1);
},
cbggga_DirectionalLightsAttribute__init_0 = () => {
    let var_0 = new cbggga_DirectionalLightsAttribute();
    cbggga_DirectionalLightsAttribute__init_(var_0);
    return var_0;
},
cbggga_DirectionalLightsAttribute_hashCode = $this => {
    let $result, var$2, $light;
    $result = cbggg_Attribute_hashCode($this);
    var$2 = cbgu_Array_iterator($this.$lights1);
    while (cbgu_Array$ArrayIterator_hasNext(var$2)) {
        $light = cbgu_Array$ArrayIterator_next(var$2);
        $result = (1229 * $result | 0) + ($light === null ? 0 : jl_Object_identity($light)) | 0;
    }
    return $result;
},
cbggga_DirectionalLightsAttribute_copy = $this => {
    let var$1;
    var$1 = new cbggga_DirectionalLightsAttribute;
    cbggga_DirectionalLightsAttribute_$callClinit();
    cbggga_DirectionalLightsAttribute__init_(var$1);
    cbgu_Array_addAll(var$1.$lights1, $this.$lights1);
    return var$1;
},
cbggga_DirectionalLightsAttribute__clinit_ = () => {
    cbggga_DirectionalLightsAttribute_Type = cbggg_Attribute_register($rt_s(810));
};
function cbgu_Sort() {
    jl_Object.call(this);
    this.$timSort = null;
}
let cbgu_Sort_instance = null;
function cbggg_TextureAtlas$AtlasRegion() {
    let a = this; cbggg_TextureRegion.call(a);
    a.$offsetX = 0.0;
    a.$offsetY = 0.0;
    a.$packedHeight = 0;
    a.$originalHeight = 0;
}
let nmgss_PBRCommon = $rt_classWithoutFields(),
nmgss_PBRCommon_intBuffer = null,
nmgss_PBRCommon_seamlessCubemapsShouldBeEnabled = null,
nmgss_PBRCommon_$callClinit = () => {
    nmgss_PBRCommon_$callClinit = $rt_eraseClinit(nmgss_PBRCommon);
    nmgss_PBRCommon__clinit_();
},
nmgss_PBRCommon_checkVertexAttributes = $renderable => {
    let $numVertexAttributes, $maxVertexAttribs, var$4;
    nmgss_PBRCommon_$callClinit();
    $numVertexAttributes = cbgg_VertexAttributes_size(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
    jn_Buffer_clear(nmgss_PBRCommon_intBuffer);
    cbg_Gdx_gl.$glGetIntegerv(34921, nmgss_PBRCommon_intBuffer);
    $maxVertexAttribs = jn_IntBufferImpl_get0(nmgss_PBRCommon_intBuffer);
    if ($numVertexAttributes <= $maxVertexAttribs)
        return;
    var$4 = new cbgu_GdxRuntimeException;
    $renderable = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($renderable);
    jl_AbstractStringBuilder_append($renderable, $rt_s(811));
    $renderable = jl_StringBuilder_append1($renderable, $numVertexAttributes);
    jl_AbstractStringBuilder_append($renderable, $rt_s(7));
    jl_Exception__init_(var$4, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($renderable, $maxVertexAttribs)));
    $rt_throw(var$4);
},
nmgss_PBRCommon__clinit_ = () => {
    nmgss_PBRCommon_intBuffer = cbgu_BufferUtils_newIntBuffer(16);
    nmgss_PBRCommon_seamlessCubemapsShouldBeEnabled = null;
};
function cbgggm_Animation() {
    let a = this; jl_Object.call(a);
    a.$id3 = null;
    a.$duration = 0.0;
    a.$nodeAnimations = null;
}
function ji_ByteArrayOutputStream() {
    let a = this; ji_OutputStream.call(a);
    a.$buf = null;
    a.$count0 = 0;
}
let ji_ByteArrayOutputStream__init_ = ($this, $size) => {
    $this.$buf = $rt_createByteArray($size);
},
ji_ByteArrayOutputStream__init_0 = var_0 => {
    let var_1 = new ji_ByteArrayOutputStream();
    ji_ByteArrayOutputStream__init_(var_1, var_0);
    return var_1;
},
ji_ByteArrayOutputStream_write = ($this, $b, $off, $len) => {
    let $i, var$5, var$6, var$7, var$8;
    $i = $this.$count0 + $len | 0;
    var$5 = $this.$buf.data.length;
    if (var$5 < $i) {
        var$6 = jl_Math_max($i, (var$5 * 3 | 0) / 2 | 0);
        $this.$buf = ju_Arrays_copyOf0($this.$buf, var$6);
    }
    $i = 0;
    while ($i < $len) {
        var$7 = $b.data;
        var$8 = $this.$buf.data;
        var$6 = $this.$count0;
        $this.$count0 = var$6 + 1 | 0;
        var$5 = $off + 1 | 0;
        var$8[var$6] = var$7[$off];
        $i = $i + 1 | 0;
        $off = var$5;
    }
},
ji_ByteArrayOutputStream_toByteArray = $this => {
    return ju_Arrays_copyOf0($this.$buf, $this.$count0);
},
cbgu_StreamUtils$OptimizedByteArrayOutputStream = $rt_classWithoutFields(ji_ByteArrayOutputStream),
cbgu_StreamUtils$OptimizedByteArrayOutputStream_toByteArray = $this => {
    let var$1, var$2;
    jl_Object_monitorEnterSync($this);
    try {
        var$1 = $this.$count0;
        var$2 = $this.$buf;
        if (var$1 == var$2.data.length)
            return var$2;
        return ji_ByteArrayOutputStream_toByteArray($this);
    } finally {
        jl_Object_monitorExitSync($this);
    }
};
function cbggg_ShapeRenderer$ShapeType() {
    jl_Enum.call(this);
    this.$glType = 0;
}
let cbggg_ShapeRenderer$ShapeType_Point = null,
cbggg_ShapeRenderer$ShapeType_Line = null,
cbggg_ShapeRenderer$ShapeType_Filled = null,
cbggg_ShapeRenderer$ShapeType_$VALUES = null,
cbggg_ShapeRenderer$ShapeType__init_0 = ($this, var$1, var$2, $glType) => {
    jl_Enum__init_($this, var$1, var$2);
    $this.$glType = $glType;
},
cbggg_ShapeRenderer$ShapeType__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_ShapeRenderer$ShapeType();
    cbggg_ShapeRenderer$ShapeType__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_ShapeRenderer$ShapeType__clinit_ = () => {
    let var$1, var$2, var$3;
    cbggg_ShapeRenderer$ShapeType_Point = cbggg_ShapeRenderer$ShapeType__init_($rt_s(812), 0, 0);
    cbggg_ShapeRenderer$ShapeType_Line = cbggg_ShapeRenderer$ShapeType__init_($rt_s(813), 1, 1);
    var$1 = cbggg_ShapeRenderer$ShapeType__init_($rt_s(814), 2, 4);
    cbggg_ShapeRenderer$ShapeType_Filled = var$1;
    var$2 = $rt_createArray(cbggg_ShapeRenderer$ShapeType, 3);
    var$3 = var$2.data;
    var$3[0] = cbggg_ShapeRenderer$ShapeType_Point;
    var$3[1] = cbggg_ShapeRenderer$ShapeType_Line;
    var$3[2] = var$1;
    cbggg_ShapeRenderer$ShapeType_$VALUES = var$2;
};
function jnc_CharsetEncoder() {
    let a = this; jl_Object.call(a);
    a.$charset0 = null;
    a.$replacement1 = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction0 = null;
    a.$unmappableAction = null;
    a.$status = 0;
}
let jnc_CharsetEncoder_onMalformedInput = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$malformedAction0 = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Exception__init_(var$2, $rt_s(815));
    $rt_throw(var$2);
},
jnc_CharsetEncoder_onUnmappableCharacter = ($this, $newAction) => {
    let var$2;
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    jl_Exception__init_(var$2, $rt_s(815));
    $rt_throw(var$2);
},
jnc_CharsetEncoder_encode = ($this, $in, $out, $endOfInput) => {
    let var$4, $e, $result, $remaining, $action, var$9, $$je;
    a: {
        var$4 = $this.$status;
        if (var$4 != 3) {
            if ($endOfInput)
                break a;
            if (var$4 != 2)
                break a;
        }
        $in = new jl_IllegalStateException;
        jl_Exception__init_0($in);
        $rt_throw($in);
    }
    $this.$status = !$endOfInput ? 1 : 2;
    $e = $this;
    while (true) {
        try {
            $result = jnci_BufferedEncoder_encodeLoop($e, $in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $rt_throw(jnc_CoderMalfunctionError__init_($e));
            } else {
                throw $$e;
            }
        }
        if (jnc_CoderResult_isUnderflow($result)) {
            if (!$endOfInput)
                return $result;
            $remaining = jn_Buffer_remaining($in);
            if ($remaining <= 0)
                return $result;
            $result = jnc_CoderResult_malformedForLength($remaining);
        } else if (jnc_CoderResult_isOverflow($result))
            break;
        $action = !jnc_CoderResult_isUnmappable($result) ? $this.$malformedAction0 : $this.$unmappableAction;
        b: {
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            $remaining = jn_Buffer_remaining($out);
            var$9 = $this.$replacement1;
            if ($remaining < var$9.data.length)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put($out, var$9);
        }
        jn_Buffer_position($in, $in.$position0 + jnc_CoderResult_length($result) | 0);
    }
    return $result;
},
jnc_CharsetEncoder_encode0 = ($this, $in) => {
    let $output, $result, var$4;
    if (!jn_Buffer_remaining($in))
        return jn_ByteBuffer_allocate(0);
    $this.$status = 0;
    $output = jn_ByteBuffer_allocate(jn_Buffer_remaining($in) * $this.$averageBytesPerChar | 0);
    while (true) {
        $result = jnc_CharsetEncoder_encode($this, $in, $output, 0);
        if ($result === jnc_CoderResult_UNDERFLOW)
            break;
        if ($result === jnc_CoderResult_OVERFLOW) {
            $output = jnc_CharsetEncoder_allocateMore($this, $output);
            continue;
        }
        if (!jnc_CoderResult_isError($result))
            continue;
        jnc_CoderResult_throwException($result);
    }
    $in = jnc_CharsetEncoder_encode($this, $in, $output, 1);
    if (jnc_CoderResult_isError($in))
        jnc_CoderResult_throwException($in);
    while (true) {
        var$4 = $this.$status;
        if (var$4 != 2 && var$4 != 4) {
            $in = new jl_IllegalStateException;
            jl_Exception__init_0($in);
            $rt_throw($in);
        }
        $in = jnc_CoderResult_UNDERFLOW;
        if ($in === $in)
            $this.$status = 3;
        if (jnc_CoderResult_isUnderflow($in))
            break;
        if (!jnc_CoderResult_isOverflow($in))
            continue;
        $output = jnc_CharsetEncoder_allocateMore($this, $output);
    }
    jn_Buffer_flip($output);
    return $output;
},
jnc_CharsetEncoder_allocateMore = ($this, $buffer) => {
    let $array, $result;
    $array = jn_ByteBuffer_array($buffer);
    $result = jn_ByteBuffer_wrap(ju_Arrays_copyOf0($array, $array.data.length * 2 | 0));
    jn_Buffer_position($result, $buffer.$position0);
    return $result;
},
jnc_CharacterCodingException = $rt_classWithoutFields(ji_IOException),
jl_Error = $rt_classWithoutFields(jl_Throwable),
jl_AssertionError = $rt_classWithoutFields(jl_Error);
function jl_Boolean() {
    jl_Object.call(this);
    this.$value5 = 0;
}
let jl_Boolean_TRUE = null,
jl_Boolean_FALSE = null,
jl_Boolean_TYPE = null,
jl_Boolean__init_0 = ($this, $value) => {
    $this.$value5 = $value;
},
jl_Boolean__init_ = var_0 => {
    let var_1 = new jl_Boolean();
    jl_Boolean__init_0(var_1, var_0);
    return var_1;
},
jl_Boolean_valueOf = $value => {
    return !$value ? jl_Boolean_FALSE : jl_Boolean_TRUE;
},
jl_Boolean__clinit_ = () => {
    jl_Boolean_TRUE = jl_Boolean__init_(1);
    jl_Boolean_FALSE = jl_Boolean__init_(0);
    jl_Boolean_TYPE = $rt_cls($rt_booleancls);
},
cgxjl_JParserLibraryLoader$OnInitFunction = $rt_classWithoutFields(0);
function cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_10_0() {
    let a = this; jl_Object.call(a);
    a.$_024 = null;
    a.$_110 = null;
}
let cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_10_0_onInit$exported$0 = var$1 => {
    let var$2;
    var$1 = var$1;
    var$2 = var$1.$_024;
    var$1 = var$1.$_110;
    cgxjl_JParserLibraryLoader_$callClinit();
    ju_HashSet_add(cgxjl_JParserLibraryLoader_loadedLibraries, var$2);
    var$2 = null;
    cgxjl_JParserLibraryLoader$1_onLoad(var$1, 1, var$2);
};
function cbggg_GLFrameBuffer$GLFrameBufferBuilder() {
    let a = this; jl_Object.call(a);
    a.$width1 = 0;
    a.$height1 = 0;
    a.$samples = 0;
    a.$textureAttachmentSpecs = null;
    a.$colorRenderBufferSpecs = null;
    a.$stencilRenderBufferSpec = null;
    a.$depthRenderBufferSpec = null;
    a.$packedStencilDepthRenderBufferSpec = null;
    a.$hasStencilRenderBuffer = 0;
    a.$hasDepthRenderBuffer = 0;
    a.$hasPackedStencilDepthRenderBuffer = 0;
}
let cbggg_GLFrameBuffer$GLFrameBufferBuilder__init_ = ($this, $width, $height) => {
    $this.$textureAttachmentSpecs = cbgu_Array__init_();
    $this.$colorRenderBufferSpecs = cbgu_Array__init_();
    $this.$width1 = $width;
    $this.$height1 = $height;
    $this.$samples = 0;
},
cbggg_GLFrameBuffer$GLFrameBufferBuilder_addColorTextureAttachment = ($this, $internalFormat, $format, $type) => {
    let var$4, var$5;
    var$4 = $this.$textureAttachmentSpecs;
    var$5 = new cbggg_GLFrameBuffer$FrameBufferTextureAttachmentSpec;
    var$5.$internalFormat0 = $internalFormat;
    var$5.$format2 = $format;
    var$5.$type6 = $type;
    cbgu_Array_add(var$4, var$5);
    return $this;
},
cbggg_GLFrameBuffer$GLFrameBufferBuilder_addBasicColorTextureAttachment = ($this, $format) => {
    let $glFormat;
    $glFormat = cbggg_Gdx2DPixmap_toGlFormat(cbgg_Pixmap$Format_toGdx2DPixmapFormat($format));
    return cbggg_GLFrameBuffer$GLFrameBufferBuilder_addColorTextureAttachment($this, $glFormat, $glFormat, cbggg_Gdx2DPixmap_toGlType(cbgg_Pixmap$Format_toGdx2DPixmapFormat($format)));
},
cbggg_GLFrameBuffer$GLFrameBufferBuilder_addDepthRenderBuffer = ($this, $internalFormat) => {
    $this.$depthRenderBufferSpec = cbggg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec__init_($internalFormat);
    $this.$hasDepthRenderBuffer = 1;
    return $this;
},
cbggg_GLFrameBuffer$GLFrameBufferBuilder_addStencilRenderBuffer = ($this, $internalFormat) => {
    $this.$stencilRenderBufferSpec = cbggg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec__init_($internalFormat);
    $this.$hasStencilRenderBuffer = 1;
    return $this;
},
cbggg_GLFrameBuffer$GLFrameBufferBuilder_addBasicDepthRenderBuffer = $this => {
    return cbggg_GLFrameBuffer$GLFrameBufferBuilder_addDepthRenderBuffer($this, 33189);
},
cbggg_GLFrameBuffer$GLFrameBufferBuilder_addBasicStencilRenderBuffer = $this => {
    return cbggg_GLFrameBuffer$GLFrameBufferBuilder_addStencilRenderBuffer($this, 36168);
},
cbggg_GLFrameBuffer$FrameBufferBuilder = $rt_classWithoutFields(cbggg_GLFrameBuffer$GLFrameBufferBuilder);
function jnc_CoderResult() {
    let a = this; jl_Object.call(a);
    a.$kind = 0;
    a.$length4 = 0;
}
let jnc_CoderResult_UNDERFLOW = null,
jnc_CoderResult_OVERFLOW = null,
jnc_CoderResult__init_0 = ($this, $kind, $length) => {
    $this.$kind = $kind;
    $this.$length4 = $length;
},
jnc_CoderResult__init_ = (var_0, var_1) => {
    let var_2 = new jnc_CoderResult();
    jnc_CoderResult__init_0(var_2, var_0, var_1);
    return var_2;
},
jnc_CoderResult_isUnderflow = $this => {
    return $this.$kind ? 0 : 1;
},
jnc_CoderResult_isOverflow = $this => {
    return $this.$kind != 1 ? 0 : 1;
},
jnc_CoderResult_isError = $this => {
    return !jnc_CoderResult_isMalformed($this) && !jnc_CoderResult_isUnmappable($this) ? 0 : 1;
},
jnc_CoderResult_isMalformed = $this => {
    return $this.$kind != 2 ? 0 : 1;
},
jnc_CoderResult_isUnmappable = $this => {
    return $this.$kind != 3 ? 0 : 1;
},
jnc_CoderResult_length = $this => {
    let var$1;
    if (jnc_CoderResult_isError($this))
        return $this.$length4;
    var$1 = new jl_UnsupportedOperationException;
    jl_Exception__init_0(var$1);
    $rt_throw(var$1);
},
jnc_CoderResult_malformedForLength = $length => {
    return jnc_CoderResult__init_(2, $length);
},
jnc_CoderResult_throwException = $this => {
    let var$1, var$2;
    switch ($this.$kind) {
        case 0:
            var$1 = new jnc_BufferUnderflowException;
            jl_Exception__init_0(var$1);
            $rt_throw(var$1);
        case 1:
            var$1 = new jnc_BufferOverflowException;
            jl_Exception__init_0(var$1);
            $rt_throw(var$1);
        case 2:
            var$1 = new jnc_MalformedInputException;
            var$2 = $this.$length4;
            jl_Exception__init_0(var$1);
            var$1.$length5 = var$2;
            $rt_throw(var$1);
        case 3:
            var$1 = new jnc_UnmappableCharacterException;
            var$2 = $this.$length4;
            jl_Exception__init_0(var$1);
            var$1.$length6 = var$2;
            $rt_throw(var$1);
        default:
    }
},
jnc_CoderResult__clinit_ = () => {
    jnc_CoderResult_UNDERFLOW = jnc_CoderResult__init_(0, 0);
    jnc_CoderResult_OVERFLOW = jnc_CoderResult__init_(1, 0);
},
cbggg_GLFrameBuffer$FrameBufferCubemapBuilder = $rt_classWithoutFields(cbggg_GLFrameBuffer$GLFrameBufferBuilder),
jnc_CoderMalfunctionError = $rt_classWithoutFields(jl_Error),
jnc_CoderMalfunctionError__init_0 = ($this, $cause) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$cause = $cause;
},
jnc_CoderMalfunctionError__init_ = var_0 => {
    let var_1 = new jnc_CoderMalfunctionError();
    jnc_CoderMalfunctionError__init_0(var_1, var_0);
    return var_1;
},
ji_InputStream = $rt_classWithoutFields();
function cbggg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec() {
    jl_Object.call(this);
    this.$internalFormat = 0;
}
let cbggg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec__init_0 = ($this, $internalFormat) => {
    $this.$internalFormat = $internalFormat;
},
cbggg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec__init_ = var_0 => {
    let var_1 = new cbggg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec();
    cbggg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec__init_0(var_1, var_0);
    return var_1;
};
function cbggg_GLFrameBuffer$FrameBufferTextureAttachmentSpec() {
    let a = this; jl_Object.call(a);
    a.$internalFormat0 = 0;
    a.$format2 = 0;
    a.$type6 = 0;
    a.$isFloat = 0;
    a.$isDepth = 0;
    a.$isStencil = 0;
}
let cbggg_GLFrameBuffer$FrameBufferTextureAttachmentSpec_isColorTexture = $this => {
    return !$this.$isDepth && !$this.$isStencil ? 1 : 0;
};
function cbgu_TimSort() {
    let a = this; jl_Object.call(a);
    a.$a0 = null;
    a.$c = null;
    a.$minGallop = 0;
    a.$tmp = null;
    a.$tmpCount = 0;
    a.$stackSize = 0;
    a.$runBase = null;
    a.$runLen = null;
}
let cbgu_TimSort_binarySort = ($a, $lo, $hi, $start, $c) => {
    let var$6, $pivot, $right, var$9, $mid, $n;
    if ($start == $lo)
        $start = $start + 1 | 0;
    while ($start < $hi) {
        var$6 = $a.data;
        $pivot = var$6[$start];
        $right = $start;
        var$9 = $lo;
        while (var$9 < $right) {
            $mid = (var$9 + $right | 0) >>> 1 | 0;
            if ($c.$compare0($pivot, var$6[$mid]) < 0)
                $right = $mid;
            else
                var$9 = $mid + 1 | 0;
        }
        a: {
            b: {
                $n = $start - var$9 | 0;
                switch ($n) {
                    case 1:
                        break b;
                    case 2:
                        var$6[var$9 + 2 | 0] = var$6[var$9 + 1 | 0];
                        break b;
                    default:
                }
                jl_System_fastArraycopy($a, var$9, $a, var$9 + 1 | 0, $n);
                break a;
            }
            var$6[var$9 + 1 | 0] = var$6[var$9];
        }
        var$6[var$9] = $pivot;
        $start = $start + 1 | 0;
    }
},
cbgu_TimSort_countRunAndMakeAscending = ($a, $lo, $hi, $c) => {
    let $runHi, var$6, var$7, var$8;
    $runHi = $lo + 1 | 0;
    if ($runHi == $hi)
        return 1;
    a: {
        $a = $a.data;
        var$6 = $runHi + 1 | 0;
        if ($c.$compare0($a[$runHi], $a[$lo]) >= 0)
            while (var$6 < $hi) {
                if ($c.$compare0($a[var$6], $a[var$6 - 1 | 0]) < 0)
                    break a;
                var$6 = var$6 + 1 | 0;
            }
        else {
            while (var$6 < $hi && $c.$compare0($a[var$6], $a[var$6 - 1 | 0]) < 0) {
                var$6 = var$6 + 1 | 0;
            }
            $runHi = var$6 + (-1) | 0;
            var$7 = $lo;
            while (var$7 < $runHi) {
                $c = $a[var$7];
                $hi = var$7 + 1 | 0;
                $a[var$7] = $a[$runHi];
                var$8 = $runHi + (-1) | 0;
                $a[$runHi] = $c;
                var$7 = $hi;
                $runHi = var$8;
            }
        }
    }
    return var$6 - $lo | 0;
},
cbgu_TimSort_mergeAt = ($this, $i) => {
    let var$2, $base1, var$4, $len1, var$6, $base2, $len2, $k;
    var$2 = $this.$runBase.data;
    $base1 = var$2[$i];
    var$4 = $this.$runLen.data;
    $len1 = var$4[$i];
    var$6 = $i + 1 | 0;
    $base2 = var$2[var$6];
    $len2 = var$4[var$6];
    var$4[$i] = $len1 + $len2 | 0;
    $k = $this.$stackSize;
    if ($i == ($k - 3 | 0)) {
        $i = $i + 2 | 0;
        var$2[var$6] = var$2[$i];
        var$4[var$6] = var$4[$i];
    }
    $this.$stackSize = $k - 1 | 0;
    var$2 = $this.$a0;
    $k = cbgu_TimSort_gallopRight(var$2.data[$base2], var$2, $base1, $len1, 0, $this.$c);
    $i = $base1 + $k | 0;
    $k = $len1 - $k | 0;
    if (!$k)
        return;
    var$2 = $this.$a0;
    $base1 = cbgu_TimSort_gallopLeft(var$2.data[($i + $k | 0) - 1 | 0], var$2, $base2, $len2, $len2 - 1 | 0, $this.$c);
    if (!$base1)
        return;
    if ($k > $base1)
        cbgu_TimSort_mergeHi($this, $i, $k, $base2, $base1);
    else
        cbgu_TimSort_mergeLo($this, $i, $k, $base2, $base1);
},
cbgu_TimSort_gallopLeft = ($key, $a, $base, $len, $hint, $c) => {
    let $lastOfs, $ofs, $m, $maxOfs, var$11;
    $a = $a.data;
    $lastOfs = 0;
    $ofs = 1;
    $m = $base + $hint | 0;
    if ($c.$compare0($key, $a[$m]) > 0) {
        $maxOfs = $len - $hint | 0;
        while (true) {
            var$11 = $rt_compare($ofs, $maxOfs);
            if (var$11 >= 0)
                break;
            if ($c.$compare0($key, $a[$m + $ofs | 0]) <= 0)
                break;
            $len = ($ofs << 1) + 1 | 0;
            if ($len > 0) {
                $lastOfs = $ofs;
                $ofs = $len;
                continue;
            }
            $len = $maxOfs;
            $lastOfs = $ofs;
            $ofs = $len;
        }
        if (var$11 <= 0)
            $maxOfs = $ofs;
        $len = $lastOfs + $hint | 0;
        $hint = $maxOfs + $hint | 0;
    } else {
        $maxOfs = $hint + 1 | 0;
        while (true) {
            $len = $rt_compare($ofs, $maxOfs);
            if ($len >= 0)
                break;
            if ($c.$compare0($key, $a[$m - $ofs | 0]) > 0)
                break;
            $len = ($ofs << 1) + 1 | 0;
            if ($len > 0) {
                $lastOfs = $ofs;
                $ofs = $len;
                continue;
            }
            $len = $maxOfs;
            $lastOfs = $ofs;
            $ofs = $len;
        }
        if ($len <= 0)
            $maxOfs = $ofs;
        $len = $hint - $maxOfs | 0;
        $hint = $hint - $lastOfs | 0;
    }
    $len = $len + 1 | 0;
    while ($len < $hint) {
        $m = $len + (($hint - $len | 0) >>> 1 | 0) | 0;
        if ($c.$compare0($key, $a[$base + $m | 0]) > 0) {
            $len = $m + 1 | 0;
            $m = $hint;
        }
        $hint = $m;
    }
    return $hint;
},
cbgu_TimSort_gallopRight = ($key, $a, $base, $len, $hint, $c) => {
    let $ofs, $lastOfs, $m, $maxOfs, $maxOfs_0;
    $a = $a.data;
    $ofs = 1;
    $lastOfs = 0;
    $m = $base + $hint | 0;
    if ($c.$compare0($key, $a[$m]) >= 0) {
        $maxOfs = $len - $hint | 0;
        while (true) {
            $len = $rt_compare($ofs, $maxOfs);
            if ($len >= 0)
                break;
            if ($c.$compare0($key, $a[$m + $ofs | 0]) < 0)
                break;
            $len = ($ofs << 1) + 1 | 0;
            if ($len > 0) {
                $lastOfs = $ofs;
                $ofs = $len;
                continue;
            }
            $len = $maxOfs;
            $lastOfs = $ofs;
            $ofs = $len;
        }
        if ($len <= 0)
            $maxOfs = $ofs;
        $len = $lastOfs + $hint | 0;
        $hint = $maxOfs + $hint | 0;
    } else {
        $maxOfs_0 = $hint + 1 | 0;
        while (true) {
            $len = $rt_compare($ofs, $maxOfs_0);
            if ($len >= 0)
                break;
            if ($c.$compare0($key, $a[$m - $ofs | 0]) >= 0)
                break;
            $len = ($ofs << 1) + 1 | 0;
            if ($len > 0) {
                $lastOfs = $ofs;
                $ofs = $len;
                continue;
            }
            $len = $maxOfs_0;
            $lastOfs = $ofs;
            $ofs = $len;
        }
        if ($len <= 0)
            $maxOfs_0 = $ofs;
        $len = $hint - $maxOfs_0 | 0;
        $hint = $hint - $lastOfs | 0;
    }
    $len = $len + 1 | 0;
    while ($len < $hint) {
        $m = $len + (($hint - $len | 0) >>> 1 | 0) | 0;
        if ($c.$compare0($key, $a[$base + $m | 0]) < 0)
            $hint = $m;
        else
            $len = $m + 1 | 0;
    }
    return $hint;
},
cbgu_TimSort_mergeLo = ($this, $base1, $len1, $base2, $len2) => {
    let $a, var$6, $tmp_0, $cursor1, var$9, var$10, var$11, $c, $minGallop, $count1, $count2, var$16, var$17, var$18;
    $a = $this.$a0;
    var$6 = $a.data;
    $tmp_0 = cbgu_TimSort_ensureCapacity($this, $len1);
    jl_System_fastArraycopy($a, $base1, $tmp_0, 0, $len1);
    $cursor1 = 0;
    var$9 = $base1 + 1 | 0;
    var$10 = $base2 + 1 | 0;
    var$6[$base1] = var$6[$base2];
    var$11 = $len2 + (-1) | 0;
    if (!var$11) {
        jl_System_fastArraycopy($tmp_0, $cursor1, $a, var$9, $len1);
        return;
    }
    if ($len1 == 1) {
        $tmp_0 = $tmp_0.data;
        jl_System_fastArraycopy($a, var$10, $a, var$9, var$11);
        var$6[var$9 + var$11 | 0] = $tmp_0[$cursor1];
        return;
    }
    $c = $this.$c;
    $minGallop = $this.$minGallop;
    a: {
        b: while (true) {
            $count1 = 0;
            $count2 = 0;
            $base1 = var$9;
            $base2 = var$10;
            var$16 = $cursor1;
            while (true) {
                var$17 = $tmp_0.data;
                if ($c.$compare0(var$6[$base2], var$17[var$16]) < 0) {
                    var$9 = $base1 + 1 | 0;
                    var$10 = $base2 + 1 | 0;
                    var$6[$base1] = var$6[$base2];
                    $count2 = $count2 + 1 | 0;
                    $count1 = 0;
                    var$11 = var$11 + (-1) | 0;
                    if (!var$11)
                        break a;
                    $base2 = var$10;
                    $cursor1 = var$16;
                } else {
                    var$9 = $base1 + 1 | 0;
                    $cursor1 = var$16 + 1 | 0;
                    var$6[$base1] = var$17[var$16];
                    $count1 = $count1 + 1 | 0;
                    $count2 = 0;
                    $len1 = $len1 + (-1) | 0;
                    if ($len1 == 1) {
                        var$16 = $cursor1;
                        var$10 = $base2;
                        break a;
                    }
                }
                if (($count1 | $count2) >= $minGallop)
                    break;
                $base1 = var$9;
                var$16 = $cursor1;
            }
            var$10 = $base2;
            while (true) {
                $base1 = cbgu_TimSort_gallopRight(var$6[var$10], $tmp_0, $cursor1, $len1, 0, $c);
                if (!$base1) {
                    $base2 = var$9;
                    var$16 = $cursor1;
                } else {
                    jl_System_fastArraycopy($tmp_0, $cursor1, $a, var$9, $base1);
                    var$9 = var$9 + $base1 | 0;
                    var$16 = $cursor1 + $base1 | 0;
                    $len1 = $len1 - $base1 | 0;
                    if ($len1 <= 1)
                        break a;
                    $base2 = var$9;
                }
                var$9 = $base2 + 1 | 0;
                $cursor1 = var$10 + 1 | 0;
                var$6[$base2] = var$6[var$10];
                var$11 = var$11 + (-1) | 0;
                if (!var$11) {
                    var$10 = $cursor1;
                    break a;
                }
                $base2 = cbgu_TimSort_gallopLeft(var$17[var$16], $a, $cursor1, var$11, 0, $c);
                if (!$base2) {
                    $len2 = var$9;
                    var$10 = $cursor1;
                } else {
                    jl_System_fastArraycopy($a, $cursor1, $a, var$9, $base2);
                    var$9 = var$9 + $base2 | 0;
                    var$10 = $cursor1 + $base2 | 0;
                    var$11 = var$11 - $base2 | 0;
                    if (!var$11)
                        break b;
                    $len2 = var$9;
                }
                var$9 = $len2 + 1 | 0;
                $cursor1 = var$16 + 1 | 0;
                var$6[$len2] = var$17[var$16];
                $len1 = $len1 + (-1) | 0;
                if ($len1 == 1) {
                    var$16 = $cursor1;
                    break a;
                }
                $minGallop = $minGallop + (-1) | 0;
                if (!(($base1 < 7 ? 0 : 1) | ($base2 < 7 ? 0 : 1)))
                    break;
            }
            if ($minGallop < 0)
                $minGallop = 0;
            $minGallop = $minGallop + 2 | 0;
        }
    }
    if ($minGallop < 1)
        $minGallop = 1;
    $this.$minGallop = $minGallop;
    if ($len1 == 1) {
        jl_System_fastArraycopy($a, var$10, $a, var$9, var$11);
        var$6[var$9 + var$11 | 0] = var$17[var$16];
    } else {
        if (!$len1) {
            var$18 = new jl_IllegalArgumentException;
            jl_Exception__init_(var$18, $rt_s(816));
            $rt_throw(var$18);
        }
        jl_System_fastArraycopy($tmp_0, var$16, $a, var$9, $len1);
    }
},
cbgu_TimSort_mergeHi = ($this, $base1, $len1, $base2, $len2) => {
    let $a, var$6, $tmp_0, $cursor1, $cursor2, $dest, var$11, var$12, $c, $minGallop, $count1, $count2, var$17, var$18;
    $a = $this.$a0;
    var$6 = $a.data;
    $tmp_0 = cbgu_TimSort_ensureCapacity($this, $len2);
    jl_System_fastArraycopy($a, $base2, $tmp_0, 0, $len2);
    $cursor1 = ($base1 + $len1 | 0) - 1 | 0;
    $cursor2 = $len2 - 1 | 0;
    $dest = ($base2 + $len2 | 0) - 1 | 0;
    var$11 = $dest + (-1) | 0;
    var$12 = $cursor1 + (-1) | 0;
    var$6[$dest] = var$6[$cursor1];
    $cursor1 = $len1 + (-1) | 0;
    if (!$cursor1) {
        jl_System_fastArraycopy($tmp_0, 0, $a, var$11 - $cursor2 | 0, $len2);
        return;
    }
    if ($len2 == 1) {
        $tmp_0 = $tmp_0.data;
        $base1 = var$11 - $cursor1 | 0;
        jl_System_fastArraycopy($a, (var$12 - $cursor1 | 0) + 1 | 0, $a, $base1 + 1 | 0, $cursor1);
        var$6[$base1] = $tmp_0[$cursor2];
        return;
    }
    $c = $this.$c;
    $minGallop = $this.$minGallop;
    a: {
        b: while (true) {
            $count1 = 0;
            $count2 = 0;
            $dest = var$11;
            while (true) {
                var$17 = $tmp_0.data;
                if ($c.$compare0(var$17[$cursor2], var$6[var$12]) < 0) {
                    var$11 = $dest + (-1) | 0;
                    $base2 = var$12 + (-1) | 0;
                    var$6[$dest] = var$6[var$12];
                    $count1 = $count1 + 1 | 0;
                    $count2 = 0;
                    $cursor1 = $cursor1 + (-1) | 0;
                    if (!$cursor1)
                        break a;
                    var$12 = $base2;
                    $len1 = $cursor2;
                } else {
                    var$11 = $dest + (-1) | 0;
                    $len1 = $cursor2 + (-1) | 0;
                    var$6[$dest] = var$17[$cursor2];
                    $count2 = $count2 + 1 | 0;
                    $count1 = 0;
                    $len2 = $len2 + (-1) | 0;
                    if ($len2 == 1) {
                        $base2 = var$12;
                        $cursor2 = $len1;
                        break a;
                    }
                }
                if (($count1 | $count2) >= $minGallop)
                    break;
                $dest = var$11;
                $cursor2 = $len1;
            }
            $cursor2 = $len1;
            while (true) {
                $count1 = $cursor1 - cbgu_TimSort_gallopRight(var$17[$cursor2], $a, $base1, $cursor1, $cursor1 - 1 | 0, $c) | 0;
                if (!$count1) {
                    $len1 = var$11;
                    $base2 = var$12;
                } else {
                    var$11 = var$11 - $count1 | 0;
                    $base2 = var$12 - $count1 | 0;
                    $cursor1 = $cursor1 - $count1 | 0;
                    jl_System_fastArraycopy($a, $base2 + 1 | 0, $a, var$11 + 1 | 0, $count1);
                    if (!$cursor1)
                        break a;
                    $len1 = var$11;
                }
                var$11 = $len1 + (-1) | 0;
                var$12 = $cursor2 + (-1) | 0;
                var$6[$len1] = var$17[$cursor2];
                $len2 = $len2 + (-1) | 0;
                if ($len2 == 1) {
                    $cursor2 = var$12;
                    break a;
                }
                $count2 = $len2 - cbgu_TimSort_gallopLeft(var$6[$base2], $tmp_0, 0, $len2, $len2 - 1 | 0, $c) | 0;
                if (!$count2) {
                    $len1 = var$11;
                    $cursor2 = var$12;
                } else {
                    var$11 = var$11 - $count2 | 0;
                    $cursor2 = var$12 - $count2 | 0;
                    $len2 = $len2 - $count2 | 0;
                    jl_System_fastArraycopy($tmp_0, $cursor2 + 1 | 0, $a, var$11 + 1 | 0, $count2);
                    if ($len2 <= 1)
                        break b;
                    $len1 = var$11;
                }
                var$11 = $len1 + (-1) | 0;
                var$12 = $base2 + (-1) | 0;
                var$6[$len1] = var$6[$base2];
                $cursor1 = $cursor1 + (-1) | 0;
                if (!$cursor1) {
                    $base2 = var$12;
                    break a;
                }
                $minGallop = $minGallop + (-1) | 0;
                if (!(($count1 < 7 ? 0 : 1) | ($count2 < 7 ? 0 : 1)))
                    break;
            }
            if ($minGallop < 0)
                $minGallop = 0;
            $minGallop = $minGallop + 2 | 0;
        }
    }
    if ($minGallop < 1)
        $minGallop = 1;
    $this.$minGallop = $minGallop;
    if ($len2 == 1) {
        $base1 = var$11 - $cursor1 | 0;
        jl_System_fastArraycopy($a, ($base2 - $cursor1 | 0) + 1 | 0, $a, $base1 + 1 | 0, $cursor1);
        var$6[$base1] = var$17[$cursor2];
    } else {
        if (!$len2) {
            var$18 = new jl_IllegalArgumentException;
            jl_Exception__init_(var$18, $rt_s(816));
            $rt_throw(var$18);
        }
        jl_System_fastArraycopy($tmp_0, 0, $a, var$11 - ($len2 - 1 | 0) | 0, $len2);
    }
},
cbgu_TimSort_ensureCapacity = ($this, $minCapacity) => {
    let var$2;
    $this.$tmpCount = jl_Math_max($this.$tmpCount, $minCapacity);
    if ($this.$tmp.data.length < $minCapacity) {
        var$2 = $minCapacity | $minCapacity >> 1;
        var$2 = var$2 | var$2 >> 2;
        var$2 = var$2 | var$2 >> 4;
        var$2 = var$2 | var$2 >> 8;
        var$2 = (var$2 | var$2 >> 16) + 1 | 0;
        if (var$2 >= 0)
            $minCapacity = jl_Math_min(var$2, $this.$a0.data.length >>> 1 | 0);
        $this.$tmp = $rt_createArray(jl_Object, $minCapacity);
    }
    return $this.$tmp;
},
jn_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException),
jnc_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException),
jnc_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length5 = 0;
}
let jnc_MalformedInputException_getMessage = $this => {
    let var$1, var$2;
    var$1 = $this.$length5;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(817)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
};
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length6 = 0;
}
let jnc_UnmappableCharacterException_getMessage = $this => {
    let var$1, var$2;
    var$1 = $this.$length6;
    var$2 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$2);
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(818)), var$1);
    return jl_AbstractStringBuilder_toString(var$2);
},
cbggg_HdpiUtils = $rt_classWithoutFields(),
cbggg_HdpiUtils_mode = null,
cbggg_HdpiUtils_$callClinit = () => {
    cbggg_HdpiUtils_$callClinit = $rt_eraseClinit(cbggg_HdpiUtils);
    cbggg_HdpiUtils__clinit_();
},
cbggg_HdpiUtils_glViewport = ($x, $y, $width, $height) => {
    cbggg_HdpiUtils_$callClinit();
    a: {
        b: {
            if (cbggg_HdpiUtils_mode === cbggg_HdpiMode_Logical) {
                if (cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics) != cgxgbt_TeaGraphics_getBackBufferWidth(cbg_Gdx_graphics))
                    break b;
                if (cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics) != cgxgbt_TeaGraphics_getBackBufferHeight(cbg_Gdx_graphics))
                    break b;
            }
            cbg_Gdx_gl.$glViewport($x, $y, $width, $height);
            break a;
        }
        cbg_Gdx_gl.$glViewport(cbggg_HdpiUtils_toBackBufferX($x), cbggg_HdpiUtils_toBackBufferY($y), cbggg_HdpiUtils_toBackBufferX($width), cbggg_HdpiUtils_toBackBufferY($height));
    }
},
cbggg_HdpiUtils_toBackBufferX = $logicalX => {
    cbggg_HdpiUtils_$callClinit();
    return $rt_imul($logicalX, cgxgbt_TeaGraphics_getBackBufferWidth(cbg_Gdx_graphics)) / cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics) | 0;
},
cbggg_HdpiUtils_toBackBufferY = $logicalY => {
    cbggg_HdpiUtils_$callClinit();
    return $rt_imul($logicalY, cgxgbt_TeaGraphics_getBackBufferHeight(cbg_Gdx_graphics)) / cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics) | 0;
},
cbggg_HdpiUtils__clinit_ = () => {
    cbggg_HdpiUtils_mode = cbggg_HdpiMode_Logical;
};
function nmgsa_PBRMatrixAttribute() {
    cbggg_Attribute.call(this);
    this.$matrix = null;
}
let nmgsa_PBRMatrixAttribute_EnvRotation = Long_ZERO,
nmgsa_PBRMatrixAttribute_$callClinit = () => {
    nmgsa_PBRMatrixAttribute_$callClinit = $rt_eraseClinit(nmgsa_PBRMatrixAttribute);
    nmgsa_PBRMatrixAttribute__clinit_();
},
nmgsa_PBRMatrixAttribute__init_0 = ($this, $type) => {
    nmgsa_PBRMatrixAttribute_$callClinit();
    cbggg_Attribute__init_($this, $type);
    $this.$matrix = cbgm_Matrix4__init_();
},
nmgsa_PBRMatrixAttribute__init_ = var_0 => {
    let var_1 = new nmgsa_PBRMatrixAttribute();
    nmgsa_PBRMatrixAttribute__init_0(var_1, var_0);
    return var_1;
},
nmgsa_PBRMatrixAttribute_set = ($this, $matrix) => {
    cbgm_Matrix4_set($this.$matrix, $matrix);
    return $this;
},
nmgsa_PBRMatrixAttribute_copy = $this => {
    return nmgsa_PBRMatrixAttribute_set(nmgsa_PBRMatrixAttribute__init_($this.$type0), $this.$matrix);
},
nmgsa_PBRMatrixAttribute__clinit_ = () => {
    nmgsa_PBRMatrixAttribute_EnvRotation = cbggg_Attribute_register($rt_s(819));
};
function nmgss_CascadeShadowMap() {
    let a = this; jl_Object.call(a);
    a.$lights2 = null;
    a.$attribute0 = null;
}
let cbggge_ShadowMap = $rt_classWithoutFields(0),
nmgsl_DirectionalShadowLight = $rt_classWithoutFields(nmgsl_DirectionalLightEx),
nmgsl_DirectionalShadowLight_SQRT2 = 0.0,
nmgsl_DirectionalShadowLight__clinit_ = () => {
    nmgsl_DirectionalShadowLight_SQRT2 = jl_Math_sqrt(2.0);
};
function nmgss_TransmissionSource() {
    jl_Object.call(this);
    this.$attribute = null;
}
function cbgggm_NodeAnimation() {
    let a = this; jl_Object.call(a);
    a.$node0 = null;
    a.$translation = null;
    a.$rotation = null;
    a.$scaling = null;
}
function cbgggm_NodeKeyframe() {
    let a = this; jl_Object.call(a);
    a.$keytime = 0.0;
    a.$value2 = null;
}
let cbgggm_NodeKeyframe__init_0 = ($this, $t, $v) => {
    $this.$keytime = $t;
    $this.$value2 = $v;
},
cbgggm_NodeKeyframe__init_ = (var_0, var_1) => {
    let var_2 = new cbgggm_NodeKeyframe();
    cbgggm_NodeKeyframe__init_0(var_2, var_0, var_1);
    return var_2;
};
function jnci_BufferedEncoder() {
    let a = this; jnc_CharsetEncoder.call(a);
    a.$inArray0 = null;
    a.$outArray = null;
}
let jnci_BufferedEncoder_encodeLoop = ($this, $in, $out) => {
    let $inArray, $inPos, $inSize, $outArray, var$7, $i, var$9, $outPos, $result, $outSize, $controller;
    $inArray = $this.$inArray0;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray;
    var$7 = $this;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$9 = $inArray.data;
                    var$9[$i - $inPos | 0] = var$9[$i];
                    $i = $i + 1 | 0;
                }
                var$9 = $inArray.data;
                $outPos = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + $outPos | 0, var$9.length);
                jn_CharBuffer_get($in, $inArray, $outPos, $inSize - $outPos | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                $result = !jn_Buffer_hasRemaining($in) && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                break a;
            }
            var$9 = $outArray.data;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$9.length);
            $controller = new jnci_BufferedEncoder$Controller;
            $controller.$in0 = $in;
            $controller.$out0 = $out;
            $result = jnci_UTF8Encoder_arrayEncode(var$7, $inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
            $inPos = $controller.$inPosition0;
            $outPos = $controller.$outPosition0;
            if ($result === null) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize)
                    $result = jnc_CoderResult_UNDERFLOW;
                else if (!jn_Buffer_hasRemaining($out) && $inPos >= $inSize)
                    $result = jnc_CoderResult_OVERFLOW;
            }
            jn_ByteBuffer_put0($out, $outArray, 0, $outPos);
            if ($result !== null)
                break;
        }
    }
    jn_Buffer_position($in, $in.$position0 - ($inSize - $inPos | 0) | 0);
    return $result;
},
jnci_UTF8Encoder = $rt_classWithoutFields(jnci_BufferedEncoder),
jnci_UTF8Encoder_arrayEncode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $ch, $low, var$13, $codePoint;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                $low = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if (jnci_BufferedEncoder$Controller_hasMoreOutput($controller, 2))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $inPos = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                $low = $inPos + 1 | 0;
                var$10[$inPos] = (128 | $ch & 63) << 24 >> 24;
            } else if (!jl_Character_isSurrogate($ch)) {
                if (($outPos + 3 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if (jnci_BufferedEncoder$Controller_hasMoreOutput($controller, 3))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$13 = $outPos + 1 | 0;
                var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                $inPos = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch >> 6 & 63) << 24 >> 24;
                $low = $inPos + 1 | 0;
                var$10[$inPos] = (128 | $ch & 63) << 24 >> 24;
            } else {
                if (!jl_Character_isHighSurrogate($ch)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (var$9 >= $inSize) {
                    if (jn_Buffer_hasRemaining($controller.$in0))
                        break a;
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                $inPos = var$9 + 1 | 0;
                $low = var$10[var$9];
                if (!jl_Character_isLowSurrogate($low)) {
                    var$9 = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    var$9 = $inPos + (-2) | 0;
                    if (jnci_BufferedEncoder$Controller_hasMoreOutput($controller, 4))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $codePoint = jl_Character_toCodePoint($ch, $low);
                $low = $outPos + 1 | 0;
                var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                var$13 = $low + 1 | 0;
                var$10[$low] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                $outPos = var$13 + 1 | 0;
                var$10[var$13] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                $low = $outPos + 1 | 0;
                var$10[$outPos] = (128 | $codePoint & 63) << 24 >> 24;
                var$9 = $inPos;
            }
            $inPos = var$9;
            $outPos = $low;
        }
        var$9 = $inPos;
    }
    $controller.$inPosition0 = var$9;
    $controller.$outPosition0 = $outPos;
    return $result;
},
cbggg_HdpiMode = $rt_classWithoutFields(jl_Enum),
cbggg_HdpiMode_Logical = null,
cbggg_HdpiMode_Pixels = null,
cbggg_HdpiMode_$VALUES = null,
cbggg_HdpiMode__clinit_ = () => {
    let var$1, var$2, var$3;
    var$1 = new cbggg_HdpiMode;
    jl_Enum__init_(var$1, $rt_s(820), 0);
    cbggg_HdpiMode_Logical = var$1;
    var$1 = new cbggg_HdpiMode;
    jl_Enum__init_(var$1, $rt_s(821), 1);
    cbggg_HdpiMode_Pixels = var$1;
    var$2 = $rt_createArray(cbggg_HdpiMode, 2);
    var$3 = var$2.data;
    var$3[0] = cbggg_HdpiMode_Logical;
    var$3[1] = var$1;
    cbggg_HdpiMode_$VALUES = var$2;
};
function cgxgbta_AssetLoadImpl$6() {
    let a = this; jl_Object.call(a);
    a.$val$listener0 = null;
    a.$val$path1 = null;
    a.$val$fileHandle = null;
    a.$this$08 = null;
}
let cgxgbta_AssetLoadImpl$6_onProgress = ($this, $total, $loaded) => {
    let var$3;
    var$3 = $this.$val$listener0;
    if (var$3 !== null)
        var$3.$onProgress($total, $loaded);
},
cgxgbta_AssetLoadImpl$6_onSuccess = ($this, var$1, var$2) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9, $$je;
    a: {
        var$1 = var$2;
        var$2 = $this.$this$08.$assetInQueue;
        var$3 = $this.$val$path1;
        var$2 = var$2.$backingMap;
        var$4 = 0;
        var$5 = null;
        if (var$3 === null) {
            var$6 = var$2.$elementData.data[0];
            while (var$6 !== null) {
                if (var$6.$key === null)
                    break a;
                var$3 = var$6.$next2;
                var$5 = var$6;
                var$6 = var$3;
            }
        } else {
            var$7 = jl_String_hashCode(var$3);
            var$8 = var$2.$elementData.data;
            var$4 = var$7 & (var$8.length - 1 | 0);
            var$6 = var$8[var$4];
            while (var$6 !== null && !(var$6.$origKeyHash == var$7 && ju_HashMap_areEqualKeys(var$3, var$6.$key))) {
                var$9 = var$6.$next2;
                var$5 = var$6;
                var$6 = var$9;
            }
        }
    }
    if (var$6 === null)
        var$6 = null;
    else {
        if (var$5 !== null)
            var$5.$next2 = var$6.$next2;
        else
            var$2.$elementData.data[var$4] = var$6.$next2;
        var$2.$modCount0 = var$2.$modCount0 + 1 | 0;
        var$2.$elementCount = var$2.$elementCount - 1 | 0;
    }
    var$8 = cgxgbtdt_TypedArrays_toByteArray(var$1.$data13);
    var$2 = $this.$val$fileHandle;
    var$3 = cgxgbt_TeaFiles_getFileDB(var$2.$teaFiles, var$2.$type1);
    var$6 = ji_ByteArrayOutputStream__init_0(jl_Math_max(512, jl_Math_min(4096, 8192)));
    var$5 = new cgxgbtf_FileDB$1;
    var$5.$this$012 = var$3;
    var$5.$val$buffer = var$6;
    var$5.$val$file = var$2;
    var$5.$val$append = 0;
    var$5.$val$bufferSize = 4096;
    b: {
        c: {
            try {
                cgxgbtf_FileDB$1_write(var$5, var$8);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    var$1 = $$je;
                    break c;
                } else{
                    var$1 = $$je;
                    break b;
                }
            }
            cbgu_StreamUtils_closeQuietly(var$5);
            var$2 = $this.$val$listener0;
            if (var$2 !== null)
                var$2.$onSuccess($this.$val$path1, var$1);
            return;
        }
        try {
            var$2 = new cbgu_GdxRuntimeException;
            var$3 = jl_String_valueOf($this.$val$fileHandle);
            var$6 = jl_String_valueOf(cgxgbt_TeaFileHandle_type($this.$val$fileHandle));
            var$9 = jl_StringBuilder__init_();
            jl_StringBuilder_append4(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(822)), var$3), $rt_s(606)), var$6), 41);
            cbgu_GdxRuntimeException__init_1(var$2, jl_StringBuilder_toString(var$9), var$1);
            $rt_throw(var$2);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$1 = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly(var$5);
    $rt_throw(var$1);
},
nmgss_MirrorSource = $rt_classWithoutFields();
function jnc_UnsupportedCharsetException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName0 = null;
}
let ji_UnsupportedEncodingException = $rt_classWithoutFields(ji_IOException),
jnc_Charset$Charsets = $rt_classWithoutFields(),
jnc_Charset$Charsets_value = null,
jnc_Charset$Charsets_$callClinit = () => {
    jnc_Charset$Charsets_$callClinit = $rt_eraseClinit(jnc_Charset$Charsets);
    jnc_Charset$Charsets__clinit_();
},
jnc_Charset$Charsets__clinit_ = () => {
    let $charsets, var$2, var$3, $charset, var$5, var$6;
    jnc_Charset$Charsets_value = ju_HashMap__init_();
    $charsets = $rt_createArray(jnc_Charset, 6).data;
    jnc_StandardCharsets_$callClinit();
    $charsets[0] = jnc_StandardCharsets_UTF_8;
    $charsets[1] = jnc_StandardCharsets_US_ASCII;
    $charsets[2] = jnc_StandardCharsets_ISO_8859_1;
    $charsets[3] = jnc_StandardCharsets_UTF_16;
    $charsets[4] = jnc_StandardCharsets_UTF_16BE;
    $charsets[5] = jnc_StandardCharsets_UTF_16LE;
    var$2 = $charsets.length;
    var$3 = 0;
    while (var$3 < var$2) {
        $charset = $charsets[var$3];
        var$5 = jnc_Charset$Charsets_value;
        var$6 = $charset.$canonicalName;
        ju_HashMap_put(var$5, var$6, $charset);
        var$3 = var$3 + 1 | 0;
    }
},
jnc_StandardCharsets = $rt_classWithoutFields(),
jnc_StandardCharsets_UTF_8 = null,
jnc_StandardCharsets_US_ASCII = null,
jnc_StandardCharsets_ISO_8859_1 = null,
jnc_StandardCharsets_UTF_16 = null,
jnc_StandardCharsets_UTF_16BE = null,
jnc_StandardCharsets_UTF_16LE = null,
jnc_StandardCharsets_$callClinit = () => {
    jnc_StandardCharsets_$callClinit = $rt_eraseClinit(jnc_StandardCharsets);
    jnc_StandardCharsets__clinit_();
},
jnc_StandardCharsets__clinit_ = () => {
    let var$1;
    jnci_UTF8Charset_$callClinit();
    jnc_StandardCharsets_UTF_8 = jnci_UTF8Charset_INSTANCE;
    var$1 = new jnci_AsciiCharset;
    jnc_Charset__init_(var$1, $rt_s(823), $rt_createArray(jl_String, 0));
    jnc_StandardCharsets_US_ASCII = var$1;
    var$1 = new jnci_Iso8859Charset;
    jnc_Charset__init_(var$1, $rt_s(824), $rt_createArray(jl_String, 0));
    jnc_StandardCharsets_ISO_8859_1 = var$1;
    jnc_StandardCharsets_UTF_16 = jnci_UTF16Charset__init_($rt_s(825), 1, 0);
    jnc_StandardCharsets_UTF_16BE = jnci_UTF16Charset__init_($rt_s(826), 0, 0);
    jnc_StandardCharsets_UTF_16LE = jnci_UTF16Charset__init_($rt_s(827), 0, 1);
},
jnci_AsciiCharset = $rt_classWithoutFields(jnc_Charset),
jnci_AsciiCharset_newDecoder = $this => {
    let var$1;
    var$1 = new jnci_AsciiDecoder;
    jnci_BufferedDecoder__init_(var$1, $this, 1.0, 1.0);
    return var$1;
},
jnci_Iso8859Charset = $rt_classWithoutFields(jnc_Charset),
jnci_Iso8859Charset_newDecoder = $this => {
    let var$1;
    var$1 = new jnci_Iso8859Decoder;
    jnci_BufferedDecoder__init_(var$1, $this, 1.0, 1.0);
    return var$1;
};
function jnci_UTF16Charset() {
    let a = this; jnc_Charset.call(a);
    a.$bom0 = 0;
    a.$littleEndian3 = 0;
}
let jnci_UTF16Charset__init_0 = ($this, $canonicalName, $bom, $littleEndian) => {
    jnc_Charset__init_($this, $canonicalName, $rt_createArray(jl_String, 0));
    $this.$bom0 = $bom;
    $this.$littleEndian3 = $littleEndian;
},
jnci_UTF16Charset__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jnci_UTF16Charset();
    jnci_UTF16Charset__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jnci_UTF16Charset_newDecoder = $this => {
    let var$1, var$2, var$3;
    var$1 = new jnci_UTF16Decoder;
    var$2 = $this.$bom0;
    var$3 = $this.$littleEndian3;
    jnci_BufferedDecoder__init_(var$1, $this, 0.5, 0.5);
    var$1.$bom = var$2;
    var$1.$littleEndian0 = var$3;
    return var$1;
};
function ji_ByteArrayInputStream() {
    let a = this; ji_InputStream.call(a);
    a.$buf0 = null;
    a.$pos = 0;
    a.$mark1 = 0;
    a.$count3 = 0;
}
let ji_ByteArrayInputStream__init_ = ($this, $buf) => {
    let var$2;
    var$2 = $buf.data.length;
    $this.$buf0 = $buf;
    $this.$pos = 0;
    $this.$mark1 = 0;
    $this.$count3 = 0 + var$2 | 0;
},
ji_ByteArrayInputStream__init_0 = var_0 => {
    let var_1 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_(var_1, var_0);
    return var_1;
},
ji_ByteArrayInputStream_read = ($this, $b, $off, $len) => {
    let $bytesToRead, $i, var$6, var$7, var$8;
    $bytesToRead = jl_Math_min($len, $this.$count3 - $this.$pos | 0);
    $i = 0;
    while ($i < $bytesToRead) {
        var$6 = $b.data;
        $len = $off + 1 | 0;
        var$7 = $this.$buf0.data;
        var$8 = $this.$pos;
        $this.$pos = var$8 + 1 | 0;
        var$6[$off] = var$7[var$8];
        $i = $i + 1 | 0;
        $off = $len;
    }
    if ($bytesToRead <= 0)
        $bytesToRead = (-1);
    return $bytesToRead;
},
ji_ByteArrayInputStream_available = $this => {
    return $this.$count3 - $this.$pos | 0;
},
ji_ByteArrayInputStream_close = $this => {
    return;
};
function jnci_BufferedEncoder$Controller() {
    let a = this; jl_Object.call(a);
    a.$in0 = null;
    a.$out0 = null;
    a.$inPosition0 = 0;
    a.$outPosition0 = 0;
}
let jnci_BufferedEncoder$Controller_hasMoreOutput = ($this, $sz) => {
    return jn_Buffer_remaining($this.$out0) < $sz ? 0 : 1;
};
function cbggge_PointLight() {
    let a = this; cbggge_BaseLight.call(a);
    a.$position2 = null;
    a.$intensity = 0.0;
}
let cbggge_PointLight__init_ = $this => {
    cbggge_BaseLight__init_($this);
    $this.$position2 = cbgm_Vector3__init_();
},
cbggge_PointLight__init_0 = () => {
    let var_0 = new cbggge_PointLight();
    cbggge_PointLight__init_(var_0);
    return var_0;
},
cbggge_PointLight_set = ($this, $copyFrom) => {
    let var$2, var$3, var$4;
    var$2 = $copyFrom.$color1;
    var$3 = $copyFrom.$position2;
    var$4 = $copyFrom.$intensity;
    if (var$2 !== null)
        cbgg_Color_set0($this.$color1, var$2);
    if (var$3 !== null)
        cbgm_Vector3_set0($this.$position2, var$3);
    $this.$intensity = var$4;
    return $this;
},
cbggge_PointLight_equals = ($this, $other) => {
    let var$2;
    a: {
        b: {
            if ($other !== null) {
                if ($other === $this)
                    break b;
                if (cbgg_Color_equals($this.$color1, $other.$color1) && cbgm_Vector3_equals($this.$position2, $other.$position2) && $this.$intensity === $other.$intensity)
                    break b;
            }
            var$2 = 0;
            break a;
        }
        var$2 = 1;
    }
    return var$2;
};
function nmgsl_PointLightEx() {
    cbggge_PointLight.call(this);
    this.$range = null;
}
function cbggge_SpotLight() {
    let a = this; cbggge_BaseLight.call(a);
    a.$position4 = null;
    a.$direction1 = null;
    a.$intensity0 = 0.0;
    a.$cutoffAngle = 0.0;
    a.$exponent = 0.0;
}
let cbggge_SpotLight__init_0 = $this => {
    cbggge_BaseLight__init_($this);
    $this.$position4 = cbgm_Vector3__init_();
    $this.$direction1 = cbgm_Vector3__init_();
},
cbggge_SpotLight__init_ = () => {
    let var_0 = new cbggge_SpotLight();
    cbggge_SpotLight__init_0(var_0);
    return var_0;
},
cbggge_SpotLight_set = ($this, $copyFrom) => {
    let var$2, var$3, var$4, var$5, var$6, var$7;
    var$2 = $copyFrom.$color1;
    var$3 = $copyFrom.$position4;
    var$4 = $copyFrom.$direction1;
    var$5 = $copyFrom.$intensity0;
    var$6 = $copyFrom.$cutoffAngle;
    var$7 = $copyFrom.$exponent;
    if (var$2 !== null)
        cbgg_Color_set0($this.$color1, var$2);
    if (var$3 !== null)
        cbgm_Vector3_set0($this.$position4, var$3);
    if (var$4 !== null)
        cbgm_Vector3_nor(cbgm_Vector3_set0($this.$direction1, var$4));
    $this.$intensity0 = var$5;
    $this.$cutoffAngle = var$6;
    $this.$exponent = var$7;
    return $this;
},
cbggge_SpotLight_equals = ($this, $other) => {
    let var$2;
    a: {
        b: {
            if ($other !== null) {
                if ($other === $this)
                    break b;
                if (cbgg_Color_equals($this.$color1, $other.$color1) && cbgm_Vector3_equals($this.$position4, $other.$position4) && cbgm_Vector3_equals($this.$direction1, $other.$direction1) && cbgm_MathUtils_isEqual($this.$intensity0, $other.$intensity0) && cbgm_MathUtils_isEqual($this.$cutoffAngle, $other.$cutoffAngle) && cbgm_MathUtils_isEqual($this.$exponent, $other.$exponent))
                    break b;
            }
            var$2 = 0;
            break a;
        }
        var$2 = 1;
    }
    return var$2;
};
function nmgsl_SpotLightEx() {
    cbggge_SpotLight.call(this);
    this.$range0 = null;
}
let cbggg_BitmapFontCache$addText$lambda$_31_0 = $rt_classWithoutFields(),
cbggg_BitmapFontCache$addText$lambda$_31_0_get = var$0 => {
    let var$1;
    var$1 = new cbggg_GlyphLayout;
    cbggg_GlyphLayout_$callClinit();
    var$1.$runs = cbgu_Array__init_0(1);
    var$1.$colors = cbgu_IntArray__init_1(2);
    return var$1;
},
cbgggu_MeshPartBuilder = $rt_classWithoutFields(0);
function cbgggu_MeshBuilder() {
    let a = this; jl_Object.call(a);
    a.$vertTmp1 = null;
    a.$vertTmp2 = null;
    a.$vertTmp3 = null;
    a.$vertTmp4 = null;
    a.$tempC1 = null;
    a.$attributes4 = null;
    a.$vertices = null;
    a.$indices = null;
    a.$stride = 0;
    a.$vindex = 0;
    a.$istart = 0;
    a.$posOffset = 0;
    a.$posSize = 0;
    a.$norOffset = 0;
    a.$biNorOffset = 0;
    a.$tangentOffset = 0;
    a.$colOffset = 0;
    a.$colSize = 0;
    a.$cpOffset = 0;
    a.$uvOffset = 0;
    a.$part0 = null;
    a.$parts0 = null;
    a.$color4 = null;
    a.$hasColor = 0;
    a.$primitiveType0 = 0;
    a.$uOffset = 0.0;
    a.$uScale = 0.0;
    a.$vOffset = 0.0;
    a.$vScale = 0.0;
    a.$hasUVTransform = 0;
    a.$vertex2 = null;
    a.$vertexTransformationEnabled = 0;
    a.$positionTransform = null;
    a.$normalTransform = null;
    a.$bounds = null;
    a.$lastIndex = 0;
    a.$tmpNormal = null;
}
let cbgggu_MeshBuilder_tmpIndices = null,
cbgggu_MeshBuilder_tmpVertices = null,
cbgggu_MeshBuilder_vTmp = null,
cbgggu_MeshBuilder_indicesMap = null,
cbgggu_MeshBuilder_$callClinit = () => {
    cbgggu_MeshBuilder_$callClinit = $rt_eraseClinit(cbgggu_MeshBuilder);
    cbgggu_MeshBuilder__clinit_();
},
cbgggu_MeshBuilder_begin = ($this, $attributes, $primitiveType) => {
    let var$3, var$4, $a;
    if ($this.$attributes4 !== null) {
        $attributes = new jl_RuntimeException;
        jl_Exception__init_($attributes, $rt_s(621));
        $rt_throw($attributes);
    }
    $this.$attributes4 = $attributes;
    cbgu_FloatArray_clear($this.$vertices);
    cbgu_ShortArray_clear($this.$indices);
    cbgu_Array_clear($this.$parts0);
    $this.$vindex = 0;
    $this.$lastIndex = (-1);
    $this.$istart = 0;
    $this.$part0 = null;
    var$3 = $attributes.$vertexSize / 4 | 0;
    $this.$stride = var$3;
    var$4 = $this.$vertex2;
    if (!(var$4 !== null && var$4.data.length >= var$3))
        $this.$vertex2 = $rt_createFloatArray(var$3);
    $a = cbgg_VertexAttributes_findByUsage($attributes, 1);
    if ($a === null) {
        $attributes = new cbgu_GdxRuntimeException;
        jl_Exception__init_($attributes, $rt_s(828));
        $rt_throw($attributes);
    }
    $this.$posOffset = $a.$offset / 4 | 0;
    $this.$posSize = $a.$numComponents;
    $a = cbgg_VertexAttributes_findByUsage($attributes, 8);
    $this.$norOffset = $a === null ? (-1) : $a.$offset / 4 | 0;
    $a = cbgg_VertexAttributes_findByUsage($attributes, 256);
    $this.$biNorOffset = $a === null ? (-1) : $a.$offset / 4 | 0;
    $a = cbgg_VertexAttributes_findByUsage($attributes, 128);
    $this.$tangentOffset = $a === null ? (-1) : $a.$offset / 4 | 0;
    $a = cbgg_VertexAttributes_findByUsage($attributes, 2);
    $this.$colOffset = $a === null ? (-1) : $a.$offset / 4 | 0;
    $this.$colSize = $a !== null ? $a.$numComponents : 0;
    $a = cbgg_VertexAttributes_findByUsage($attributes, 4);
    $this.$cpOffset = $a === null ? (-1) : $a.$offset / 4 | 0;
    $attributes = cbgg_VertexAttributes_findByUsage($attributes, 16);
    $this.$uvOffset = $attributes === null ? (-1) : $attributes.$offset / 4 | 0;
    cbgggu_MeshBuilder_setColor($this, null);
    cbgggu_MeshBuilder_setVertexTransform($this, null);
    cbgggu_MeshBuilder_setUVRange($this, null);
    $this.$primitiveType0 = $primitiveType;
    cbgmc_BoundingBox_inf($this.$bounds);
},
cbgggu_MeshBuilder_endpart = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = $this.$part0;
    if (var$1 !== null) {
        var$2 = $this.$bounds;
        cbgm_Vector3_set0(var$1.$center, var$2.$cnt);
        var$1 = $this.$bounds;
        cbgm_Vector3_scl(cbgm_Vector3_set0($this.$part0.$halfExtents, var$1.$dim), 0.5);
        var$1 = $this.$part0;
        var$2 = var$1.$halfExtents;
        var$3 = var$2.$x;
        var$3 = var$3 * var$3;
        var$4 = var$2.$y;
        var$3 = var$3 + var$4 * var$4;
        var$4 = var$2.$z;
        var$1.$radius = jl_Math_sqrt(var$3 + var$4 * var$4);
        cbgmc_BoundingBox_inf($this.$bounds);
        var$1 = $this.$part0;
        var$5 = $this.$istart;
        var$1.$offset0 = var$5;
        var$6 = $this.$indices.$size5;
        var$1.$size9 = var$6 - var$5 | 0;
        $this.$istart = var$6;
        $this.$part0 = null;
    }
},
cbgggu_MeshBuilder_setColor = ($this, $color) => {
    let var$2, var$3;
    var$2 = $this.$color4;
    var$3 = $color === null ? 0 : 1;
    $this.$hasColor = var$3;
    if (!var$3)
        $color = cbgg_Color_WHITE;
    cbgg_Color_set0(var$2, $color);
},
cbgggu_MeshBuilder_setUVRange = ($this, $region) => {
    let var$2, var$3, var$4, var$5;
    if ($region === null) {
        $this.$hasUVTransform = 0;
        $this.$vOffset = 0.0;
        $this.$uOffset = 0.0;
        $this.$vScale = 1.0;
        $this.$uScale = 1.0;
    } else {
        $this.$hasUVTransform = 1;
        var$2 = $region.$getU();
        var$3 = $region.$getV();
        var$4 = $region.$getU2();
        var$5 = $region.$getV2();
        $this.$uOffset = var$2;
        $this.$vOffset = var$3;
        $this.$uScale = var$4 - var$2;
        $this.$vScale = var$5 - var$3;
        $this.$hasUVTransform = cbgm_MathUtils_isZero(var$2) && cbgm_MathUtils_isZero(var$3) && cbgm_MathUtils_isEqual(var$4, 1.0) && cbgm_MathUtils_isEqual(var$5, 1.0) ? 0 : 1;
    }
},
cbgggu_MeshBuilder_setVertexTransform = ($this, $transform) => {
    let var$2;
    var$2 = $transform === null ? 0 : 1;
    $this.$vertexTransformationEnabled = var$2;
    if (!var$2) {
        cbgm_Matrix4_idt($this.$positionTransform);
        cbgm_Matrix3_idt($this.$normalTransform);
    } else {
        cbgm_Matrix4_set($this.$positionTransform, $transform);
        cbgm_Matrix3_transpose(cbgm_Matrix3_inv(cbgm_Matrix3_set($this.$normalTransform, $transform)));
    }
},
cbgggu_MeshBuilder_ensureVertices = ($this, $numVertices) => {
    cbgu_FloatArray_ensureCapacity($this.$vertices, $rt_imul($this.$stride, $numVertices));
},
cbgggu_MeshBuilder_ensureIndices = ($this, $numIndices) => {
    let var$2, var$3;
    var$2 = $this.$indices;
    if ($numIndices < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_(var$3);
        jl_AbstractStringBuilder_append(var$3, $rt_s(410));
        jl_Exception__init_(var$2, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$3, $numIndices)));
        $rt_throw(var$2);
    }
    $numIndices = var$2.$size5 + $numIndices | 0;
    if ($numIndices > var$2.$items2.data.length)
        cbgu_ShortArray_resize(var$2, jl_Math_max(jl_Math_max(8, $numIndices), var$2.$size5 * 1.75 | 0));
},
cbgggu_MeshBuilder_ensureRectangleIndices = ($this, $numRectangles) => {
    let var$2;
    var$2 = $this.$primitiveType0;
    if (!var$2)
        cbgggu_MeshBuilder_ensureIndices($this, 4 * $numRectangles | 0);
    else if (var$2 != 1)
        cbgggu_MeshBuilder_ensureIndices($this, 6 * $numRectangles | 0);
    else
        cbgggu_MeshBuilder_ensureIndices($this, 8 * $numRectangles | 0);
},
cbgggu_MeshBuilder_transformNormal = ($values, $offset, $size, $transform) => {
    let var$5, var$6, var$7, var$8;
    cbgggu_MeshBuilder_$callClinit();
    if ($size > 2) {
        $values = $values.data;
        var$5 = cbgggu_MeshBuilder_vTmp;
        var$6 = $values[$offset];
        $size = $offset + 1 | 0;
        var$7 = $values[$size];
        var$8 = $offset + 2 | 0;
        cbgm_Vector3_nor(cbgm_Vector3_mul0(cbgm_Vector3_set(var$5, var$6, var$7, $values[var$8]), $transform));
        $transform = cbgggu_MeshBuilder_vTmp;
        $values[$offset] = $transform.$x;
        $values[$size] = $transform.$y;
        $values[var$8] = $transform.$z;
    } else if ($size <= 1) {
        $values = $values.data;
        $values[$offset] = (cbgm_Vector3_nor(cbgm_Vector3_mul0(cbgm_Vector3_set(cbgggu_MeshBuilder_vTmp, $values[$offset], 0.0, 0.0), $transform))).$x;
    } else {
        $values = $values.data;
        var$5 = cbgggu_MeshBuilder_vTmp;
        var$6 = $values[$offset];
        $size = $offset + 1 | 0;
        cbgm_Vector3_nor(cbgm_Vector3_mul0(cbgm_Vector3_set(var$5, var$6, $values[$size], 0.0), $transform));
        $transform = cbgggu_MeshBuilder_vTmp;
        $values[$offset] = $transform.$x;
        $values[$size] = $transform.$y;
    }
},
cbgggu_MeshBuilder_addVertex = ($this, $values, $offset) => {
    let var$3, $o, var$5, var$6, $x, $z, var$9, $y, var$11;
    var$3 = $this.$vertices;
    $o = var$3.$size2;
    cbgu_FloatArray_addAll(var$3, $values, $offset, $this.$stride);
    var$5 = $this.$vindex;
    $this.$vindex = var$5 + 1 | 0;
    $this.$lastIndex = var$5;
    if ($this.$vertexTransformationEnabled) {
        $values = $this.$vertices.$items0;
        $offset = $o + $this.$posOffset | 0;
        var$5 = $this.$posSize;
        var$3 = $this.$positionTransform;
        cbgggu_MeshBuilder_$callClinit();
        if (var$5 > 2) {
            $values = $values.data;
            var$6 = cbgggu_MeshBuilder_vTmp;
            $x = $values[$offset];
            var$5 = $offset + 1 | 0;
            $z = $values[var$5];
            var$9 = $offset + 2 | 0;
            cbgm_Vector3_mul(cbgm_Vector3_set(var$6, $x, $z, $values[var$9]), var$3);
            var$3 = cbgggu_MeshBuilder_vTmp;
            $values[$offset] = var$3.$x;
            $values[var$5] = var$3.$y;
            $values[var$9] = var$3.$z;
        } else if (var$5 <= 1) {
            $values = $values.data;
            $values[$offset] = (cbgm_Vector3_mul(cbgm_Vector3_set(cbgggu_MeshBuilder_vTmp, $values[$offset], 0.0, 0.0), var$3)).$x;
        } else {
            $values = $values.data;
            var$6 = cbgggu_MeshBuilder_vTmp;
            $x = $values[$offset];
            var$5 = $offset + 1 | 0;
            cbgm_Vector3_mul(cbgm_Vector3_set(var$6, $x, $values[var$5], 0.0), var$3);
            var$3 = cbgggu_MeshBuilder_vTmp;
            $values[$offset] = var$3.$x;
            $values[var$5] = var$3.$y;
        }
        $offset = $this.$norOffset;
        if ($offset >= 0)
            cbgggu_MeshBuilder_transformNormal($this.$vertices.$items0, $o + $offset | 0, 3, $this.$normalTransform);
        $offset = $this.$biNorOffset;
        if ($offset >= 0)
            cbgggu_MeshBuilder_transformNormal($this.$vertices.$items0, $o + $offset | 0, 3, $this.$normalTransform);
        $offset = $this.$tangentOffset;
        if ($offset >= 0)
            cbgggu_MeshBuilder_transformNormal($this.$vertices.$items0, $o + $offset | 0, 3, $this.$normalTransform);
    }
    $values = $this.$vertices.$items0.data;
    $offset = $o + $this.$posOffset | 0;
    $x = $values[$offset];
    var$9 = $this.$posSize;
    $y = var$9 <= 1 ? 0.0 : $values[$offset + 1 | 0];
    $z = var$9 <= 2 ? 0.0 : $values[$offset + 2 | 0];
    var$3 = $this.$bounds;
    var$6 = var$3.$min1;
    var$6 = cbgm_Vector3_set(var$6, cbgmc_BoundingBox_min(var$6.$x, $x), cbgmc_BoundingBox_min(var$3.$min1.$y, $y), cbgmc_BoundingBox_min(var$3.$min1.$z, $z));
    var$11 = var$3.$max1;
    cbgmc_BoundingBox_set(var$3, var$6, cbgm_Vector3_set(var$11, cbgmc_BoundingBox_max(var$11.$x, $x), cbgmc_BoundingBox_max(var$3.$max1.$y, $y), cbgmc_BoundingBox_max(var$3.$max1.$z, $z)));
    if ($this.$hasColor) {
        $offset = $this.$colOffset;
        if ($offset >= 0) {
            $values = $this.$vertices.$items0.data;
            $offset = $o + $offset | 0;
            $x = $values[$offset];
            var$3 = $this.$color4;
            $values[$offset] = $x * var$3.$r;
            var$5 = $offset + 1 | 0;
            $values[var$5] = $values[var$5] * var$3.$g;
            var$5 = $offset + 2 | 0;
            $values[var$5] = $values[var$5] * var$3.$b;
            if ($this.$colSize > 3) {
                $offset = $offset + 3 | 0;
                $values[$offset] = $values[$offset] * var$3.$a;
            }
        } else {
            $offset = $this.$cpOffset;
            if ($offset >= 0) {
                cbgg_Color_abgr8888ToColor($this.$tempC1, $this.$vertices.$items0.data[$o + $offset | 0]);
                $values = $this.$vertices.$items0.data;
                $offset = $o + $this.$cpOffset | 0;
                var$3 = $this.$tempC1;
                var$6 = $this.$color4;
                var$3.$r = var$3.$r * var$6.$r;
                var$3.$g = var$3.$g * var$6.$g;
                var$3.$b = var$3.$b * var$6.$b;
                var$3.$a = var$3.$a * var$6.$a;
                $values[$offset] = cbgg_Color_toFloatBits(cbgg_Color_clamp(var$3));
            }
        }
    }
    if ($this.$hasUVTransform) {
        $offset = $this.$uvOffset;
        if ($offset >= 0) {
            $values = $this.$vertices.$items0.data;
            $offset = $o + $offset | 0;
            $values[$offset] = $this.$uOffset + $this.$uScale * $values[$offset];
            $offset = $offset + 1 | 0;
            $values[$offset] = $this.$vOffset + $this.$vScale * $values[$offset];
        }
    }
},
cbgggu_MeshBuilder_vertex0 = ($this, $pos, $nor, $col, $uv) => {
    let var$5, var$6, var$7, var$8;
    if ($this.$vindex > 65535) {
        $pos = new cbgu_GdxRuntimeException;
        jl_Exception__init_($pos, $rt_s(829));
        $rt_throw($pos);
    }
    var$5 = $this.$vertex2.data;
    var$6 = $this.$posOffset;
    var$5[var$6] = $pos.$x;
    var$7 = $this.$posSize;
    if (var$7 > 1)
        var$5[var$6 + 1 | 0] = $pos.$y;
    if (var$7 > 2)
        var$5[var$6 + 2 | 0] = $pos.$z;
    if ($this.$norOffset >= 0) {
        if ($nor === null)
            $nor = cbgm_Vector3_nor(cbgm_Vector3_set0($this.$tmpNormal, $pos));
        var$5 = $this.$vertex2.data;
        var$8 = $this.$norOffset;
        var$5[var$8] = $nor.$x;
        var$5[var$8 + 1 | 0] = $nor.$y;
        var$5[var$8 + 2 | 0] = $nor.$z;
    }
    var$7 = $this.$colOffset;
    if (var$7 < 0) {
        var$8 = $this.$cpOffset;
        if (var$8 > 0) {
            if ($col === null)
                $col = cbgg_Color_WHITE;
            $this.$vertex2.data[var$8] = cbgg_Color_toFloatBits($col);
        }
    } else {
        if ($col === null)
            $col = cbgg_Color_WHITE;
        var$5 = $this.$vertex2.data;
        var$5[var$7] = $col.$r;
        var$5[var$7 + 1 | 0] = $col.$g;
        var$5[var$7 + 2 | 0] = $col.$b;
        if ($this.$colSize > 3)
            var$5[var$7 + 3 | 0] = $col.$a;
    }
    if ($uv !== null) {
        var$8 = $this.$uvOffset;
        if (var$8 >= 0) {
            var$5 = $this.$vertex2.data;
            var$5[var$8] = $uv.$x2;
            var$5[var$8 + 1 | 0] = $uv.$y1;
        }
    }
    cbgggu_MeshBuilder_addVertex($this, $this.$vertex2, 0);
    return $this.$lastIndex << 16 >> 16;
},
cbgggu_MeshBuilder_vertex = ($this, $info) => {
    return cbgggu_MeshBuilder_vertex0($this, !$info.$hasPosition ? null : $info.$position5, !$info.$hasNormal ? null : $info.$normal0, !$info.$hasColor0 ? null : $info.$color5, !$info.$hasUV ? null : $info.$uv);
},
cbgggu_MeshBuilder_index = ($this, $value1, $value2, $value3, $value4, $value5, $value6, $value7, $value8) => {
    cbgggu_MeshBuilder_ensureIndices($this, 8);
    cbgu_ShortArray_add($this.$indices, $value1);
    cbgu_ShortArray_add($this.$indices, $value2);
    cbgu_ShortArray_add($this.$indices, $value3);
    cbgu_ShortArray_add($this.$indices, $value4);
    cbgu_ShortArray_add($this.$indices, $value5);
    cbgu_ShortArray_add($this.$indices, $value6);
    cbgu_ShortArray_add($this.$indices, $value7);
    cbgu_ShortArray_add($this.$indices, $value8);
},
cbgggu_MeshBuilder_rect = ($this, $corner00, $corner10, $corner11, $corner01) => {
    let var$5, var$6;
    var$5 = $this.$primitiveType0;
    if (var$5 == 4) {
        cbgggu_MeshBuilder_ensureIndices($this, 6);
        cbgu_ShortArray_add($this.$indices, $corner00);
        cbgu_ShortArray_add($this.$indices, $corner10);
        cbgu_ShortArray_add($this.$indices, $corner11);
        cbgu_ShortArray_add($this.$indices, $corner11);
        cbgu_ShortArray_add($this.$indices, $corner01);
        cbgu_ShortArray_add($this.$indices, $corner00);
    } else if (var$5 == 1)
        cbgggu_MeshBuilder_index($this, $corner00, $corner10, $corner10, $corner11, $corner11, $corner01, $corner01, $corner00);
    else {
        if (var$5) {
            var$6 = new cbgu_GdxRuntimeException;
            jl_Exception__init_(var$6, $rt_s(830));
            $rt_throw(var$6);
        }
        cbgggu_MeshBuilder_ensureIndices($this, 4);
        cbgu_ShortArray_add($this.$indices, $corner00);
        cbgu_ShortArray_add($this.$indices, $corner10);
        cbgu_ShortArray_add($this.$indices, $corner11);
        cbgu_ShortArray_add($this.$indices, $corner01);
    }
},
cbgggu_MeshBuilder_rect1 = ($this, $corner00, $corner10, $corner11, $corner01) => {
    cbgggu_MeshBuilder_ensureVertices($this, 4);
    cbgggu_MeshBuilder_rect($this, cbgggu_MeshBuilder_vertex($this, $corner00), cbgggu_MeshBuilder_vertex($this, $corner10), cbgggu_MeshBuilder_vertex($this, $corner11), cbgggu_MeshBuilder_vertex($this, $corner01));
},
cbgggu_MeshBuilder_rect0 = ($this, $corner00, $corner10, $corner11, $corner01, $normal) => {
    cbgggu_MeshBuilder_rect1($this, cbgggu_MeshPartBuilder$VertexInfo_setUV(cbgggu_MeshPartBuilder$VertexInfo_set($this.$vertTmp1, $corner00, $normal, null, null), 0.0, 1.0), cbgggu_MeshPartBuilder$VertexInfo_setUV(cbgggu_MeshPartBuilder$VertexInfo_set($this.$vertTmp2, $corner10, $normal, null, null), 1.0, 1.0), cbgggu_MeshPartBuilder$VertexInfo_setUV(cbgggu_MeshPartBuilder$VertexInfo_set($this.$vertTmp3, $corner11, $normal, null, null), 1.0, 0.0), cbgggu_MeshPartBuilder$VertexInfo_setUV(cbgggu_MeshPartBuilder$VertexInfo_set($this.$vertTmp4,
    $corner01, $normal, null, null), 0.0, 0.0));
},
cbgggu_MeshBuilder__clinit_ = () => {
    cbgggu_MeshBuilder_tmpIndices = cbgu_ShortArray__init_();
    cbgggu_MeshBuilder_tmpVertices = cbgu_FloatArray__init_();
    cbgggu_MeshBuilder_vTmp = cbgm_Vector3__init_();
    cbgggu_MeshBuilder_indicesMap = null;
};
function jnci_BufferedDecoder$Controller() {
    let a = this; jl_Object.call(a);
    a.$in = null;
    a.$out1 = null;
    a.$inPosition = 0;
    a.$outPosition = 0;
}
let jnci_BufferedDecoder$Controller_hasMoreInput = ($this, $sz) => {
    return jn_Buffer_remaining($this.$in) < $sz ? 0 : 1;
},
jnci_BufferedDecoder$Controller_hasMoreOutput = ($this, $sz) => {
    return jn_Buffer_remaining($this.$out1) < $sz ? 0 : 1;
},
jnci_AsciiDecoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_AsciiDecoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $b, var$12;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $b = var$9[$inPos] & 255;
            if ($b & 128) {
                $result = jnc_CoderResult_malformedForLength(1);
                $inPos = var$10 + (-1) | 0;
                break a;
            }
            var$9 = $outArray.data;
            var$12 = $outPos + 1 | 0;
            var$9[$outPos] = $b & 65535;
            $inPos = var$10;
            $outPos = var$12;
        }
    }
    $controller.$inPosition = $inPos;
    $controller.$outPosition = $outPos;
    return $result;
};
function jnci_UTF16Decoder() {
    let a = this; jnci_BufferedDecoder.call(a);
    a.$bom = 0;
    a.$littleEndian0 = 0;
}
let jnci_UTF16Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let var$8, var$9, $b;
    if ($this.$bom) {
        if (($inPos + 2 | 0) > $inSize)
            return !jn_Buffer_hasRemaining($controller.$in) ? jnc_CoderResult_UNDERFLOW : null;
        var$8 = $inArray.data;
        $this.$bom = 0;
        var$9 = $inPos + 1 | 0;
        $b = var$8[$inPos];
        if ($b == (-1)) {
            if (var$8[var$9] != (-2))
                $inPos = var$9 + (-1) | 0;
            else {
                $inPos = var$9 + 1 | 0;
                $this.$littleEndian0 = 1;
            }
        } else if ($b != (-2))
            $inPos = var$9 + (-1) | 0;
        else if (var$8[var$9] != (-1))
            $inPos = var$9 + (-1) | 0;
        else {
            $inPos = var$9 + 1 | 0;
            $this.$littleEndian0 = 0;
        }
    }
    return !$this.$littleEndian0 ? jnci_UTF16Decoder_decodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) : jnci_UTF16Decoder_decodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
},
jnci_UTF16Decoder_decodeLE = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, $b2, $b1, $c, $next;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            if (($inPos + 2 | 0) > $inSize) {
                if (jnci_BufferedDecoder$Controller_hasMoreInput($controller, 2))
                    break a;
                $result = jnc_CoderResult_UNDERFLOW;
                break a;
            }
            var$9 = $inArray.data;
            $b2 = $inPos + 1 | 0;
            $b1 = var$9[$inPos] & 255;
            $inPos = $b2 + 1 | 0;
            $c = ($b1 | (var$9[$b2] & 255) << 8) & 65535;
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(2);
                    break a;
                }
                var$9 = $outArray.data;
                $b2 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = $b2;
            } else {
                if (($inPos + 2 | 0) >= $inSize) {
                    if (!jnci_BufferedDecoder$Controller_hasMoreInput($controller, 4))
                        $result = jnc_CoderResult_UNDERFLOW;
                    $inPos = $inPos + (-2) | 0;
                    break a;
                }
                $b2 = $inPos + 1 | 0;
                $b1 = var$9[$inPos] & 255;
                $inPos = $b2 + 1 | 0;
                $next = ($b1 | (var$9[$b2] & 255) << 8) & 65535;
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-4) | 0;
                    $result = jnc_CoderResult_malformedForLength(4);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    if (jnci_BufferedDecoder$Controller_hasMoreOutput($controller, 2))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                $b2 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = $b2 + 1 | 0;
                var$9[$b2] = $next;
            }
        }
    }
    $controller.$inPosition = $inPos;
    $controller.$outPosition = $outPos;
    return $result;
},
jnci_UTF16Decoder_decodeBE = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, $b2, $b1, $c, $next;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            if (($inPos + 2 | 0) > $inSize) {
                if (jnci_BufferedDecoder$Controller_hasMoreInput($controller, 2))
                    break a;
                $result = jnc_CoderResult_UNDERFLOW;
                break a;
            }
            var$9 = $inArray.data;
            $b2 = $inPos + 1 | 0;
            $b1 = var$9[$inPos] & 255;
            $inPos = $b2 + 1 | 0;
            $c = (var$9[$b2] & 255 | $b1 << 8) & 65535;
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(2);
                    break a;
                }
                var$9 = $outArray.data;
                $b2 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = $b2;
            } else {
                if (($inPos + 2 | 0) >= $inSize) {
                    if (!jnci_BufferedDecoder$Controller_hasMoreInput($controller, 4))
                        $result = jnc_CoderResult_UNDERFLOW;
                    $inPos = $inPos + (-2) | 0;
                    break a;
                }
                $b2 = $inPos + 1 | 0;
                $b1 = var$9[$inPos] & 255;
                $inPos = $b2 + 1 | 0;
                $next = (var$9[$b2] & 255 | $b1 << 8) & 65535;
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-4) | 0;
                    $result = jnc_CoderResult_malformedForLength(4);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    if (jnci_BufferedDecoder$Controller_hasMoreOutput($controller, 2))
                        break a;
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                $b2 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = $b2 + 1 | 0;
                var$9[$b2] = $next;
            }
        }
    }
    $controller.$inPosition = $inPos;
    $controller.$outPosition = $outPos;
    return $result;
},
jnci_Iso8859Decoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_Iso8859Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, var$11, $b, var$13;
    $result = null;
    while ($inPos < $inSize && $outPos < $outSize) {
        var$9 = $inArray.data;
        var$10 = $outArray.data;
        var$11 = $inPos + 1 | 0;
        $b = var$9[$inPos] & 255;
        var$13 = $outPos + 1 | 0;
        var$10[$outPos] = $b & 65535;
        $inPos = var$11;
        $outPos = var$13;
    }
    $controller.$inPosition = $inPos;
    $controller.$outPosition = $outPos;
    return $result;
},
jl_ArrayIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException),
jl_ArrayIndexOutOfBoundsException__init_ = ($this, $index) => {
    jl_Exception__init_($this, jl_Integer_toString($index));
},
jl_ArrayIndexOutOfBoundsException__init_0 = var_0 => {
    let var_1 = new jl_ArrayIndexOutOfBoundsException();
    jl_ArrayIndexOutOfBoundsException__init_(var_1, var_0);
    return var_1;
};
function cbgu_ShortArray() {
    let a = this; jl_Object.call(a);
    a.$items2 = null;
    a.$size5 = 0;
    a.$ordered2 = 0;
}
let cbgu_ShortArray__init_0 = $this => {
    $this.$ordered2 = 1;
    $this.$items2 = $rt_createShortArray(16);
},
cbgu_ShortArray__init_ = () => {
    let var_0 = new cbgu_ShortArray();
    cbgu_ShortArray__init_0(var_0);
    return var_0;
},
cbgu_ShortArray_add = ($this, $value) => {
    let $items, var$3, var$4, var$5;
    $items = $this.$items2;
    var$3 = $items.data;
    var$4 = $this.$size5;
    if (var$4 == var$3.length)
        $items = cbgu_ShortArray_resize($this, jl_Math_max(8, var$4 * 1.75 | 0));
    $items = $items.data;
    var$5 = $this.$size5;
    $this.$size5 = var$5 + 1 | 0;
    $items[var$5] = $value;
},
cbgu_ShortArray_clear = $this => {
    $this.$size5 = 0;
},
cbgu_ShortArray_resize = ($this, $newSize) => {
    let $newItems, var$3;
    $newItems = $rt_createShortArray($newSize);
    var$3 = $newItems.data;
    jl_System_fastArraycopy($this.$items2, 0, $newItems, 0, jl_Math_min($this.$size5, var$3.length));
    $this.$items2 = $newItems;
    return $newItems;
},
jpb_BodyID = $rt_classWithoutFields(ji_IDLBase),
jpb_BodyID_T_01 = null,
jpb_BodyID_T_02 = null,
jpb_BodyID_T_03 = null,
jpb_BodyID_deleteNative = $this => {
    jpb_BodyID_internal_native_deleteNative$js_body$_8(Long_lo($this.$nativeData.$cPointer));
},
jpb_BodyID__clinit_ = () => {
    let var$1;
    var$1 = new jpb_BodyID;
    ji_IDLBase__init_(var$1);
    jpb_BodyID_T_01 = var$1;
    var$1 = new jpb_BodyID;
    ji_IDLBase__init_(var$1);
    jpb_BodyID_T_02 = var$1;
    var$1 = new jpb_BodyID;
    ji_IDLBase__init_(var$1);
    jpb_BodyID_T_03 = var$1;
},
jpb_BodyID_internal_native_deleteNative$js_body$_8 = var$1 => {
    var jsObj = jolt.wrapPointer(var$1, jolt.BodyID);
    jolt.destroy(jsObj);
};
function cbggg_GLOnlyTextureData() {
    let a = this; jl_Object.call(a);
    a.$width0 = 0;
    a.$height3 = 0;
    a.$isPrepared1 = 0;
    a.$mipLevel = 0;
    a.$internalFormat1 = 0;
    a.$format3 = 0;
    a.$type8 = 0;
}
let cbggg_GLOnlyTextureData__init_ = ($this, var$1, $height, $mipMapLevel, $internalFormat, $format, $type) => {
    $this.$width0 = 0;
    $this.$height3 = 0;
    $this.$isPrepared1 = 0;
    $this.$mipLevel = 0;
    $this.$width0 = var$1;
    $this.$height3 = $height;
    $this.$mipLevel = $mipMapLevel;
    $this.$internalFormat1 = $internalFormat;
    $this.$format3 = $format;
    $this.$type8 = $type;
},
cbggg_GLOnlyTextureData__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new cbggg_GLOnlyTextureData();
    cbggg_GLOnlyTextureData__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
cbggg_GLOnlyTextureData_getType = $this => {
    return cbgg_TextureData$TextureDataType_Custom;
},
cbggg_GLOnlyTextureData_isPrepared = $this => {
    return $this.$isPrepared1;
},
cbggg_GLOnlyTextureData_prepare = $this => {
    let var$1;
    if (!$this.$isPrepared1) {
        $this.$isPrepared1 = 1;
        return;
    }
    var$1 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$1, $rt_s(531));
    $rt_throw(var$1);
},
cbggg_GLOnlyTextureData_consumeCustomData = ($this, $target) => {
    cbg_Gdx_gl.$glTexImage2D($target, $this.$mipLevel, $this.$internalFormat1, $this.$width0, $this.$height3, 0, $this.$format3, $this.$type8, null);
},
cbggg_GLOnlyTextureData_consumePixmap = $this => {
    let var$1;
    var$1 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$1, $rt_s(831));
    $rt_throw(var$1);
},
cbggg_GLOnlyTextureData_disposePixmap = $this => {
    let var$1;
    var$1 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$1, $rt_s(831));
    $rt_throw(var$1);
},
cbggg_GLOnlyTextureData_getWidth = $this => {
    return $this.$width0;
},
cbggg_GLOnlyTextureData_getHeight = $this => {
    return $this.$height3;
},
cbggg_GLOnlyTextureData_getFormat = $this => {
    return cbgg_Pixmap$Format_RGBA8888;
},
cbggg_GLOnlyTextureData_useMipMaps = $this => {
    return 0;
},
cbggg_GLOnlyTextureData_isManaged = $this => {
    return 0;
},
cbggg_Shader = $rt_classWithoutFields(0);
function cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0() {
    jl_Object.call(this);
    this.$_021 = null;
}
let cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0_handleEvent$exported$0 = var$1 => {
    let var$2, var$3;
    var$1 = var$1.$_021;
    var$2 = jl_System_err();
    var$3 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$3);
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(832)), var$1);
    var$1 = jl_AbstractStringBuilder_toString(var$3);
    otcic_JsConsolePrintStream_println(var$2, var$1);
};
function cbggg_FacedCubemapData() {
    jl_Object.call(this);
    this.$data3 = null;
}
let cbggg_FacedCubemapData_isManaged = $this => {
    if (0 >= $this.$data3.data.length)
        return 1;
    return 0;
},
cbggg_FacedCubemapData_getWidth = $this => {
    let var$1, var$2, $width;
    var$1 = $this.$data3.data;
    cbgg_Cubemap$CubemapSide_$callClinit();
    var$2 = cbgg_Cubemap$CubemapSide_PositiveZ.$index1;
    if (var$1[var$2] === null)
        var$2 = 0;
    else {
        var$2 = var$1[var$2].$width0;
        if (var$2 <= 0)
            var$2 = 0;
    }
    $width = cbgg_Cubemap$CubemapSide_NegativeZ.$index1;
    if (var$1[$width] === null)
        $width = var$2;
    else {
        $width = var$1[$width].$width0;
        if ($width <= var$2)
            $width = var$2;
    }
    var$2 = cbgg_Cubemap$CubemapSide_PositiveY.$index1;
    if (var$1[var$2] === null)
        var$2 = $width;
    else {
        var$2 = var$1[var$2].$width0;
        if (var$2 <= $width)
            var$2 = $width;
    }
    $width = cbgg_Cubemap$CubemapSide_NegativeY.$index1;
    if (var$1[$width] === null)
        $width = var$2;
    else {
        $width = var$1[$width].$width0;
        if ($width <= var$2)
            $width = var$2;
    }
    return $width;
},
cbggg_FacedCubemapData_isPrepared = $this => {
    return 0;
},
cbggg_FacedCubemapData_prepare = $this => {
    let $i, var$2, var$3;
    $i = 0;
    a: {
        while (true) {
            var$2 = $this.$data3.data;
            if ($i >= var$2.length)
                break;
            if (var$2[$i] === null) {
                $i = 0;
                break a;
            }
            $i = $i + 1 | 0;
        }
        $i = 1;
    }
    if (!$i) {
        var$3 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$3, $rt_s(800));
        $rt_throw(var$3);
    }
    $i = 0;
    while (true) {
        var$2 = $this.$data3.data;
        if ($i >= var$2.length)
            break;
        if (!var$2[$i].$isPrepared1)
            cbggg_GLOnlyTextureData_prepare(var$2[$i]);
        $i = $i + 1 | 0;
    }
},
cbggg_FacedCubemapData_consumeCubemapData = $this => {
    let $i, var$2, $pixmap, var$4, $disposePixmap, $tmp_0;
    $i = 0;
    while (true) {
        var$2 = $this.$data3.data;
        if ($i >= var$2.length)
            break;
        $pixmap = cbgg_TextureData$TextureDataType_Custom;
        if ($pixmap === $pixmap) {
            $pixmap = var$2[$i];
            var$4 = 34069 + $i | 0;
            cbggg_GLOnlyTextureData_consumeCustomData($pixmap, var$4);
        } else {
            $pixmap = cbggg_GLOnlyTextureData_consumePixmap(var$2[$i]);
            $disposePixmap = cbggg_GLOnlyTextureData_disposePixmap($this.$data3.data[$i]);
            if (cbgg_Pixmap$Format_RGBA8888 === $pixmap.$getFormat())
                $tmp_0 = $pixmap;
            else {
                $tmp_0 = cbgg_Pixmap__init_($pixmap.$getWidth(), $pixmap.$getHeight(), cbgg_Pixmap$Format_RGBA8888);
                cbgg_Pixmap_setBlending($tmp_0, cbgg_Pixmap$Blending_None);
                cbgg_Pixmap_drawPixmap($tmp_0, $pixmap, 0, 0, 0, 0, $pixmap.$getWidth(), $pixmap.$getHeight());
                if (cbggg_GLOnlyTextureData_disposePixmap($this.$data3.data[$i]))
                    $pixmap.$dispose();
                $disposePixmap = 1;
            }
            cbg_Gdx_gl.$glPixelStorei(3317, 1);
            cbg_Gdx_gl.$glTexImage2D(34069 + $i | 0, 0, cbgg_Pixmap_getGLInternalFormat($tmp_0), cbgg_Pixmap_getWidth($tmp_0), cbgg_Pixmap_getHeight($tmp_0), 0, cbgg_Pixmap_getGLFormat($tmp_0), cbgg_Pixmap_getGLType($tmp_0), cbgg_Pixmap_getPixels($tmp_0));
            if ($disposePixmap)
                cbgg_Pixmap_dispose($tmp_0);
        }
        $i = $i + 1 | 0;
    }
};
function cbgggu_MeshPartBuilder$VertexInfo() {
    let a = this; jl_Object.call(a);
    a.$position5 = null;
    a.$hasPosition = 0;
    a.$normal0 = null;
    a.$hasNormal = 0;
    a.$color5 = null;
    a.$hasColor0 = 0;
    a.$uv = null;
    a.$hasUV = 0;
}
let cbgggu_MeshPartBuilder$VertexInfo__init_0 = $this => {
    $this.$position5 = cbgm_Vector3__init_();
    $this.$normal0 = cbgm_Vector3__init_0(0.0, 1.0, 0.0);
    $this.$color5 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    $this.$uv = new cbgm_Vector2;
},
cbgggu_MeshPartBuilder$VertexInfo__init_ = () => {
    let var_0 = new cbgggu_MeshPartBuilder$VertexInfo();
    cbgggu_MeshPartBuilder$VertexInfo__init_0(var_0);
    return var_0;
},
cbgggu_MeshPartBuilder$VertexInfo_set = ($this, $pos, $nor, $col, $uv) => {
    let var$5;
    cbgm_Vector3_set($this.$position5, 0.0, 0.0, 0.0);
    cbgm_Vector3_set($this.$normal0, 0.0, 1.0, 0.0);
    cbgg_Color_set($this.$color5, 1.0, 1.0, 1.0, 1.0);
    cbgm_Vector2_set($this.$uv, 0.0, 0.0);
    var$5 = $pos === null ? 0 : 1;
    $this.$hasPosition = var$5;
    if (var$5)
        cbgm_Vector3_set0($this.$position5, $pos);
    var$5 = $nor === null ? 0 : 1;
    $this.$hasNormal = var$5;
    if (var$5)
        cbgm_Vector3_set0($this.$normal0, $nor);
    var$5 = $col === null ? 0 : 1;
    $this.$hasColor0 = var$5;
    if (var$5)
        cbgg_Color_set0($this.$color5, $col);
    var$5 = $uv === null ? 0 : 1;
    $this.$hasUV = var$5;
    if (var$5) {
        $pos = $this.$uv;
        $pos.$x2 = $uv.$x2;
        $pos.$y1 = $uv.$y1;
    }
    return $this;
},
cbgggu_MeshPartBuilder$VertexInfo_setPos = ($this, $x, $y, $z) => {
    cbgm_Vector3_set($this.$position5, $x, $y, $z);
    $this.$hasPosition = 1;
    return $this;
},
cbgggu_MeshPartBuilder$VertexInfo_setNor = ($this, $x, $y, $z) => {
    cbgm_Vector3_set($this.$normal0, $x, $y, $z);
    $this.$hasNormal = 1;
    return $this;
},
cbgggu_MeshPartBuilder$VertexInfo_setUV = ($this, $u, $v) => {
    cbgm_Vector2_set($this.$uv, $u, $v);
    $this.$hasUV = 1;
    return $this;
};
function cbgm_Matrix3() {
    let a = this; jl_Object.call(a);
    a.$val0 = null;
    a.$tmp0 = null;
}
let cbgm_Matrix3__init_0 = $this => {
    let var$1, var$2;
    $this.$val0 = $rt_createFloatArray(9);
    var$1 = $rt_createFloatArray(9);
    var$2 = var$1.data;
    $this.$tmp0 = var$1;
    var$2[8] = 1.0;
    cbgm_Matrix3_idt($this);
},
cbgm_Matrix3__init_ = () => {
    let var_0 = new cbgm_Matrix3();
    cbgm_Matrix3__init_0(var_0);
    return var_0;
},
cbgm_Matrix3_idt = $this => {
    let $val;
    $val = $this.$val0.data;
    $val[0] = 1.0;
    $val[1] = 0.0;
    $val[2] = 0.0;
    $val[3] = 0.0;
    $val[4] = 1.0;
    $val[5] = 0.0;
    $val[6] = 0.0;
    $val[7] = 0.0;
    $val[8] = 1.0;
    return $this;
},
cbgm_Matrix3_inv = $this => {
    let $val, $det, var$3, $inv_det, $v00, $v10, $v20, $v01, $v11, $v21, $v02, $v12, $v22;
    $val = $this.$val0.data;
    $det = $val[0] * $val[4] * $val[8] + $val[3] * $val[7] * $val[2] + $val[6] * $val[1] * $val[5] - $val[0] * $val[7] * $val[5] - $val[3] * $val[1] * $val[8] - $val[6] * $val[4] * $val[2];
    if ($det === 0.0) {
        var$3 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$3, $rt_s(833));
        $rt_throw(var$3);
    }
    $inv_det = 1.0 / $det;
    $v00 = $val[4] * $val[8] - $val[5] * $val[7];
    $v10 = $val[2] * $val[7] - $val[1] * $val[8];
    $v20 = $val[1] * $val[5] - $val[2] * $val[4];
    $v01 = $val[5] * $val[6] - $val[3] * $val[8];
    $v11 = $val[0] * $val[8] - $val[2] * $val[6];
    $v21 = $val[2] * $val[3] - $val[0] * $val[5];
    $v02 = $val[3] * $val[7] - $val[4] * $val[6];
    $v12 = $val[1] * $val[6] - $val[0] * $val[7];
    $v22 = $val[0] * $val[4] - $val[1] * $val[3];
    $val[0] = $inv_det * $v00;
    $val[1] = $inv_det * $v10;
    $val[2] = $inv_det * $v20;
    $val[3] = $inv_det * $v01;
    $val[4] = $inv_det * $v11;
    $val[5] = $inv_det * $v21;
    $val[6] = $inv_det * $v02;
    $val[7] = $inv_det * $v12;
    $val[8] = $inv_det * $v22;
    return $this;
},
cbgm_Matrix3_set = ($this, $mat) => {
    let var$2, $val;
    var$2 = $this.$val0.data;
    $val = $mat.$val.data;
    var$2[0] = $val[0];
    var$2[1] = $val[1];
    var$2[2] = $val[2];
    var$2[3] = $val[4];
    var$2[4] = $val[5];
    var$2[5] = $val[6];
    var$2[6] = $val[8];
    var$2[7] = $val[9];
    var$2[8] = $val[10];
    return $this;
},
cbgm_Matrix3_rotateRad = ($this, $radians) => {
    let var$2, $cos, $sin, $tmp_0, var$6;
    if ($radians === 0.0)
        return $this;
    var$2 = $radians;
    $cos = jl_Math_cos(var$2);
    $sin = jl_Math_sin(var$2);
    $tmp_0 = $this.$tmp0;
    var$6 = $tmp_0.data;
    var$6[0] = $cos;
    var$6[1] = $sin;
    var$6[3] =  -$sin;
    var$6[4] = $cos;
    var$6[6] = 0.0;
    var$6[7] = 0.0;
    cbgm_Matrix3_mul($this.$val0, $tmp_0);
    return $this;
},
cbgm_Matrix3_scale = ($this, $scaleX, $scaleY) => {
    let $tmp_0, var$4;
    $tmp_0 = $this.$tmp0;
    var$4 = $tmp_0.data;
    var$4[0] = $scaleX;
    var$4[1] = 0.0;
    var$4[3] = 0.0;
    var$4[4] = $scaleY;
    var$4[6] = 0.0;
    var$4[7] = 0.0;
    cbgm_Matrix3_mul($this.$val0, $tmp_0);
    return $this;
},
cbgm_Matrix3_transpose = $this => {
    let $val, $v01, $v02, $v10, $v12, $v20, $v21;
    $val = $this.$val0.data;
    $v01 = $val[1];
    $v02 = $val[2];
    $v10 = $val[3];
    $v12 = $val[5];
    $v20 = $val[6];
    $v21 = $val[7];
    $val[3] = $v01;
    $val[6] = $v02;
    $val[1] = $v10;
    $val[7] = $v12;
    $val[2] = $v20;
    $val[5] = $v21;
    return $this;
},
cbgm_Matrix3_mul = ($mata, $matb) => {
    let $v00, $v01, $v02, $v10, $v11, $v12, $v20, $v21, $v22;
    $matb = $matb.data;
    $mata = $mata.data;
    $v00 = $mata[0] * $matb[0] + $mata[3] * $matb[1] + $mata[6] * $matb[2];
    $v01 = $mata[0] * $matb[3] + $mata[3] * $matb[4] + $mata[6] * $matb[5];
    $v02 = $mata[0] * $matb[6] + $mata[3] * $matb[7] + $mata[6] * $matb[8];
    $v10 = $mata[1] * $matb[0] + $mata[4] * $matb[1] + $mata[7] * $matb[2];
    $v11 = $mata[1] * $matb[3] + $mata[4] * $matb[4] + $mata[7] * $matb[5];
    $v12 = $mata[1] * $matb[6] + $mata[4] * $matb[7] + $mata[7] * $matb[8];
    $v20 = $mata[2] * $matb[0] + $mata[5] * $matb[1] + $mata[8] * $matb[2];
    $v21 = $mata[2] * $matb[3] + $mata[5] * $matb[4] + $mata[8] * $matb[5];
    $v22 = $mata[2] * $matb[6] + $mata[5] * $matb[7] + $mata[8] * $matb[8];
    $mata[0] = $v00;
    $mata[1] = $v10;
    $mata[2] = $v20;
    $mata[3] = $v01;
    $mata[4] = $v11;
    $mata[5] = $v21;
    $mata[6] = $v02;
    $mata[7] = $v12;
    $mata[8] = $v22;
},
cbgggus_BaseShapeBuilder = $rt_classWithoutFields(),
cbgggus_BaseShapeBuilder_tmpColor0 = null,
cbgggus_BaseShapeBuilder_tmpColor1 = null,
cbgggus_BaseShapeBuilder_tmpColor2 = null,
cbgggus_BaseShapeBuilder_tmpColor3 = null,
cbgggus_BaseShapeBuilder_tmpColor4 = null,
cbgggus_BaseShapeBuilder_tmpV0 = null,
cbgggus_BaseShapeBuilder_tmpV1 = null,
cbgggus_BaseShapeBuilder_tmpV2 = null,
cbgggus_BaseShapeBuilder_tmpV3 = null,
cbgggus_BaseShapeBuilder_tmpV4 = null,
cbgggus_BaseShapeBuilder_tmpV5 = null,
cbgggus_BaseShapeBuilder_tmpV6 = null,
cbgggus_BaseShapeBuilder_tmpV7 = null,
cbgggus_BaseShapeBuilder_vertTmp0 = null,
cbgggus_BaseShapeBuilder_vertTmp1 = null,
cbgggus_BaseShapeBuilder_vertTmp2 = null,
cbgggus_BaseShapeBuilder_vertTmp3 = null,
cbgggus_BaseShapeBuilder_vertTmp4 = null,
cbgggus_BaseShapeBuilder_vertTmp5 = null,
cbgggus_BaseShapeBuilder_vertTmp6 = null,
cbgggus_BaseShapeBuilder_vertTmp7 = null,
cbgggus_BaseShapeBuilder_vertTmp8 = null,
cbgggus_BaseShapeBuilder_matTmp1 = null,
cbgggus_BaseShapeBuilder_vectorPool = null,
cbgggus_BaseShapeBuilder_matrices4Pool = null,
cbgggus_BaseShapeBuilder_$callClinit = () => {
    cbgggus_BaseShapeBuilder_$callClinit = $rt_eraseClinit(cbgggus_BaseShapeBuilder);
    cbgggus_BaseShapeBuilder__clinit_();
},
cbgggus_BaseShapeBuilder_obtainV3 = () => {
    cbgggus_BaseShapeBuilder_$callClinit();
    return cbgu_FlushablePool_obtain(cbgggus_BaseShapeBuilder_vectorPool);
},
cbgggus_BaseShapeBuilder__clinit_ = () => {
    let var$1;
    cbgggus_BaseShapeBuilder_tmpColor0 = new cbgg_Color;
    cbgggus_BaseShapeBuilder_tmpColor1 = new cbgg_Color;
    cbgggus_BaseShapeBuilder_tmpColor2 = new cbgg_Color;
    cbgggus_BaseShapeBuilder_tmpColor3 = new cbgg_Color;
    cbgggus_BaseShapeBuilder_tmpColor4 = new cbgg_Color;
    cbgggus_BaseShapeBuilder_tmpV0 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV1 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV2 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV3 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV4 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV5 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV6 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV7 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_vertTmp0 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp1 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp2 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp3 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp4 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp5 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp6 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp7 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp8 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_matTmp1 = cbgm_Matrix4__init_();
    var$1 = new cbgggus_BaseShapeBuilder$1;
    cbgu_FlushablePool__init_(var$1);
    cbgggus_BaseShapeBuilder_vectorPool = var$1;
    var$1 = new cbgggus_BaseShapeBuilder$2;
    cbgu_FlushablePool__init_(var$1);
    cbgggus_BaseShapeBuilder_matrices4Pool = var$1;
},
cbgggus_BoxShapeBuilder = $rt_classWithoutFields(cbgggus_BaseShapeBuilder),
cbgggus_BoxShapeBuilder_build = ($builder, $corner000, $corner010, $corner100, $corner110, $corner001, $corner011, $corner101, $corner111) => {
    let var$10, $nor, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20, var$21, var$22;
    var$10 = $builder;
    if (Long_ne(Long_and(cbgg_VertexAttributes_getMask(var$10.$attributes4), Long_fromInt(408)), Long_ZERO)) {
        cbgggu_MeshBuilder_ensureVertices(var$10, 24);
        cbgggu_MeshBuilder_ensureRectangleIndices(var$10, 6);
        cbgggus_BaseShapeBuilder_$callClinit();
        $nor = cbgm_Vector3_nor(cbgm_Vector3_sub(cbgm_Vector3_lerp(cbgm_Vector3_set0(cbgggus_BaseShapeBuilder_tmpV1, $corner000), $corner110, 0.5), cbgm_Vector3_lerp(cbgm_Vector3_set0(cbgggus_BaseShapeBuilder_tmpV2, $corner001), $corner111, 0.5)));
        cbgggu_MeshBuilder_rect0(var$10, $corner000, $corner010, $corner110, $corner100, $nor);
        cbgggu_MeshBuilder_rect0(var$10, $corner011, $corner001, $corner101, $corner111, cbgm_Vector3_scl($nor, (-1.0)));
        $builder = cbgm_Vector3_nor(cbgm_Vector3_sub(cbgm_Vector3_lerp(cbgm_Vector3_set0(cbgggus_BaseShapeBuilder_tmpV1, $corner000), $corner101, 0.5), cbgm_Vector3_lerp(cbgm_Vector3_set0(cbgggus_BaseShapeBuilder_tmpV2, $corner010), $corner111, 0.5)));
        cbgggu_MeshBuilder_rect0(var$10, $corner001, $corner000, $corner100, $corner101, $builder);
        cbgggu_MeshBuilder_rect0(var$10, $corner010, $corner011, $corner111, $corner110, cbgm_Vector3_scl($builder, (-1.0)));
        $builder = cbgm_Vector3_nor(cbgm_Vector3_sub(cbgm_Vector3_lerp(cbgm_Vector3_set0(cbgggus_BaseShapeBuilder_tmpV1, $corner000), $corner011, 0.5), cbgm_Vector3_lerp(cbgm_Vector3_set0(cbgggus_BaseShapeBuilder_tmpV2, $corner100), $corner111, 0.5)));
        cbgggu_MeshBuilder_rect0(var$10, $corner001, $corner011, $corner010, $corner000, $builder);
        cbgggu_MeshBuilder_rect0(var$10, $corner100, $corner110, $corner111, $corner101, cbgm_Vector3_scl($builder, (-1.0)));
    } else {
        cbgggus_BaseShapeBuilder_$callClinit();
        $builder = cbgggu_MeshPartBuilder$VertexInfo_set(cbgggus_BaseShapeBuilder_vertTmp1, $corner000, null, null, null);
        $corner000 = cbgggu_MeshPartBuilder$VertexInfo_set(cbgggus_BaseShapeBuilder_vertTmp2, $corner010, null, null, null);
        var$12 = cbgggu_MeshPartBuilder$VertexInfo_set(cbgggus_BaseShapeBuilder_vertTmp3, $corner100, null, null, null);
        $nor = cbgggu_MeshPartBuilder$VertexInfo_set(cbgggus_BaseShapeBuilder_vertTmp4, $corner110, null, null, null);
        var$13 = cbgggu_MeshPartBuilder$VertexInfo_set(cbgggus_BaseShapeBuilder_vertTmp5, $corner001, null, null, null);
        $corner011 = cbgggu_MeshPartBuilder$VertexInfo_set(cbgggus_BaseShapeBuilder_vertTmp6, $corner011, null, null, null);
        $corner010 = cbgggu_MeshPartBuilder$VertexInfo_set(cbgggus_BaseShapeBuilder_vertTmp7, $corner101, null, null, null);
        $corner100 = cbgggu_MeshPartBuilder$VertexInfo_set(cbgggus_BaseShapeBuilder_vertTmp8, $corner111, null, null, null);
        cbgggu_MeshBuilder_ensureVertices(var$10, 8);
        var$14 = cbgggu_MeshBuilder_vertex(var$10, $builder);
        var$15 = cbgggu_MeshBuilder_vertex(var$10, var$12);
        var$16 = cbgggu_MeshBuilder_vertex(var$10, $nor);
        var$17 = cbgggu_MeshBuilder_vertex(var$10, $corner000);
        var$18 = cbgggu_MeshBuilder_vertex(var$10, var$13);
        var$19 = cbgggu_MeshBuilder_vertex(var$10, $corner010);
        var$20 = cbgggu_MeshBuilder_vertex(var$10, $corner100);
        var$21 = cbgggu_MeshBuilder_vertex(var$10, $corner011);
        var$22 = var$10.$primitiveType0;
        if (var$22 == 1) {
            cbgggu_MeshBuilder_ensureIndices(var$10, 24);
            cbgggu_MeshBuilder_rect(var$10, var$14, var$15, var$16, var$17);
            cbgggu_MeshBuilder_rect(var$10, var$19, var$18, var$21, var$20);
            cbgggu_MeshBuilder_index(var$10, var$14, var$18, var$17, var$21, var$16, var$20, var$15, var$19);
        } else if (!var$22) {
            cbgggu_MeshBuilder_ensureRectangleIndices(var$10, 2);
            cbgggu_MeshBuilder_rect(var$10, var$14, var$15, var$16, var$17);
            cbgggu_MeshBuilder_rect(var$10, var$19, var$18, var$21, var$20);
        } else {
            cbgggu_MeshBuilder_ensureRectangleIndices(var$10, 6);
            cbgggu_MeshBuilder_rect(var$10, var$14, var$15, var$16, var$17);
            cbgggu_MeshBuilder_rect(var$10, var$19, var$18, var$21, var$20);
            cbgggu_MeshBuilder_rect(var$10, var$14, var$17, var$21, var$18);
            cbgggu_MeshBuilder_rect(var$10, var$19, var$20, var$16, var$15);
            cbgggu_MeshBuilder_rect(var$10, var$19, var$15, var$14, var$18);
            cbgggu_MeshBuilder_rect(var$10, var$16, var$20, var$21, var$17);
        }
    }
};
function cbgu_StringBuilder() {
    let a = this; jl_Object.call(a);
    a.$chars0 = null;
    a.$length3 = 0;
}
let cbgu_StringBuilder_digits = null,
cbgu_StringBuilder__init_0 = ($this, $capacity) => {
    let var$2;
    if ($capacity >= 0) {
        $this.$chars0 = $rt_createCharArray($capacity);
        return;
    }
    var$2 = new jl_NegativeArraySizeException;
    jl_Exception__init_0(var$2);
    $rt_throw(var$2);
},
cbgu_StringBuilder__init_ = var_0 => {
    let var_1 = new cbgu_StringBuilder();
    cbgu_StringBuilder__init_0(var_1, var_0);
    return var_1;
},
cbgu_StringBuilder_enlargeBuffer = ($this, $min) => {
    let var$2, var$3, $newSize, $newData;
    var$2 = $this.$chars0;
    var$3 = var$2.data.length;
    $newSize = ((var$3 >> 1) + var$3 | 0) + 2 | 0;
    if ($min > $newSize)
        $newSize = $min;
    $newData = $rt_createCharArray($newSize);
    jl_System_fastArraycopy(var$2, 0, $newData, 0, $this.$length3);
    $this.$chars0 = $newData;
},
cbgu_StringBuilder_appendNull = $this => {
    let $newSize, var$2, var$3;
    $newSize = $this.$length3 + 4 | 0;
    if ($newSize > $this.$chars0.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $newSize);
    var$2 = $this.$chars0.data;
    var$3 = $this.$length3;
    $newSize = var$3 + 1 | 0;
    $this.$length3 = $newSize;
    var$2[var$3] = 110;
    var$3 = $newSize + 1 | 0;
    $this.$length3 = var$3;
    var$2[$newSize] = 117;
    $newSize = var$3 + 1 | 0;
    $this.$length3 = $newSize;
    var$2[var$3] = 108;
    $this.$length3 = $newSize + 1 | 0;
    var$2[$newSize] = 108;
},
cbgu_StringBuilder_append0 = ($this, $ch) => {
    let var$2, var$3, var$4;
    var$2 = $this.$length3;
    if (var$2 == $this.$chars0.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, var$2 + 1 | 0);
    var$3 = $this.$chars0.data;
    var$4 = $this.$length3;
    $this.$length3 = var$4 + 1 | 0;
    var$3[var$4] = $ch;
},
cbgu_StringBuilder_append00 = ($this, $string) => {
    let $adding, $newSize, var$4, var$5, var$6, var$7;
    if ($string === null) {
        cbgu_StringBuilder_appendNull($this);
        return;
    }
    $adding = $string.$nativeString.length;
    $newSize = $this.$length3 + $adding | 0;
    if ($newSize > $this.$chars0.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $newSize);
    var$4 = $this.$chars0;
    var$5 = $this.$length3;
    if (0 <= $adding && $adding <= $string.$nativeString.length && var$5 >= 0) {
        var$6 = var$4.data;
        var$7 = $adding - 0 | 0;
        if ((var$5 + var$7 | 0) <= var$6.length) {
            $rt_stringToCharArray($string.$nativeString, 0, var$4.data, var$5, var$7);
            $this.$length3 = $newSize;
            return;
        }
    }
    $string = new jl_IndexOutOfBoundsException;
    jl_Exception__init_0($string);
    $rt_throw($string);
},
cbgu_StringBuilder_toString = $this => {
    let var$1;
    var$1 = $this.$length3;
    if (!var$1)
        return $rt_s(8);
    return jl_String__init_($this.$chars0, 0, var$1);
},
cbgu_StringBuilder_append = ($this, $value) => {
    return cbgu_StringBuilder_append2($this, $value, 0, 48);
},
cbgu_StringBuilder_append2 = ($this, $value, $minLength, $prefix) => {
    let var$4, var$5, $j;
    if ($value == (-2147483648)) {
        cbgu_StringBuilder_append00($this, $rt_s(834));
        return $this;
    }
    if ($value < 0) {
        cbgu_StringBuilder_append0($this, 45);
        $value =  -$value | 0;
    }
    a: {
        if ($minLength > 1) {
            var$4 = $value >= 0 ? 1 : 2;
            var$5 = $value;
            while (true) {
                var$5 = var$5 / 10 | 0;
                if (!var$5)
                    break;
                var$4 = var$4 + 1 | 0;
            }
            $j = $minLength - var$4 | 0;
            while (true) {
                if ($j <= 0)
                    break a;
                cbgu_StringBuilder_append0($this, $prefix);
                $j = $j + (-1) | 0;
            }
        }
    }
    if ($value >= 10000) {
        if ($value >= 1000000000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[Long_lo(Long_div(Long_rem(Long_fromInt($value), Long_create(1410065408, 2)), Long_fromInt(1000000000)))]);
        if ($value >= 100000000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000000000 | 0) / 100000000 | 0]);
        if ($value >= 10000000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100000000 | 0) / 10000000 | 0]);
        if ($value >= 1000000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 10000000 | 0) / 1000000 | 0]);
        if ($value >= 100000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000000 | 0) / 100000 | 0]);
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100000 | 0) / 10000 | 0]);
    }
    if ($value >= 1000)
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 10000 | 0) / 1000 | 0]);
    if ($value >= 100)
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000 | 0) / 100 | 0]);
    if ($value >= 10)
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100 | 0) / 10 | 0]);
    cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[$value % 10 | 0]);
    return $this;
},
cbgu_StringBuilder_append1 = ($this, $obj) => {
    if ($obj === null)
        cbgu_StringBuilder_appendNull($this);
    else
        cbgu_StringBuilder_append00($this, $obj.$toString());
    return $this;
},
cbgu_StringBuilder__clinit_ = () => {
    cbgu_StringBuilder_digits = $rt_createCharArrayFromData([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
};
function cbgggs_BaseShader() {
    let a = this; jl_Object.call(a);
    a.$uniforms = null;
    a.$validators = null;
    a.$setters = null;
    a.$locations = null;
    a.$globalUniforms = null;
    a.$localUniforms = null;
    a.$attributes6 = null;
    a.$instancedAttributes = null;
    a.$program = null;
    a.$context = null;
    a.$camera = null;
    a.$currentMesh = null;
    a.$tempArray = null;
    a.$tempArray2 = null;
    a.$combinedAttributes = null;
}
let cbgggs_BaseShader__init_ = $this => {
    $this.$uniforms = cbgu_Array__init_();
    $this.$validators = cbgu_Array__init_();
    $this.$setters = cbgu_Array__init_();
    $this.$globalUniforms = cbgu_IntArray__init_();
    $this.$localUniforms = cbgu_IntArray__init_();
    $this.$attributes6 = cbgu_IntIntMap__init_();
    $this.$instancedAttributes = cbgu_IntIntMap__init_();
    $this.$tempArray = cbgu_IntArray__init_();
    $this.$tempArray2 = cbgu_IntArray__init_();
    $this.$combinedAttributes = cbggg_Attributes__init_0();
},
cbgggs_BaseShader_register1 = ($this, $alias, $validator, $setter) => {
    let $existing;
    if ($this.$locations !== null) {
        $alias = new cbgu_GdxRuntimeException;
        jl_Exception__init_($alias, $rt_s(835));
        $rt_throw($alias);
    }
    $existing = cbgggs_BaseShader_getUniformID($this, $alias);
    if ($existing >= 0) {
        cbgu_Array_set($this.$validators, $existing, $validator);
        cbgu_Array_set($this.$setters, $existing, $setter);
        return $existing;
    }
    cbgu_Array_add($this.$uniforms, $alias);
    cbgu_Array_add($this.$validators, $validator);
    cbgu_Array_add($this.$setters, $setter);
    return $this.$uniforms.$size0 - 1 | 0;
},
cbgggs_BaseShader_register = ($this, $uniform, $setter) => {
    return cbgggs_BaseShader_register1($this, $uniform.$alias0, $uniform, $setter);
},
cbgggs_BaseShader_register0 = ($this, $uniform) => {
    return cbgggs_BaseShader_register($this, $uniform, null);
},
cbgggs_BaseShader_getUniformID = ($this, $alias) => {
    let $n, $i;
    $n = $this.$uniforms.$size0;
    $i = 0;
    while (true) {
        if ($i >= $n)
            return (-1);
        if (jl_String_equals(cbgu_Array_get($this.$uniforms, $i), $alias))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
cbgggs_BaseShader_init = ($this, $program, $renderable) => {
    let $n, $i, $input, $validator, $setter, $attr, var$9, var$10, var$11, $location, $attrs, $c, $iattrs, $ic;
    if ($this.$locations !== null) {
        $program = new cbgu_GdxRuntimeException;
        jl_Exception__init_($program, $rt_s(836));
        $rt_throw($program);
    }
    if (!$program.$isCompiled) {
        $renderable = new cbgu_GdxRuntimeException;
        jl_Exception__init_($renderable, cbggg_ShaderProgram_getLog($program));
        $rt_throw($renderable);
    }
    $this.$program = $program;
    $n = $this.$uniforms.$size0;
    $this.$locations = $rt_createIntArray($n);
    $i = 0;
    while ($i < $n) {
        a: {
            $input = cbgu_Array_get($this.$uniforms, $i);
            $validator = cbgu_Array_get($this.$validators, $i);
            $setter = cbgu_Array_get($this.$setters, $i);
            if ($validator !== null) {
                b: {
                    $attr = $validator;
                    if ($renderable !== null) {
                        $validator = $renderable.$material;
                        if ($validator !== null) {
                            var$9 = $validator.$mask;
                            break b;
                        }
                    }
                    var$9 = Long_ZERO;
                }
                c: {
                    if ($renderable !== null) {
                        $validator = $renderable.$environment;
                        if ($validator !== null) {
                            var$10 = $validator.$mask;
                            break c;
                        }
                    }
                    var$10 = Long_ZERO;
                }
                d: {
                    var$11 = $attr.$materialMask;
                    if (Long_eq(Long_and(var$9, var$11), var$11)) {
                        var$11 = $attr.$environmentMask;
                        if (Long_eq(Long_and(var$10, var$11), var$11)) {
                            var$9 = Long_or(var$9, var$10);
                            var$10 = $attr.$overallMask;
                            if (Long_eq(Long_and(var$9, var$10), var$10)) {
                                $location = 1;
                                break d;
                            }
                        }
                    }
                    $location = 0;
                }
                if (!$location) {
                    $this.$locations.data[$i] = (-1);
                    break a;
                }
            }
            $this.$locations.data[$i] = cbggg_ShaderProgram_fetchUniformLocation($program, $input, 0);
            if ($this.$locations.data[$i] >= 0 && $setter !== null) {
                if (!$setter.$isGlobal($this, $i))
                    cbgu_IntArray_add($this.$localUniforms, $i);
                else
                    cbgu_IntArray_add($this.$globalUniforms, $i);
            }
        }
        if ($this.$locations.data[$i] < 0) {
            cbgu_Array_set($this.$validators, $i, null);
            cbgu_Array_set($this.$setters, $i, null);
        }
        $i = $i + 1 | 0;
    }
    e: {
        if ($renderable !== null) {
            $attrs = cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh);
            $c = cbgg_VertexAttributes_size($attrs);
            $i = 0;
            while ($i < $c) {
                $attr = cbgg_VertexAttributes_get($attrs, $i);
                $location = cbggg_ShaderProgram_getAttributeLocation($program, $attr.$alias);
                if ($location >= 0)
                    cbgu_IntIntMap_put($this.$attributes6, cbgg_VertexAttribute_getKey($attr), $location);
                $i = $i + 1 | 0;
            }
            $iattrs = cbgg_Mesh_getInstancedAttributes($renderable.$meshPart.$mesh);
            if ($iattrs !== null) {
                $ic = cbgg_VertexAttributes_size($iattrs);
                $i = 0;
                while (true) {
                    if ($i >= $ic)
                        break e;
                    $attr = cbgg_VertexAttributes_get($iattrs, $i);
                    $location = cbggg_ShaderProgram_getAttributeLocation($program, $attr.$alias);
                    if ($location >= 0)
                        cbgu_IntIntMap_put($this.$instancedAttributes, cbgg_VertexAttribute_getKey($attr), $location);
                    $i = $i + 1 | 0;
                }
            }
        }
    }
},
cbgggs_BaseShader_render = ($this, $renderable) => {
    let var$2, var$3;
    var$2 = $renderable.$worldTransform.$val.data;
    if (var$2[0] * var$2[5] * var$2[10] + var$2[4] * var$2[9] * var$2[2] + var$2[8] * var$2[1] * var$2[6] - var$2[0] * var$2[9] * var$2[6] - var$2[4] * var$2[1] * var$2[10] - var$2[8] * var$2[5] * var$2[2] === 0.0)
        return;
    cbggg_Attributes_clear($this.$combinedAttributes);
    var$3 = $renderable.$environment;
    if (var$3 !== null)
        cbggg_Attributes_set0($this.$combinedAttributes, var$3);
    var$3 = $renderable.$material;
    if (var$3 !== null)
        cbggg_Attributes_set0($this.$combinedAttributes, var$3);
    $this.$render6($renderable, $this.$combinedAttributes);
},
cbgggs_BaseShader_has = ($this, $inputID) => {
    let var$2;
    a: {
        if ($inputID >= 0) {
            var$2 = $this.$locations.data;
            if ($inputID < var$2.length && var$2[$inputID] >= 0) {
                $inputID = 1;
                break a;
            }
        }
        $inputID = 0;
    }
    return $inputID;
},
cbgggs_BaseShader_loc = ($this, $inputID) => {
    let var$2;
    a: {
        if ($inputID >= 0) {
            var$2 = $this.$locations.data;
            if ($inputID < var$2.length) {
                $inputID = var$2[$inputID];
                break a;
            }
        }
        $inputID = (-1);
    }
    return $inputID;
},
cbgggs_BaseShader_set2 = ($this, $uniform, $value) => {
    let var$3;
    var$3 = $this.$locations.data;
    if (var$3[$uniform] < 0)
        return 0;
    cbggg_ShaderProgram_setUniformMatrix1($this.$program, var$3[$uniform], $value, 0);
    return 1;
},
cbgggs_BaseShader_set5 = ($this, $uniform, $value) => {
    let var$3;
    var$3 = $this.$locations.data;
    if (var$3[$uniform] < 0)
        return 0;
    cbggg_ShaderProgram_setUniformMatrix($this.$program, var$3[$uniform], $value);
    return 1;
},
cbgggs_BaseShader_set4 = ($this, $uniform, $value) => {
    let var$3;
    var$3 = $this.$locations.data;
    if (var$3[$uniform] < 0)
        return 0;
    cbggg_ShaderProgram_setUniformf2($this.$program, var$3[$uniform], $value);
    return 1;
},
cbgggs_BaseShader_set3 = ($this, $uniform, $value) => {
    let var$3;
    var$3 = $this.$locations.data;
    if (var$3[$uniform] < 0)
        return 0;
    cbggg_ShaderProgram_setUniformf($this.$program, var$3[$uniform], $value.$r, $value.$g, $value.$b, $value.$a);
    return 1;
},
cbgggs_BaseShader_set0 = ($this, $uniform, $value) => {
    let var$3;
    var$3 = $this.$locations.data;
    if (var$3[$uniform] < 0)
        return 0;
    cbggg_ShaderProgram_setUniformf1($this.$program, var$3[$uniform], $value);
    return 1;
},
cbgggs_BaseShader_set6 = ($this, $uniform, $v1, $v2) => {
    let var$4;
    var$4 = $this.$locations.data;
    if (var$4[$uniform] < 0)
        return 0;
    cbggg_ShaderProgram_setUniformf3($this.$program, var$4[$uniform], $v1, $v2);
    return 1;
},
cbgggs_BaseShader_set7 = ($this, $uniform, $v1, $v2, $v3) => {
    let var$5;
    var$5 = $this.$locations.data;
    if (var$5[$uniform] < 0)
        return 0;
    cbggg_ShaderProgram_setUniformf0($this.$program, var$5[$uniform], $v1, $v2, $v3);
    return 1;
},
cbgggs_BaseShader_set1 = ($this, $uniform, $v1, $v2, $v3, $v4) => {
    let var$6;
    var$6 = $this.$locations.data;
    if (var$6[$uniform] < 0)
        return 0;
    cbggg_ShaderProgram_setUniformf($this.$program, var$6[$uniform], $v1, $v2, $v3, $v4);
    return 1;
},
cbgggs_BaseShader_set = ($this, $uniform, $value) => {
    let var$3;
    var$3 = $this.$locations.data;
    if (var$3[$uniform] < 0)
        return 0;
    cbggg_ShaderProgram_setUniformi($this.$program, var$3[$uniform], $value);
    return 1;
},
cbgggs_BaseShader_set8 = ($this, $uniform, $textureDesc) => {
    let var$3;
    var$3 = $this.$locations.data;
    if (var$3[$uniform] < 0)
        return 0;
    cbggg_ShaderProgram_setUniformi($this.$program, var$3[$uniform], cbgggu_DefaultTextureBinder_bind($this.$context.$textureBinder, $textureDesc));
    return 1;
};
function cbgggs_DefaultShader() {
    let a = this; cbgggs_BaseShader.call(a);
    a.$u_projTrans = 0;
    a.$u_viewTrans = 0;
    a.$u_projViewTrans = 0;
    a.$u_cameraPosition = 0;
    a.$u_cameraDirection = 0;
    a.$u_cameraUp = 0;
    a.$u_cameraNearFar = 0;
    a.$u_time = 0;
    a.$u_worldTrans = 0;
    a.$u_viewWorldTrans = 0;
    a.$u_projViewWorldTrans = 0;
    a.$u_normalMatrix = 0;
    a.$u_bones = 0;
    a.$u_shininess = 0;
    a.$u_opacity = 0;
    a.$u_diffuseColor = 0;
    a.$u_diffuseTexture = 0;
    a.$u_diffuseUVTransform = 0;
    a.$u_specularColor = 0;
    a.$u_specularTexture = 0;
    a.$u_specularUVTransform = 0;
    a.$u_emissiveColor = 0;
    a.$u_emissiveTexture = 0;
    a.$u_emissiveUVTransform = 0;
    a.$u_reflectionColor = 0;
    a.$u_reflectionTexture = 0;
    a.$u_reflectionUVTransform = 0;
    a.$u_normalTexture = 0;
    a.$u_normalUVTransform = 0;
    a.$u_ambientTexture = 0;
    a.$u_ambientUVTransform = 0;
    a.$u_alphaTest = 0;
    a.$u_ambientCubemap = 0;
    a.$u_environmentCubemap = 0;
    a.$u_dirLights0color = 0;
    a.$u_dirLights0direction = 0;
    a.$u_dirLights1color = 0;
    a.$u_pointLights0color = 0;
    a.$u_pointLights0position = 0;
    a.$u_pointLights0intensity = 0;
    a.$u_pointLights1color = 0;
    a.$u_spotLights0color = 0;
    a.$u_spotLights0position = 0;
    a.$u_spotLights0intensity = 0;
    a.$u_spotLights0direction = 0;
    a.$u_spotLights0cutoffAngle = 0;
    a.$u_spotLights0exponent = 0;
    a.$u_spotLights1color = 0;
    a.$u_fogColor = 0;
    a.$u_shadowMapProjViewTrans = 0;
    a.$u_shadowTexture = 0;
    a.$u_shadowPCFOffset = 0;
    a.$dirLightsLoc = 0;
    a.$dirLightsColorOffset = 0;
    a.$dirLightsDirectionOffset = 0;
    a.$dirLightsSize = 0;
    a.$pointLightsLoc = 0;
    a.$pointLightsColorOffset = 0;
    a.$pointLightsPositionOffset = 0;
    a.$pointLightsIntensityOffset = 0;
    a.$pointLightsSize = 0;
    a.$spotLightsLoc = 0;
    a.$spotLightsColorOffset = 0;
    a.$spotLightsPositionOffset = 0;
    a.$spotLightsDirectionOffset = 0;
    a.$spotLightsIntensityOffset = 0;
    a.$spotLightsCutoffAngleOffset = 0;
    a.$spotLightsExponentOffset = 0;
    a.$spotLightsSize = 0;
    a.$lighting = 0;
    a.$environmentCubemap0 = 0;
    a.$shadowMap0 = 0;
    a.$ambientCubemap = null;
    a.$directionalLights = null;
    a.$pointLights = null;
    a.$spotLights = null;
    a.$renderable = null;
    a.$attributesMask = Long_ZERO;
    a.$vertexMask = Long_ZERO;
    a.$textureCoordinates0 = 0;
    a.$boneWeightsLocations = null;
    a.$config0 = null;
    a.$normalMatrix = null;
    a.$time0 = 0.0;
    a.$lightsSet = 0;
    a.$tmpV11 = null;
}
let cbgggs_DefaultShader_defaultVertexShader = null,
cbgggs_DefaultShader_defaultFragmentShader = null,
cbgggs_DefaultShader_implementedFlags = Long_ZERO,
cbgggs_DefaultShader_defaultCullFace = 0,
cbgggs_DefaultShader_defaultDepthFunc = 0,
cbgggs_DefaultShader_optionalAttributes = Long_ZERO,
cbgggs_DefaultShader_tmpAttributes = null,
cbgggs_DefaultShader_$callClinit = () => {
    cbgggs_DefaultShader_$callClinit = $rt_eraseClinit(cbgggs_DefaultShader);
    cbgggs_DefaultShader__clinit_();
},
cbgggs_DefaultShader__init_1 = ($this, $renderable, $config) => {
    cbgggs_DefaultShader_$callClinit();
    cbgggs_DefaultShader__init_($this, $renderable, $config, cbgggs_DefaultShader_createPrefix($renderable, $config));
},
cbgggs_DefaultShader__init_2 = (var_0, var_1) => {
    let var_2 = new cbgggs_DefaultShader();
    cbgggs_DefaultShader__init_1(var_2, var_0, var_1);
    return var_2;
},
cbgggs_DefaultShader__init_ = ($this, $renderable, $config, $prefix) => {
    let var$4, var$5, var$6, var$7, var$8;
    cbgggs_DefaultShader_$callClinit();
    var$4 = $config.$vertexShader;
    if (var$4 === null) {
        if (cbgggs_DefaultShader_defaultVertexShader === null)
            cbgggs_DefaultShader_defaultVertexShader = cgxgbt_TeaFileHandle_readString(cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(837)));
        var$4 = cbgggs_DefaultShader_defaultVertexShader;
    }
    var$5 = $config.$fragmentShader;
    if (var$5 === null) {
        if (cbgggs_DefaultShader_defaultFragmentShader === null)
            cbgggs_DefaultShader_defaultFragmentShader = cgxgbt_TeaFileHandle_readString(cgxgbt_TeaFiles_classpath(cbg_Gdx_files, $rt_s(838)));
        var$5 = cbgggs_DefaultShader_defaultFragmentShader;
    }
    var$6 = new cbggg_ShaderProgram;
    var$7 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$7);
    jl_AbstractStringBuilder_append(var$7, $prefix);
    jl_AbstractStringBuilder_append(var$7, var$4);
    var$8 = jl_AbstractStringBuilder_toString(var$7);
    var$7 = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_(var$7);
    jl_AbstractStringBuilder_append(var$7, $prefix);
    jl_AbstractStringBuilder_append(var$7, var$5);
    cbggg_ShaderProgram__init_(var$6, var$8, jl_AbstractStringBuilder_toString(var$7));
    cbgggs_DefaultShader__init_0($this, $renderable, $config, var$6);
},
cbgggs_DefaultShader__init_4 = (var_0, var_1, var_2) => {
    let var_3 = new cbgggs_DefaultShader();
    cbgggs_DefaultShader__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgggs_DefaultShader__init_0 = ($this, $renderable, $config, $shaderProgram) => {
    let $attributes, var$5, $boneWeights, $i, var$8, var$9, var$10;
    cbgggs_DefaultShader_$callClinit();
    cbgggs_BaseShader__init_($this);
    $attributes = cbgggs_BaseShader$Uniform__init_($rt_s(839));
    var$5 = $this;
    $this.$u_dirLights0color = cbgggs_BaseShader_register0(var$5, $attributes);
    $this.$u_dirLights0direction = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(840)));
    $this.$u_dirLights1color = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(841)));
    $this.$u_pointLights0color = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(842)));
    $this.$u_pointLights0position = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(843)));
    $this.$u_pointLights0intensity = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(844)));
    $this.$u_pointLights1color = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(845)));
    $this.$u_spotLights0color = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(846)));
    $this.$u_spotLights0position = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(847)));
    $this.$u_spotLights0intensity = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(848)));
    $this.$u_spotLights0direction = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(849)));
    $this.$u_spotLights0cutoffAngle = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(850)));
    $this.$u_spotLights0exponent = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(851)));
    $this.$u_spotLights1color = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(852)));
    $this.$u_fogColor = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(853)));
    $this.$u_shadowMapProjViewTrans = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(854)));
    $this.$u_shadowTexture = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(855)));
    $this.$u_shadowPCFOffset = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(856)));
    $this.$ambientCubemap = cbggge_AmbientCubemap__init_();
    $this.$normalMatrix = cbgm_Matrix3__init_();
    $this.$tmpV11 = cbgm_Vector3__init_();
    $attributes = cbgggs_DefaultShader_combineAttributes($renderable);
    $this.$config0 = $config;
    $this.$program = $shaderProgram;
    $boneWeights = $renderable.$environment === null ? 0 : 1;
    a: {
        b: {
            $this.$lighting = $boneWeights;
            cbggga_CubemapAttribute_$callClinit();
            if (!cbggg_Attributes_has($attributes, cbggga_CubemapAttribute_EnvironmentMap)) {
                if (!$this.$lighting)
                    break b;
                if (!cbggg_Attributes_has($attributes, cbggga_CubemapAttribute_EnvironmentMap))
                    break b;
            }
            $boneWeights = 1;
            break a;
        }
        $boneWeights = 0;
    }
    $this.$environmentCubemap0 = $boneWeights;
    $boneWeights = $this.$lighting && $renderable.$environment.$shadowMap !== null ? 1 : 0;
    c: {
        $this.$shadowMap0 = $boneWeights;
        $this.$renderable = $renderable;
        $this.$attributesMask = Long_or(cbggg_Attributes_getMask($attributes), cbgggs_DefaultShader_optionalAttributes);
        $this.$vertexMask = cbgg_VertexAttributes_getMaskWithSizePacked(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
        $this.$textureCoordinates0 = cbgg_VertexAttributes_getTextureCoordinates(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
        if ($this.$lighting) {
            $boneWeights = $config.$numDirectionalLights;
            if ($boneWeights > 0)
                break c;
        }
        $boneWeights = 0;
    }
    $this.$directionalLights = $rt_createArray(cbggge_DirectionalLight, $boneWeights);
    $i = 0;
    while (true) {
        var$8 = $this.$directionalLights.data;
        if ($i >= var$8.length)
            break;
        var$8[$i] = cbggge_DirectionalLight__init_0();
        $i = $i + 1 | 0;
    }
    d: {
        if ($this.$lighting) {
            $boneWeights = $config.$numPointLights;
            if ($boneWeights > 0)
                break d;
        }
        $boneWeights = 0;
    }
    $this.$pointLights = $rt_createArray(cbggge_PointLight, $boneWeights);
    $i = 0;
    while (true) {
        var$8 = $this.$pointLights.data;
        if ($i >= var$8.length)
            break;
        var$8[$i] = cbggge_PointLight__init_0();
        $i = $i + 1 | 0;
    }
    e: {
        if ($this.$lighting) {
            $boneWeights = $config.$numSpotLights;
            if ($boneWeights > 0)
                break e;
        }
        $boneWeights = 0;
    }
    $this.$spotLights = $rt_createArray(cbggge_SpotLight, $boneWeights);
    $i = 0;
    while (true) {
        var$8 = $this.$spotLights.data;
        if ($i >= var$8.length)
            break;
        var$8[$i] = cbggge_SpotLight__init_();
        $i = $i + 1 | 0;
    }
    if (!$config.$ignoreUnimplemented) {
        var$9 = cbgggs_DefaultShader_implementedFlags;
        var$10 = $this.$attributesMask;
        if (Long_ne(Long_and(var$9, var$10), var$10))
            $rt_throw(cbgu_GdxRuntimeException__init_(jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append5(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(857)), $this.$attributesMask), $rt_s(22)))));
    }
    var$8 = $renderable.$bones;
    if (var$8 !== null && var$8.data.length > $config.$numBones)
        $rt_throw(cbgu_GdxRuntimeException__init_(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(771)), $renderable.$bones.data.length), $rt_s(772)), $config.$numBones))));
    $boneWeights = cbgg_VertexAttributes_getBoneWeights(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
    $i = $config.$numBoneWeights;
    if ($boneWeights > $i)
        $rt_throw(cbgu_GdxRuntimeException__init_(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder__init_(), $rt_s(773)), $boneWeights), $rt_s(772)), $config.$numBoneWeights))));
    if ($renderable.$bones !== null)
        $this.$boneWeightsLocations = $rt_createIntArray($i);
    f: {
        cbgggs_DefaultShader$Inputs_$callClinit();
        $shaderProgram = cbgggs_DefaultShader$Inputs_projTrans;
        cbgggs_DefaultShader$Setters_$callClinit();
        $this.$u_projTrans = cbgggs_BaseShader_register(var$5, $shaderProgram, cbgggs_DefaultShader$Setters_projTrans);
        $this.$u_viewTrans = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_viewTrans, cbgggs_DefaultShader$Setters_viewTrans);
        $this.$u_projViewTrans = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_projViewTrans, cbgggs_DefaultShader$Setters_projViewTrans);
        $this.$u_cameraPosition = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_cameraPosition, cbgggs_DefaultShader$Setters_cameraPosition);
        $this.$u_cameraDirection = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_cameraDirection, cbgggs_DefaultShader$Setters_cameraDirection);
        $this.$u_cameraUp = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_cameraUp, cbgggs_DefaultShader$Setters_cameraUp);
        $this.$u_cameraNearFar = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_cameraNearFar, cbgggs_DefaultShader$Setters_cameraNearFar);
        $this.$u_time = cbgggs_BaseShader_register0(var$5, cbgggs_BaseShader$Uniform__init_($rt_s(858)));
        $this.$u_worldTrans = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_worldTrans, cbgggs_DefaultShader$Setters_worldTrans);
        $this.$u_viewWorldTrans = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_viewWorldTrans, cbgggs_DefaultShader$Setters_viewWorldTrans);
        $this.$u_projViewWorldTrans = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_projViewWorldTrans, cbgggs_DefaultShader$Setters_projViewWorldTrans);
        $this.$u_normalMatrix = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_normalMatrix, cbgggs_DefaultShader$Setters_normalMatrix);
        if ($renderable.$bones !== null) {
            $boneWeights = $config.$numBones;
            if ($boneWeights > 0) {
                $boneWeights = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_bones, cbgggs_DefaultShader$Setters$Bones__init_0($boneWeights));
                break f;
            }
        }
        $boneWeights = (-1);
    }
    $this.$u_bones = $boneWeights;
    $this.$u_shininess = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_shininess, cbgggs_DefaultShader$Setters_shininess);
    $this.$u_opacity = cbgggs_BaseShader_register0(var$5, cbgggs_DefaultShader$Inputs_opacity);
    $this.$u_diffuseColor = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_diffuseColor, cbgggs_DefaultShader$Setters_diffuseColor);
    $this.$u_diffuseTexture = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_diffuseTexture, cbgggs_DefaultShader$Setters_diffuseTexture);
    $this.$u_diffuseUVTransform = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_diffuseUVTransform, cbgggs_DefaultShader$Setters_diffuseUVTransform);
    $this.$u_specularColor = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_specularColor, cbgggs_DefaultShader$Setters_specularColor);
    $this.$u_specularTexture = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_specularTexture, cbgggs_DefaultShader$Setters_specularTexture);
    $this.$u_specularUVTransform = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_specularUVTransform, cbgggs_DefaultShader$Setters_specularUVTransform);
    $this.$u_emissiveColor = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_emissiveColor, cbgggs_DefaultShader$Setters_emissiveColor);
    $this.$u_emissiveTexture = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_emissiveTexture, cbgggs_DefaultShader$Setters_emissiveTexture);
    $this.$u_emissiveUVTransform = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_emissiveUVTransform, cbgggs_DefaultShader$Setters_emissiveUVTransform);
    $this.$u_reflectionColor = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_reflectionColor, cbgggs_DefaultShader$Setters_reflectionColor);
    $this.$u_reflectionTexture = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_reflectionTexture, cbgggs_DefaultShader$Setters_reflectionTexture);
    $this.$u_reflectionUVTransform = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_reflectionUVTransform, cbgggs_DefaultShader$Setters_reflectionUVTransform);
    $this.$u_normalTexture = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_normalTexture, cbgggs_DefaultShader$Setters_normalTexture);
    $this.$u_normalUVTransform = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_normalUVTransform, cbgggs_DefaultShader$Setters_normalUVTransform);
    $this.$u_ambientTexture = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_ambientTexture, cbgggs_DefaultShader$Setters_ambientTexture);
    $this.$u_ambientUVTransform = cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_ambientUVTransform, cbgggs_DefaultShader$Setters_ambientUVTransform);
    $this.$u_alphaTest = cbgggs_BaseShader_register0(var$5, cbgggs_DefaultShader$Inputs_alphaTest);
    $this.$u_ambientCubemap = !$this.$lighting ? (-1) : cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_ambientCube, cbgggs_DefaultShader$Setters$ACubemap__init_0($config.$numDirectionalLights, $config.$numPointLights));
    $this.$u_environmentCubemap = !$this.$environmentCubemap0 ? (-1) : cbgggs_BaseShader_register(var$5, cbgggs_DefaultShader$Inputs_environmentCubemap, cbgggs_DefaultShader$Setters_environmentCubemap);
},
cbgggs_DefaultShader__init_3 = (var_0, var_1, var_2) => {
    let var_3 = new cbgggs_DefaultShader();
    cbgggs_DefaultShader__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgggs_DefaultShader_init = $this => {
    let $program, $i, var$3, var$4;
    $program = $this.$program;
    $this.$program = null;
    $this.$init0($program, $this.$renderable);
    $this.$renderable = null;
    $this.$dirLightsLoc = cbgggs_BaseShader_loc($this, $this.$u_dirLights0color);
    $this.$dirLightsColorOffset = cbgggs_BaseShader_loc($this, $this.$u_dirLights0color) - $this.$dirLightsLoc | 0;
    $this.$dirLightsDirectionOffset = cbgggs_BaseShader_loc($this, $this.$u_dirLights0direction) - $this.$dirLightsLoc | 0;
    $i = cbgggs_BaseShader_loc($this, $this.$u_dirLights1color) - $this.$dirLightsLoc | 0;
    $this.$dirLightsSize = $i;
    if ($i < 0)
        $this.$dirLightsSize = 0;
    $this.$pointLightsLoc = cbgggs_BaseShader_loc($this, $this.$u_pointLights0color);
    $this.$pointLightsColorOffset = cbgggs_BaseShader_loc($this, $this.$u_pointLights0color) - $this.$pointLightsLoc | 0;
    $this.$pointLightsPositionOffset = cbgggs_BaseShader_loc($this, $this.$u_pointLights0position) - $this.$pointLightsLoc | 0;
    $this.$pointLightsIntensityOffset = !cbgggs_BaseShader_has($this, $this.$u_pointLights0intensity) ? (-1) : cbgggs_BaseShader_loc($this, $this.$u_pointLights0intensity) - $this.$pointLightsLoc | 0;
    $i = cbgggs_BaseShader_loc($this, $this.$u_pointLights1color) - $this.$pointLightsLoc | 0;
    $this.$pointLightsSize = $i;
    if ($i < 0)
        $this.$pointLightsSize = 0;
    $this.$spotLightsLoc = cbgggs_BaseShader_loc($this, $this.$u_spotLights0color);
    $this.$spotLightsColorOffset = cbgggs_BaseShader_loc($this, $this.$u_spotLights0color) - $this.$spotLightsLoc | 0;
    $this.$spotLightsPositionOffset = cbgggs_BaseShader_loc($this, $this.$u_spotLights0position) - $this.$spotLightsLoc | 0;
    $this.$spotLightsDirectionOffset = cbgggs_BaseShader_loc($this, $this.$u_spotLights0direction) - $this.$spotLightsLoc | 0;
    $this.$spotLightsIntensityOffset = !cbgggs_BaseShader_has($this, $this.$u_spotLights0intensity) ? (-1) : cbgggs_BaseShader_loc($this, $this.$u_spotLights0intensity) - $this.$spotLightsLoc | 0;
    $this.$spotLightsCutoffAngleOffset = cbgggs_BaseShader_loc($this, $this.$u_spotLights0cutoffAngle) - $this.$spotLightsLoc | 0;
    $this.$spotLightsExponentOffset = cbgggs_BaseShader_loc($this, $this.$u_spotLights0exponent) - $this.$spotLightsLoc | 0;
    $i = cbgggs_BaseShader_loc($this, $this.$u_spotLights1color) - $this.$spotLightsLoc | 0;
    $this.$spotLightsSize = $i;
    if ($i < 0)
        $this.$spotLightsSize = 0;
    a: {
        if ($this.$boneWeightsLocations !== null) {
            $i = 0;
            while (true) {
                var$3 = $this.$boneWeightsLocations.data;
                if ($i >= var$3.length)
                    break a;
                var$4 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$4);
                jl_AbstractStringBuilder_append(var$4, $rt_s(859));
                var$3[$i] = cbggg_ShaderProgram_getAttributeLocation($program, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1(var$4, $i)));
                $i = $i + 1 | 0;
            }
        }
    }
},
cbgggs_DefaultShader_and = ($mask, $flag) => {
    cbgggs_DefaultShader_$callClinit();
    return Long_ne(Long_and($mask, $flag), $flag) ? 0 : 1;
},
cbgggs_DefaultShader_or = ($mask, $flag) => {
    cbgggs_DefaultShader_$callClinit();
    return Long_eq(Long_and($mask, $flag), Long_ZERO) ? 0 : 1;
},
cbgggs_DefaultShader_combineAttributes = $renderable => {
    let var$2;
    cbgggs_DefaultShader_$callClinit();
    cbggg_Attributes_clear(cbgggs_DefaultShader_tmpAttributes);
    var$2 = $renderable.$environment;
    if (var$2 !== null)
        cbggg_Attributes_set0(cbgggs_DefaultShader_tmpAttributes, var$2);
    $renderable = $renderable.$material;
    if ($renderable !== null)
        cbggg_Attributes_set0(cbgggs_DefaultShader_tmpAttributes, $renderable);
    return cbgggs_DefaultShader_tmpAttributes;
},
cbgggs_DefaultShader_createPrefix = ($renderable, $config) => {
    let $attributes, $prefix, $attributesMask, $vertexMask, $attr, $n, $i, var$10;
    cbgggs_DefaultShader_$callClinit();
    $attributes = cbgggs_DefaultShader_combineAttributes($renderable);
    $prefix = $rt_s(8);
    $attributesMask = cbggg_Attributes_getMask($attributes);
    $vertexMask = cbgg_VertexAttributes_getMask(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
    if (cbgggs_DefaultShader_and($vertexMask, Long_fromInt(1)))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(860)));
    if (cbgggs_DefaultShader_or($vertexMask, Long_fromInt(6)))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(861)));
    if (cbgggs_DefaultShader_and($vertexMask, Long_fromInt(256)))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(862)));
    if (cbgggs_DefaultShader_and($vertexMask, Long_fromInt(128)))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(863)));
    if (cbgggs_DefaultShader_and($vertexMask, Long_fromInt(8)))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(864)));
    if (!(!cbgggs_DefaultShader_and($vertexMask, Long_fromInt(8)) && !cbgggs_DefaultShader_and($vertexMask, Long_fromInt(384))) && $renderable.$environment !== null) {
        $attr = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(865)));
        $attr = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attr), $rt_s(866)));
        $attr = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attr), $rt_s(867)), $config.$numDirectionalLights), $rt_s(30)));
        $attr = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attr), $rt_s(868)), $config.$numPointLights), $rt_s(30)));
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attr), $rt_s(869)), $config.$numSpotLights), $rt_s(30)));
        cbggga_ColorAttribute_$callClinit();
        if (cbggg_Attributes_has($attributes, cbggga_ColorAttribute_Fog))
            $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(870)));
        if ($renderable.$environment.$shadowMap !== null)
            $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(871)));
        cbggga_CubemapAttribute_$callClinit();
        if (cbggg_Attributes_has($attributes, cbggga_CubemapAttribute_EnvironmentMap))
            $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(872)));
    }
    $n = cbgg_VertexAttributes_size(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh));
    $i = 0;
    while ($i < $n) {
        $attr = cbgg_VertexAttributes_get(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh), $i);
        if ($attr.$usage == 16)
            $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(873)), $attr.$unit), $rt_s(652)));
        $i = $i + 1 | 0;
    }
    if ($renderable.$bones !== null) {
        $i = 0;
        while ($i < $config.$numBoneWeights) {
            $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(874)), $i), $rt_s(652)));
            $i = $i + 1 | 0;
        }
    }
    cbggga_BlendingAttribute_$callClinit();
    var$10 = cbggga_BlendingAttribute_Type;
    if (Long_eq(Long_and($attributesMask, var$10), var$10))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(875)));
    cbggga_TextureAttribute_$callClinit();
    var$10 = cbggga_TextureAttribute_Diffuse;
    if (Long_eq(Long_and($attributesMask, var$10), var$10)) {
        $attributes = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(876)));
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attributes), $rt_s(877)));
    }
    var$10 = cbggga_TextureAttribute_Specular;
    if (Long_eq(Long_and($attributesMask, var$10), var$10)) {
        $attributes = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(878)));
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attributes), $rt_s(879)));
    }
    var$10 = cbggga_TextureAttribute_Normal;
    if (Long_eq(Long_and($attributesMask, var$10), var$10)) {
        $attributes = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(880)));
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attributes), $rt_s(881)));
    }
    var$10 = cbggga_TextureAttribute_Emissive;
    if (Long_eq(Long_and($attributesMask, var$10), var$10)) {
        $attributes = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(882)));
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attributes), $rt_s(883)));
    }
    var$10 = cbggga_TextureAttribute_Reflection;
    if (Long_eq(Long_and($attributesMask, var$10), var$10)) {
        $attributes = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(884)));
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attributes), $rt_s(885)));
    }
    var$10 = cbggga_TextureAttribute_Ambient;
    if (Long_eq(Long_and($attributesMask, var$10), var$10)) {
        $attributes = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(886)));
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $attributes), $rt_s(887)));
    }
    cbggga_ColorAttribute_$callClinit();
    var$10 = cbggga_ColorAttribute_Diffuse;
    if (Long_eq(Long_and($attributesMask, var$10), var$10))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(888)));
    var$10 = cbggga_ColorAttribute_Specular;
    if (Long_eq(Long_and($attributesMask, var$10), var$10))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(671)));
    var$10 = cbggga_ColorAttribute_Emissive;
    if (Long_eq(Long_and($attributesMask, var$10), var$10))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(889)));
    var$10 = cbggga_ColorAttribute_Reflection;
    if (Long_eq(Long_and($attributesMask, var$10), var$10))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(890)));
    cbggga_FloatAttribute_$callClinit();
    var$10 = cbggga_FloatAttribute_Shininess;
    if (Long_eq(Long_and($attributesMask, var$10), var$10))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(891)));
    var$10 = cbggga_FloatAttribute_AlphaTest;
    if (Long_eq(Long_and($attributesMask, var$10), var$10))
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(892)));
    if ($renderable.$bones !== null && $config.$numBones > 0)
        $prefix = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append0(jl_StringBuilder__init_(), $prefix), $rt_s(893)), $config.$numBones), $rt_s(30)));
    return $prefix;
},
cbgggs_DefaultShader_canRender = ($this, $renderable) => {
    let var$2, $renderableMask, var$4;
    var$2 = $renderable.$bones;
    if (var$2 !== null) {
        if (var$2.data.length > $this.$config0.$numBones)
            return 0;
        if (cbgg_VertexAttributes_getBoneWeights(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh)) > $this.$config0.$numBoneWeights)
            return 0;
    }
    if (cbgg_VertexAttributes_getTextureCoordinates(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh)) != $this.$textureCoordinates0)
        return 0;
    cbgggs_DefaultShader_$callClinit();
    $renderableMask = Long_ZERO;
    var$4 = $renderable.$environment;
    if (var$4 !== null)
        $renderableMask = Long_or($renderableMask, var$4.$mask);
    var$4 = $renderable.$material;
    if (var$4 !== null)
        $renderableMask = Long_or($renderableMask, var$4.$mask);
    return Long_eq($this.$attributesMask, Long_or($renderableMask, cbgggs_DefaultShader_optionalAttributes)) && Long_eq($this.$vertexMask, cbgg_VertexAttributes_getMaskWithSizePacked(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh))) && ($renderable.$environment === null ? 0 : 1) == $this.$lighting ? 1 : 0;
},
cbgggs_DefaultShader_equals0 = ($this, $obj) => {
    return $obj instanceof cbgggs_DefaultShader && cbgggs_DefaultShader_equals($this, $obj) ? 1 : 0;
},
cbgggs_DefaultShader_equals = ($this, $obj) => {
    return $obj !== $this ? 0 : 1;
},
cbgggs_DefaultShader_begin = ($this, $camera, $context) => {
    let var$3, var$4, var$5, $dirLight, $pointLight, $spotLight, var$9, $location;
    $this.$camera = $camera;
    $this.$context = $context;
    cbggg_ShaderProgram_bind($this.$program);
    $this.$currentMesh = null;
    var$3 = 0;
    while (true) {
        $camera = $this.$globalUniforms;
        if (var$3 >= $camera.$size1)
            break;
        $context = $this.$setters;
        var$4 = cbgu_IntArray_get($camera, var$3);
        if (cbgu_Array_get($context, var$4) !== null)
            (cbgu_Array_get($this.$setters, var$4)).$set20($this, var$4, null, null);
        var$3 = var$3 + 1 | 0;
    }
    var$5 = $this.$directionalLights.data;
    var$3 = var$5.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $dirLight = var$5[var$4];
        cbgg_Color_set($dirLight.$color1, 0.0, 0.0, 0.0, 1.0);
        cbgm_Vector3_nor(cbgm_Vector3_set($dirLight.$direction, 0.0, (-1.0), 0.0));
        var$4 = var$4 + 1 | 0;
    }
    var$5 = $this.$pointLights.data;
    var$3 = var$5.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $pointLight = var$5[var$4];
        cbgg_Color_set($pointLight.$color1, 0.0, 0.0, 0.0, 1.0);
        cbgm_Vector3_set($pointLight.$position2, 0.0, 0.0, 0.0);
        $pointLight.$intensity = 0.0;
        var$4 = var$4 + 1 | 0;
    }
    var$5 = $this.$spotLights.data;
    var$4 = var$5.length;
    var$3 = 0;
    while (var$3 < var$4) {
        $spotLight = var$5[var$3];
        cbgg_Color_set($spotLight.$color1, 0.0, 0.0, 0.0, 1.0);
        cbgm_Vector3_set($spotLight.$position4, 0.0, 0.0, 0.0);
        cbgm_Vector3_nor(cbgm_Vector3_set($spotLight.$direction1, 0.0, (-1.0), 0.0));
        $spotLight.$intensity0 = 0.0;
        $spotLight.$cutoffAngle = 1.0;
        $spotLight.$exponent = 0.0;
        var$3 = var$3 + 1 | 0;
    }
    $this.$lightsSet = 0;
    if (cbgggs_BaseShader_has($this, $this.$u_time)) {
        var$3 = $this.$u_time;
        var$9 = $this.$time0 + cbg_Gdx_graphics.$deltaTime;
        $this.$time0 = var$9;
        cbgggs_BaseShader_set0($this, var$3, var$9);
    }
    a: {
        var$5 = $this.$boneWeightsLocations;
        if (var$5 !== null) {
            var$5 = var$5.data;
            var$3 = var$5.length;
            var$4 = 0;
            while (true) {
                if (var$4 >= var$3)
                    break a;
                $location = var$5[var$4];
                if ($location >= 0)
                    cbg_Gdx_gl.$glVertexAttrib2f($location, 0.0, 0.0);
                var$4 = var$4 + 1 | 0;
            }
        }
    }
},
cbgggs_DefaultShader_render = ($this, $renderable, $combinedAttributes) => {
    let var$3, var$4, var$5, var$6, var$7, var$8;
    cbggga_BlendingAttribute_$callClinit();
    if (!cbggg_Attributes_has($combinedAttributes, cbggga_BlendingAttribute_Type))
        cbgggu_RenderContext_setBlending($this.$context, 0, 770, 771);
    $this.$bindMaterial($combinedAttributes);
    if ($this.$lighting)
        $this.$bindLights($renderable, $combinedAttributes);
    var$3 = 0;
    while (true) {
        var$4 = $this.$localUniforms;
        if (var$3 >= var$4.$size1)
            break;
        var$5 = $this.$setters;
        var$6 = cbgu_IntArray_get(var$4, var$3);
        if (cbgu_Array_get(var$5, var$6) !== null)
            (cbgu_Array_get($this.$setters, var$6)).$set20($this, var$6, $renderable, $combinedAttributes);
        var$3 = var$3 + 1 | 0;
    }
    $combinedAttributes = $this.$currentMesh;
    if ($combinedAttributes !== $renderable.$meshPart.$mesh) {
        if ($combinedAttributes !== null)
            cbgg_Mesh_unbind($combinedAttributes, $this.$program, $this.$tempArray.$items1, $this.$tempArray2.$items1);
        $combinedAttributes = $renderable.$meshPart.$mesh;
        $this.$currentMesh = $combinedAttributes;
        var$4 = $this.$program;
        var$5 = cbgg_Mesh_getVertexAttributes($combinedAttributes);
        cbgu_IntArray_clear($this.$tempArray);
        var$3 = cbgg_VertexAttributes_size(var$5);
        var$6 = 0;
        while (var$6 < var$3) {
            cbgu_IntArray_add($this.$tempArray, cbgu_IntIntMap_get($this.$attributes6, cbgg_VertexAttribute_getKey(cbgg_VertexAttributes_get(var$5, var$6)), (-1)));
            var$6 = var$6 + 1 | 0;
        }
        cbgu_IntArray_shrink($this.$tempArray);
        var$7 = $this.$tempArray.$items1;
        var$5 = cbgg_Mesh_getInstancedAttributes($renderable.$meshPart.$mesh);
        if (var$5 === null)
            var$8 = null;
        else {
            cbgu_IntArray_clear($this.$tempArray2);
            var$3 = cbgg_VertexAttributes_size(var$5);
            var$6 = 0;
            while (var$6 < var$3) {
                cbgu_IntArray_add($this.$tempArray2, cbgu_IntIntMap_get($this.$instancedAttributes, cbgg_VertexAttribute_getKey(cbgg_VertexAttributes_get(var$5, var$6)), (-1)));
                var$6 = var$6 + 1 | 0;
            }
            cbgu_IntArray_shrink($this.$tempArray2);
            var$8 = $this.$tempArray2.$items1;
        }
        cbgg_Mesh_bind($combinedAttributes, var$4, var$7, var$8);
    }
    $renderable = $renderable.$meshPart;
    $combinedAttributes = $this.$program;
    cbgg_Mesh_render($renderable.$mesh, $combinedAttributes, $renderable.$primitiveType, $renderable.$offset0, $renderable.$size9, 0);
},
cbgggs_DefaultShader_end = $this => {
    let var$1;
    var$1 = $this.$currentMesh;
    if (var$1 !== null) {
        cbgg_Mesh_unbind(var$1, $this.$program, $this.$tempArray.$items1, $this.$tempArray2.$items1);
        $this.$currentMesh = null;
    }
},
cbgggs_DefaultShader_bindMaterial = ($this, $attributes) => {
    let $attr, $cullFace, $depthFunc, $depthRangeNear, $depthRangeFar, $depthMask, var$8, var$9, var$10, $t, var$12, $dta;
    $attr = $this.$config0;
    $cullFace = $attr.$defaultCullFace;
    if ($cullFace == (-1)) {
        cbgggs_DefaultShader_$callClinit();
        $cullFace = cbgggs_DefaultShader_defaultCullFace;
    }
    $depthFunc = $attr.$defaultDepthFunc;
    if ($depthFunc == (-1)) {
        cbgggs_DefaultShader_$callClinit();
        $depthFunc = cbgggs_DefaultShader_defaultDepthFunc;
    }
    $depthRangeNear = 0.0;
    $depthRangeFar = 1.0;
    $depthMask = 1;
    var$8 = cbggg_Attributes_iterator($attributes);
    while (true) {
        if (!cbgu_Array$ArrayIterator_hasNext(var$8)) {
            $attributes = $this.$context;
            if ($cullFace != $attributes.$cullFace) {
                $attributes.$cullFace = $cullFace;
                if ($cullFace != 1028 && $cullFace != 1029 && $cullFace != 1032)
                    cbg_Gdx_gl.$glDisable(2884);
                else {
                    cbg_Gdx_gl.$glEnable(2884);
                    cbg_Gdx_gl.$glCullFace($cullFace);
                }
            }
            $attr = $this.$context;
            $cullFace = $attr.$depthFunc;
            var$9 = !$cullFace ? 0 : 1;
            var$10 = !$depthFunc ? 0 : 1;
            if ($cullFace != $depthFunc) {
                $attr.$depthFunc = $depthFunc;
                if (!var$10)
                    cbg_Gdx_gl.$glDisable(2929);
                else {
                    cbg_Gdx_gl.$glEnable(2929);
                    cbg_Gdx_gl.$glDepthFunc($depthFunc);
                }
            }
            if (var$10) {
                if (!(var$9 && $attr.$depthFunc == $depthFunc)) {
                    $attributes = cbg_Gdx_gl;
                    $attr.$depthFunc = $depthFunc;
                    $attributes.$glDepthFunc($depthFunc);
                }
                if (!(var$9 && $attr.$depthRangeNear0 === $depthRangeNear && $attr.$depthRangeFar0 === $depthRangeFar)) {
                    $attributes = cbg_Gdx_gl;
                    $attr.$depthRangeNear0 = $depthRangeNear;
                    $attr.$depthRangeFar0 = $depthRangeFar;
                    $attributes.$glDepthRangef($depthRangeNear, $depthRangeFar);
                }
            }
            $attributes = $this.$context;
            if ($attributes.$depthMask0 != $depthMask) {
                $attr = cbg_Gdx_gl;
                $attributes.$depthMask0 = $depthMask;
                $attr.$glDepthMask($depthMask);
            }
            return;
        }
        $attr = cbgu_Array$ArrayIterator_next(var$8);
        $t = $attr.$type0;
        cbggga_BlendingAttribute_$callClinit();
        if (Long_ne(Long_and($t, cbggga_BlendingAttribute_Type), $t) ? 0 : 1) {
            $attributes = $this.$context;
            $attr = $attr;
            cbgggu_RenderContext_setBlending($attributes, 1, $attr.$sourceFunction, $attr.$destFunction);
            cbgggs_BaseShader_set0($this, $this.$u_opacity, $attr.$opacity);
        } else {
            cbggga_IntAttribute_$callClinit();
            var$12 = cbggga_IntAttribute_CullFace;
            if (Long_eq(Long_and($t, var$12), var$12))
                $cullFace = $attr.$value6;
            else {
                cbggga_FloatAttribute_$callClinit();
                var$12 = cbggga_FloatAttribute_AlphaTest;
                if (Long_eq(Long_and($t, var$12), var$12))
                    cbgggs_BaseShader_set0($this, $this.$u_alphaTest, $attr.$value);
                else {
                    cbggga_DepthTestAttribute_$callClinit();
                    var$12 = cbggga_DepthTestAttribute_Type;
                    if (Long_eq(Long_and($t, var$12), var$12)) {
                        $dta = $attr;
                        $depthFunc = $dta.$depthFunc0;
                        $depthRangeNear = $dta.$depthRangeNear;
                        $depthRangeFar = $dta.$depthRangeFar;
                        $depthMask = $dta.$depthMask;
                    } else if (!$this.$config0.$ignoreUnimplemented)
                        break;
                }
            }
        }
    }
    $attributes = new cbgu_GdxRuntimeException;
    $dta = new jl_StringBuilder;
    jl_AbstractStringBuilder__init_($dta);
    jl_AbstractStringBuilder_append($dta, $rt_s(894));
    jl_AbstractStringBuilder_append($dta, cbggg_Attribute_toString($attr));
    jl_Exception__init_($attributes, jl_AbstractStringBuilder_toString($dta));
    $rt_throw($attributes);
},
cbgggs_DefaultShader_bindLights = ($this, $renderable, $attributes) => {
    let $lights, $dla, $dirs, $pla, $points, $sla, $spots, $i, var$11, $idx, var$13;
    $lights = $renderable.$environment;
    cbggga_DirectionalLightsAttribute_$callClinit();
    $dla = cbggg_Attributes_get0($attributes, $rt_cls(cbggga_DirectionalLightsAttribute), cbggga_DirectionalLightsAttribute_Type);
    $dirs = $dla !== null ? $dla.$lights1 : null;
    cbggga_PointLightsAttribute_$callClinit();
    $pla = cbggg_Attributes_get0($attributes, $rt_cls(cbggga_PointLightsAttribute), cbggga_PointLightsAttribute_Type);
    $points = $pla !== null ? $pla.$lights : null;
    cbggga_SpotLightsAttribute_$callClinit();
    $sla = cbggg_Attributes_get0($attributes, $rt_cls(cbggga_SpotLightsAttribute), cbggga_SpotLightsAttribute_Type);
    $spots = $sla !== null ? $sla.$lights0 : null;
    a: {
        if ($this.$dirLightsLoc >= 0) {
            $i = 0;
            b: while (true) {
                var$11 = $this.$directionalLights.data;
                if ($i >= var$11.length)
                    break a;
                c: {
                    if ($dirs !== null && $i < $dirs.$size0) {
                        if ($this.$lightsSet && cbggge_DirectionalLight_equals0(var$11[$i], cbgu_Array_get($dirs, $i)))
                            break c;
                        cbggge_DirectionalLight_set($this.$directionalLights.data[$i], cbgu_Array_get($dirs, $i));
                    } else {
                        if ($this.$lightsSet && var$11[$i].$color1.$r === 0.0 && var$11[$i].$color1.$g === 0.0 && var$11[$i].$color1.$b === 0.0)
                            break c;
                        cbgg_Color_set(var$11[$i].$color1, 0.0, 0.0, 0.0, 1.0);
                    }
                    $idx = $this.$dirLightsLoc + $rt_imul($i, $this.$dirLightsSize) | 0;
                    $renderable = $this.$program;
                    var$13 = $idx + $this.$dirLightsColorOffset | 0;
                    var$11 = $this.$directionalLights.data;
                    cbggg_ShaderProgram_setUniformf0($renderable, var$13, var$11[$i].$color1.$r, var$11[$i].$color1.$g, var$11[$i].$color1.$b);
                    $renderable = $this.$program;
                    $idx = $idx + $this.$dirLightsDirectionOffset | 0;
                    var$11 = $this.$directionalLights.data;
                    cbggg_ShaderProgram_setUniformf0($renderable, $idx, var$11[$i].$direction.$x, var$11[$i].$direction.$y, var$11[$i].$direction.$z);
                    if ($this.$dirLightsSize <= 0)
                        break b;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    d: {
        if ($this.$pointLightsLoc >= 0) {
            $i = 0;
            e: while (true) {
                var$11 = $this.$pointLights.data;
                if ($i >= var$11.length)
                    break d;
                f: {
                    if ($points !== null && $i < $points.$size0) {
                        if ($this.$lightsSet && cbggge_PointLight_equals(var$11[$i], cbgu_Array_get($points, $i)))
                            break f;
                        cbggge_PointLight_set($this.$pointLights.data[$i], cbgu_Array_get($points, $i));
                    } else {
                        if ($this.$lightsSet && var$11[$i].$intensity === 0.0)
                            break f;
                        var$11[$i].$intensity = 0.0;
                    }
                    $idx = $this.$pointLightsLoc + $rt_imul($i, $this.$pointLightsSize) | 0;
                    $renderable = $this.$program;
                    var$13 = $idx + $this.$pointLightsColorOffset | 0;
                    var$11 = $this.$pointLights.data;
                    cbggg_ShaderProgram_setUniformf0($renderable, var$13, var$11[$i].$color1.$r * var$11[$i].$intensity, var$11[$i].$color1.$g * var$11[$i].$intensity, var$11[$i].$color1.$b * var$11[$i].$intensity);
                    $renderable = $this.$program;
                    var$13 = $idx + $this.$pointLightsPositionOffset | 0;
                    var$11 = $this.$pointLights.data;
                    cbggg_ShaderProgram_setUniformf0($renderable, var$13, var$11[$i].$position2.$x, var$11[$i].$position2.$y, var$11[$i].$position2.$z);
                    var$13 = $this.$pointLightsIntensityOffset;
                    if (var$13 >= 0)
                        cbggg_ShaderProgram_setUniformf1($this.$program, $idx + var$13 | 0, $this.$pointLights.data[$i].$intensity);
                    if ($this.$pointLightsSize <= 0)
                        break e;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    g: {
        if ($this.$spotLightsLoc >= 0) {
            $i = 0;
            h: while (true) {
                var$11 = $this.$spotLights.data;
                if ($i >= var$11.length)
                    break g;
                i: {
                    if ($spots !== null && $i < $spots.$size0) {
                        if ($this.$lightsSet && cbggge_SpotLight_equals(var$11[$i], cbgu_Array_get($spots, $i)))
                            break i;
                        cbggge_SpotLight_set($this.$spotLights.data[$i], cbgu_Array_get($spots, $i));
                    } else {
                        if ($this.$lightsSet && var$11[$i].$intensity0 === 0.0)
                            break i;
                        var$11[$i].$intensity0 = 0.0;
                    }
                    $idx = $this.$spotLightsLoc + $rt_imul($i, $this.$spotLightsSize) | 0;
                    $renderable = $this.$program;
                    var$13 = $idx + $this.$spotLightsColorOffset | 0;
                    var$11 = $this.$spotLights.data;
                    cbggg_ShaderProgram_setUniformf0($renderable, var$13, var$11[$i].$color1.$r * var$11[$i].$intensity0, var$11[$i].$color1.$g * var$11[$i].$intensity0, var$11[$i].$color1.$b * var$11[$i].$intensity0);
                    cbggg_ShaderProgram_setUniformf2($this.$program, $idx + $this.$spotLightsPositionOffset | 0, $this.$spotLights.data[$i].$position4);
                    cbggg_ShaderProgram_setUniformf2($this.$program, $idx + $this.$spotLightsDirectionOffset | 0, $this.$spotLights.data[$i].$direction1);
                    cbggg_ShaderProgram_setUniformf1($this.$program, $idx + $this.$spotLightsCutoffAngleOffset | 0, $this.$spotLights.data[$i].$cutoffAngle);
                    cbggg_ShaderProgram_setUniformf1($this.$program, $idx + $this.$spotLightsExponentOffset | 0, $this.$spotLights.data[$i].$exponent);
                    var$13 = $this.$spotLightsIntensityOffset;
                    if (var$13 >= 0)
                        cbggg_ShaderProgram_setUniformf1($this.$program, $idx + var$13 | 0, $this.$spotLights.data[$i].$intensity0);
                    if ($this.$spotLightsSize <= 0)
                        break h;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    cbggga_ColorAttribute_$callClinit();
    if (cbggg_Attributes_has($attributes, cbggga_ColorAttribute_Fog))
        cbgggs_BaseShader_set3($this, $this.$u_fogColor, (cbggg_Attributes_get($attributes, cbggga_ColorAttribute_Fog)).$color2);
    if ($lights !== null) {
        $renderable = $lights.$shadowMap;
        if ($renderable !== null) {
            cbgggs_BaseShader_set2($this, $this.$u_shadowMapProjViewTrans, $renderable.$getProjViewTrans());
            cbgggs_BaseShader_set8($this, $this.$u_shadowTexture, $lights.$shadowMap.$getDepthMap());
            cbgggs_BaseShader_set0($this, $this.$u_shadowPCFOffset, 1.0 / (2.0 * ($lights.$shadowMap.$getDepthMap()).$texture.$getWidth()));
        }
    }
    $this.$lightsSet = 1;
},
cbgggs_DefaultShader__clinit_ = () => {
    let var$1, var$2;
    cbgggs_DefaultShader_defaultVertexShader = null;
    cbgggs_DefaultShader_defaultFragmentShader = null;
    cbggga_BlendingAttribute_$callClinit();
    var$1 = cbggga_BlendingAttribute_Type;
    cbggga_TextureAttribute_$callClinit();
    var$2 = Long_or(var$1, cbggga_TextureAttribute_Diffuse);
    cbggga_ColorAttribute_$callClinit();
    var$2 = Long_or(Long_or(var$2, cbggga_ColorAttribute_Diffuse), cbggga_ColorAttribute_Specular);
    cbggga_FloatAttribute_$callClinit();
    cbgggs_DefaultShader_implementedFlags = Long_or(var$2, cbggga_FloatAttribute_Shininess);
    cbgggs_DefaultShader_defaultCullFace = 1029;
    cbgggs_DefaultShader_defaultDepthFunc = 515;
    cbggga_IntAttribute_$callClinit();
    var$2 = cbggga_IntAttribute_CullFace;
    cbggga_DepthTestAttribute_$callClinit();
    cbgggs_DefaultShader_optionalAttributes = Long_or(var$2, cbggga_DepthTestAttribute_Type);
    cbgggs_DefaultShader_tmpAttributes = cbggg_Attributes__init_0();
};
function nmgss_SceneSkybox$SkyboxShader() {
    let a = this; cbgggs_DefaultShader.call(a);
    a.$u_lod = 0;
    a.$this$015 = null;
}
let nmgss_SceneSkybox$SkyboxShader_init = $this => {
    cbgggs_DefaultShader_init($this);
    $this.$u_lod = cbg_Gdx_gl.$glGetUniformLocation($this.$program.$program0, $rt_s(895));
},
nmgss_SceneSkybox$SkyboxShader_bindMaterial = ($this, $attributes) => {
    let var$2;
    cbgggs_DefaultShader_bindMaterial($this, $attributes);
    var$2 = $this.$u_lod;
    if (var$2 >= 0)
        cbggg_ShaderProgram_setUniformf1($this.$program, var$2, $this.$this$015.$lodBias);
},
nmgsa_PBRColorAttribute = $rt_classWithoutFields(cbggga_ColorAttribute),
nmgsa_PBRColorAttribute_BaseColorFactor = Long_ZERO,
nmgsa_PBRColorAttribute_$callClinit = () => {
    nmgsa_PBRColorAttribute_$callClinit = $rt_eraseClinit(nmgsa_PBRColorAttribute);
    nmgsa_PBRColorAttribute__clinit_();
},
nmgsa_PBRColorAttribute__clinit_ = () => {
    let var$1;
    var$1 = cbggg_Attribute_register($rt_s(896));
    nmgsa_PBRColorAttribute_BaseColorFactor = var$1;
    cbggga_ColorAttribute_$callClinit();
    cbggga_ColorAttribute_Mask = Long_or(cbggga_ColorAttribute_Mask, var$1);
},
nmgsa_PBRFlagAttribute = $rt_classWithoutFields(cbggg_Attribute),
nmgsa_PBRFlagAttribute_Unlit = Long_ZERO,
nmgsa_PBRFlagAttribute_$callClinit = () => {
    nmgsa_PBRFlagAttribute_$callClinit = $rt_eraseClinit(nmgsa_PBRFlagAttribute);
    nmgsa_PBRFlagAttribute__clinit_();
},
nmgsa_PBRFlagAttribute__clinit_ = () => {
    nmgsa_PBRFlagAttribute_Unlit = cbggg_Attribute_register($rt_s(897));
};
function nmgsa_FogAttribute() {
    cbggg_Attribute.call(this);
    this.$value7 = null;
}
let nmgsa_FogAttribute_FogEquation = Long_ZERO,
nmgsa_FogAttribute_$callClinit = () => {
    nmgsa_FogAttribute_$callClinit = $rt_eraseClinit(nmgsa_FogAttribute);
    nmgsa_FogAttribute__clinit_();
},
nmgsa_FogAttribute__clinit_ = () => {
    nmgsa_FogAttribute_FogEquation = cbggg_Attribute_register($rt_s(898));
},
nmgsu_LightUtils = $rt_classWithoutFields(),
nmgsu_LightUtils_getLightsInfo = ($info, $environment) => {
    let $dla, $pla, $sla;
    $info.$dirLights = 0;
    $info.$pointLights0 = 0;
    $info.$spotLights1 = 0;
    $info.$miscLights = 0;
    cbggga_DirectionalLightsAttribute_$callClinit();
    $dla = cbggg_Attributes_get($environment, cbggga_DirectionalLightsAttribute_Type);
    if ($dla !== null)
        $info.$dirLights = $dla.$lights1.$size0;
    cbggga_PointLightsAttribute_$callClinit();
    $pla = cbggg_Attributes_get($environment, cbggga_PointLightsAttribute_Type);
    if ($pla !== null)
        $info.$pointLights0 = $pla.$lights.$size0;
    cbggga_SpotLightsAttribute_$callClinit();
    $sla = cbggg_Attributes_get($environment, cbggga_SpotLightsAttribute_Type);
    if ($sla !== null)
        $info.$spotLights1 = $sla.$lights0.$size0;
    return $info;
},
nmgsa_PBRFloatAttribute = $rt_classWithoutFields(cbggga_FloatAttribute),
nmgsa_PBRFloatAttribute_Metallic = Long_ZERO,
nmgsa_PBRFloatAttribute_Roughness = Long_ZERO,
nmgsa_PBRFloatAttribute_NormalScale = Long_ZERO,
nmgsa_PBRFloatAttribute_OcclusionStrength = Long_ZERO,
nmgsa_PBRFloatAttribute_ShadowBias = Long_ZERO,
nmgsa_PBRFloatAttribute_EmissiveIntensity = Long_ZERO,
nmgsa_PBRFloatAttribute_TransmissionFactor = Long_ZERO,
nmgsa_PBRFloatAttribute_IOR = Long_ZERO,
nmgsa_PBRFloatAttribute_SpecularFactor = Long_ZERO,
nmgsa_PBRFloatAttribute_$callClinit = () => {
    nmgsa_PBRFloatAttribute_$callClinit = $rt_eraseClinit(nmgsa_PBRFloatAttribute);
    nmgsa_PBRFloatAttribute__clinit_();
},
nmgsa_PBRFloatAttribute__clinit_ = () => {
    nmgsa_PBRFloatAttribute_Metallic = cbggg_Attribute_register($rt_s(899));
    nmgsa_PBRFloatAttribute_Roughness = cbggg_Attribute_register($rt_s(900));
    nmgsa_PBRFloatAttribute_NormalScale = cbggg_Attribute_register($rt_s(901));
    nmgsa_PBRFloatAttribute_OcclusionStrength = cbggg_Attribute_register($rt_s(902));
    nmgsa_PBRFloatAttribute_ShadowBias = cbggg_Attribute_register($rt_s(903));
    nmgsa_PBRFloatAttribute_EmissiveIntensity = cbggg_Attribute_register($rt_s(904));
    nmgsa_PBRFloatAttribute_TransmissionFactor = cbggg_Attribute_register($rt_s(905));
    nmgsa_PBRFloatAttribute_IOR = cbggg_Attribute_register($rt_s(906));
    nmgsa_PBRFloatAttribute_SpecularFactor = cbggg_Attribute_register($rt_s(907));
};
function nmgsa_PBRVolumeAttribute() {
    let a = this; cbggg_Attribute.call(a);
    a.$thicknessFactor = 0.0;
    a.$attenuationDistance = 0.0;
    a.$attenuationColor = null;
}
let nmgsa_PBRVolumeAttribute_Type = Long_ZERO,
nmgsa_PBRVolumeAttribute_$callClinit = () => {
    nmgsa_PBRVolumeAttribute_$callClinit = $rt_eraseClinit(nmgsa_PBRVolumeAttribute);
    nmgsa_PBRVolumeAttribute__clinit_();
},
nmgsa_PBRVolumeAttribute__clinit_ = () => {
    nmgsa_PBRVolumeAttribute_Type = cbggg_Attribute_register($rt_s(908));
};
function nmgsa_PBRHDRColorAttribute() {
    let a = this; cbggg_Attribute.call(a);
    a.$r0 = 0.0;
    a.$g0 = 0.0;
    a.$b0 = 0.0;
}
let nmgsa_PBRHDRColorAttribute_Specular = Long_ZERO,
nmgsa_PBRHDRColorAttribute_$callClinit = () => {
    nmgsa_PBRHDRColorAttribute_$callClinit = $rt_eraseClinit(nmgsa_PBRHDRColorAttribute);
    nmgsa_PBRHDRColorAttribute__clinit_();
},
nmgsa_PBRHDRColorAttribute__clinit_ = () => {
    nmgsa_PBRHDRColorAttribute_Specular = cbggg_Attribute_register($rt_s(909));
};
function nmgsa_PBRIridescenceAttribute() {
    let a = this; cbggg_Attribute.call(a);
    a.$factor = 0.0;
    a.$ior = 0.0;
    a.$thicknessMin = 0.0;
    a.$thicknessMax = 0.0;
}
let nmgsa_PBRIridescenceAttribute_Type = Long_ZERO,
nmgsa_PBRIridescenceAttribute_$callClinit = () => {
    nmgsa_PBRIridescenceAttribute_$callClinit = $rt_eraseClinit(nmgsa_PBRIridescenceAttribute);
    nmgsa_PBRIridescenceAttribute__clinit_();
},
nmgsa_PBRIridescenceAttribute__clinit_ = () => {
    nmgsa_PBRIridescenceAttribute_Type = cbggg_Attribute_register($rt_s(910));
};
function nmgsa_ClippingPlaneAttribute() {
    cbggg_Attribute.call(this);
    this.$plane = null;
}
let nmgsa_ClippingPlaneAttribute_Type = Long_ZERO,
nmgsa_ClippingPlaneAttribute_$callClinit = () => {
    nmgsa_ClippingPlaneAttribute_$callClinit = $rt_eraseClinit(nmgsa_ClippingPlaneAttribute);
    nmgsa_ClippingPlaneAttribute__clinit_();
},
nmgsa_ClippingPlaneAttribute__clinit_ = () => {
    nmgsa_ClippingPlaneAttribute_Type = cbggg_Attribute_register($rt_s(911));
};
function nmgsa_CascadeShadowMapAttribute() {
    cbggg_Attribute.call(this);
    this.$cascadeShadowMap = null;
}
let nmgsa_CascadeShadowMapAttribute_Type = Long_ZERO,
nmgsa_CascadeShadowMapAttribute_$callClinit = () => {
    nmgsa_CascadeShadowMapAttribute_$callClinit = $rt_eraseClinit(nmgsa_CascadeShadowMapAttribute);
    nmgsa_CascadeShadowMapAttribute__clinit_();
},
nmgsa_CascadeShadowMapAttribute__clinit_ = () => {
    nmgsa_CascadeShadowMapAttribute_Type = cbggg_Attribute_register($rt_s(912));
};
function nmgsa_MirrorSourceAttribute() {
    let a = this; cbggg_Attribute.call(a);
    a.$textureDescription1 = null;
    a.$normal1 = null;
}
let nmgsa_MirrorSourceAttribute_Type = Long_ZERO,
nmgsa_MirrorSourceAttribute_$callClinit = () => {
    nmgsa_MirrorSourceAttribute_$callClinit = $rt_eraseClinit(nmgsa_MirrorSourceAttribute);
    nmgsa_MirrorSourceAttribute__clinit_();
},
nmgsa_MirrorSourceAttribute__clinit_ = () => {
    nmgsa_MirrorSourceAttribute_Type = cbggg_Attribute_register($rt_s(913));
},
nmgsa_MirrorAttribute = $rt_classWithoutFields(cbggg_Attribute),
nmgsa_MirrorAttribute_Specular = Long_ZERO,
nmgsa_MirrorAttribute_$callClinit = () => {
    nmgsa_MirrorAttribute_$callClinit = $rt_eraseClinit(nmgsa_MirrorAttribute);
    nmgsa_MirrorAttribute__clinit_();
},
nmgsa_MirrorAttribute__clinit_ = () => {
    nmgsa_MirrorAttribute_Specular = cbggg_Attribute_register($rt_s(914));
};
function cbgggs_DepthShader() {
    let a = this; cbgggs_DefaultShader.call(a);
    a.$numBones0 = 0;
    a.$alphaTestAttribute = null;
}
let cbgggs_DepthShader_defaultVertexShader = null,
cbgggs_DepthShader_defaultFragmentShader = null,
cbgggs_DepthShader_tmpAttributes = null,
cbgggs_DepthShader_$callClinit = () => {
    cbgggs_DepthShader_$callClinit = $rt_eraseClinit(cbgggs_DepthShader);
    cbgggs_DepthShader__clinit_();
},
cbgggs_DepthShader_begin = ($this, $camera, $context) => {
    cbgggs_DefaultShader_begin($this, $camera, $context);
},
cbgggs_DepthShader_end = $this => {
    cbgggs_DefaultShader_end($this);
},
cbgggs_DepthShader_combineAttributes = $renderable => {
    let var$2;
    cbgggs_DepthShader_$callClinit();
    cbggg_Attributes_clear(cbgggs_DepthShader_tmpAttributes);
    var$2 = $renderable.$environment;
    if (var$2 !== null)
        cbggg_Attributes_set0(cbgggs_DepthShader_tmpAttributes, var$2);
    $renderable = $renderable.$material;
    if ($renderable !== null)
        cbggg_Attributes_set0(cbgggs_DepthShader_tmpAttributes, $renderable);
    return cbgggs_DepthShader_tmpAttributes;
},
cbgggs_DepthShader__clinit_ = () => {
    cbgggs_DepthShader_defaultVertexShader = null;
    cbgggs_DepthShader_defaultFragmentShader = null;
    cbgggs_DepthShader_tmpAttributes = cbggg_Attributes__init_0();
};
function nmgss_PBRDepthShader() {
    let a = this; cbgggs_DepthShader.call(a);
    a.$morphTargetsMask = Long_ZERO;
    a.$u_morphTargets10 = 0;
    a.$u_morphTargets20 = 0;
}
let nmgss_PBRDepthShader_computeMorphTargetsMask = ($this, $renderable) => {
    let $morphTargetsFlag, $vertexAttributes, $n, $i, $attr;
    $morphTargetsFlag = 0;
    $vertexAttributes = cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh);
    $n = cbgg_VertexAttributes_size($vertexAttributes);
    $i = 0;
    while ($i < $n) {
        $attr = cbgg_VertexAttributes_get($vertexAttributes, $i);
        if ($attr.$usage == 512)
            $morphTargetsFlag = $morphTargetsFlag | 1 << $attr.$unit;
        $i = $i + 1 | 0;
    }
    return Long_fromInt($morphTargetsFlag);
},
nmgss_PBRDepthShader_canRender = ($this, $renderable) => {
    let var$2, var$3, var$4, var$5, var$6, var$7, var$8;
    if (Long_ne($this.$morphTargetsMask, nmgss_PBRDepthShader_computeMorphTargetsMask($this, $renderable)))
        return 0;
    a: {
        var$2 = $renderable.$bones;
        if (var$2 !== null) {
            if (var$2.data.length > $this.$config0.$numBones) {
                var$3 = 0;
                break a;
            }
            if (cbgg_VertexAttributes_getBoneWeights(cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh)) > $this.$config0.$numBoneWeights) {
                var$3 = 0;
                break a;
            }
        }
        b: {
            var$4 = cbgggs_DepthShader_combineAttributes($renderable);
            var$5 = $this.$attributesMask;
            cbggga_BlendingAttribute_$callClinit();
            var$6 = cbggga_BlendingAttribute_Type;
            if (Long_eq(Long_and(var$5, var$6), var$6)) {
                cbggga_TextureAttribute_$callClinit();
                var$7 = cbggga_TextureAttribute_Diffuse;
                if (Long_eq(Long_and(var$5, var$7), var$7)) {
                    var$3 = 1;
                    break b;
                }
            }
            var$3 = 0;
        }
        c: {
            if (cbggg_Attributes_has(var$4, var$6)) {
                cbggga_TextureAttribute_$callClinit();
                if (cbggg_Attributes_has(var$4, cbggga_TextureAttribute_Diffuse)) {
                    var$8 = 1;
                    break c;
                }
            }
            var$8 = 0;
        }
        if (var$3 != var$8)
            var$3 = 0;
        else
            var$3 = ($renderable.$bones === null ? 0 : 1) != ($this.$numBones0 <= 0 ? 0 : 1) ? 0 : 1;
    }
    return var$3;
},
nmgss_PBRDepthShader_init = $this => {
    cbgggs_DefaultShader_init($this);
    $this.$u_morphTargets10 = cbggg_ShaderProgram_fetchUniformLocation($this.$program, $rt_s(915), 0);
    $this.$u_morphTargets20 = cbggg_ShaderProgram_fetchUniformLocation($this.$program, $rt_s(916), 0);
},
nmgss_PBRDepthShader_render = ($this, $renderable, $combinedAttributes) => {
    let var$3, $weightVector, var$5;
    var$3 = $this.$u_morphTargets10;
    if (var$3 >= 0) {
        $weightVector = $renderable.$userData;
        if (!($weightVector instanceof nmgsm_WeightVector))
            cbggg_ShaderProgram_setUniformf($this.$program, var$3, 0.0, 0.0, 0.0, 0.0);
        else {
            $weightVector = $weightVector;
            cbggg_ShaderProgram_setUniformf($this.$program, var$3, $weightVector.$get0(0), $weightVector.$get0(1), $weightVector.$get0(2), $weightVector.$get0(3));
        }
    }
    var$3 = $this.$u_morphTargets20;
    if (var$3 >= 0) {
        $weightVector = $renderable.$userData;
        if (!($weightVector instanceof nmgsm_WeightVector))
            cbggg_ShaderProgram_setUniformf($this.$program, var$3, 0.0, 0.0, 0.0, 0.0);
        else {
            $weightVector = $weightVector;
            cbggg_ShaderProgram_setUniformf($this.$program, var$3, $weightVector.$get0(4), $weightVector.$get0(5), $weightVector.$get0(6), $weightVector.$get0(7));
        }
    }
    cbggga_BlendingAttribute_$callClinit();
    if (!cbggg_Attributes_has($combinedAttributes, cbggga_BlendingAttribute_Type))
        cbgggs_DefaultShader_render($this, $renderable, $combinedAttributes);
    else {
        $weightVector = cbggg_Attributes_get($combinedAttributes, cbggga_BlendingAttribute_Type);
        cbggg_Attributes_remove($combinedAttributes, cbggga_BlendingAttribute_Type);
        cbggga_FloatAttribute_$callClinit();
        var$5 = cbggg_Attributes_has($combinedAttributes, cbggga_FloatAttribute_AlphaTest);
        if (!var$5)
            cbggg_Attributes_set($combinedAttributes, $this.$alphaTestAttribute);
        if ($weightVector.$opacity >= (cbggg_Attributes_get($combinedAttributes, cbggga_FloatAttribute_AlphaTest)).$value)
            cbgggs_DefaultShader_render($this, $renderable, $combinedAttributes);
        if (!var$5)
            cbggg_Attributes_remove($combinedAttributes, cbggga_FloatAttribute_AlphaTest);
        cbggg_Attributes_set($combinedAttributes, $weightVector);
    }
};
function cbgg_VertexAttributes$ReadonlyIterable() {
    let a = this; jl_Object.call(a);
    a.$array3 = null;
    a.$iterator1 = null;
    a.$iterator2 = null;
}
function nmgss_PBRShader() {
    let a = this; cbgggs_DefaultShader.call(a);
    a.$u_metallicRoughness = 0;
    a.$u_occlusionStrength = 0;
    a.$u_metallicRoughnessTexture = 0;
    a.$u_occlusionTexture = 0;
    a.$u_DiffuseEnvSampler = 0;
    a.$u_SpecularEnvSampler = 0;
    a.$u_envRotation = 0;
    a.$u_brdfLUTTexture = 0;
    a.$u_NormalScale = 0;
    a.$u_BaseColorTexture = 0;
    a.$u_NormalTexture = 0;
    a.$u_EmissiveTexture = 0;
    a.$u_BaseColorFactor = 0;
    a.$u_FogEquation = 0;
    a.$u_ShadowBias = 0;
    a.$u_morphTargets1 = 0;
    a.$u_morphTargets2 = 0;
    a.$u_mipmapScale = 0;
    a.$u_texCoord0Transform = 0;
    a.$u_texCoord1Transform = 0;
    a.$u_ambientLight = 0;
    a.$textureCoordinateMapMask = Long_ZERO;
    a.$morphTargetsMask0 = Long_ZERO;
    a.$vertexColorLayers = 0;
    a.$cascadeCount = 0;
    a.$u_emissive = 0;
    a.$u_transmissionFactor = 0;
    a.$u_transmissionTexture = 0;
    a.$u_ior = 0;
    a.$u_thicknessTexture = 0;
    a.$u_thicknessFactor = 0;
    a.$u_volumeDistance = 0;
    a.$u_volumeColor = 0;
    a.$u_specularFactor = 0;
    a.$u_specularColorFactor = 0;
    a.$u_specularFactorTexture = 0;
    a.$u_specularColorTexture = 0;
    a.$u_iridescenceFactor = 0;
    a.$u_iridescenceIOR = 0;
    a.$u_iridescenceThicknessMin = 0;
    a.$u_iridescenceThicknessMax = 0;
    a.$u_iridescenceTexture = 0;
    a.$u_iridescenceThicknessTexture = 0;
    a.$u_transmissionSourceTexture = 0;
    a.$u_transmissionSourceMipmap = 0;
    a.$u_specularMirrorSampler = 0;
    a.$u_specularMirrorMipmapScale = 0;
    a.$u_specularMirrorNormal = 0;
    a.$u_viewportInv = 0;
    a.$u_clippingPlane = 0;
    a.$u_csmSamplers = null;
    a.$u_csmPCFClip = 0;
    a.$u_csmTransforms = 0;
    a.$csmTransforms = null;
    a.$csmPCFClip = null;
}
let nmgss_PBRShader_v2 = null,
nmgss_PBRShader_baseColorTextureUniform = null,
nmgss_PBRShader_baseColorTextureSetter = null,
nmgss_PBRShader_baseColorFactorUniform = null,
nmgss_PBRShader_baseColorFactorSetter = null,
nmgss_PBRShader_emissiveTextureUniform = null,
nmgss_PBRShader_emissiveTextureSetter = null,
nmgss_PBRShader_normalTextureUniform = null,
nmgss_PBRShader_normalTextureSetter = null,
nmgss_PBRShader_metallicRoughnessTextureUniform = null,
nmgss_PBRShader_metallicRoughnessTextureSetter = null,
nmgss_PBRShader_metallicRoughnessUniform = null,
nmgss_PBRShader_metallicRoughnessSetter = null,
nmgss_PBRShader_normalScaleUniform = null,
nmgss_PBRShader_normalScaleSetter = null,
nmgss_PBRShader_occlusionStrengthUniform = null,
nmgss_PBRShader_occlusionStrengthSetter = null,
nmgss_PBRShader_occlusionTextureUniform = null,
nmgss_PBRShader_occlusionTextureSetter = null,
nmgss_PBRShader_diffuseEnvTextureUniform = null,
nmgss_PBRShader_diffuseEnvTextureSetter = null,
nmgss_PBRShader_specularEnvTextureUniform = null,
nmgss_PBRShader_specularEnvTextureSetter = null,
nmgss_PBRShader_envRotationUniform = null,
nmgss_PBRShader_envRotationSetter = null,
nmgss_PBRShader_brdfLUTTextureUniform = null,
nmgss_PBRShader_brdfLUTTextureSetter = null,
nmgss_PBRShader_shadowBiasUniform = null,
nmgss_PBRShader_shadowBiasSetter = null,
nmgss_PBRShader_fogEquationUniform = null,
nmgss_PBRShader_fogEquationSetter = null,
nmgss_PBRShader_emissiveScaledColor = null,
nmgss_PBRShader_transmissionFactorUniform = null,
nmgss_PBRShader_transmissionFactorSetter = null,
nmgss_PBRShader_transmissionTextureUniform = null,
nmgss_PBRShader_transmissionTextureSetter = null,
nmgss_PBRShader_iorUniform = null,
nmgss_PBRShader_iorSetter = null,
nmgss_PBRShader_thicknessFactorUniform = null,
nmgss_PBRShader_thicknessFactorSetter = null,
nmgss_PBRShader_volumeDistanceUniform = null,
nmgss_PBRShader_volumeDistanceSetter = null,
nmgss_PBRShader_volumeColorUniform = null,
nmgss_PBRShader_volumeColorSetter = null,
nmgss_PBRShader_thicknessTextureUniform = null,
nmgss_PBRShader_thicknessTextureSetter = null,
nmgss_PBRShader_specularFactorUniform = null,
nmgss_PBRShader_specularFactorSetter = null,
nmgss_PBRShader_specularColorFactorUniform = null,
nmgss_PBRShader_specularColorFactorSetter = null;
let nmgss_PBRShader_specularFactorTextureUniform = null,
nmgss_PBRShader_specularFactorTextureSetter = null,
nmgss_PBRShader_specularColorTextureUniform = null,
nmgss_PBRShader_specularColorTextureSetter = null,
nmgss_PBRShader_iridescenceFactorUniform = null,
nmgss_PBRShader_iridescenceFactorSetter = null,
nmgss_PBRShader_iridescenceIORUniform = null,
nmgss_PBRShader_iridescenceIORSetter = null,
nmgss_PBRShader_iridescenceThicknessMinUniform = null,
nmgss_PBRShader_iridescenceThicknessMinSetter = null,
nmgss_PBRShader_iridescenceThicknessMaxUniform = null,
nmgss_PBRShader_iridescenceThicknessMaxSetter = null,
nmgss_PBRShader_iridescenceTextureUniform = null,
nmgss_PBRShader_iridescenceTextureSetter = null,
nmgss_PBRShader_iridescenceThicknessTextureUniform = null,
nmgss_PBRShader_iridescenceThicknessTextureSetter = null,
nmgss_PBRShader_transmissionSourceTextureUniform = null,
nmgss_PBRShader_transmissionSourceTextureSetter = null,
nmgss_PBRShader_transmissionSourceMipmapUniform = null,
nmgss_PBRShader_transmissionSourceMipmapSetter = null,
nmgss_PBRShader_specularMirrorTextureUniform = null,
nmgss_PBRShader_specularMirrorTextureSetter = null,
nmgss_PBRShader_specularMirrorMipmapUniform = null,
nmgss_PBRShader_specularMirrorMipmapSetter = null,
nmgss_PBRShader_mirrorNormal = null,
nmgss_PBRShader_mirrorNormalSetter = null,
nmgss_PBRShader_projViewTransUniform = null,
nmgss_PBRShader_projViewTransSetter = null,
nmgss_PBRShader_viewportInvUniform = null,
nmgss_PBRShader_viewportInvSetter = null,
nmgss_PBRShader_clippingPlaneUniform = null,
nmgss_PBRShader_clippingPlaneSetter = null,
nmgss_PBRShader_transformTexture = null,
nmgss_PBRShader_textureTransform = null,
nmgss_PBRShader_allTextureTypes = null,
nmgss_PBRShader_$callClinit = () => {
    nmgss_PBRShader_$callClinit = $rt_eraseClinit(nmgss_PBRShader);
    nmgss_PBRShader__clinit_();
},
nmgss_PBRShader__init_0 = ($this, $renderable, $config, $prefix) => {
    let var$4;
    nmgss_PBRShader_$callClinit();
    cbgggs_DefaultShader__init_($this, $renderable, $config, $prefix);
    $this.$textureCoordinateMapMask = nmgss_PBRShader_getTextureCoordinateMapMask($renderable.$material);
    $this.$morphTargetsMask0 = nmgss_PBRShader_computeMorphTargetsMask($this, $renderable);
    $this.$vertexColorLayers = nmgss_PBRShader_computeVertexColorLayers($this, $renderable);
    var$4 = nmgss_PBRShader_countShadowCascades($this, $renderable);
    $this.$cascadeCount = var$4;
    $this.$u_csmSamplers = $rt_createIntArray(var$4);
    $this.$csmTransforms = $rt_createFloatArray(var$4 * 16 | 0);
    $this.$csmPCFClip = $rt_createFloatArray(var$4 * 2 | 0);
    $renderable = nmgss_PBRShader_baseColorTextureUniform;
    $config = nmgss_PBRShader_baseColorTextureSetter;
    $prefix = $this;
    $this.$u_BaseColorTexture = cbgggs_BaseShader_register($prefix, $renderable, $config);
    $this.$u_BaseColorFactor = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_baseColorFactorUniform, nmgss_PBRShader_baseColorFactorSetter);
    $this.$u_EmissiveTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_emissiveTextureUniform, nmgss_PBRShader_emissiveTextureSetter);
    $this.$u_DiffuseEnvSampler = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_diffuseEnvTextureUniform, nmgss_PBRShader_diffuseEnvTextureSetter);
    $this.$u_SpecularEnvSampler = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_specularEnvTextureUniform, nmgss_PBRShader_specularEnvTextureSetter);
    $this.$u_envRotation = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_envRotationUniform, nmgss_PBRShader_envRotationSetter);
    $this.$u_metallicRoughness = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_metallicRoughnessUniform, nmgss_PBRShader_metallicRoughnessSetter);
    $this.$u_metallicRoughnessTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_metallicRoughnessTextureUniform, nmgss_PBRShader_metallicRoughnessTextureSetter);
    $this.$u_occlusionTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_occlusionTextureUniform, nmgss_PBRShader_occlusionTextureSetter);
    $this.$u_occlusionStrength = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_occlusionStrengthUniform, nmgss_PBRShader_occlusionStrengthSetter);
    $this.$u_brdfLUTTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_brdfLUTTextureUniform, nmgss_PBRShader_brdfLUTTextureSetter);
    $this.$u_NormalTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_normalTextureUniform, nmgss_PBRShader_normalTextureSetter);
    $this.$u_NormalScale = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_normalScaleUniform, nmgss_PBRShader_normalScaleSetter);
    $this.$u_ShadowBias = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_shadowBiasUniform, nmgss_PBRShader_shadowBiasSetter);
    $this.$u_FogEquation = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_fogEquationUniform, nmgss_PBRShader_fogEquationSetter);
    cbgggs_DefaultShader$Inputs_$callClinit();
    $this.$u_emissive = cbgggs_BaseShader_register($prefix, cbgggs_DefaultShader$Inputs_emissiveColor, nmgss_PBRShader_emissiveScaledColor);
    $this.$u_transmissionFactor = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_transmissionFactorUniform, nmgss_PBRShader_transmissionFactorSetter);
    $this.$u_transmissionTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_transmissionTextureUniform, nmgss_PBRShader_transmissionTextureSetter);
    $this.$u_ior = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_iorUniform, nmgss_PBRShader_iorSetter);
    $this.$u_thicknessFactor = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_thicknessFactorUniform, nmgss_PBRShader_thicknessFactorSetter);
    $this.$u_volumeDistance = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_volumeDistanceUniform, nmgss_PBRShader_volumeDistanceSetter);
    $this.$u_volumeColor = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_volumeColorUniform, nmgss_PBRShader_volumeColorSetter);
    $this.$u_thicknessTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_thicknessTextureUniform, nmgss_PBRShader_thicknessTextureSetter);
    $this.$u_transmissionSourceTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_transmissionSourceTextureUniform, nmgss_PBRShader_transmissionSourceTextureSetter);
    $this.$u_transmissionSourceMipmap = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_transmissionSourceMipmapUniform, nmgss_PBRShader_transmissionSourceMipmapSetter);
    $this.$u_specularFactor = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_specularFactorUniform, nmgss_PBRShader_specularFactorSetter);
    $this.$u_specularColorFactor = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_specularColorFactorUniform, nmgss_PBRShader_specularColorFactorSetter);
    $this.$u_specularFactorTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_specularFactorTextureUniform, nmgss_PBRShader_specularFactorTextureSetter);
    $this.$u_specularColorTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_specularColorTextureUniform, nmgss_PBRShader_specularColorTextureSetter);
    $this.$u_iridescenceFactor = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_iridescenceFactorUniform, nmgss_PBRShader_iridescenceFactorSetter);
    $this.$u_iridescenceIOR = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_iridescenceIORUniform, nmgss_PBRShader_iridescenceIORSetter);
    $this.$u_iridescenceThicknessMin = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_iridescenceThicknessMinUniform, nmgss_PBRShader_iridescenceThicknessMinSetter);
    $this.$u_iridescenceThicknessMax = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_iridescenceThicknessMaxUniform, nmgss_PBRShader_iridescenceThicknessMaxSetter);
    $this.$u_iridescenceTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_iridescenceTextureUniform, nmgss_PBRShader_iridescenceTextureSetter);
    $this.$u_iridescenceThicknessTexture = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_iridescenceThicknessTextureUniform, nmgss_PBRShader_iridescenceThicknessTextureSetter);
    $this.$u_specularMirrorSampler = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_specularMirrorTextureUniform, nmgss_PBRShader_specularMirrorTextureSetter);
    $this.$u_specularMirrorMipmapScale = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_specularMirrorMipmapUniform, nmgss_PBRShader_specularMirrorMipmapSetter);
    $this.$u_specularMirrorNormal = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_mirrorNormal, nmgss_PBRShader_mirrorNormalSetter);
    $this.$u_viewportInv = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_viewportInvUniform, nmgss_PBRShader_viewportInvSetter);
    $this.$u_clippingPlane = cbgggs_BaseShader_register($prefix, nmgss_PBRShader_clippingPlaneUniform, nmgss_PBRShader_clippingPlaneSetter);
},
nmgss_PBRShader__init_ = (var_0, var_1, var_2) => {
    let var_3 = new nmgss_PBRShader();
    nmgss_PBRShader__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
nmgss_PBRShader_computeVertexColorLayers = ($this, $renderable) => {
    let $num, $vertexAttributes, $n, $i;
    $num = 0;
    $vertexAttributes = cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh);
    $n = cbgg_VertexAttributes_size($vertexAttributes);
    $i = 0;
    while ($i < $n) {
        if ((cbgg_VertexAttributes_get($vertexAttributes, $i)).$usage == 2)
            $num = $num + 1 | 0;
        $i = $i + 1 | 0;
    }
    return $num;
},
nmgss_PBRShader_countShadowCascades = ($this, $renderable) => {
    let $csm;
    $renderable = $renderable.$environment;
    if ($renderable !== null) {
        nmgsa_CascadeShadowMapAttribute_$callClinit();
        $csm = cbggg_Attributes_get($renderable, nmgsa_CascadeShadowMapAttribute_Type);
        if ($csm !== null)
            return $csm.$cascadeShadowMap.$lights2.$size0;
    }
    return 0;
},
nmgss_PBRShader_canRender = ($this, $renderable) => {
    if (Long_ne(nmgss_PBRShader_getTextureCoordinateMapMask($renderable.$material), $this.$textureCoordinateMapMask))
        return 0;
    if (Long_ne($this.$morphTargetsMask0, nmgss_PBRShader_computeMorphTargetsMask($this, $renderable)))
        return 0;
    if ($this.$vertexColorLayers != nmgss_PBRShader_computeVertexColorLayers($this, $renderable))
        return 0;
    if ($this.$cascadeCount == nmgss_PBRShader_countShadowCascades($this, $renderable))
        return cbgggs_DefaultShader_canRender($this, $renderable);
    return 0;
},
nmgss_PBRShader_computeMorphTargetsMask = ($this, $renderable) => {
    let $morphTargetsFlag, $vertexAttributes, $n, $i, $attr, var$7;
    $morphTargetsFlag = 0;
    $vertexAttributes = cbgg_Mesh_getVertexAttributes($renderable.$meshPart.$mesh);
    $n = cbgg_VertexAttributes_size($vertexAttributes);
    $i = 0;
    while ($i < $n) {
        $attr = cbgg_VertexAttributes_get($vertexAttributes, $i);
        var$7 = $attr.$usage;
        if (var$7 == 512)
            $morphTargetsFlag = $morphTargetsFlag | 1 << $attr.$unit;
        if (var$7 == 1024)
            $morphTargetsFlag = $morphTargetsFlag | 1 << ($attr.$unit + 8 | 0);
        if (var$7 == 2048)
            $morphTargetsFlag = $morphTargetsFlag | 1 << ($attr.$unit + 16 | 0);
        $i = $i + 1 | 0;
    }
    return Long_fromInt($morphTargetsFlag);
},
nmgss_PBRShader_getTextureCoordinateMapMask = $attributes => {
    let $mask, $maskShift, var$4, var$5, var$6, $attribute;
    nmgss_PBRShader_$callClinit();
    $mask = Long_ZERO;
    $maskShift = 0;
    var$4 = nmgss_PBRShader_allTextureTypes.data;
    var$5 = var$4.length;
    var$6 = 0;
    while (var$6 < var$5) {
        $attribute = cbggg_Attributes_get($attributes, var$4[var$6]);
        if ($attribute !== null)
            $mask = Long_or($mask, Long_fromInt(($attribute.$uvIndex & 1) << $maskShift));
        $maskShift = $maskShift + 1 | 0;
        var$6 = var$6 + 1 | 0;
    }
    return $mask;
},
nmgss_PBRShader_init = ($this, $program, $renderable) => {
    let $i, var$4;
    cbgggs_BaseShader_init($this, $program, $renderable);
    $this.$u_mipmapScale = cbggg_ShaderProgram_fetchUniformLocation($program, $rt_s(917), 0);
    $this.$u_texCoord0Transform = cbggg_ShaderProgram_fetchUniformLocation($program, $rt_s(918), 0);
    $this.$u_texCoord1Transform = cbggg_ShaderProgram_fetchUniformLocation($program, $rt_s(919), 0);
    $this.$u_morphTargets1 = cbggg_ShaderProgram_fetchUniformLocation($program, $rt_s(915), 0);
    $this.$u_morphTargets2 = cbggg_ShaderProgram_fetchUniformLocation($program, $rt_s(916), 0);
    $this.$u_ambientLight = cbggg_ShaderProgram_fetchUniformLocation($program, $rt_s(920), 0);
    $this.$u_csmPCFClip = cbggg_ShaderProgram_fetchUniformLocation($program, $rt_s(921), 0);
    $this.$u_csmTransforms = cbggg_ShaderProgram_fetchUniformLocation($program, $rt_s(922), 0);
    $i = 0;
    while ($i < $this.$cascadeCount) {
        var$4 = $this.$u_csmSamplers.data;
        $renderable = new jl_StringBuilder;
        jl_AbstractStringBuilder__init_($renderable);
        jl_AbstractStringBuilder_append($renderable, $rt_s(923));
        var$4[$i] = cbggg_ShaderProgram_fetchUniformLocation($program, jl_AbstractStringBuilder_toString(jl_StringBuilder_append1($renderable, $i)), 0);
        $i = $i + 1 | 0;
    }
},
nmgss_PBRShader_bindMaterial = ($this, $attributes) => {
    let var$2, var$3, var$4, $attribute, var$6, var$7, var$8;
    cbgggs_DefaultShader_bindMaterial($this, $attributes);
    nmgss_PBRShader_$callClinit();
    var$2 = nmgss_PBRShader_transformTexture.data;
    var$2[0] = null;
    var$2[1] = null;
    var$2 = nmgss_PBRShader_allTextureTypes.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $attribute = cbggg_Attributes_get($attributes, var$2[var$4]);
        if ($attribute !== null)
            nmgss_PBRShader_transformTexture.data[$attribute.$uvIndex] = $attribute;
        var$4 = var$4 + 1 | 0;
    }
    if ($this.$u_texCoord0Transform >= 0) {
        var$2 = nmgss_PBRShader_transformTexture.data;
        if (var$2[0] === null)
            cbgm_Matrix3_idt(nmgss_PBRShader_textureTransform);
        else {
            $attribute = var$2[0];
            cbgm_Matrix3_idt(nmgss_PBRShader_textureTransform);
            $attributes = nmgss_PBRShader_textureTransform;
            var$6 = $attribute.$offsetU;
            var$7 = $attribute.$offsetV;
            var$2 = $attributes.$tmp0;
            var$8 = var$2.data;
            var$8[0] = 1.0;
            var$8[1] = 0.0;
            var$8[3] = 0.0;
            var$8[4] = 1.0;
            var$8[6] = var$6;
            var$8[7] = var$7;
            cbgm_Matrix3_mul($attributes.$val0, var$2);
            cbgm_Matrix3_rotateRad(nmgss_PBRShader_textureTransform,  -$attribute.$rotationUV);
            cbgm_Matrix3_scale(nmgss_PBRShader_textureTransform, $attribute.$scaleU, $attribute.$scaleV);
        }
        cbggg_ShaderProgram_setUniformMatrix($this.$program, $this.$u_texCoord0Transform, nmgss_PBRShader_textureTransform);
    }
    if ($this.$u_texCoord1Transform >= 0) {
        var$2 = nmgss_PBRShader_transformTexture.data;
        if (var$2[1] === null)
            cbgm_Matrix3_idt(nmgss_PBRShader_textureTransform);
        else {
            $attribute = var$2[1];
            $attributes = nmgss_PBRShader_textureTransform;
            var$6 = $attribute.$offsetU;
            var$7 = $attribute.$offsetV;
            var$2 = $attributes.$val0.data;
            var$2[0] = 1.0;
            var$2[1] = 0.0;
            var$2[2] = 0.0;
            var$2[3] = 0.0;
            var$2[4] = 1.0;
            var$2[5] = 0.0;
            var$2[6] = var$6;
            var$2[7] = var$7;
            var$2[8] = 1.0;
            cbgm_Matrix3_rotateRad($attributes,  -$attribute.$rotationUV);
            cbgm_Matrix3_scale(nmgss_PBRShader_textureTransform, $attribute.$scaleU, $attribute.$scaleV);
        }
        cbggg_ShaderProgram_setUniformMatrix($this.$program, $this.$u_texCoord1Transform, nmgss_PBRShader_textureTransform);
    }
},
nmgss_PBRShader_render = ($this, $renderable, $combinedAttributes) => {
    let $specularEnv, $mipmapFactor, var$5, $weightVector;
    if ($this.$u_mipmapScale >= 0) {
        nmgsa_PBRCubemapAttribute_$callClinit();
        $specularEnv = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRCubemapAttribute_SpecularEnv);
        $mipmapFactor = $specularEnv === null ? 1.0 : jl_Math_log(cbgg_Cubemap_getWidth($specularEnv.$textureDescription0.$texture)) / jl_Math_log(2.0);
        cbggg_ShaderProgram_setUniformf1($this.$program, $this.$u_mipmapScale, $mipmapFactor);
    }
    var$5 = $this.$u_morphTargets1;
    if (var$5 >= 0) {
        $weightVector = $renderable.$userData;
        if (!($weightVector instanceof nmgsm_WeightVector))
            cbggg_ShaderProgram_setUniformf($this.$program, var$5, 0.0, 0.0, 0.0, 0.0);
        else {
            $weightVector = $weightVector;
            cbggg_ShaderProgram_setUniformf($this.$program, var$5, $weightVector.$get0(0), $weightVector.$get0(1), $weightVector.$get0(2), $weightVector.$get0(3));
        }
    }
    var$5 = $this.$u_morphTargets2;
    if (var$5 >= 0) {
        $weightVector = $renderable.$userData;
        if (!($weightVector instanceof nmgsm_WeightVector))
            cbggg_ShaderProgram_setUniformf($this.$program, var$5, 0.0, 0.0, 0.0, 0.0);
        else {
            $weightVector = $weightVector;
            cbggg_ShaderProgram_setUniformf($this.$program, var$5, $weightVector.$get0(4), $weightVector.$get0(5), $weightVector.$get0(6), $weightVector.$get0(7));
        }
    }
    cbgggs_DefaultShader_render($this, $renderable, $combinedAttributes);
},
nmgss_PBRShader_bindLights = ($this, $renderable, $attributes) => {
    let $dla, $ambiantLight, $light, $csmAttrib, $lights, $pcf, $clip, $i, var$11, $unit, var$13;
    a: {
        cbggga_DirectionalLightsAttribute_$callClinit();
        $dla = cbggg_Attributes_get($attributes, cbggga_DirectionalLightsAttribute_Type);
        if ($dla !== null) {
            $ambiantLight = cbgu_Array_iterator($dla.$lights1);
            while (true) {
                if (!cbgu_Array$ArrayIterator_hasNext($ambiantLight))
                    break a;
                $light = cbgu_Array$ArrayIterator_next($ambiantLight);
                if ($light instanceof nmgsl_DirectionalLightEx) {
                    $dla = $light;
                    $csmAttrib = $dla.$color1;
                    $lights = $dla.$baseColor;
                    $pcf = $lights.$r;
                    $clip = $dla.$intensity1;
                    $csmAttrib.$r = $pcf * $clip;
                    $csmAttrib.$g = $lights.$g * $clip;
                    $csmAttrib.$b = $lights.$b * $clip;
                }
            }
        }
    }
    cbgggs_DefaultShader_bindLights($this, $renderable, $attributes);
    cbggga_ColorAttribute_$callClinit();
    $ambiantLight = cbggg_Attributes_get($attributes, cbggga_ColorAttribute_AmbientLight);
    if ($ambiantLight !== null) {
        $renderable = $this.$program;
        $i = $this.$u_ambientLight;
        $dla = $ambiantLight.$color2;
        cbggg_ShaderProgram_setUniformf0($renderable, $i, $dla.$r, $dla.$g, $dla.$b);
    }
    nmgsa_CascadeShadowMapAttribute_$callClinit();
    $csmAttrib = cbggg_Attributes_get($attributes, nmgsa_CascadeShadowMapAttribute_Type);
    if ($csmAttrib !== null) {
        var$11 = $this.$u_csmSamplers.data;
        if (var$11.length > 0 && var$11[0] >= 0) {
            $lights = $csmAttrib.$cascadeShadowMap.$lights2;
            $i = 0;
            while ($i < $lights.$size0) {
                $light = $lights.$get1($i);
                $clip = 2.0 * ($light.$getDepthMap()).$texture.$getWidth();
                $pcf = 1.0 / $clip;
                $clip = 3.0 / $clip;
                $renderable = $this.$context.$textureBinder;
                $attributes = $light.$getDepthMap();
                $unit = cbgggu_DefaultTextureBinder_bind($renderable, $attributes);
                cbggg_ShaderProgram_setUniformi($this.$program, $this.$u_csmSamplers.data[$i], $unit);
                jl_System_fastArraycopy(($light.$getProjViewTrans()).$val, 0, $this.$csmTransforms, $i * 16 | 0, 16);
                var$11 = $this.$csmPCFClip.data;
                var$13 = $i * 2 | 0;
                var$11[var$13] = $pcf;
                var$11[var$13 + 1 | 0] = $clip;
                $i = $i + 1 | 0;
            }
            $renderable = $this.$program;
            var$13 = $this.$u_csmTransforms;
            var$11 = $this.$csmTransforms;
            cbggg_ShaderProgram_setUniformMatrix4fv($renderable, var$13, var$11, 0, var$11.data.length);
            $renderable = $this.$program;
            $i = $this.$u_csmPCFClip;
            var$11 = $this.$csmPCFClip;
            $unit = var$11.data.length;
            $attributes = cbg_Gdx_gl20;
            cbggg_ShaderProgram_checkManaged($renderable);
            $unit = $unit / 2 | 0;
            cgxgbt_TeaGL20_glUniform2fv($attributes, $i, $unit, var$11, 0);
        }
    }
},
nmgss_PBRShader__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    nmgss_PBRShader_v2 = cbgm_Vector2__init_2();
    var$1 = new cbgggs_BaseShader$Uniform;
    nmgsa_PBRTextureAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$1, $rt_s(924), nmgsa_PBRTextureAttribute_BaseColorTexture);
    nmgss_PBRShader_baseColorTextureUniform = var$1;
    nmgss_PBRShader_baseColorTextureSetter = nmgss_PBRShader$1__init_();
    var$2 = new cbgggs_BaseShader$Uniform;
    nmgsa_PBRColorAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$2, $rt_s(925), nmgsa_PBRColorAttribute_BaseColorFactor);
    nmgss_PBRShader_baseColorFactorUniform = var$2;
    nmgss_PBRShader_baseColorFactorSetter = nmgss_PBRShader$2__init_();
    nmgss_PBRShader_emissiveTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(926), nmgsa_PBRTextureAttribute_EmissiveTexture);
    nmgss_PBRShader_emissiveTextureSetter = nmgss_PBRShader$3__init_0();
    nmgss_PBRShader_normalTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(927), nmgsa_PBRTextureAttribute_NormalTexture);
    nmgss_PBRShader_normalTextureSetter = nmgss_PBRShader$4__init_();
    nmgss_PBRShader_metallicRoughnessTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(928), nmgsa_PBRTextureAttribute_MetallicRoughnessTexture);
    nmgss_PBRShader_metallicRoughnessTextureSetter = nmgss_PBRShader$5__init_0();
    nmgss_PBRShader_metallicRoughnessUniform = cbgggs_BaseShader$Uniform__init_($rt_s(929));
    nmgss_PBRShader_metallicRoughnessSetter = nmgss_PBRShader$6__init_0();
    nmgss_PBRShader_normalScaleUniform = cbgggs_BaseShader$Uniform__init_($rt_s(930));
    nmgss_PBRShader_normalScaleSetter = nmgss_PBRShader$7__init_0();
    nmgss_PBRShader_occlusionStrengthUniform = cbgggs_BaseShader$Uniform__init_($rt_s(931));
    nmgss_PBRShader_occlusionStrengthSetter = nmgss_PBRShader$8__init_();
    nmgss_PBRShader_occlusionTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(932), nmgsa_PBRTextureAttribute_OcclusionTexture);
    nmgss_PBRShader_occlusionTextureSetter = nmgss_PBRShader$9__init_();
    var$2 = new cbgggs_BaseShader$Uniform;
    nmgsa_PBRCubemapAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$2, $rt_s(933), nmgsa_PBRCubemapAttribute_DiffuseEnv);
    nmgss_PBRShader_diffuseEnvTextureUniform = var$2;
    nmgss_PBRShader_diffuseEnvTextureSetter = nmgss_PBRShader$10__init_();
    nmgss_PBRShader_specularEnvTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(934), nmgsa_PBRCubemapAttribute_SpecularEnv);
    nmgss_PBRShader_specularEnvTextureSetter = nmgss_PBRShader$11__init_();
    var$2 = new cbgggs_BaseShader$Uniform;
    nmgsa_PBRMatrixAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$2, $rt_s(935), nmgsa_PBRMatrixAttribute_EnvRotation);
    nmgss_PBRShader_envRotationUniform = var$2;
    nmgss_PBRShader_envRotationSetter = nmgss_PBRShader$12__init_();
    nmgss_PBRShader_brdfLUTTextureUniform = cbgggs_BaseShader$Uniform__init_($rt_s(936));
    nmgss_PBRShader_brdfLUTTextureSetter = nmgss_PBRShader$13__init_();
    nmgss_PBRShader_shadowBiasUniform = cbgggs_BaseShader$Uniform__init_($rt_s(937));
    nmgss_PBRShader_shadowBiasSetter = nmgss_PBRShader$14__init_0();
    nmgss_PBRShader_fogEquationUniform = cbgggs_BaseShader$Uniform__init_($rt_s(938));
    nmgss_PBRShader_fogEquationSetter = nmgss_PBRShader$15__init_();
    nmgss_PBRShader_emissiveScaledColor = nmgss_PBRShader$16__init_0();
    nmgss_PBRShader_transmissionFactorUniform = cbgggs_BaseShader$Uniform__init_($rt_s(939));
    nmgss_PBRShader_transmissionFactorSetter = nmgss_PBRShader$17__init_0();
    nmgss_PBRShader_transmissionTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(940), nmgsa_PBRTextureAttribute_TransmissionTexture);
    nmgss_PBRShader_transmissionTextureSetter = nmgss_PBRShader$18__init_0();
    nmgss_PBRShader_iorUniform = cbgggs_BaseShader$Uniform__init_($rt_s(941));
    nmgss_PBRShader_iorSetter = nmgss_PBRShader$19__init_();
    nmgss_PBRShader_thicknessFactorUniform = cbgggs_BaseShader$Uniform__init_($rt_s(942));
    nmgss_PBRShader_thicknessFactorSetter = nmgss_PBRShader$20__init_0();
    nmgss_PBRShader_volumeDistanceUniform = cbgggs_BaseShader$Uniform__init_($rt_s(943));
    nmgss_PBRShader_volumeDistanceSetter = nmgss_PBRShader$21__init_0();
    nmgss_PBRShader_volumeColorUniform = cbgggs_BaseShader$Uniform__init_($rt_s(944));
    nmgss_PBRShader_volumeColorSetter = nmgss_PBRShader$22__init_0();
    nmgss_PBRShader_thicknessTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(945), nmgsa_PBRTextureAttribute_ThicknessTexture);
    nmgss_PBRShader_thicknessTextureSetter = nmgss_PBRShader$23__init_0();
    nmgss_PBRShader_specularFactorUniform = cbgggs_BaseShader$Uniform__init_($rt_s(946));
    nmgss_PBRShader_specularFactorSetter = nmgss_PBRShader$24__init_();
    nmgss_PBRShader_specularColorFactorUniform = cbgggs_BaseShader$Uniform__init_($rt_s(947));
    nmgss_PBRShader_specularColorFactorSetter = nmgss_PBRShader$25__init_();
    nmgss_PBRShader_specularFactorTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(948), nmgsa_PBRTextureAttribute_SpecularFactorTexture);
    nmgss_PBRShader_specularFactorTextureSetter = nmgss_PBRShader$26__init_();
    var$2 = new cbgggs_BaseShader$Uniform;
    cbggga_TextureAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$2, $rt_s(949), cbggga_TextureAttribute_Specular);
    nmgss_PBRShader_specularColorTextureUniform = var$2;
    nmgss_PBRShader_specularColorTextureSetter = nmgss_PBRShader$27__init_();
    nmgss_PBRShader_iridescenceFactorUniform = cbgggs_BaseShader$Uniform__init_($rt_s(950));
    nmgss_PBRShader_iridescenceFactorSetter = nmgss_PBRShader$28__init_();
    nmgss_PBRShader_iridescenceIORUniform = cbgggs_BaseShader$Uniform__init_($rt_s(951));
    nmgss_PBRShader_iridescenceIORSetter = nmgss_PBRShader$29__init_0();
    nmgss_PBRShader_iridescenceThicknessMinUniform = cbgggs_BaseShader$Uniform__init_($rt_s(952));
    nmgss_PBRShader_iridescenceThicknessMinSetter = nmgss_PBRShader$30__init_();
    nmgss_PBRShader_iridescenceThicknessMaxUniform = cbgggs_BaseShader$Uniform__init_($rt_s(953));
    nmgss_PBRShader_iridescenceThicknessMaxSetter = nmgss_PBRShader$31__init_();
    nmgss_PBRShader_iridescenceTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(954), nmgsa_PBRTextureAttribute_IridescenceTexture);
    nmgss_PBRShader_iridescenceTextureSetter = nmgss_PBRShader$32__init_0();
    nmgss_PBRShader_iridescenceThicknessTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(955), nmgsa_PBRTextureAttribute_IridescenceThicknessTexture);
    nmgss_PBRShader_iridescenceThicknessTextureSetter = nmgss_PBRShader$33__init_0();
    nmgss_PBRShader_transmissionSourceTextureUniform = cbgggs_BaseShader$Uniform__init_0($rt_s(956), nmgsa_PBRTextureAttribute_TransmissionSourceTexture);
    nmgss_PBRShader_transmissionSourceTextureSetter = nmgss_PBRShader$34__init_0();
    nmgss_PBRShader_transmissionSourceMipmapUniform = cbgggs_BaseShader$Uniform__init_($rt_s(957));
    nmgss_PBRShader_transmissionSourceMipmapSetter = nmgss_PBRShader$35__init_();
    var$2 = new cbgggs_BaseShader$Uniform;
    nmgsa_MirrorSourceAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$2, $rt_s(958), nmgsa_MirrorSourceAttribute_Type);
    nmgss_PBRShader_specularMirrorTextureUniform = var$2;
    nmgss_PBRShader_specularMirrorTextureSetter = nmgss_PBRShader$36__init_();
    nmgss_PBRShader_specularMirrorMipmapUniform = cbgggs_BaseShader$Uniform__init_($rt_s(959));
    nmgss_PBRShader_specularMirrorMipmapSetter = nmgss_PBRShader$37__init_();
    nmgss_PBRShader_mirrorNormal = cbgggs_BaseShader$Uniform__init_($rt_s(960));
    nmgss_PBRShader_mirrorNormalSetter = nmgss_PBRShader$38__init_();
    nmgss_PBRShader_projViewTransUniform = cbgggs_BaseShader$Uniform__init_($rt_s(961));
    nmgss_PBRShader_projViewTransSetter = nmgss_PBRShader$39__init_0();
    nmgss_PBRShader_viewportInvUniform = cbgggs_BaseShader$Uniform__init_($rt_s(962));
    nmgss_PBRShader_viewportInvSetter = nmgss_PBRShader$40__init_();
    nmgss_PBRShader_clippingPlaneUniform = cbgggs_BaseShader$Uniform__init_($rt_s(963));
    nmgss_PBRShader_clippingPlaneSetter = nmgss_PBRShader$41__init_();
    var$3 = $rt_createArray(nmgsa_PBRTextureAttribute, 2);
    var$4 = var$3.data;
    var$4[0] = null;
    var$4[1] = null;
    nmgss_PBRShader_transformTexture = var$3;
    nmgss_PBRShader_textureTransform = cbgm_Matrix3__init_();
    var$3 = $rt_createLongArray(9);
    var$4 = var$3.data;
    var$4[0] = nmgsa_PBRTextureAttribute_BaseColorTexture;
    var$4[1] = nmgsa_PBRTextureAttribute_EmissiveTexture;
    var$4[2] = nmgsa_PBRTextureAttribute_NormalTexture;
    var$4[3] = nmgsa_PBRTextureAttribute_MetallicRoughnessTexture;
    var$4[4] = nmgsa_PBRTextureAttribute_OcclusionTexture;
    var$4[5] = nmgsa_PBRTextureAttribute_TransmissionTexture;
    var$4[6] = nmgsa_PBRTextureAttribute_ThicknessTexture;
    var$4[7] = nmgsa_PBRTextureAttribute_IridescenceTexture;
    var$4[8] = nmgsa_PBRTextureAttribute_IridescenceThicknessTexture;
    nmgss_PBRShader_allTextureTypes = var$3;
};
function cgxgbtf_FileDB$1() {
    let a = this; ji_OutputStream.call(a);
    a.$val$buffer = null;
    a.$val$file = null;
    a.$val$append = 0;
    a.$val$bufferSize = 0;
    a.$this$012 = null;
}
let cgxgbtf_FileDB$1_write = ($this, $b) => {
    let var$2, var$3, var$4;
    var$2 = $b.data;
    var$3 = $this.$val$buffer;
    var$4 = var$2.length;
    ji_ByteArrayOutputStream_write(var$3, $b, 0, var$4);
},
cgxgbtf_FileDB$1_close = $this => {
    let $data, var$2, var$3, var$4, var$5, var$6;
    $data = ji_ByteArrayOutputStream_toByteArray($this.$val$buffer);
    var$2 = $data.data;
    var$3 = $this.$this$012;
    var$4 = $this.$val$file;
    var$5 = $this.$val$append;
    var$6 = jl_Math_max(var$2.length, $this.$val$bufferSize);
    cgxgbtf_MemoryFileStorage_writeInternal(var$3, var$4, $data, var$5, var$6);
},
otc_PlatformDetector = $rt_classWithoutFields();
function cbggga_BlendingAttribute() {
    let a = this; cbggg_Attribute.call(a);
    a.$blended = 0;
    a.$sourceFunction = 0;
    a.$destFunction = 0;
    a.$opacity = 0.0;
}
let cbggga_BlendingAttribute_Type = Long_ZERO,
cbggga_BlendingAttribute_$callClinit = () => {
    cbggga_BlendingAttribute_$callClinit = $rt_eraseClinit(cbggga_BlendingAttribute);
    cbggga_BlendingAttribute__clinit_();
},
cbggga_BlendingAttribute__clinit_ = () => {
    cbggga_BlendingAttribute_Type = cbggg_Attribute_register($rt_s(964));
};
function cbggga_IntAttribute() {
    cbggg_Attribute.call(this);
    this.$value6 = 0;
}
let cbggga_IntAttribute_CullFace = Long_ZERO,
cbggga_IntAttribute_$callClinit = () => {
    cbggga_IntAttribute_$callClinit = $rt_eraseClinit(cbggga_IntAttribute);
    cbggga_IntAttribute__clinit_();
},
cbggga_IntAttribute__clinit_ = () => {
    cbggga_IntAttribute_CullFace = cbggg_Attribute_register($rt_s(965));
},
cbgggs_BaseShader$Validator = $rt_classWithoutFields(0);
function cbgggs_BaseShader$Uniform() {
    let a = this; jl_Object.call(a);
    a.$alias0 = null;
    a.$materialMask = Long_ZERO;
    a.$environmentMask = Long_ZERO;
    a.$overallMask = Long_ZERO;
}
let cbgggs_BaseShader$Uniform__init_2 = ($this, $alias, $materialMask, $environmentMask, $overallMask) => {
    $this.$alias0 = $alias;
    $this.$materialMask = $materialMask;
    $this.$environmentMask = $environmentMask;
    $this.$overallMask = $overallMask;
},
cbgggs_BaseShader$Uniform__init_4 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgggs_BaseShader$Uniform();
    cbgggs_BaseShader$Uniform__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgggs_BaseShader$Uniform__init_1 = ($this, $alias, $overallMask) => {
    cbgggs_BaseShader$Uniform__init_2($this, $alias, Long_ZERO, Long_ZERO, $overallMask);
},
cbgggs_BaseShader$Uniform__init_0 = (var_0, var_1) => {
    let var_2 = new cbgggs_BaseShader$Uniform();
    cbgggs_BaseShader$Uniform__init_1(var_2, var_0, var_1);
    return var_2;
},
cbgggs_BaseShader$Uniform__init_3 = ($this, $alias) => {
    cbgggs_BaseShader$Uniform__init_2($this, $alias, Long_ZERO, Long_ZERO, Long_ZERO);
},
cbgggs_BaseShader$Uniform__init_ = var_0 => {
    let var_1 = new cbgggs_BaseShader$Uniform();
    cbgggs_BaseShader$Uniform__init_3(var_1, var_0);
    return var_1;
},
cbgggs_BaseShader$Setter = $rt_classWithoutFields(0),
cbgggs_BaseShader$LocalSetter = $rt_classWithoutFields(),
cbgggs_BaseShader$LocalSetter_isGlobal = ($this, $shader, $inputID) => {
    return 0;
},
nmgss_PBRShader$1 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$1__init_0 = $this => {
    return;
},
nmgss_PBRShader$1__init_ = () => {
    let var_0 = new nmgss_PBRShader$1();
    nmgss_PBRShader$1__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$1_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_BaseColorTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$2 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$2__init_0 = $this => {
    return;
},
nmgss_PBRShader$2__init_ = () => {
    let var_0 = new nmgss_PBRShader$2();
    nmgss_PBRShader$2__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$2_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $attribute;
    nmgsa_PBRColorAttribute_$callClinit();
    $attribute = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRColorAttribute_BaseColorFactor);
    cbgggs_BaseShader_set3($shader, $inputID, $attribute !== null ? $attribute.$color2 : cbgg_Color_WHITE);
},
nmgss_PBRShader$3 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$3__init_ = $this => {
    return;
},
nmgss_PBRShader$3__init_0 = () => {
    let var_0 = new nmgss_PBRShader$3();
    nmgss_PBRShader$3__init_(var_0);
    return var_0;
},
nmgss_PBRShader$3_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_EmissiveTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$4 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$4__init_0 = $this => {
    return;
},
nmgss_PBRShader$4__init_ = () => {
    let var_0 = new nmgss_PBRShader$4();
    nmgss_PBRShader$4__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$4_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_NormalTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$5 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$5__init_ = $this => {
    return;
},
nmgss_PBRShader$5__init_0 = () => {
    let var_0 = new nmgss_PBRShader$5();
    nmgss_PBRShader$5__init_(var_0);
    return var_0;
},
nmgss_PBRShader$5_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_MetallicRoughnessTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$6 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$6__init_ = $this => {
    return;
},
nmgss_PBRShader$6__init_0 = () => {
    let var_0 = new nmgss_PBRShader$6();
    nmgss_PBRShader$6__init_(var_0);
    return var_0;
},
nmgss_PBRShader$6_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $metallicAttribute, $roughnessAttribute, $metallic, $roughness, var$9;
    nmgsa_PBRFloatAttribute_$callClinit();
    $metallicAttribute = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRFloatAttribute_Metallic);
    $roughnessAttribute = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRFloatAttribute_Roughness);
    $metallic = $metallicAttribute !== null ? $metallicAttribute.$value : 1.0;
    $roughness = $roughnessAttribute !== null ? $roughnessAttribute.$value : 1.0;
    nmgss_PBRShader_$callClinit();
    $renderable = cbgm_Vector2_set(nmgss_PBRShader_v2, $metallic, $roughness);
    var$9 = $shader.$locations.data;
    if (var$9[$inputID] >= 0)
        cbggg_ShaderProgram_setUniformf3($shader.$program, var$9[$inputID], $renderable.$x2, $renderable.$y1);
},
nmgss_PBRShader$7 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$7__init_ = $this => {
    return;
},
nmgss_PBRShader$7__init_0 = () => {
    let var_0 = new nmgss_PBRShader$7();
    nmgss_PBRShader$7__init_(var_0);
    return var_0;
},
nmgss_PBRShader$7_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $normalScaleAttribute;
    nmgsa_PBRFloatAttribute_$callClinit();
    $normalScaleAttribute = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRFloatAttribute_NormalScale);
    cbgggs_BaseShader_set0($shader, $inputID, $normalScaleAttribute !== null ? $normalScaleAttribute.$value : 1.0);
},
nmgss_PBRShader$8 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$8__init_0 = $this => {
    return;
},
nmgss_PBRShader$8__init_ = () => {
    let var_0 = new nmgss_PBRShader$8();
    nmgss_PBRShader$8__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$8_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $occlusionStrengthAttribute;
    nmgsa_PBRFloatAttribute_$callClinit();
    $occlusionStrengthAttribute = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRFloatAttribute_OcclusionStrength);
    cbgggs_BaseShader_set0($shader, $inputID, $occlusionStrengthAttribute !== null ? $occlusionStrengthAttribute.$value : 1.0);
},
nmgss_PBRShader$9 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$9__init_0 = $this => {
    return;
},
nmgss_PBRShader$9__init_ = () => {
    let var_0 = new nmgss_PBRShader$9();
    nmgss_PBRShader$9__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$9_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_OcclusionTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$10 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$10__init_0 = $this => {
    return;
},
nmgss_PBRShader$10__init_ = () => {
    let var_0 = new nmgss_PBRShader$10();
    nmgss_PBRShader$10__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$10_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $diffuseEnvAttribute;
    nmgsa_PBRCubemapAttribute_$callClinit();
    $diffuseEnvAttribute = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRCubemapAttribute_DiffuseEnv);
    $renderable = $shader.$context.$textureBinder;
    $combinedAttributes = $diffuseEnvAttribute.$textureDescription0;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$11 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter);
let nmgss_PBRShader$11__init_0 = $this => {
    return;
},
nmgss_PBRShader$11__init_ = () => {
    let var_0 = new nmgss_PBRShader$11();
    nmgss_PBRShader$11__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$11_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $specularEnvAttribute;
    nmgsa_PBRCubemapAttribute_$callClinit();
    $specularEnvAttribute = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRCubemapAttribute_SpecularEnv);
    $renderable = $shader.$context.$textureBinder;
    $combinedAttributes = $specularEnvAttribute.$textureDescription0;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
};
function nmgss_PBRShader$12() {
    cbgggs_BaseShader$LocalSetter.call(this);
    this.$mat3 = null;
}
let nmgss_PBRShader$12__init_0 = $this => {
    $this.$mat3 = cbgm_Matrix3__init_();
},
nmgss_PBRShader$12__init_ = () => {
    let var_0 = new nmgss_PBRShader$12();
    nmgss_PBRShader$12__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$12_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $attribute;
    nmgsa_PBRMatrixAttribute_$callClinit();
    $attribute = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRMatrixAttribute_EnvRotation);
    cbgggs_BaseShader_set5($shader, $inputID, cbgm_Matrix3_set($this.$mat3, $attribute.$matrix));
},
nmgss_PBRShader$13 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$13__init_0 = $this => {
    return;
},
nmgss_PBRShader$13__init_ = () => {
    let var_0 = new nmgss_PBRShader$13();
    nmgss_PBRShader$13__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$13_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $attribute;
    nmgsa_PBRTextureAttribute_$callClinit();
    $attribute = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_BRDFLUTTexture);
    if ($attribute !== null) {
        $renderable = $shader.$context.$textureBinder;
        $combinedAttributes = $attribute.$textureDescription;
        cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
    }
},
nmgss_PBRShader$14 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$14__init_ = $this => {
    return;
},
nmgss_PBRShader$14__init_0 = () => {
    let var_0 = new nmgss_PBRShader$14();
    nmgss_PBRShader$14__init_(var_0);
    return var_0;
},
nmgss_PBRShader$14_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $attribute;
    nmgsa_PBRFloatAttribute_$callClinit();
    $attribute = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRFloatAttribute_ShadowBias);
    cbgggs_BaseShader_set0($shader, $inputID, $attribute !== null ? $attribute.$value : 0.0);
},
nmgss_PBRShader$15 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$15__init_0 = $this => {
    return;
},
nmgss_PBRShader$15__init_ = () => {
    let var_0 = new nmgss_PBRShader$15();
    nmgss_PBRShader$15__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$15_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $attribute, $value;
    nmgsa_FogAttribute_$callClinit();
    $attribute = cbggg_Attributes_get($combinedAttributes, nmgsa_FogAttribute_FogEquation);
    if ($attribute !== null)
        $value = $attribute.$value7;
    else {
        cbgm_Vector3_$callClinit();
        $value = cbgm_Vector3_Zero;
    }
    cbgggs_BaseShader_set4($shader, $inputID, $value);
},
nmgss_PBRShader$16 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$16__init_ = $this => {
    return;
},
nmgss_PBRShader$16__init_0 = () => {
    let var_0 = new nmgss_PBRShader$16();
    nmgss_PBRShader$16__init_(var_0);
    return var_0;
},
nmgss_PBRShader$16_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $emissive, $emissiveIntensity, var$7, var$8;
    cbggga_ColorAttribute_$callClinit();
    $emissive = cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_Emissive);
    nmgsa_PBRFloatAttribute_$callClinit();
    $emissiveIntensity = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRFloatAttribute_EmissiveIntensity);
    if ($emissiveIntensity === null)
        cbgggs_BaseShader_set3($shader, $inputID, $emissive.$color2);
    else {
        $renderable = $emissive.$color2;
        var$7 = $renderable.$r;
        var$8 = $emissiveIntensity.$value;
        cbgggs_BaseShader_set1($shader, $inputID, var$7 * var$8, $renderable.$g * var$8, $renderable.$b * var$8, $renderable.$a * var$8);
    }
},
nmgss_PBRShader$17 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$17__init_ = $this => {
    return;
},
nmgss_PBRShader$17__init_0 = () => {
    let var_0 = new nmgss_PBRShader$17();
    nmgss_PBRShader$17__init_(var_0);
    return var_0;
},
nmgss_PBRShader$17_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $a;
    nmgsa_PBRFloatAttribute_$callClinit();
    $a = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRFloatAttribute_TransmissionFactor);
    cbgggs_BaseShader_set0($shader, $inputID, $a !== null ? $a.$value : 0.0);
},
nmgss_PBRShader$18 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$18__init_ = $this => {
    return;
},
nmgss_PBRShader$18__init_0 = () => {
    let var_0 = new nmgss_PBRShader$18();
    nmgss_PBRShader$18__init_(var_0);
    return var_0;
},
nmgss_PBRShader$18_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_TransmissionTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$19 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$19__init_0 = $this => {
    return;
},
nmgss_PBRShader$19__init_ = () => {
    let var_0 = new nmgss_PBRShader$19();
    nmgss_PBRShader$19__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$19_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_PBRFloatAttribute_$callClinit();
    cbgggs_BaseShader_set0($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRFloatAttribute_IOR)).$value);
},
nmgss_PBRShader$20 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$20__init_ = $this => {
    return;
},
nmgss_PBRShader$20__init_0 = () => {
    let var_0 = new nmgss_PBRShader$20();
    nmgss_PBRShader$20__init_(var_0);
    return var_0;
},
nmgss_PBRShader$20_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_PBRVolumeAttribute_$callClinit();
    cbgggs_BaseShader_set0($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRVolumeAttribute_Type)).$thicknessFactor);
},
nmgss_PBRShader$21 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$21__init_ = $this => {
    return;
},
nmgss_PBRShader$21__init_0 = () => {
    let var_0 = new nmgss_PBRShader$21();
    nmgss_PBRShader$21__init_(var_0);
    return var_0;
},
nmgss_PBRShader$21_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_PBRVolumeAttribute_$callClinit();
    cbgggs_BaseShader_set0($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRVolumeAttribute_Type)).$attenuationDistance);
},
nmgss_PBRShader$22 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$22__init_ = $this => {
    return;
},
nmgss_PBRShader$22__init_0 = () => {
    let var_0 = new nmgss_PBRShader$22();
    nmgss_PBRShader$22__init_(var_0);
    return var_0;
},
nmgss_PBRShader$22_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_PBRVolumeAttribute_$callClinit();
    $renderable = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRVolumeAttribute_Type)).$attenuationColor;
    cbgggs_BaseShader_set7($shader, $inputID, $renderable.$r, $renderable.$g, $renderable.$b);
},
nmgss_PBRShader$23 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$23__init_ = $this => {
    return;
},
nmgss_PBRShader$23__init_0 = () => {
    let var_0 = new nmgss_PBRShader$23();
    nmgss_PBRShader$23__init_(var_0);
    return var_0;
},
nmgss_PBRShader$23_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_ThicknessTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$24 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$24__init_0 = $this => {
    return;
},
nmgss_PBRShader$24__init_ = () => {
    let var_0 = new nmgss_PBRShader$24();
    nmgss_PBRShader$24__init_0(var_0);
    return var_0;
};
let nmgss_PBRShader$24_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_PBRFloatAttribute_$callClinit();
    cbgggs_BaseShader_set0($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRFloatAttribute_SpecularFactor)).$value);
},
nmgss_PBRShader$25 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$25__init_0 = $this => {
    return;
},
nmgss_PBRShader$25__init_ = () => {
    let var_0 = new nmgss_PBRShader$25();
    nmgss_PBRShader$25__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$25_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $a;
    nmgsa_PBRHDRColorAttribute_$callClinit();
    $a = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRHDRColorAttribute_Specular);
    cbgggs_BaseShader_set7($shader, $inputID, $a.$r0, $a.$g0, $a.$b0);
},
nmgss_PBRShader$26 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$26__init_0 = $this => {
    return;
},
nmgss_PBRShader$26__init_ = () => {
    let var_0 = new nmgss_PBRShader$26();
    nmgss_PBRShader$26__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$26_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_SpecularFactorTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$27 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$27__init_0 = $this => {
    return;
},
nmgss_PBRShader$27__init_ = () => {
    let var_0 = new nmgss_PBRShader$27();
    nmgss_PBRShader$27__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$27_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Specular)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$28 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$28__init_0 = $this => {
    return;
},
nmgss_PBRShader$28__init_ = () => {
    let var_0 = new nmgss_PBRShader$28();
    nmgss_PBRShader$28__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$28_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_PBRIridescenceAttribute_$callClinit();
    cbgggs_BaseShader_set0($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRIridescenceAttribute_Type)).$factor);
},
nmgss_PBRShader$29 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$29__init_ = $this => {
    return;
},
nmgss_PBRShader$29__init_0 = () => {
    let var_0 = new nmgss_PBRShader$29();
    nmgss_PBRShader$29__init_(var_0);
    return var_0;
},
nmgss_PBRShader$29_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_PBRIridescenceAttribute_$callClinit();
    cbgggs_BaseShader_set0($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRIridescenceAttribute_Type)).$ior);
},
nmgss_PBRShader$30 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$30__init_0 = $this => {
    return;
},
nmgss_PBRShader$30__init_ = () => {
    let var_0 = new nmgss_PBRShader$30();
    nmgss_PBRShader$30__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$30_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_PBRIridescenceAttribute_$callClinit();
    cbgggs_BaseShader_set0($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRIridescenceAttribute_Type)).$thicknessMin);
},
nmgss_PBRShader$31 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$31__init_0 = $this => {
    return;
},
nmgss_PBRShader$31__init_ = () => {
    let var_0 = new nmgss_PBRShader$31();
    nmgss_PBRShader$31__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$31_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_PBRIridescenceAttribute_$callClinit();
    cbgggs_BaseShader_set0($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRIridescenceAttribute_Type)).$thicknessMax);
},
nmgss_PBRShader$32 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$32__init_ = $this => {
    return;
},
nmgss_PBRShader$32__init_0 = () => {
    let var_0 = new nmgss_PBRShader$32();
    nmgss_PBRShader$32__init_(var_0);
    return var_0;
},
nmgss_PBRShader$32_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_IridescenceTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$33 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$33__init_ = $this => {
    return;
},
nmgss_PBRShader$33__init_0 = () => {
    let var_0 = new nmgss_PBRShader$33();
    nmgss_PBRShader$33__init_(var_0);
    return var_0;
},
nmgss_PBRShader$33_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_IridescenceThicknessTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$34 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$34__init_ = $this => {
    return;
},
nmgss_PBRShader$34__init_0 = () => {
    let var_0 = new nmgss_PBRShader$34();
    nmgss_PBRShader$34__init_(var_0);
    return var_0;
},
nmgss_PBRShader$34_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_PBRTextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_TransmissionSourceTexture)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$35 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$35__init_0 = $this => {
    return;
},
nmgss_PBRShader$35__init_ = () => {
    let var_0 = new nmgss_PBRShader$35();
    nmgss_PBRShader$35__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$35_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $a;
    nmgsa_PBRTextureAttribute_$callClinit();
    $a = cbggg_Attributes_get($combinedAttributes, nmgsa_PBRTextureAttribute_TransmissionSourceTexture);
    cbgggs_BaseShader_set0($shader, $inputID, $a === null ? 1.0 : jl_Math_log(cbgg_Texture_getWidth($a.$textureDescription.$texture)) / jl_Math_log(2.0));
},
nmgss_PBRShader$36 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$36__init_0 = $this => {
    return;
},
nmgss_PBRShader$36__init_ = () => {
    let var_0 = new nmgss_PBRShader$36();
    nmgss_PBRShader$36__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$36_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    nmgsa_MirrorSourceAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, nmgsa_MirrorSourceAttribute_Type)).$textureDescription1;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
nmgss_PBRShader$37 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter);
let nmgss_PBRShader$37__init_0 = $this => {
    return;
},
nmgss_PBRShader$37__init_ = () => {
    let var_0 = new nmgss_PBRShader$37();
    nmgss_PBRShader$37__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$37_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $a;
    nmgsa_MirrorSourceAttribute_$callClinit();
    $a = cbggg_Attributes_get($combinedAttributes, nmgsa_MirrorSourceAttribute_Type);
    cbgggs_BaseShader_set0($shader, $inputID, $a === null ? 1.0 : jl_Math_log(cbgg_Texture_getWidth($a.$textureDescription1.$texture)) / jl_Math_log(2.0) + 0.0);
},
nmgss_PBRShader$38 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$38__init_0 = $this => {
    return;
},
nmgss_PBRShader$38__init_ = () => {
    let var_0 = new nmgss_PBRShader$38();
    nmgss_PBRShader$38__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$38_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_MirrorSourceAttribute_$callClinit();
    cbgggs_BaseShader_set4($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, nmgsa_MirrorSourceAttribute_Type)).$normal1);
},
nmgss_PBRShader$39 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$39__init_ = $this => {
    return;
},
nmgss_PBRShader$39__init_0 = () => {
    let var_0 = new nmgss_PBRShader$39();
    nmgss_PBRShader$39__init_(var_0);
    return var_0;
},
nmgss_PBRShader$40 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$40__init_0 = $this => {
    return;
},
nmgss_PBRShader$40__init_ = () => {
    let var_0 = new nmgss_PBRShader$40();
    nmgss_PBRShader$40__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$40_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$camera;
    cbgggs_BaseShader_set6($shader, $inputID, 1.0 / $renderable.$viewportWidth, 1.0 / $renderable.$viewportHeight);
},
nmgss_PBRShader$41 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
nmgss_PBRShader$41__init_0 = $this => {
    return;
},
nmgss_PBRShader$41__init_ = () => {
    let var_0 = new nmgss_PBRShader$41();
    nmgss_PBRShader$41__init_0(var_0);
    return var_0;
},
nmgss_PBRShader$41_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    nmgsa_ClippingPlaneAttribute_$callClinit();
    $renderable = (cbggg_Attributes_get($combinedAttributes, nmgsa_ClippingPlaneAttribute_Type)).$plane;
    $combinedAttributes = $renderable.$normal;
    cbgggs_BaseShader_set1($shader, $inputID, $combinedAttributes.$x, $combinedAttributes.$y, $combinedAttributes.$z, $renderable.$d);
},
cbgggus_BaseShapeBuilder$1 = $rt_classWithoutFields(cbgu_FlushablePool),
cbgggus_BaseShapeBuilder$1_newObject = $this => {
    return cbgm_Vector3__init_();
},
cbgggus_BaseShapeBuilder$2 = $rt_classWithoutFields(cbgu_FlushablePool);
function cbggge_AmbientCubemap() {
    jl_Object.call(this);
    this.$data7 = null;
}
let cbggge_AmbientCubemap__init_0 = $this => {
    $this.$data7 = $rt_createFloatArray(18);
},
cbggge_AmbientCubemap__init_ = () => {
    let var_0 = new cbggge_AmbientCubemap();
    cbggge_AmbientCubemap__init_0(var_0);
    return var_0;
},
cbggge_AmbientCubemap_add = ($this, $r, $g, $b, $x, $y, $z) => {
    let $x2, $y2, $z2, $d, $bd, $rd, $gd, $idx, var$15, var$16;
    $x2 = $x * $x;
    $y2 = $y * $y;
    $z2 = $z * $z;
    $d = $x2 + $y2 + $z2;
    if ($d === 0.0)
        return $this;
    $bd = 1.0 / $d * ($d + 1.0);
    $rd = $r * $bd;
    $gd = $g * $bd;
    $bd = $b * $bd;
    $idx = $x <= 0.0 ? 3 : 0;
    var$15 = $this.$data7.data;
    var$15[$idx] = var$15[$idx] + $x2 * $rd;
    var$16 = $idx + 1 | 0;
    var$15[var$16] = var$15[var$16] + $x2 * $gd;
    var$16 = $idx + 2 | 0;
    var$15[var$16] = var$15[var$16] + $x2 * $bd;
    var$16 = $y <= 0.0 ? 9 : 6;
    var$15[var$16] = var$15[var$16] + $y2 * $rd;
    $idx = var$16 + 1 | 0;
    var$15[$idx] = var$15[$idx] + $y2 * $gd;
    var$16 = var$16 + 2 | 0;
    var$15[var$16] = var$15[var$16] + $y2 * $bd;
    var$16 = $z <= 0.0 ? 15 : 12;
    var$15[var$16] = var$15[var$16] + $z2 * $rd;
    $idx = var$16 + 1 | 0;
    var$15[$idx] = var$15[$idx] + $z2 * $gd;
    var$16 = var$16 + 2 | 0;
    var$15[var$16] = var$15[var$16] + $z2 * $bd;
    return $this;
},
cbgggs_DefaultShader$Inputs = $rt_classWithoutFields(),
cbgggs_DefaultShader$Inputs_projTrans = null,
cbgggs_DefaultShader$Inputs_viewTrans = null,
cbgggs_DefaultShader$Inputs_projViewTrans = null,
cbgggs_DefaultShader$Inputs_cameraPosition = null,
cbgggs_DefaultShader$Inputs_cameraDirection = null,
cbgggs_DefaultShader$Inputs_cameraUp = null,
cbgggs_DefaultShader$Inputs_cameraNearFar = null,
cbgggs_DefaultShader$Inputs_worldTrans = null,
cbgggs_DefaultShader$Inputs_viewWorldTrans = null,
cbgggs_DefaultShader$Inputs_projViewWorldTrans = null,
cbgggs_DefaultShader$Inputs_normalMatrix = null,
cbgggs_DefaultShader$Inputs_bones = null,
cbgggs_DefaultShader$Inputs_shininess = null,
cbgggs_DefaultShader$Inputs_opacity = null,
cbgggs_DefaultShader$Inputs_diffuseColor = null,
cbgggs_DefaultShader$Inputs_diffuseTexture = null,
cbgggs_DefaultShader$Inputs_diffuseUVTransform = null,
cbgggs_DefaultShader$Inputs_specularColor = null,
cbgggs_DefaultShader$Inputs_specularTexture = null,
cbgggs_DefaultShader$Inputs_specularUVTransform = null,
cbgggs_DefaultShader$Inputs_emissiveColor = null,
cbgggs_DefaultShader$Inputs_emissiveTexture = null,
cbgggs_DefaultShader$Inputs_emissiveUVTransform = null,
cbgggs_DefaultShader$Inputs_reflectionColor = null,
cbgggs_DefaultShader$Inputs_reflectionTexture = null,
cbgggs_DefaultShader$Inputs_reflectionUVTransform = null,
cbgggs_DefaultShader$Inputs_normalTexture = null,
cbgggs_DefaultShader$Inputs_normalUVTransform = null,
cbgggs_DefaultShader$Inputs_ambientTexture = null,
cbgggs_DefaultShader$Inputs_ambientUVTransform = null,
cbgggs_DefaultShader$Inputs_alphaTest = null,
cbgggs_DefaultShader$Inputs_ambientCube = null,
cbgggs_DefaultShader$Inputs_dirLights = null,
cbgggs_DefaultShader$Inputs_pointLights = null,
cbgggs_DefaultShader$Inputs_spotLights = null,
cbgggs_DefaultShader$Inputs_environmentCubemap = null,
cbgggs_DefaultShader$Inputs_$callClinit = () => {
    cbgggs_DefaultShader$Inputs_$callClinit = $rt_eraseClinit(cbgggs_DefaultShader$Inputs);
    cbgggs_DefaultShader$Inputs__clinit_();
},
cbgggs_DefaultShader$Inputs__clinit_ = () => {
    let var$1;
    cbgggs_DefaultShader$Inputs_projTrans = cbgggs_BaseShader$Uniform__init_($rt_s(452));
    cbgggs_DefaultShader$Inputs_viewTrans = cbgggs_BaseShader$Uniform__init_($rt_s(966));
    cbgggs_DefaultShader$Inputs_projViewTrans = cbgggs_BaseShader$Uniform__init_($rt_s(961));
    cbgggs_DefaultShader$Inputs_cameraPosition = cbgggs_BaseShader$Uniform__init_($rt_s(967));
    cbgggs_DefaultShader$Inputs_cameraDirection = cbgggs_BaseShader$Uniform__init_($rt_s(968));
    cbgggs_DefaultShader$Inputs_cameraUp = cbgggs_BaseShader$Uniform__init_($rt_s(969));
    cbgggs_DefaultShader$Inputs_cameraNearFar = cbgggs_BaseShader$Uniform__init_($rt_s(970));
    cbgggs_DefaultShader$Inputs_worldTrans = cbgggs_BaseShader$Uniform__init_($rt_s(971));
    cbgggs_DefaultShader$Inputs_viewWorldTrans = cbgggs_BaseShader$Uniform__init_($rt_s(972));
    cbgggs_DefaultShader$Inputs_projViewWorldTrans = cbgggs_BaseShader$Uniform__init_($rt_s(973));
    cbgggs_DefaultShader$Inputs_normalMatrix = cbgggs_BaseShader$Uniform__init_($rt_s(974));
    cbgggs_DefaultShader$Inputs_bones = cbgggs_BaseShader$Uniform__init_($rt_s(975));
    var$1 = new cbgggs_BaseShader$Uniform;
    cbggga_FloatAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$1, $rt_s(976), cbggga_FloatAttribute_Shininess);
    cbgggs_DefaultShader$Inputs_shininess = var$1;
    var$1 = new cbgggs_BaseShader$Uniform;
    cbggga_BlendingAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$1, $rt_s(977), cbggga_BlendingAttribute_Type);
    cbgggs_DefaultShader$Inputs_opacity = var$1;
    var$1 = new cbgggs_BaseShader$Uniform;
    cbggga_ColorAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$1, $rt_s(978), cbggga_ColorAttribute_Diffuse);
    cbgggs_DefaultShader$Inputs_diffuseColor = var$1;
    var$1 = new cbgggs_BaseShader$Uniform;
    cbggga_TextureAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$1, $rt_s(924), cbggga_TextureAttribute_Diffuse);
    cbgggs_DefaultShader$Inputs_diffuseTexture = var$1;
    cbgggs_DefaultShader$Inputs_diffuseUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(979), cbggga_TextureAttribute_Diffuse);
    cbgggs_DefaultShader$Inputs_specularColor = cbgggs_BaseShader$Uniform__init_0($rt_s(980), cbggga_ColorAttribute_Specular);
    cbgggs_DefaultShader$Inputs_specularTexture = cbgggs_BaseShader$Uniform__init_0($rt_s(981), cbggga_TextureAttribute_Specular);
    cbgggs_DefaultShader$Inputs_specularUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(982), cbggga_TextureAttribute_Specular);
    cbgggs_DefaultShader$Inputs_emissiveColor = cbgggs_BaseShader$Uniform__init_0($rt_s(983), cbggga_ColorAttribute_Emissive);
    cbgggs_DefaultShader$Inputs_emissiveTexture = cbgggs_BaseShader$Uniform__init_0($rt_s(926), cbggga_TextureAttribute_Emissive);
    cbgggs_DefaultShader$Inputs_emissiveUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(984), cbggga_TextureAttribute_Emissive);
    cbgggs_DefaultShader$Inputs_reflectionColor = cbgggs_BaseShader$Uniform__init_0($rt_s(985), cbggga_ColorAttribute_Reflection);
    cbgggs_DefaultShader$Inputs_reflectionTexture = cbgggs_BaseShader$Uniform__init_0($rt_s(986), cbggga_TextureAttribute_Reflection);
    cbgggs_DefaultShader$Inputs_reflectionUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(987), cbggga_TextureAttribute_Reflection);
    cbgggs_DefaultShader$Inputs_normalTexture = cbgggs_BaseShader$Uniform__init_0($rt_s(927), cbggga_TextureAttribute_Normal);
    cbgggs_DefaultShader$Inputs_normalUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(988), cbggga_TextureAttribute_Normal);
    cbgggs_DefaultShader$Inputs_ambientTexture = cbgggs_BaseShader$Uniform__init_0($rt_s(989), cbggga_TextureAttribute_Ambient);
    cbgggs_DefaultShader$Inputs_ambientUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(990), cbggga_TextureAttribute_Ambient);
    cbgggs_DefaultShader$Inputs_alphaTest = cbgggs_BaseShader$Uniform__init_($rt_s(991));
    cbgggs_DefaultShader$Inputs_ambientCube = cbgggs_BaseShader$Uniform__init_($rt_s(992));
    cbgggs_DefaultShader$Inputs_dirLights = cbgggs_BaseShader$Uniform__init_($rt_s(993));
    cbgggs_DefaultShader$Inputs_pointLights = cbgggs_BaseShader$Uniform__init_($rt_s(994));
    cbgggs_DefaultShader$Inputs_spotLights = cbgggs_BaseShader$Uniform__init_($rt_s(995));
    cbgggs_DefaultShader$Inputs_environmentCubemap = cbgggs_BaseShader$Uniform__init_($rt_s(996));
},
cbgggs_DefaultShader$Setters = $rt_classWithoutFields(),
cbgggs_DefaultShader$Setters_projTrans = null,
cbgggs_DefaultShader$Setters_viewTrans = null,
cbgggs_DefaultShader$Setters_projViewTrans = null,
cbgggs_DefaultShader$Setters_cameraPosition = null,
cbgggs_DefaultShader$Setters_cameraDirection = null,
cbgggs_DefaultShader$Setters_cameraUp = null,
cbgggs_DefaultShader$Setters_cameraNearFar = null;
let cbgggs_DefaultShader$Setters_worldTrans = null,
cbgggs_DefaultShader$Setters_viewWorldTrans = null,
cbgggs_DefaultShader$Setters_projViewWorldTrans = null,
cbgggs_DefaultShader$Setters_normalMatrix = null,
cbgggs_DefaultShader$Setters_shininess = null,
cbgggs_DefaultShader$Setters_diffuseColor = null,
cbgggs_DefaultShader$Setters_diffuseTexture = null,
cbgggs_DefaultShader$Setters_diffuseUVTransform = null,
cbgggs_DefaultShader$Setters_specularColor = null,
cbgggs_DefaultShader$Setters_specularTexture = null,
cbgggs_DefaultShader$Setters_specularUVTransform = null,
cbgggs_DefaultShader$Setters_emissiveColor = null,
cbgggs_DefaultShader$Setters_emissiveTexture = null,
cbgggs_DefaultShader$Setters_emissiveUVTransform = null,
cbgggs_DefaultShader$Setters_reflectionColor = null,
cbgggs_DefaultShader$Setters_reflectionTexture = null,
cbgggs_DefaultShader$Setters_reflectionUVTransform = null,
cbgggs_DefaultShader$Setters_normalTexture = null,
cbgggs_DefaultShader$Setters_normalUVTransform = null,
cbgggs_DefaultShader$Setters_ambientTexture = null,
cbgggs_DefaultShader$Setters_ambientUVTransform = null,
cbgggs_DefaultShader$Setters_environmentCubemap = null,
cbgggs_DefaultShader$Setters_$callClinit = () => {
    cbgggs_DefaultShader$Setters_$callClinit = $rt_eraseClinit(cbgggs_DefaultShader$Setters);
    cbgggs_DefaultShader$Setters__clinit_();
},
cbgggs_DefaultShader$Setters__clinit_ = () => {
    let var$1;
    cbgggs_DefaultShader$Setters_projTrans = new cbgggs_DefaultShader$Setters$1;
    cbgggs_DefaultShader$Setters_viewTrans = new cbgggs_DefaultShader$Setters$2;
    cbgggs_DefaultShader$Setters_projViewTrans = new cbgggs_DefaultShader$Setters$3;
    cbgggs_DefaultShader$Setters_cameraPosition = new cbgggs_DefaultShader$Setters$4;
    cbgggs_DefaultShader$Setters_cameraDirection = new cbgggs_DefaultShader$Setters$5;
    cbgggs_DefaultShader$Setters_cameraUp = new cbgggs_DefaultShader$Setters$6;
    cbgggs_DefaultShader$Setters_cameraNearFar = new cbgggs_DefaultShader$Setters$7;
    cbgggs_DefaultShader$Setters_worldTrans = new cbgggs_DefaultShader$Setters$8;
    var$1 = new cbgggs_DefaultShader$Setters$9;
    var$1.$temp0 = cbgm_Matrix4__init_();
    cbgggs_DefaultShader$Setters_viewWorldTrans = var$1;
    var$1 = new cbgggs_DefaultShader$Setters$10;
    var$1.$temp = cbgm_Matrix4__init_();
    cbgggs_DefaultShader$Setters_projViewWorldTrans = var$1;
    var$1 = new cbgggs_DefaultShader$Setters$11;
    var$1.$tmpM = cbgm_Matrix3__init_();
    cbgggs_DefaultShader$Setters_normalMatrix = var$1;
    cbgggs_DefaultShader$Setters_shininess = new cbgggs_DefaultShader$Setters$12;
    cbgggs_DefaultShader$Setters_diffuseColor = new cbgggs_DefaultShader$Setters$13;
    cbgggs_DefaultShader$Setters_diffuseTexture = new cbgggs_DefaultShader$Setters$14;
    cbgggs_DefaultShader$Setters_diffuseUVTransform = new cbgggs_DefaultShader$Setters$15;
    cbgggs_DefaultShader$Setters_specularColor = new cbgggs_DefaultShader$Setters$16;
    cbgggs_DefaultShader$Setters_specularTexture = new cbgggs_DefaultShader$Setters$17;
    cbgggs_DefaultShader$Setters_specularUVTransform = new cbgggs_DefaultShader$Setters$18;
    cbgggs_DefaultShader$Setters_emissiveColor = new cbgggs_DefaultShader$Setters$19;
    cbgggs_DefaultShader$Setters_emissiveTexture = new cbgggs_DefaultShader$Setters$20;
    cbgggs_DefaultShader$Setters_emissiveUVTransform = new cbgggs_DefaultShader$Setters$21;
    cbgggs_DefaultShader$Setters_reflectionColor = new cbgggs_DefaultShader$Setters$22;
    cbgggs_DefaultShader$Setters_reflectionTexture = new cbgggs_DefaultShader$Setters$23;
    cbgggs_DefaultShader$Setters_reflectionUVTransform = new cbgggs_DefaultShader$Setters$24;
    cbgggs_DefaultShader$Setters_normalTexture = new cbgggs_DefaultShader$Setters$25;
    cbgggs_DefaultShader$Setters_normalUVTransform = new cbgggs_DefaultShader$Setters$26;
    cbgggs_DefaultShader$Setters_ambientTexture = new cbgggs_DefaultShader$Setters$27;
    cbgggs_DefaultShader$Setters_ambientUVTransform = new cbgggs_DefaultShader$Setters$28;
    cbgggs_DefaultShader$Setters_environmentCubemap = new cbgggs_DefaultShader$Setters$29;
};
function cbgggs_DefaultShader$Setters$Bones() {
    cbgggs_BaseShader$LocalSetter.call(this);
    this.$bones1 = null;
}
let cbgggs_DefaultShader$Setters$Bones_idtMatrix = null,
cbgggs_DefaultShader$Setters$Bones_$callClinit = () => {
    cbgggs_DefaultShader$Setters$Bones_$callClinit = $rt_eraseClinit(cbgggs_DefaultShader$Setters$Bones);
    cbgggs_DefaultShader$Setters$Bones__clinit_();
},
cbgggs_DefaultShader$Setters$Bones__init_ = ($this, $numBones) => {
    cbgggs_DefaultShader$Setters$Bones_$callClinit();
    $this.$bones1 = $rt_createFloatArray($numBones * 16 | 0);
},
cbgggs_DefaultShader$Setters$Bones__init_0 = var_0 => {
    let var_1 = new cbgggs_DefaultShader$Setters$Bones();
    cbgggs_DefaultShader$Setters$Bones__init_(var_1, var_0);
    return var_1;
},
cbgggs_DefaultShader$Setters$Bones_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $i, var$6, $idx, var$8, var$9;
    $i = 0;
    while (true) {
        var$6 = $this.$bones1;
        if ($i >= var$6.data.length)
            break;
        a: {
            $idx = $i / 16 | 0;
            var$8 = $renderable.$bones;
            if (var$8 !== null) {
                var$8 = var$8.data;
                if ($idx < var$8.length && var$8[$idx] !== null) {
                    jl_System_fastArraycopy(var$8[$idx].$val, 0, var$6, $i, 16);
                    break a;
                }
            }
            cbgggs_DefaultShader$Setters$Bones_$callClinit();
            jl_System_fastArraycopy(cbgggs_DefaultShader$Setters$Bones_idtMatrix.$val, 0, var$6, $i, 16);
        }
        $i = $i + 16 | 0;
    }
    $renderable = $shader.$program;
    var$9 = cbgggs_BaseShader_loc($shader, $inputID);
    var$8 = $this.$bones1;
    cbggg_ShaderProgram_setUniformMatrix4fv($renderable, var$9, var$8, 0, var$8.data.length);
},
cbgggs_DefaultShader$Setters$Bones__clinit_ = () => {
    cbgggs_DefaultShader$Setters$Bones_idtMatrix = cbgm_Matrix4__init_();
};
function cbgggs_DefaultShader$Setters$ACubemap() {
    let a = this; cbgggs_BaseShader$LocalSetter.call(a);
    a.$cacheAmbientCubemap = null;
    a.$dirLightsOffset = 0;
    a.$pointLightsOffset = 0;
}
let cbgggs_DefaultShader$Setters$ACubemap_ones = null,
cbgggs_DefaultShader$Setters$ACubemap_tmpV1 = null,
cbgggs_DefaultShader$Setters$ACubemap_$callClinit = () => {
    cbgggs_DefaultShader$Setters$ACubemap_$callClinit = $rt_eraseClinit(cbgggs_DefaultShader$Setters$ACubemap);
    cbgggs_DefaultShader$Setters$ACubemap__clinit_();
},
cbgggs_DefaultShader$Setters$ACubemap__init_ = ($this, $dirLightsOffset, $pointLightsOffset) => {
    cbgggs_DefaultShader$Setters$ACubemap_$callClinit();
    $this.$cacheAmbientCubemap = cbggge_AmbientCubemap__init_();
    $this.$dirLightsOffset = $dirLightsOffset;
    $this.$pointLightsOffset = $pointLightsOffset;
},
cbgggs_DefaultShader$Setters$ACubemap__init_0 = (var_0, var_1) => {
    let var_2 = new cbgggs_DefaultShader$Setters$ACubemap();
    cbgggs_DefaultShader$Setters$ACubemap__init_(var_2, var_0, var_1);
    return var_2;
},
cbgggs_DefaultShader$Setters$ACubemap_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let var$5, $lights, var$7, var$8, var$9, $i, var$11, var$12, $i_0, var$14, var$15, var$16;
    if ($renderable.$environment === null) {
        $renderable = $shader.$program;
        $inputID = cbgggs_BaseShader_loc($shader, $inputID);
        cbgggs_DefaultShader$Setters$ACubemap_$callClinit();
        var$5 = cbgggs_DefaultShader$Setters$ACubemap_ones;
        cbggg_ShaderProgram_setUniform3fv($renderable, $inputID, var$5, 0, var$5.data.length);
    } else {
        $lights = $renderable.$worldTransform;
        cbgggs_DefaultShader$Setters$ACubemap_$callClinit();
        cbgm_Matrix4_getTranslation($lights, cbgggs_DefaultShader$Setters$ACubemap_tmpV1);
        cbggga_ColorAttribute_$callClinit();
        if (cbggg_Attributes_has($combinedAttributes, cbggga_ColorAttribute_AmbientLight)) {
            $renderable = $this.$cacheAmbientCubemap;
            $lights = (cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_AmbientLight)).$color2;
            var$7 = $lights.$r;
            var$8 = $lights.$g;
            var$9 = $lights.$b;
            $i = 0;
            while ($i < 18) {
                var$5 = $renderable.$data7.data;
                var$5[$i] = var$7;
                var$5[$i + 1 | 0] = var$8;
                var$5[$i + 2 | 0] = var$9;
                $i = $i + 3 | 0;
            }
        }
        a: {
            cbggga_DirectionalLightsAttribute_$callClinit();
            if (cbggg_Attributes_has($combinedAttributes, cbggga_DirectionalLightsAttribute_Type)) {
                $lights = (cbggg_Attributes_get($combinedAttributes, cbggga_DirectionalLightsAttribute_Type)).$lights1;
                $i = $this.$dirLightsOffset;
                while (true) {
                    if ($i >= $lights.$size0)
                        break a;
                    $renderable = $this.$cacheAmbientCubemap;
                    var$11 = (cbgu_Array_get($lights, $i)).$color1;
                    var$12 = (cbgu_Array_get($lights, $i)).$direction;
                    cbggge_AmbientCubemap_add($renderable, var$11.$r, var$11.$g, var$11.$b, var$12.$x, var$12.$y, var$12.$z);
                    $i = $i + 1 | 0;
                }
            }
        }
        b: {
            cbggga_PointLightsAttribute_$callClinit();
            if (cbggg_Attributes_has($combinedAttributes, cbggga_PointLightsAttribute_Type)) {
                $lights = (cbggg_Attributes_get($combinedAttributes, cbggga_PointLightsAttribute_Type)).$lights;
                $i_0 = $this.$pointLightsOffset;
                while (true) {
                    if ($i_0 >= $lights.$size0)
                        break b;
                    var$11 = $this.$cacheAmbientCubemap;
                    var$12 = (cbgu_Array_get($lights, $i_0)).$color1;
                    var$14 = (cbgu_Array_get($lights, $i_0)).$position2;
                    $renderable = cbgggs_DefaultShader$Setters$ACubemap_tmpV1;
                    var$7 = (cbgu_Array_get($lights, $i_0)).$intensity;
                    var$9 = var$14.$x - $renderable.$x;
                    var$15 = var$14.$y - $renderable.$y;
                    var$16 = var$14.$z - $renderable.$z;
                    var$7 = var$7 / (1.0 + jl_Math_sqrt(var$9 * var$9 + var$15 * var$15 + var$16 * var$16));
                    cbggge_AmbientCubemap_add(var$11, var$12.$r * var$7, var$12.$g * var$7, var$12.$b * var$7, $renderable.$x - var$14.$x, $renderable.$y - var$14.$y, $renderable.$z - var$14.$z);
                    $i_0 = $i_0 + 1 | 0;
                }
            }
        }
        $renderable = $this.$cacheAmbientCubemap;
        $i = 0;
        while (true) {
            var$5 = $renderable.$data7.data;
            if ($i >= var$5.length)
                break;
            var$7 = var$5[$i];
            if (var$7 < 0.0)
                var$7 = 0.0;
            else if (var$7 > 1.0)
                var$7 = 1.0;
            var$5[$i] = var$7;
            $i = $i + 1 | 0;
        }
        $renderable = $shader.$program;
        $i = cbgggs_BaseShader_loc($shader, $inputID);
        var$5 = $this.$cacheAmbientCubemap.$data7;
        cbggg_ShaderProgram_setUniform3fv($renderable, $i, var$5, 0, var$5.data.length);
    }
},
cbgggs_DefaultShader$Setters$ACubemap__clinit_ = () => {
    cbgggs_DefaultShader$Setters$ACubemap_ones = $rt_createFloatArrayFromData([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]);
    cbgggs_DefaultShader$Setters$ACubemap_tmpV1 = cbgm_Vector3__init_();
};
function cbgu_IntIntMap() {
    let a = this; jl_Object.call(a);
    a.$size10 = 0;
    a.$keyTable2 = null;
    a.$valueTable2 = null;
    a.$zeroValue0 = 0;
    a.$hasZeroValue1 = 0;
    a.$loadFactor = 0.0;
    a.$threshold3 = 0;
    a.$shift1 = 0;
    a.$mask5 = 0;
}
let cbgu_IntIntMap__init_0 = $this => {
    let var$1, var$2;
    $this.$loadFactor = 0.800000011920929;
    var$1 = cbgu_ObjectSet_tableSize(51, 0.800000011920929);
    $this.$threshold3 = var$1 * 0.800000011920929 | 0;
    var$2 = var$1 - 1 | 0;
    $this.$mask5 = var$2;
    $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$2));
    $this.$keyTable2 = $rt_createIntArray(var$1);
    $this.$valueTable2 = $rt_createIntArray(var$1);
},
cbgu_IntIntMap__init_ = () => {
    let var_0 = new cbgu_IntIntMap();
    cbgu_IntIntMap__init_0(var_0);
    return var_0;
},
cbgu_IntIntMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift1));
},
cbgu_IntIntMap_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    $keyTable = $this.$keyTable2;
    $i = cbgu_IntIntMap_place($this, $key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask5;
    }
    return $i;
},
cbgu_IntIntMap_put = ($this, $key, $value) => {
    let $i, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
    if (!$key) {
        $this.$zeroValue0 = $value;
        if (!$this.$hasZeroValue1) {
            $this.$hasZeroValue1 = 1;
            $this.$size10 = $this.$size10 + 1 | 0;
        }
        return;
    }
    $i = cbgu_IntIntMap_locateKey($this, $key);
    if ($i >= 0) {
        $this.$valueTable2.data[$i] = $value;
        return;
    }
    $i =  -($i + 1 | 0) | 0;
    var$4 = $this.$keyTable2.data;
    var$4[$i] = $key;
    $this.$valueTable2.data[$i] = $value;
    $key = $this.$size10 + 1 | 0;
    $this.$size10 = $key;
    if ($key >= $this.$threshold3)
        a: {
            $key = var$4.length;
            $value = $key << 1;
            $this.$threshold3 = $value * $this.$loadFactor | 0;
            $i = $value - 1 | 0;
            $this.$mask5 = $i;
            $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($i));
            var$4 = $this.$keyTable2;
            var$5 = $this.$valueTable2;
            $this.$keyTable2 = $rt_createIntArray($value);
            $this.$valueTable2 = $rt_createIntArray($value);
            if ($this.$size10 > 0) {
                var$6 = 0;
                while (true) {
                    if (var$6 >= $key)
                        break a;
                    var$7 = var$4.data[var$6];
                    if (var$7) {
                        var$8 = var$5.data[var$6];
                        var$9 = $this.$keyTable2;
                        $i = cbgu_IntIntMap_place($this, var$7);
                        while (true) {
                            var$10 = var$9.data;
                            if (!var$10[$i])
                                break;
                            $i = ($i + 1 | 0) & $this.$mask5;
                        }
                        var$10[$i] = var$7;
                        $this.$valueTable2.data[$i] = var$8;
                    }
                    var$6 = var$6 + 1 | 0;
                }
            }
        }
},
cbgu_IntIntMap_get = ($this, $key, $defaultValue) => {
    let $i;
    if (!$key) {
        if ($this.$hasZeroValue1)
            $defaultValue = $this.$zeroValue0;
        return $defaultValue;
    }
    $i = cbgu_IntIntMap_locateKey($this, $key);
    if ($i >= 0)
        $defaultValue = $this.$valueTable2.data[$i];
    return $defaultValue;
},
cbgggs_BaseShader$GlobalSetter = $rt_classWithoutFields(),
cbgggs_BaseShader$GlobalSetter_isGlobal = ($this, $shader, $inputID) => {
    return 1;
},
cbgggs_DefaultShader$Setters$1 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$1_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set2($shader, $inputID, $shader.$camera.$projection);
},
cbgggs_DefaultShader$Setters$2 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$2_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set2($shader, $inputID, $shader.$camera.$view);
},
cbgggs_DefaultShader$Setters$3 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$3_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set2($shader, $inputID, $shader.$camera.$combined);
},
cbgggs_DefaultShader$Setters$4 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$4_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let var$5, var$6, var$7, var$8;
    $renderable = $shader.$camera;
    $combinedAttributes = $renderable.$position3;
    var$5 = $combinedAttributes.$x;
    var$6 = $combinedAttributes.$y;
    var$7 = $combinedAttributes.$z;
    var$8 = $renderable.$far;
    cbgggs_BaseShader_set1($shader, $inputID, var$5, var$6, var$7, 1.188099980354309 / (var$8 * var$8));
},
cbgggs_DefaultShader$Setters$5 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$5_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set4($shader, $inputID, $shader.$camera.$direction0);
},
cbgggs_DefaultShader$Setters$6 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$6_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set4($shader, $inputID, $shader.$camera.$up);
},
cbgggs_DefaultShader$Setters$7 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$7_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$camera;
    cbgggs_BaseShader_set6($shader, $inputID, $renderable.$near, $renderable.$far);
},
cbgggs_DefaultShader$Setters$8 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$8_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set2($shader, $inputID, $renderable.$worldTransform);
};
function cbgggs_DefaultShader$Setters$9() {
    cbgggs_BaseShader$LocalSetter.call(this);
    this.$temp0 = null;
}
let cbgggs_DefaultShader$Setters$9_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set2($shader, $inputID, cbgm_Matrix4_mul(cbgm_Matrix4_set($this.$temp0, $shader.$camera.$view), $renderable.$worldTransform));
};
function cbgggs_DefaultShader$Setters$10() {
    cbgggs_BaseShader$LocalSetter.call(this);
    this.$temp = null;
}
let cbgggs_DefaultShader$Setters$10_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set2($shader, $inputID, cbgm_Matrix4_mul(cbgm_Matrix4_set($this.$temp, $shader.$camera.$combined), $renderable.$worldTransform));
};
function cbgggs_DefaultShader$Setters$11() {
    cbgggs_BaseShader$LocalSetter.call(this);
    this.$tmpM = null;
}
let cbgggs_DefaultShader$Setters$11_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set5($shader, $inputID, cbgm_Matrix3_transpose(cbgm_Matrix3_inv(cbgm_Matrix3_set($this.$tmpM, $renderable.$worldTransform))));
},
cbgggs_DefaultShader$Setters$12 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$12_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_FloatAttribute_$callClinit();
    cbgggs_BaseShader_set0($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, cbggga_FloatAttribute_Shininess)).$value);
},
cbgggs_DefaultShader$Setters$13 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$13_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_ColorAttribute_$callClinit();
    cbgggs_BaseShader_set3($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_Diffuse)).$color2);
},
cbgggs_DefaultShader$Setters$14 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$14_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Diffuse)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
cbgggs_DefaultShader$Setters$15 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$15_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Diffuse);
    cbgggs_BaseShader_set1($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$16 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$16_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_ColorAttribute_$callClinit();
    cbgggs_BaseShader_set3($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_Specular)).$color2);
},
cbgggs_DefaultShader$Setters$17 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$17_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Specular)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
cbgggs_DefaultShader$Setters$18 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$18_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Specular);
    cbgggs_BaseShader_set1($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$19 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$19_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_ColorAttribute_$callClinit();
    cbgggs_BaseShader_set3($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_Emissive)).$color2);
},
cbgggs_DefaultShader$Setters$20 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$20_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Emissive)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
cbgggs_DefaultShader$Setters$21 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$21_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Emissive);
    cbgggs_BaseShader_set1($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$22 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$22_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_ColorAttribute_$callClinit();
    cbgggs_BaseShader_set3($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_Reflection)).$color2);
},
cbgggs_DefaultShader$Setters$23 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$23_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Reflection)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
cbgggs_DefaultShader$Setters$24 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$24_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Reflection);
    cbgggs_BaseShader_set1($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$25 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$25_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Normal)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
cbgggs_DefaultShader$Setters$26 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$26_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Normal);
    cbgggs_BaseShader_set1($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$27 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$27_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    $renderable = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Ambient)).$textureDescription;
    cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
},
cbgggs_DefaultShader$Setters$28 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$28_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Ambient);
    cbgggs_BaseShader_set1($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$29 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$29_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_CubemapAttribute_$callClinit();
    if (cbggg_Attributes_has($combinedAttributes, cbggga_CubemapAttribute_EnvironmentMap)) {
        $renderable = $shader.$context.$textureBinder;
        $combinedAttributes = (cbggg_Attributes_get($combinedAttributes, cbggga_CubemapAttribute_EnvironmentMap)).$textureDescription0;
        cbgggs_BaseShader_set($shader, $inputID, cbgggu_DefaultTextureBinder_bind($renderable, $combinedAttributes));
    }
};
function cbgg_VertexAttributes$ReadonlyIterator() {
    let a = this; jl_Object.call(a);
    a.$array5 = null;
    a.$index4 = 0;
    a.$valid0 = 0;
}
let cbgg_VertexAttributes$ReadonlyIterator__init_0 = ($this, $array) => {
    $this.$valid0 = 1;
    $this.$array5 = $array;
},
cbgg_VertexAttributes$ReadonlyIterator__init_ = var_0 => {
    let var_1 = new cbgg_VertexAttributes$ReadonlyIterator();
    cbgg_VertexAttributes$ReadonlyIterator__init_0(var_1, var_0);
    return var_1;
},
cbgg_VertexAttributes$ReadonlyIterator_hasNext = $this => {
    let var$1;
    if (!$this.$valid0) {
        var$1 = new cbgu_GdxRuntimeException;
        jl_Exception__init_(var$1, $rt_s(414));
        $rt_throw(var$1);
    }
    return $this.$index4 >= $this.$array5.data.length ? 0 : 1;
},
cbgg_VertexAttributes$ReadonlyIterator_next = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$index4;
    var$2 = $this.$array5.data;
    if (var$1 >= var$2.length) {
        var$3 = new ju_NoSuchElementException;
        jl_Exception__init_(var$3, jl_String_valueOf0(var$1));
        $rt_throw(var$3);
    }
    if ($this.$valid0) {
        $this.$index4 = var$1 + 1 | 0;
        return var$2[var$1];
    }
    var$3 = new cbgu_GdxRuntimeException;
    jl_Exception__init_(var$3, $rt_s(414));
    $rt_throw(var$3);
},
cbgg_Colors = $rt_classWithoutFields(),
cbgg_Colors_map = null,
cbgg_Colors_$callClinit = () => {
    cbgg_Colors_$callClinit = $rt_eraseClinit(cbgg_Colors);
    cbgg_Colors__clinit_();
},
cbgg_Colors_reset = () => {
    let var$1;
    cbgg_Colors_$callClinit();
    var$1 = cbgg_Colors_map;
    if (var$1.$size8) {
        var$1.$size8 = 0;
        ju_Arrays_fill1(var$1.$keyTable, null);
        ju_Arrays_fill1(var$1.$valueTable, null);
    }
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(997), cbgg_Color_CLEAR);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(998), cbgg_Color_CLEAR_WHITE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(999), cbgg_Color_BLACK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1000), cbgg_Color_WHITE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1001), cbgg_Color_LIGHT_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1002), cbgg_Color_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1003), cbgg_Color_DARK_GRAY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1004), cbgg_Color_BLUE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1005), cbgg_Color_NAVY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1006), cbgg_Color_ROYAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1007), cbgg_Color_SLATE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1008), cbgg_Color_SKY);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1009), cbgg_Color_CYAN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1010), cbgg_Color_TEAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1011), cbgg_Color_GREEN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1012), cbgg_Color_CHARTREUSE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1013), cbgg_Color_LIME);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1014), cbgg_Color_FOREST);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1015), cbgg_Color_OLIVE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1016), cbgg_Color_YELLOW);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1017), cbgg_Color_GOLD);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1018), cbgg_Color_GOLDENROD);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1019), cbgg_Color_ORANGE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1020), cbgg_Color_BROWN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1021), cbgg_Color_TAN);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1022), cbgg_Color_FIREBRICK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1023), cbgg_Color_RED);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1024), cbgg_Color_SCARLET);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1025), cbgg_Color_CORAL);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1026), cbgg_Color_SALMON);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1027), cbgg_Color_PINK);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1028), cbgg_Color_MAGENTA);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1029), cbgg_Color_PURPLE);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1030), cbgg_Color_VIOLET);
    cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(1031), cbgg_Color_MAROON);
},
cbgg_Colors__clinit_ = () => {
    cbgg_Colors_map = cbgu_ObjectMap__init_();
    cbgg_Colors_reset();
},
nmgsm_WeightVector = $rt_classWithoutFields(),
cbgggm_NodePart$set$lambda$_4_0 = $rt_classWithoutFields(),
cbgggm_NodePart$set$lambda$_4_1 = $rt_classWithoutFields();
$rt_packages([-1, "com", 0, "github", 1, "xpenatan", 2, "gdx", 3, "backends", 4, "teavm", 5, "filesystem", 6, "types", 0, "badlogic", 8, "gdx", 9, "utils", 9, "math", 9, "graphics", 12, "glutils", 12, "g2d", 12, "g3d", 15, "shaders", 15, "utils", 15, "model", 15, "attributes", 0, "antz", 20, "jolt", 21, "screens", -1, "java", 23, "util", 24, "regex", 23, "nio", 26, "charset", 27, "impl", 23, "io", 23, "lang", -1, "org", 31, "teavm", 32, "classlib", 33, "impl", 34, "unicode", -1, "jolt", 36, "idl", 36, "enums",
-1, "net", 39, "mgsx", 40, "gltf", 41, "scene3d", 42, "shaders", 42, "utils", 42, "attributes", 42, "lights", 42, "scene"
]);
$rt_metadata([jl_Object, "Object", 30, 0, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(jl_Object_hashCode), "$equals", $rt_wrapFunction1(jl_Object_equals), "$toString", $rt_wrapFunction0(jl_Object_toString)],
cbgu_Pool$Poolable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_GlyphLayout, "GlyphLayout", 14, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbggg_GlyphLayout_$callClinit, ["$reset", $rt_wrapFunction0(cbggg_GlyphLayout_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout_toString)],
cbggg_TextureRegion, "TextureRegion", 14, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_Sprite, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
cbgu_Disposable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_BitmapFont, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbggg_NinePatch, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Color, "Color", 12, jl_Object, [], 0, 3, 0, 0, ["$equals", $rt_wrapFunction1(cbgg_Color_equals), "$hashCode", $rt_wrapFunction0(cbgg_Color_hashCode), "$toString", $rt_wrapFunction0(cbgg_Color_toString)],
cbgg_GLTexture, 0, jl_Object, [cbgu_Disposable], 1, 3, 0, 0, 0,
cbgg_Texture, "Texture", 12, cbgg_GLTexture, [], 0, 3, 0, cbgg_Texture_$callClinit, ["$getWidth", $rt_wrapFunction0(cbgg_Texture_getWidth), "$toString", $rt_wrapFunction0(cbgg_Texture_toString)],
jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Array, "Array", 10, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbgu_Array_hashCode), "$equals", $rt_wrapFunction1(cbgu_Array_equals), "$toString", $rt_wrapFunction0(cbgu_Array_toString)],
cbgu_Json, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_ObjectMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_OrderedMap, 0, cbgu_ObjectMap, [], 0, 3, 0, 0, 0,
cbgu_Queue, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_Predicate, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgg_VertexAttribute, "VertexAttribute", 12, jl_Object, [], 4, 3, 0, 0, ["$equals", $rt_wrapFunction1(cbgg_VertexAttribute_equals0), "$hashCode", $rt_wrapFunction0(cbgg_VertexAttribute_hashCode)],
cbg_Net, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_MapObject, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggp_ResourceData$Configurable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggp_ParticleEffect, 0, jl_Object, [cbgu_Disposable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
cbgu_Json$Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggp_ParticleController, 0, jl_Object, [cbgu_Json$Serializable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
cbgggp_ResourceData, 0, jl_Object, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
cbgggp_ParallelArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgm_Interpolation, 0, jl_Object, [], 1, 3, 0, cbgm_Interpolation_$callClinit, 0,
jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Type, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Class, "Class", 30, jl_Object, [jlr_AnnotatedElement, jlr_Type], 4, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Class_toString)],
otji_JS, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_Throwable, 0, jl_Object, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jl_Throwable_getMessage)],
jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0, 0,
jl_RuntimeException, "RuntimeException", 30, jl_Exception, [], 0, 3, 0, 0, 0,
jl_ClassCastException, "ClassCastException", 30, jl_RuntimeException, [], 0, 3, 0, 0, 0,
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_CharSequence, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_String, "String", 30, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_String_toString), "$equals", $rt_wrapFunction1(jl_String_equals), "$hashCode", $rt_wrapFunction0(jl_String_hashCode)],
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0, 0,
jl_Integer, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(jl_Integer_hashCode), "$equals", $rt_wrapFunction1(jl_Integer_equals)],
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, 0, ["$ensureCapacity", $rt_wrapFunction1(jl_AbstractStringBuilder_ensureCapacity), "$toString", $rt_wrapFunction0(jl_AbstractStringBuilder_toString)],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_StringBuilder, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$insert2", $rt_wrapFunction4(jl_StringBuilder_insert0), "$append7", $rt_wrapFunction3(jl_StringBuilder_append7), "$toString", $rt_wrapFunction0(jl_StringBuilder_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuilder_ensureCapacity), "$insert1", $rt_wrapFunction2(jl_StringBuilder_insert1), "$insert", $rt_wrapFunction2(jl_StringBuilder_insert)],
otcir_FieldInfo, 0, jl_Object, [], 0, 3, 0, 0, 0,
otcir_MethodInfo, 0, jl_Object, [], 0, 3, 0, 0, 0,
otcir_ClassList, 0, jl_Object, [], 0, 3, 0, 0, 0,
cajt_TeaVMLauncher, 0, jl_Object, [], 0, 3, 0, cajt_TeaVMLauncher_$callClinit, 0]);
$rt_metadata([otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbt_TeaApplicationConfiguration, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Application, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaApplication, "TeaApplication", 5, jl_Object, [cbg_Application, jl_Runnable], 0, 3, 0, 0, 0,
cbg_ApplicationListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_Game, 0, jl_Object, [cbg_ApplicationListener], 1, 3, 0, 0, 0,
caj_Main, 0, cbg_Game, [], 0, 3, 0, 0, 0,
cbgu_DefaultPool$PoolSupplier, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_GlyphLayout$_clinit_$lambda$_17_0, "GlyphLayout$<clinit>$lambda$_17_0", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$get5", $rt_wrapFunction0(cbggg_GlyphLayout$_clinit_$lambda$_17_0_get)],
cbgu_Pools, 0, jl_Object, [], 0, 3, 0, cbgu_Pools_$callClinit, 0,
cbgu_IntArray, "IntArray", 10, jl_Object, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbgu_IntArray_hashCode), "$equals", $rt_wrapFunction1(cbgu_IntArray_equals), "$toString", $rt_wrapFunction0(cbgu_IntArray_toString)],
ju_Map, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0, 0,
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Interpolation$1, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$2, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$3, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$4, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$Pow, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$PowIn, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$PowOut, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$5, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$6, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$7, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$8, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$9, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$10, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$11, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$Exp, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$ExpIn, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$ExpOut, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$12, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$13, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$14, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
cbgm_Interpolation$Elastic, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$ElasticIn, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$ElasticOut, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$Swing, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$SwingIn, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$SwingOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$BounceOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$Bounce, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, 0,
cbgm_Interpolation$BounceIn, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, 0,
ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_String$_clinit_$lambda$_115_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, 0,
jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, 0, 0, 0,
cgxgbtu_TeaBaseUrlProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtu_TeaDefaultBaseUrlProvider, 0, jl_Object, [cgxgbtu_TeaBaseUrlProvider], 0, 3, 0, 0, 0]);
$rt_metadata([jl_Enum, 0, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Enum_toString)],
cgxgbt_TeaApplication$AppState, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbtd_WindowWrapper, 0, jl_Object, [], 3, 3, 0, 0, 0,
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0, 0,
otjb_AnimationFrameCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtdi_TeaWindow, 0, jl_Object, [cgxgbtd_WindowWrapper, otjb_AnimationFrameCallback], 0, 3, 0, cgxgbtdi_TeaWindow_$callClinit, 0,
jl_Math, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_IllegalArgumentException, "IllegalArgumentException", 30, jl_RuntimeException, [], 0, 3, 0, 0, 0,
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0, 0,
otji_JSWrapper, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbta_TeaWebAgent, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_System, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbg_Graphics, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGraphics, 0, jl_Object, [cbg_Graphics], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloader, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl, 0, jl_Object, [cgxgbta_AssetDownloader], 0, 3, 0, 0, 0,
cgxgbta_AssetInstance, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbta_AssetLoader, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl, 0, jl_Object, [cgxgbta_AssetLoader], 0, 3, 0, 0, 0,
cgxjc_JMultiplatform, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxjc_JPlatformMap, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbg_Input, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_AbstractInput, 0, jl_Object, [cbg_Input], 1, 3, 0, 0, 0,
cgxgbtd_EventListenerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaInput, 0, cbg_AbstractInput, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cbg_Files, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaFiles, 0, jl_Object, [cbg_Files], 0, 3, 0, 0, 0,
cgxgbt_TeaNet, 0, jl_Object, [cbg_Net], 0, 3, 0, 0, 0,
cbg_ApplicationLogger, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaApplicationLogger, 0, jl_Object, [cbg_ApplicationLogger], 0, 3, 0, 0, 0,
cbgu_Clipboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaClipboard, 0, jl_Object, [cbgu_Clipboard], 0, 3, 0, 0, 0,
cbg_Gdx, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Audio, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaAudio, 0, jl_Object, [cbg_Audio], 3, 3, 0, 0, 0,
cgxgbt_DefaultTeaAudio, 0, jl_Object, [cgxgbt_TeaAudio], 0, 3, 0, 0, 0,
otjde_EventListener, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaApplication$1, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, 0,
cgxgbt_TeaApplication$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbt_TeaApplication$3, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, 0,
cbgu_Pool, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgu_DefaultPool, "DefaultPool", 10, cbgu_Pool, [], 0, 3, 0, 0, ["$newObject", $rt_wrapFunction0(cbgu_DefaultPool_newObject)],
jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 30, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cbgu_ArraySupplier, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_ObjectSet, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
jl_Long, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
cgxgbtg_WebGLContextAttributesWrapper, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbgg_GL20, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGL20, "TeaGL20", 5, jl_Object, [cbgg_GL20], 0, 3, 0, 0, ["$glActiveTexture", $rt_wrapFunction1(cgxgbt_TeaGL20_glActiveTexture), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindBuffer), "$glBindFramebuffer", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindFramebuffer), "$glBindRenderbuffer", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindRenderbuffer), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindTexture), "$glBlendFunc", $rt_wrapFunction2(cgxgbt_TeaGL20_glBlendFunc),
"$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferSubData), "$glCheckFramebufferStatus", $rt_wrapFunction1(cgxgbt_TeaGL20_glCheckFramebufferStatus), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20_glClearColor), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCompileShader), "$glCreateProgram",
$rt_wrapFunction0(cgxgbt_TeaGL20_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCreateShader), "$glCullFace", $rt_wrapFunction1(cgxgbt_TeaGL20_glCullFace), "$glDeleteProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glDeleteProgram), "$glDeleteShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glDeleteShader), "$glDepthFunc", $rt_wrapFunction1(cgxgbt_TeaGL20_glDepthFunc), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20_glDepthMask), "$glDepthRangef", $rt_wrapFunction2(cgxgbt_TeaGL20_glDepthRangef),
"$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisable), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisableVertexAttribArray), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements0), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnable), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnableVertexAttribArray), "$glFramebufferRenderbuffer",
$rt_wrapFunction4(cgxgbt_TeaGL20_glFramebufferRenderbuffer), "$glFramebufferTexture2D", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL20_glFramebufferTexture2D(this, var_1, var_2, var_3, var_4, var_5); }, "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetAttribLocation),
"$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetFloatv), "$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetIntegerv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetProgramInfoLog), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetProgramiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetShaderInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetShaderiv), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetString), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetUniformLocation),
"$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glLinkProgram), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20_glPixelStorei), "$glReadPixels", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cgxgbt_TeaGL20_glReadPixels(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$glRenderbufferStorage", $rt_wrapFunction4(cgxgbt_TeaGL20_glRenderbufferStorage), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20_glShaderSource), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6,
var_7, var_8, var_9) { cgxgbt_TeaGL20_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameterf), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameteri), "$glUniform1f", $rt_wrapFunction2(cgxgbt_TeaGL20_glUniform1f), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20_glUniform1i), "$glUniform2f", $rt_wrapFunction3(cgxgbt_TeaGL20_glUniform2f), "$glUniform3f", $rt_wrapFunction4(cgxgbt_TeaGL20_glUniform3f),
"$glUniform4f", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL20_glUniform4f(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glUseProgram), "$glVertexAttrib2f", $rt_wrapFunction3(cgxgbt_TeaGL20_glVertexAttrib2f), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20_glViewport)],
cbgg_GL30, 0, jl_Object, [cbgg_GL20], 3, 3, 0, 0, 0]);
$rt_metadata([cgxgbt_TeaGL30, "TeaGL30", 5, cgxgbt_TeaGL20, [cbgg_GL30], 0, 3, 0, 0, ["$glBindVertexArray", $rt_wrapFunction1(cgxgbt_TeaGL30_glBindVertexArray), "$glDeleteVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30_glDeleteVertexArrays), "$glDrawArraysInstanced", $rt_wrapFunction4(cgxgbt_TeaGL30_glDrawArraysInstanced), "$glDrawBuffers", $rt_wrapFunction2(cgxgbt_TeaGL30_glDrawBuffers), "$glDrawElementsInstanced", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30_glDrawElementsInstanced(this, var_1,
var_2, var_3, var_4, var_5); }, "$glGenVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30_glGenVertexArrays), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL30_glGetFloatv), "$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL30_glGetIntegerv)],
cgxgbt_TeaGL30Debug, "TeaGL30Debug", 5, cgxgbt_TeaGL30, [], 0, 3, 0, 0, ["$glBindVertexArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glBindVertexArray), "$glDeleteVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glDeleteVertexArrays), "$glDrawArraysInstanced", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawArraysInstanced), "$glDrawBuffers", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glDrawBuffers), "$glDrawElementsInstanced", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30Debug_glDrawElementsInstanced(this,
var_1, var_2, var_3, var_4, var_5); }, "$glGenVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGenVertexArrays), "$glActiveTexture", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glActiveTexture), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindTexture), "$glBlendFunc", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBlendFunc), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glClearColor), "$glCullFace", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCullFace),
"$glDepthFunc", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDepthFunc), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDepthMask), "$glDepthRangef", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glDepthRangef), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawElements0), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glEnable), "$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetIntegerv),
"$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetString), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glPixelStorei), "$glReadPixels", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cgxgbt_TeaGL30Debug_glReadPixels(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL30Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf",
$rt_wrapFunction3(cgxgbt_TeaGL30Debug_glTexParameterf), "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glViewport), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindBuffer), "$glBindFramebuffer", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindFramebuffer), "$glBindRenderbuffer", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindRenderbuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBlendFuncSeparate), "$glBufferData",
$rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBufferSubData), "$glCheckFramebufferStatus", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCheckFramebufferStatus), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL30Debug_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCreateShader), "$glDeleteProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDeleteProgram),
"$glDeleteShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDeleteShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawElements), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glEnableVertexAttribArray), "$glFramebufferRenderbuffer", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glFramebufferRenderbuffer), "$glFramebufferTexture2D", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30Debug_glFramebufferTexture2D(this,
var_1, var_2, var_3, var_4, var_5); }, "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glGetProgramiv), "$glGetProgramInfoLog",
$rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetProgramInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glLinkProgram), "$glRenderbufferStorage", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glRenderbufferStorage), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glShaderSource),
"$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glTexParameteri), "$glUniform1f", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glUniform1f), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glUniform1i), "$glUniform2f", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glUniform2f), "$glUniform3f", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glUniform3f), "$glUniform4f", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30Debug_glUniform4f(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glUseProgram),
"$glVertexAttrib2f", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glVertexAttrib2f), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL30Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
cbggg_GLVersion, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Application$ApplicationType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbt_TeaGraphics$FullscreenChanged, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaGraphics$1, 0, jl_Object, [cgxgbt_TeaGraphics$FullscreenChanged], 0, 0, 0, 0, 0,
cgxgbt_TeaGL20Debug, "TeaGL20Debug", 5, cgxgbt_TeaGL20, [], 0, 3, 0, 0, ["$glActiveTexture", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glActiveTexture), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindTexture), "$glBlendFunc", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBlendFunc), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glClearColor), "$glCullFace", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCullFace), "$glDepthFunc", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDepthFunc),
"$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDepthMask), "$glDepthRangef", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glDepthRangef), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnable), "$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetIntegerv), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetString),
"$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glPixelStorei), "$glReadPixels", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cgxgbt_TeaGL20Debug_glReadPixels(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameterf),
"$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glViewport), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindBuffer), "$glBindFramebuffer", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindFramebuffer), "$glBindRenderbuffer", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindRenderbuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferData),
"$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferSubData), "$glCheckFramebufferStatus", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCheckFramebufferStatus), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20Debug_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCreateShader), "$glDeleteProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDeleteProgram), "$glDeleteShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDeleteShader),
"$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements0), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnableVertexAttribArray), "$glFramebufferRenderbuffer", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glFramebufferRenderbuffer), "$glFramebufferTexture2D", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL20Debug_glFramebufferTexture2D(this, var_1, var_2, var_3, var_4,
var_5); }, "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetProgramInfoLog),
"$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glLinkProgram), "$glRenderbufferStorage", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glRenderbufferStorage), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameteri),
"$glUniform1f", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glUniform1f), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glUniform1i), "$glUniform2f", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glUniform2f), "$glUniform3f", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glUniform3f), "$glUniform4f", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL20Debug_glUniform4f(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glUseProgram), "$glVertexAttrib2f", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glVertexAttrib2f),
"$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0, 0,
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, 0, 0,
ju_Set, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_AbstractSet, 0, ju_AbstractCollection, [ju_Set], 1, 3, 0, 0, 0,
ju_HashSet, "HashSet", 24, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
cbgu_IntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_IntSet, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbtf_FileDB, 0, jl_Object, [], 1, 3, 0, 0, 0,
cgxgbtf_MemoryFileStorage, 0, cgxgbtf_FileDB, [], 0, 3, 0, 0, ["$putFile", $rt_wrapFunction2(cgxgbtf_MemoryFileStorage_putFile), "$removeFile", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_removeFile)],
cgxgbtft_InternalStorage, "InternalStorage", 7, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, 0,
cgxgbtft_ClasspathStorage, "ClasspathStorage", 7, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, 0,
cgxgbtft_LocalDBStorage, "LocalDBStorage", 7, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, ["$putFile", $rt_wrapFunction2(cgxgbtft_LocalDBStorage_putFile), "$removeFile", $rt_wrapFunction1(cgxgbtft_LocalDBStorage_removeFile)],
cgxgbt_TeaPermissions$TeaPermissionResult, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaClipboard$ClipboardWriteHandler, 0, jl_Object, [cgxgbt_TeaPermissions$TeaPermissionResult], 0, 0, 0, 0, 0,
cgxgbt_TeaClipboard$_init_$lambda$_0_0, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cgxgbt_TeaClipboard$_init_$lambda$_0_1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cgxgbt_TeaClipboard$_init_$lambda$_0_2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, 0,
cgxgbta_AssetLoaderListener, 0, jl_Object, [], 3, 3, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress)],
cgxgbt_TeaApplication$4, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress)],
cgxgbt_TeaApplication$5, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress)],
cbg_LifecycleListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtwh_HowlerAudioManager, 0, jl_Object, [cbg_LifecycleListener], 0, 3, 0, 0, 0,
cbgm_MathUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
ju_Dictionary, 0, jl_Object, [], 1, 3, 0, 0, 0,
ju_Hashtable, 0, ju_Dictionary, [ju_Map, jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
ju_Properties, 0, ju_Hashtable, [], 0, 3, 0, 0, 0,
cgxgbt_TeaGL20$CustomIntMap, 0, jl_Object, [otj_JSObject], 0, 0, 0, 0, 0,
cbggg_GLVersion$Type, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbta_AssetLoadImpl$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbta_AssetLoadImpl$3, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cbgu_ArraySupplier$_clinit_$lambda$_3_0, 0, jl_Object, [cbgu_ArraySupplier], 0, 3, 0, 0, 0,
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, 0, 0,
otji_IDBFactory, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
otji_EventHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
jur_RandomGenerator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Random, 0, jl_Object, [jur_RandomGenerator, ji_Serializable], 0, 3, 0, 0, 0,
cbgm_RandomXS128, 0, ju_Random, [], 0, 3, 0, 0, 0]);
$rt_metadata([ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Hashtable$1, 0, jl_Object, [ju_Enumeration], 0, 0, 0, 0, 0,
ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Hashtable$2, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, 0, 0,
jl_NumberFormatException, "NumberFormatException", 30, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
jl_IllegalStateException, "IllegalStateException", 30, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jl_NullPointerException, "NullPointerException", 30, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_AbstractSet, 0, jl_Object, [], 1, 0, 0, 0, ["$find0", $rt_wrapFunction3(jur_AbstractSet_find), "$findBack", $rt_wrapFunction4(jur_AbstractSet_findBack), "$getType1", $rt_wrapFunction0(jur_AbstractSet_getType), "$toString", $rt_wrapFunction0(jur_AbstractSet_toString), "$setNext", $rt_wrapFunction1(jur_AbstractSet_setNext), "$first1", $rt_wrapFunction1(jur_AbstractSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_AbstractSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_AbstractSet_processSecondPass)],
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0, 0,
ju_Hashtable$Entry, 0, ju_MapEntry, [], 0, 0, 0, 0, 0,
jur_FSet, "FSet", 25, jur_AbstractSet, [], 0, 0, 0, jur_FSet_$callClinit, ["$matches", $rt_wrapFunction3(jur_FSet_matches), "$getName", $rt_wrapFunction0(jur_FSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet_hasConsumed)],
jur_Lexer, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_PatternSyntaxException, "PatternSyntaxException", 25, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jur_PatternSyntaxException_getMessage)],
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
ju_SequencedCollection, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_List, 0, jl_Object, [ju_SequencedCollection], 3, 3, 0, 0, 0,
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, 0, 0,
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, 0, 0,
jur_NonCapFSet, "NonCapFSet", 25, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NonCapFSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapFSet_hasConsumed)],
jur_AheadFSet, "AheadFSet", 25, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AheadFSet_matches), "$getName", $rt_wrapFunction0(jur_AheadFSet_getName)],
jur_BehindFSet, "BehindFSet", 25, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_BehindFSet_matches), "$getName", $rt_wrapFunction0(jur_BehindFSet_getName)],
jur_AtomicFSet, "AtomicFSet", 25, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AtomicFSet_matches), "$getName", $rt_wrapFunction0(jur_AtomicFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_AtomicFSet_hasConsumed)],
jur_FinalSet, "FinalSet", 25, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_FinalSet_matches), "$getName", $rt_wrapFunction0(jur_FinalSet_getName)],
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_LeafSet_matches), "$charCount", $rt_wrapFunction0(jur_LeafSet_charCount), "$hasConsumed", $rt_wrapFunction1(jur_LeafSet_hasConsumed)],
jur_EmptySet, "EmptySet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_EmptySet_accepts), "$find0", $rt_wrapFunction3(jur_EmptySet_find), "$findBack", $rt_wrapFunction4(jur_EmptySet_findBack), "$getName", $rt_wrapFunction0(jur_EmptySet_getName), "$hasConsumed", $rt_wrapFunction1(jur_EmptySet_hasConsumed)],
jur_JointSet, "JointSet", 25, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_JointSet_matches), "$setNext", $rt_wrapFunction1(jur_JointSet_setNext), "$getName", $rt_wrapFunction0(jur_JointSet_getName), "$first1", $rt_wrapFunction1(jur_JointSet_first), "$hasConsumed", $rt_wrapFunction1(jur_JointSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_JointSet_processSecondPass)],
jur_NonCapJointSet, "NonCapJointSet", 25, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NonCapJointSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapJointSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapJointSet_hasConsumed)],
jur_AtomicJointSet, "AtomicJointSet", 25, jur_NonCapJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AtomicJointSet_matches), "$setNext", $rt_wrapFunction1(jur_AtomicJointSet_setNext), "$getName", $rt_wrapFunction0(jur_AtomicJointSet_getName)],
jur_PositiveLookAhead, "PositiveLookAhead", 25, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PositiveLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookAhead_getName)],
jur_NegativeLookAhead, "NegativeLookAhead", 25, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NegativeLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookAhead_getName)],
jur_PositiveLookBehind, "PositiveLookBehind", 25, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PositiveLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookBehind_getName)],
jur_NegativeLookBehind, "NegativeLookBehind", 25, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NegativeLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookBehind_getName)],
jur_SingleSet, "SingleSet", 25, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SingleSet_matches), "$find0", $rt_wrapFunction3(jur_SingleSet_find), "$findBack", $rt_wrapFunction4(jur_SingleSet_findBack), "$first1", $rt_wrapFunction1(jur_SingleSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_SingleSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_SingleSet_processSecondPass)],
jlr_Array, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_ArrayStoreException, "ArrayStoreException", 30, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, 0, 0, ["$getBits", $rt_wrapFunction0(jur_AbstractCharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getLowHighSurrogates), "$getInstance1", $rt_wrapFunction0(jur_AbstractCharClass_getInstance), "$hasUCI", $rt_wrapFunction0(jur_AbstractCharClass_hasUCI)],
ju_MissingResourceException, "MissingResourceException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_CharClass, "CharClass", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass_contains), "$getBits", $rt_wrapFunction0(jur_CharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_CharClass_getLowHighSurrogates), "$getInstance1", $rt_wrapFunction0(jur_CharClass_getInstance), "$toString", $rt_wrapFunction0(jur_CharClass_toString), "$hasUCI", $rt_wrapFunction0(jur_CharClass_hasUCI)],
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$first1", $rt_wrapFunction1(jur_QuantifierSet_first), "$hasConsumed", $rt_wrapFunction1(jur_QuantifierSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_QuantifierSet_processSecondPass)],
jur_LeafQuantifierSet, "LeafQuantifierSet", 25, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_LeafQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_LeafQuantifierSet_getName)],
jur_CompositeQuantifierSet, "CompositeQuantifierSet", 25, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeQuantifierSet_getName)],
jur_GroupQuantifierSet, "GroupQuantifierSet", 25, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_GroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_GroupQuantifierSet_getName)],
jur_AltQuantifierSet, "AltQuantifierSet", 25, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AltQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltQuantifierSet_setNext)],
jur_UnifiedQuantifierSet, "UnifiedQuantifierSet", 25, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UnifiedQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_UnifiedQuantifierSet_find)],
jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, 0, 0, 0,
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, 0, 0]);
$rt_metadata([jur_Quantifier, "Quantifier", 25, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(jur_Quantifier_toString)],
jur_FSet$PossessiveFSet, "FSet$PossessiveFSet", 25, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_FSet$PossessiveFSet_matches), "$getName", $rt_wrapFunction0(jur_FSet$PossessiveFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet$PossessiveFSet_hasConsumed)],
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
jur_LowHighSurrogateRangeSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$getName", $rt_wrapFunction0(jur_LowHighSurrogateRangeSet_getName)],
jur_CompositeRangeSet, "CompositeRangeSet", 25, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeRangeSet_matches), "$setNext", $rt_wrapFunction1(jur_CompositeRangeSet_setNext), "$getName", $rt_wrapFunction0(jur_CompositeRangeSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CompositeRangeSet_hasConsumed), "$first1", $rt_wrapFunction1(jur_CompositeRangeSet_first)],
jur_SupplRangeSet, "SupplRangeSet", 25, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SupplRangeSet_matches), "$getName", $rt_wrapFunction0(jur_SupplRangeSet_getName), "$contains", $rt_wrapFunction1(jur_SupplRangeSet_contains), "$first1", $rt_wrapFunction1(jur_SupplRangeSet_first), "$setNext", $rt_wrapFunction1(jur_SupplRangeSet_setNext), "$hasConsumed", $rt_wrapFunction1(jur_SupplRangeSet_hasConsumed)],
jur_UCISupplRangeSet, "UCISupplRangeSet", 25, jur_SupplRangeSet, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_UCISupplRangeSet_contains), "$getName", $rt_wrapFunction0(jur_UCISupplRangeSet_getName)],
jur_UCIRangeSet, "UCIRangeSet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCIRangeSet_accepts), "$getName", $rt_wrapFunction0(jur_UCIRangeSet_getName)],
jur_RangeSet, "RangeSet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_RangeSet_accepts), "$getName", $rt_wrapFunction0(jur_RangeSet_getName), "$first1", $rt_wrapFunction1(jur_RangeSet_first)],
jur_HangulDecomposedCharSet, "HangulDecomposedCharSet", 25, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_HangulDecomposedCharSet_setNext), "$getName", $rt_wrapFunction0(jur_HangulDecomposedCharSet_getName), "$matches", $rt_wrapFunction3(jur_HangulDecomposedCharSet_matches), "$first1", $rt_wrapFunction1(jur_HangulDecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HangulDecomposedCharSet_hasConsumed)],
jur_CharSet, "CharSet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$charCount", $rt_wrapFunction0(jur_CharSet_charCount), "$accepts", $rt_wrapFunction2(jur_CharSet_accepts), "$find0", $rt_wrapFunction3(jur_CharSet_find), "$findBack", $rt_wrapFunction4(jur_CharSet_findBack), "$getName", $rt_wrapFunction0(jur_CharSet_getName), "$first1", $rt_wrapFunction1(jur_CharSet_first)],
jur_UCICharSet, "UCICharSet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCICharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCICharSet_getName)],
jur_CICharSet, "CICharSet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_CICharSet_accepts), "$getName", $rt_wrapFunction0(jur_CICharSet_getName)],
jur_DecomposedCharSet, "DecomposedCharSet", 25, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_DecomposedCharSet_setNext), "$matches", $rt_wrapFunction3(jur_DecomposedCharSet_matches), "$getName", $rt_wrapFunction0(jur_DecomposedCharSet_getName), "$first1", $rt_wrapFunction1(jur_DecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_DecomposedCharSet_hasConsumed)],
jur_UCIDecomposedCharSet, "UCIDecomposedCharSet", 25, jur_DecomposedCharSet, [], 0, 0, 0, 0, 0,
jur_CIDecomposedCharSet, "CIDecomposedCharSet", 25, jur_DecomposedCharSet, [], 0, 0, 0, 0, 0,
jur_PossessiveGroupQuantifierSet, "PossessiveGroupQuantifierSet", 25, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet_matches)],
jur_PosPlusGroupQuantifierSet, "PosPlusGroupQuantifierSet", 25, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet_matches)],
jur_AltGroupQuantifierSet, "AltGroupQuantifierSet", 25, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltGroupQuantifierSet_setNext)],
jur_PosAltGroupQuantifierSet, "PosAltGroupQuantifierSet", 25, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_PosAltGroupQuantifierSet_setNext)],
jur_CompositeGroupQuantifierSet, "CompositeGroupQuantifierSet", 25, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeGroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeGroupQuantifierSet_getName)],
jur_PosCompositeGroupQuantifierSet, "PosCompositeGroupQuantifierSet", 25, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosCompositeGroupQuantifierSet_matches)],
jur_ReluctantGroupQuantifierSet, "ReluctantGroupQuantifierSet", 25, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet_matches)],
jur_RelAltGroupQuantifierSet, "RelAltGroupQuantifierSet", 25, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet_matches)],
jur_RelCompositeGroupQuantifierSet, "RelCompositeGroupQuantifierSet", 25, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_RelCompositeGroupQuantifierSet_matches)],
jur_DotAllQuantifierSet, "DotAllQuantifierSet", 25, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotAllQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_DotAllQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotAllQuantifierSet_getName)],
jur_DotQuantifierSet, "DotQuantifierSet", 25, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_DotQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotQuantifierSet_getName)],
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0, 0,
jur_PossessiveQuantifierSet, "PossessiveQuantifierSet", 25, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveQuantifierSet_matches)],
jur_PossessiveAltQuantifierSet, "PossessiveAltQuantifierSet", 25, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet_matches)],
jur_PossessiveCompositeQuantifierSet, "PossessiveCompositeQuantifierSet", 25, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveCompositeQuantifierSet_matches)],
jur_ReluctantQuantifierSet, "ReluctantQuantifierSet", 25, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantQuantifierSet_matches)],
jur_ReluctantAltQuantifierSet, "ReluctantAltQuantifierSet", 25, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet_matches)],
jur_ReluctantCompositeQuantifierSet, "ReluctantCompositeQuantifierSet", 25, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantCompositeQuantifierSet_matches)],
jur_SOLSet, "SOLSet", 25, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_SOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_SOLSet_getName)],
jur_WordBoundary, "WordBoundary", 25, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_WordBoundary_matches), "$hasConsumed", $rt_wrapFunction1(jur_WordBoundary_hasConsumed), "$getName", $rt_wrapFunction0(jur_WordBoundary_getName)],
jur_PreviousMatch, "PreviousMatch", 25, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PreviousMatch_matches), "$hasConsumed", $rt_wrapFunction1(jur_PreviousMatch_hasConsumed), "$getName", $rt_wrapFunction0(jur_PreviousMatch_getName)],
jur_EOLSet, "EOLSet", 25, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_EOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOLSet_getName)],
jur_EOISet, "EOISet", 25, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_EOISet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOISet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOISet_getName)],
jur_MultiLineSOLSet, "MultiLineSOLSet", 25, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_MultiLineSOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineSOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineSOLSet_getName)],
jur_DotAllSet, "DotAllSet", 25, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotAllSet_matches), "$getName", $rt_wrapFunction0(jur_DotAllSet_getName), "$setNext", $rt_wrapFunction1(jur_DotAllSet_setNext), "$getType1", $rt_wrapFunction0(jur_DotAllSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotAllSet_hasConsumed)],
jur_DotSet, "DotSet", 25, jur_JointSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotSet_matches), "$getName", $rt_wrapFunction0(jur_DotSet_getName), "$setNext", $rt_wrapFunction1(jur_DotSet_setNext), "$getType1", $rt_wrapFunction0(jur_DotSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotSet_hasConsumed)],
jur_UEOLSet, "UEOLSet", 25, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UEOLSet_getName)],
jur_UMultiLineEOLSet, "UMultiLineEOLSet", 25, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UMultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UMultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UMultiLineEOLSet_getName)],
jur_MultiLineEOLSet, "MultiLineEOLSet", 25, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_MultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineEOLSet_getName)],
jur_CIBackReferenceSet, "CIBackReferenceSet", 25, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CIBackReferenceSet_matches), "$setNext", $rt_wrapFunction1(jur_CIBackReferenceSet_setNext), "$getName", $rt_wrapFunction0(jur_CIBackReferenceSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CIBackReferenceSet_hasConsumed)],
jur_BackReferenceSet, "BackReferenceSet", 25, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_BackReferenceSet_matches), "$find0", $rt_wrapFunction3(jur_BackReferenceSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferenceSet_findBack), "$first1", $rt_wrapFunction1(jur_BackReferenceSet_first), "$getName", $rt_wrapFunction0(jur_BackReferenceSet_getName)],
jur_UCIBackReferenceSet, "UCIBackReferenceSet", 25, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UCIBackReferenceSet_matches), "$getName", $rt_wrapFunction0(jur_UCIBackReferenceSet_getName)],
jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$insert2", $rt_wrapFunction4(jl_StringBuffer_insert), "$append7", $rt_wrapFunction3(jl_StringBuffer_append0), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuffer_ensureCapacity), "$insert1", $rt_wrapFunction2(jl_StringBuffer_insert1), "$insert", $rt_wrapFunction2(jl_StringBuffer_insert0)],
jur_SequenceSet, "SequenceSet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_SequenceSet_accepts), "$find0", $rt_wrapFunction3(jur_SequenceSet_find), "$findBack", $rt_wrapFunction4(jur_SequenceSet_findBack), "$getName", $rt_wrapFunction0(jur_SequenceSet_getName), "$first1", $rt_wrapFunction1(jur_SequenceSet_first)]]);
$rt_metadata([jur_UCISequenceSet, "UCISequenceSet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISequenceSet_getName)],
jur_CISequenceSet, "CISequenceSet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_CISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_CISequenceSet_getName)],
jur_UCISupplCharSet, "UCISupplCharSet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCISupplCharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISupplCharSet_getName)],
jur_LowSurrogateCharSet, "LowSurrogateCharSet", 25, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_LowSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_LowSurrogateCharSet_matches), "$find0", $rt_wrapFunction3(jur_LowSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_LowSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_LowSurrogateCharSet_getName), "$first1", $rt_wrapFunction1(jur_LowSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_LowSurrogateCharSet_hasConsumed)],
jur_HighSurrogateCharSet, "HighSurrogateCharSet", 25, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_HighSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_HighSurrogateCharSet_matches), "$find0", $rt_wrapFunction3(jur_HighSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_HighSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_HighSurrogateCharSet_getName), "$first1", $rt_wrapFunction1(jur_HighSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HighSurrogateCharSet_hasConsumed)],
jur_SupplCharSet, "SupplCharSet", 25, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_SupplCharSet_accepts), "$find0", $rt_wrapFunction3(jur_SupplCharSet_find), "$findBack", $rt_wrapFunction4(jur_SupplCharSet_findBack), "$getName", $rt_wrapFunction0(jur_SupplCharSet_getName), "$first1", $rt_wrapFunction1(jur_SupplCharSet_first)],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$1_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$1_isAfterLineTerminator)],
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$2_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$2_isAfterLineTerminator)],
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace_computeValue)],
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit_computeValue)],
jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower_computeValue)],
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper_computeValue)],
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII_computeValue)],
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha_computeValue)],
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum_computeValue)],
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct_computeValue)],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph_computeValue)],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint_computeValue)],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank_computeValue)],
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl_computeValue)],
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit_computeValue)],
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase_computeValue)],
jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase_computeValue)],
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace_computeValue)],
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored_computeValue)],
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined_computeValue)],
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit_computeValue)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue)],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl_computeValue)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue)],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter_computeValue)],
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue)],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar_computeValue)],
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase_computeValue)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue)],
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord_computeValue)],
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord_computeValue)],
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace_computeValue)],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit_computeValue)],
jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyRange_computeValue)],
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock_computeValue)],
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategory_computeValue)],
jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategoryScope_computeValue)],
jl_NegativeArraySizeException, "NegativeArraySizeException", 30, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0, 0,
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0, 0]);
$rt_metadata([otciu_CharMapping, 0, jl_Object, [], 0, 3, 0, 0, 0,
otciu_UnicodeHelper$Range, "UnicodeHelper$Range", 35, jl_Object, [], 0, 3, 0, 0, 0,
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0, 0,
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgu_NumberUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit, 0, jl_Enum, [], 9, 3, 0, cgxgbtd_StyleWrapper$Unit_$callClinit, 0,
ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0, 0,
jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 30, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$1, "AbstractCharClass$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$1_contains)],
jur_AbstractCharClass$2, "AbstractCharClass$2", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$2_contains)],
jur_CharClass$18, "CharClass$18", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$18_contains), "$toString", $rt_wrapFunction0(jur_CharClass$18_toString)],
jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$1_contains)],
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$3_contains)],
jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$2_contains)],
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$5_contains)],
jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$4_contains)],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$7_contains)],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$6_contains)],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$9_contains)],
jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$8_contains)],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$11_contains)],
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$10_contains)],
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$13_contains)],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$12_contains)],
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$15_contains)],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$14_contains)],
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$17_contains)],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_CharClass$16_contains)],
jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, 0, 0, 0,
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0, 0,
jl_IllegalMonitorStateException, "IllegalMonitorStateException", 30, jl_RuntimeException, [], 0, 3, 0, 0, 0,
otjf_JSMapping, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0, 0, jl_Object, [otjf_JSMapping], 0, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1, 0, jl_Object, [otjf_JSMapping], 0, 3, 0, 0, 0,
otjf_JSSupplier, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2, 0, jl_Object, [otjf_JSSupplier], 0, 3, 0, 0, 0,
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
cbggg_GlyphLayout$GlyphRun, "GlyphLayout$GlyphRun", 14, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, ["$reset", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_toString)],
cgxgbtu_KeyCodes, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_TimeUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, 0,
cgxgbt_TeaWindowListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
otjc_JSPromise$Executor, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$getFile$lambda$_2_0, 0, jl_Object, [otjc_JSPromise$Executor], 0, 3, 0, 0, 0,
otji_IDBObjectStoreParameters, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0]);
$rt_metadata([jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, 0, 0,
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, 0,
ji_PrintStream, 0, ji_FilterOutputStream, [jl_Appendable], 0, 3, 0, 0, 0,
otcic_JsConsolePrintStream, 0, ji_PrintStream, [], 1, 3, 0, 0, 0,
otcic_JSStderrPrintStream, 0, otcic_JsConsolePrintStream, [], 0, 3, 0, 0, ["$print", $rt_wrapFunction1(otcic_JSStderrPrintStream_print)],
cbgu_FloatArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$1, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$2, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$3, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$4, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$5, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$6, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$7, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$8, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
cgxgbtd_StyleWrapper$Unit$9, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
jl_Thread$UncaughtExceptionHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_DefaultUncaughtExceptionHandler, 0, jl_Object, [jl_Thread$UncaughtExceptionHandler], 0, 3, 0, 0, 0,
jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, 0, 0,
oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0, 0,
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, 0, ["$complete", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_complete), "$error0", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_error)],
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, 0,
otjc_JSObjects, 0, jl_Object, [], 4, 3, 0, 0, 0,
otji_JSWrapper$Helper, 0, jl_Object, [], 0, 0, 0, otji_JSWrapper$Helper_$callClinit, 0,
otjc_JSUndefined, 0, jl_Object, [otj_JSObject], 0, 3, 0, 0, 0,
otjc_JSWeakRef, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjc_JSFinalizationRegistryConsumer, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otji_JSWrapper$Helper$_clinit_$lambda$_3_0, 0, jl_Object, [otjc_JSFinalizationRegistryConsumer], 0, 3, 0, 0, 0,
otji_JSWrapper$Helper$_clinit_$lambda$_3_1, 0, jl_Object, [otjc_JSFinalizationRegistryConsumer], 0, 3, 0, 0, 0,
jur_BackReferencedSingleSet, "BackReferencedSingleSet", 25, jur_SingleSet, [], 0, 0, 0, 0, ["$find0", $rt_wrapFunction3(jur_BackReferencedSingleSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferencedSingleSet_findBack), "$processBackRefReplacement", $rt_wrapFunction0(jur_BackReferencedSingleSet_processBackRefReplacement)],
cgxgbt_TeaApplication$6, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaApplication$6_$callClinit, 0,
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1_contains)],
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1_contains)],
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1_contains)],
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1_contains)],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1_contains)],
jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1_contains)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains)],
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1_contains)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains)],
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1_contains)],
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains)],
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1_contains)],
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1_contains)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains)],
jur_UnicodeCategory, "UnicodeCategory", 25, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_UnicodeCategory_contains)]]);
$rt_metadata([jur_UnicodeCategoryScope, "UnicodeCategoryScope", 25, jur_UnicodeCategory, [], 0, 0, 0, 0, ["$contains", $rt_wrapFunction1(jur_UnicodeCategoryScope_contains)],
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, 0,
cgxgbta_AssetDownloadImpl$2, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, 0,
cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
cbgu_Collections, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_Array$ArrayIterator, 0, jl_Object, [ju_Iterator, jl_Iterable], 0, 3, 0, 0, 0,
cbgu_Array$ArrayIterable, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
otcic_JSStdoutPrintStream, 0, otcic_JsConsolePrintStream, [], 0, 3, 0, 0, ["$print", $rt_wrapFunction1(otcic_JSStdoutPrintStream_print)],
cgxgbtd_EventTargetWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtd_FileReaderWrapper, 0, jl_Object, [cgxgbtd_EventTargetWrapper, otj_JSObject], 1, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$4, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, 0,
cgxgbtdt_TypedArrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
cgxgbtf_FileData, "FileData", 6, jl_Object, [], 0, 3, 0, 0, 0,
otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjt_TypedArray, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
otjt_Int8Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
cbgu_GdxRuntimeException, "GdxRuntimeException", 10, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jl_CloneNotSupportedException, "CloneNotSupportedException", 30, jl_Exception, [], 0, 3, 0, 0, 0,
ju_NoSuchElementException, "NoSuchElementException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$5, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$5_onSuccess)],
cgxgbta_AssetType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbg_Screen, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbg_ScreenAdapter, 0, jl_Object, [cbg_Screen], 0, 3, 0, 0, ["$resize2", $rt_wrapFunction2(cbg_ScreenAdapter_resize), "$hide", $rt_wrapFunction0(cbg_ScreenAdapter_hide), "$pause", $rt_wrapFunction0(cbg_ScreenAdapter_pause), "$resume", $rt_wrapFunction0(cbg_ScreenAdapter_resume)],
cajs_InitScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$show", $rt_wrapFunction0(cajs_InitScreen_show), "$render", $rt_wrapFunction1(cajs_InitScreen_render)],
cgxgbtfi_IndexedDBFileData, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$putFile$lambda$_2_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
ju_ConcurrentModificationException, "ConcurrentModificationException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$1, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, 0,
cgxgbta_AssetDownloadImpl$3, 0, jl_Object, [], 32, 0, 0, cgxgbta_AssetDownloadImpl$3_$callClinit, 0,
otjb_TimerHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0, 0, jl_Object, [otjb_TimerHandler], 0, 3, 0, 0, 0,
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, 0, 0, 0,
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, 0, 0, 0,
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject, otjde_EventTarget], 0, 3, 0, 0, 0,
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_Matcher$1, "Matcher$1", 25, jl_Object, [], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(jur_Matcher$1_toString)],
otjde_Registration, 0, jl_Object, [], 0, 3, 0, 0, 0,
cajs_JoltScreen, 0, jl_Object, [cbg_Screen], 0, 3, 0, cajs_JoltScreen_$callClinit, ["$show", $rt_wrapFunction0(cajs_JoltScreen_show), "$render", $rt_wrapFunction1(cajs_JoltScreen_render), "$resize2", $rt_wrapFunction2(cajs_JoltScreen_resize), "$pause", $rt_wrapFunction0(cajs_JoltScreen_pause), "$resume", $rt_wrapFunction0(cajs_JoltScreen_resume), "$hide", $rt_wrapFunction0(cajs_JoltScreen_hide)],
cgxgbta_TeaBlob, 0, jl_Object, [], 4, 3, 0, 0, 0,
cgxjl_JParserLibraryLoaderListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cajs_InitScreen$show$lambda$_1_0, 0, jl_Object, [cgxjl_JParserLibraryLoaderListener], 0, 3, 0, 0, 0,
j_JoltLoader, 0, jl_Object, [], 0, 3, 0, 0, 0,
caju_AntzFPSLogger, 0, jl_Object, [], 0, 3, 0, 0, 0,
cajs_JoltScreen$FpsData, 0, jl_Object, [], 0, 0, 0, 0, 0,
cbgm_Matrix4, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4_$callClinit, 0]);
$rt_metadata([cbggg_Batch, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_SpriteBatch, 0, jl_Object, [cbggg_Batch], 0, 3, 0, cbggg_SpriteBatch_$callClinit, 0,
cgxjl_JParserLibraryLoader, 0, jl_Object, [], 0, 3, 0, cgxjl_JParserLibraryLoader_$callClinit, 0,
cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0, 0, jl_Object, [otjb_TimerHandler], 0, 3, 0, 0, 0,
cbgm_Quaternion, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgm_Vector, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Vector3, "Vector3", 11, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector3_$callClinit, ["$toString", $rt_wrapFunction0(cbgm_Vector3_toString), "$hashCode", $rt_wrapFunction0(cbgm_Vector3_hashCode), "$equals", $rt_wrapFunction1(cbgm_Vector3_equals)],
cbgg_Mesh$VertexDataType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgg_Mesh, "Mesh", 12, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgg_Mesh_$callClinit, 0,
cbggg_BitmapFont$BitmapFontData, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxjl_JParserLibraryLoader$1, 0, jl_Object, [cgxjl_JParserLibraryLoaderListener], 0, 0, 0, 0, 0,
js_ScriptException, 0, jl_Exception, [], 0, 3, 0, 0, 0,
cbgg_VertexAttributes, 0, jl_Object, [jl_Iterable, jl_Comparable], 4, 3, 0, 0, 0,
cbggg_ShaderProgram, "ShaderProgram", 13, jl_Object, [cbgu_Disposable], 0, 3, 0, cbggg_ShaderProgram_$callClinit, 0,
cbggg_BitmapFont$Glyph, "BitmapFont$Glyph", 14, jl_Object, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cbggg_BitmapFont$Glyph_toString)],
cgxjl_JParserLibraryLoader$loadWasm$lambda$_3_0, 0, jl_Object, [cgxjl_JParserLibraryLoaderListener], 0, 3, 0, 0, ["$onLoad", $rt_wrapFunction2(cgxjl_JParserLibraryLoader$loadWasm$lambda$_3_0_onLoad)],
cgxjl_JParserLibraryLoader$loadJS$lambda$_4_0, 0, jl_Object, [cgxjl_JParserLibraryLoaderListener], 0, 3, 0, 0, ["$onLoad", $rt_wrapFunction2(cgxjl_JParserLibraryLoader$loadJS$lambda$_4_0_onLoad)],
cbgg_Mesh$1, 0, jl_Object, [], 32, 0, 0, cbgg_Mesh$1_$callClinit, 0,
cbggg_VertexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_VertexBufferObject, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObject_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObject_getNumVertices), "$getNumMaxVertices", $rt_wrapFunction0(cbggg_VertexBufferObject_getNumMaxVertices), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObject_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObject_bind), "$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObject_unbind), "$dispose",
$rt_wrapFunction0(cbggg_VertexBufferObject_dispose)],
cbggg_IndexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbggg_IndexBufferObject, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumMaxIndices), "$setIndices", $rt_wrapFunction3(cbggg_IndexBufferObject_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObject_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObject_bind), "$unbind", $rt_wrapFunction0(cbggg_IndexBufferObject_unbind), "$dispose", $rt_wrapFunction0(cbggg_IndexBufferObject_dispose)],
cbggg_VertexBufferObjectSubData, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getNumVertices), "$getNumMaxVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getNumMaxVertices), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_bind), "$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_unbind),
"$dispose", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_dispose)],
cbggg_IndexBufferObjectSubData, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumMaxIndices), "$setIndices", $rt_wrapFunction3(cbggg_IndexBufferObjectSubData_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObjectSubData_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_bind), "$unbind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_unbind),
"$dispose", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_dispose)],
cbggg_VertexBufferObjectWithVAO, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, cbggg_VertexBufferObjectWithVAO_$callClinit, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getNumVertices), "$getNumMaxVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getNumMaxVertices), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_bind),
"$unbind0", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_unbind), "$dispose", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_dispose)],
cbggg_VertexArray, 0, cbggg_VertexBufferObject, [], 0, 3, 0, 0, 0,
cbggg_IndexArray, 0, cbggg_IndexBufferObject, [], 0, 3, 0, 0, 0,
cbgu_ObjectIntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgu_BufferUtils, 0, jl_Object, [], 4, 3, 0, cbgu_BufferUtils_$callClinit, 0,
cbgg_TextureData$Factory, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxjl_JParserLibraryLoader$loadScript$lambda$_5_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
cgxjl_JParserLibraryLoader$loadScript$lambda$_5_1, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, 0,
jn_Buffer, 0, jl_Object, [], 1, 3, 0, 0, 0,
jn_FloatBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$limit", $rt_wrapFunction1(jn_FloatBuffer_limit), "$position", $rt_wrapFunction1(jn_FloatBuffer_position)],
jn_ShortBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
cgxgbt_TeaTool, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_IntBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$toString", $rt_wrapFunction0(jn_ByteBuffer_toString), "$hashCode", $rt_wrapFunction0(jn_ByteBuffer_hashCode), "$equals", $rt_wrapFunction1(jn_ByteBuffer_equals), "$limit", $rt_wrapFunction1(jn_ByteBuffer_limit), "$position", $rt_wrapFunction1(jn_ByteBuffer_position)],
jn_ByteOrder, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgg_TextureData, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_FileTextureData, "FileTextureData", 13, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, ["$isPrepared", $rt_wrapFunction0(cbggg_FileTextureData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_FileTextureData_prepare), "$consumePixmap", $rt_wrapFunction0(cbggg_FileTextureData_consumePixmap), "$disposePixmap", $rt_wrapFunction0(cbggg_FileTextureData_disposePixmap), "$getWidth", $rt_wrapFunction0(cbggg_FileTextureData_getWidth), "$getHeight", $rt_wrapFunction0(cbggg_FileTextureData_getHeight), "$getFormat", $rt_wrapFunction0(cbggg_FileTextureData_getFormat),
"$useMipMaps", $rt_wrapFunction0(cbggg_FileTextureData_useMipMaps), "$isManaged", $rt_wrapFunction0(cbggg_FileTextureData_isManaged), "$getType", $rt_wrapFunction0(cbggg_FileTextureData_getType), "$consumeCustomData", $rt_wrapFunction1(cbggg_FileTextureData_consumeCustomData)],
cbggg_PixmapNativeInterface, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgg_Pixmap, 0, jl_Object, [cbgu_Disposable, cbggg_PixmapNativeInterface], 0, 3, 0, 0, 0,
cbgf_FileHandle, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_ArrayBufferViewProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_ByteBufferJsImpl, "ByteBufferJsImpl", 26, jn_ByteBuffer, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$capacityImpl", $rt_wrapFunction0(jn_ByteBufferJsImpl_capacityImpl), "$getArrayBufferView0", $rt_wrapFunction0(jn_ByteBufferJsImpl_getArrayBufferView)],
cbgg_Pixmap$Blending, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgg_Pixmap$Filter, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbggg_Gdx2DPixmap, 0, jl_Object, [cbgu_Disposable, cbggg_PixmapNativeInterface], 0, 3, 0, 0, 0,
jn_IntBufferImpl, 0, jn_IntBuffer, [], 1, 0, 0, 0, 0]);
$rt_metadata([jn_IntBufferOverTypedArray, 0, jn_IntBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_IntBufferOverTypedArray_readOnly), "$getElement", $rt_wrapFunction1(jn_IntBufferOverTypedArray_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverTypedArray_putElement), "$capacityImpl", $rt_wrapFunction0(jn_IntBufferOverTypedArray_capacityImpl), "$getArrayBufferView0", $rt_wrapFunction0(jn_IntBufferOverTypedArray_getArrayBufferView)],
otjt_Int32Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
jn_FloatBufferImpl, 0, jn_FloatBuffer, [], 1, 0, 0, 0, 0,
jn_FloatBufferOverTypedArray, "FloatBufferOverTypedArray", 26, jn_FloatBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_FloatBufferOverTypedArray_readOnly), "$getElement0", $rt_wrapFunction1(jn_FloatBufferOverTypedArray_getElement), "$putElement0", $rt_wrapFunction2(jn_FloatBufferOverTypedArray_putElement), "$capacityImpl", $rt_wrapFunction0(jn_FloatBufferOverTypedArray_capacityImpl), "$putImpl", $rt_wrapFunction4(jn_FloatBufferOverTypedArray_putImpl), "$getArrayBufferView0",
$rt_wrapFunction0(jn_FloatBufferOverTypedArray_getArrayBufferView)],
otjt_Float32Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
cbggg_Gdx2DPixmapNative, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgg_Texture$TextureFilter, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgg_Texture$TextureWrap, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbgg_Pixmap$Format, 0, jl_Enum, [], 12, 3, 0, 0, 0,
jn_ShortBufferImpl, 0, jn_ShortBuffer, [], 1, 0, 0, 0, 0,
jn_ShortBufferOverTypedArray, "ShortBufferOverTypedArray", 26, jn_ShortBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_ShortBufferOverTypedArray_readOnly), "$capacityImpl", $rt_wrapFunction0(jn_ShortBufferOverTypedArray_capacityImpl), "$putImpl0", $rt_wrapFunction4(jn_ShortBufferOverTypedArray_putImpl), "$getArrayBufferView0", $rt_wrapFunction0(jn_ShortBufferOverTypedArray_getArrayBufferView)],
otjt_Int16Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
jn_JSBufferHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
jn_IntBufferOverDataView, 0, jn_IntBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_IntBufferOverDataView_readOnly), "$getElement", $rt_wrapFunction1(jn_IntBufferOverDataView_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverDataView_putElement), "$capacityImpl", $rt_wrapFunction0(jn_IntBufferOverDataView_capacityImpl), "$getArrayBufferView0", $rt_wrapFunction0(jn_IntBufferOverDataView_getArrayBufferView)],
jn_FloatBufferOverDataView, "FloatBufferOverDataView", 26, jn_FloatBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_FloatBufferOverDataView_readOnly), "$getElement0", $rt_wrapFunction1(jn_FloatBufferOverDataView_getElement), "$putElement0", $rt_wrapFunction2(jn_FloatBufferOverDataView_putElement), "$putImpl", $rt_wrapFunction4(jn_FloatBufferOverDataView_putImpl), "$capacityImpl", $rt_wrapFunction0(jn_FloatBufferOverDataView_capacityImpl), "$getArrayBufferView0", $rt_wrapFunction0(jn_FloatBufferOverDataView_getArrayBufferView)],
jn_ShortBufferOverDataView, "ShortBufferOverDataView", 26, jn_ShortBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$readOnly", $rt_wrapFunction0(jn_ShortBufferOverDataView_readOnly), "$putImpl0", $rt_wrapFunction4(jn_ShortBufferOverDataView_putImpl), "$capacityImpl", $rt_wrapFunction0(jn_ShortBufferOverDataView_capacityImpl), "$getArrayBufferView0", $rt_wrapFunction0(jn_ShortBufferOverDataView_getArrayBufferView)],
jl_UnsupportedOperationException, "UnsupportedOperationException", 30, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jn_ReadOnlyBufferException, "ReadOnlyBufferException", 26, jl_UnsupportedOperationException, [], 0, 3, 0, 0, 0,
jn_BufferUnderflowException, "BufferUnderflowException", 26, jl_RuntimeException, [], 0, 3, 0, 0, 0,
cbgu_ScreenUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
caju_JoltInstance, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgg_Camera, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgg_PerspectiveCamera, 0, cbgg_Camera, [], 0, 3, 0, 0, 0,
cbguv_Viewport, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbguv_ScreenViewport, 0, cbguv_Viewport, [], 0, 3, 0, 0, 0,
ji_IDLBase, 0, jl_Object, [], 1, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(ji_IDLBase_deleteNative)],
j_Jolt, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(j_Jolt_deleteNative)],
jm_Quat, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jm_Quat_deleteNative)],
nmgss_SceneManager, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbggge_BaseLight, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbggge_DirectionalLight, 0, cbggge_BaseLight, [], 0, 3, 0, 0, ["$equals", $rt_wrapFunction1(cbggge_DirectionalLight_equals)],
nmgsl_DirectionalLightEx, "DirectionalLightEx", 46, cbggge_DirectionalLight, [], 0, 3, 0, 0, 0,
nmgsu_IBLBuilder, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbggg_Attribute, 0, jl_Object, [jl_Comparable], 1, 3, 0, cbggg_Attribute_$callClinit, ["$equals", $rt_wrapFunction1(cbggg_Attribute_equals0), "$toString", $rt_wrapFunction0(cbggg_Attribute_toString), "$hashCode", $rt_wrapFunction0(cbggg_Attribute_hashCode)],
cbggga_TextureAttribute, 0, cbggg_Attribute, [], 0, 3, 0, cbggga_TextureAttribute_$callClinit, ["$hashCode", $rt_wrapFunction0(cbggga_TextureAttribute_hashCode)],
nmgsa_PBRTextureAttribute, "PBRTextureAttribute", 45, cbggga_TextureAttribute, [], 0, 3, 0, nmgsa_PBRTextureAttribute_$callClinit, ["$copy1", $rt_wrapFunction0(nmgsa_PBRTextureAttribute_copy)],
cbggg_Attributes, 0, jl_Object, [jl_Iterable, ju_Comparator, jl_Comparable], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbggg_Attributes_hashCode), "$compare0", $rt_wrapFunction2(cbggg_Attributes_compare)],
cbggga_CubemapAttribute, "CubemapAttribute", 19, cbggg_Attribute, [], 0, 3, 0, cbggga_CubemapAttribute_$callClinit, ["$copy1", $rt_wrapFunction0(cbggga_CubemapAttribute_copy), "$hashCode", $rt_wrapFunction0(cbggga_CubemapAttribute_hashCode)],
nmgsa_PBRCubemapAttribute, "PBRCubemapAttribute", 45, cbggga_CubemapAttribute, [], 0, 3, 0, nmgsa_PBRCubemapAttribute_$callClinit, ["$copy1", $rt_wrapFunction0(nmgsa_PBRCubemapAttribute_copy)],
cbggg_RenderableProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
nmgss_Updatable, 0, jl_Object, [], 3, 3, 0, 0, 0,
nmgss_SceneSkybox, 0, jl_Object, [cbggg_RenderableProvider, nmgss_Updatable, cbgu_Disposable], 0, 3, 0, 0, ["$getRenderables", $rt_wrapFunction2(nmgss_SceneSkybox_getRenderables)],
jnci_UTF8Charset, "UTF8Charset", 28, jnc_Charset, [], 0, 3, 0, jnci_UTF8Charset_$callClinit, ["$newDecoder", $rt_wrapFunction0(jnci_UTF8Charset_newDecoder)],
cgxgbt_TeaFileHandle, "TeaFileHandle", 5, cbgf_FileHandle, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cgxgbt_TeaFileHandle_toString)],
cbg_Files$FileType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
jl_Readable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Reader, 0, jl_Object, [ji_Closeable, jl_Readable], 1, 3, 0, 0, 0,
ji_BufferedReader, 0, ji_Reader, [], 0, 3, 0, 0, ["$close", $rt_wrapFunction0(ji_BufferedReader_close)],
ji_InputStreamReader, 0, ji_Reader, [], 0, 3, 0, 0, ["$close", $rt_wrapFunction0(ji_InputStreamReader_close)],
ju_StringTokenizer, 0, jl_Object, [ju_Enumeration], 0, 3, 0, 0, 0]);
$rt_metadata([cbgu_StreamUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggg_BitmapFontCache, 0, jl_Object, [], 0, 3, 0, 0, 0,
otcin_Buffers, 0, jl_Object, [], 4, 3, 0, 0, 0,
cajs_JoltScreen$CubeData, "JoltScreen$CubeData", 22, jl_Object, [], 0, 0, 0, 0, 0,
cbggg_ModelInstance, "ModelInstance", 15, jl_Object, [cbggg_RenderableProvider], 0, 3, 0, 0, ["$getRenderables", $rt_wrapFunction2(cbggg_ModelInstance_getRenderables0)],
jg_JoltGdx, 0, jl_Object, [], 0, 3, 0, 0, 0,
jpc_ObjectLayerPairFilter, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jpc_ObjectLayerPairFilter_deleteNative)],
jpc_ObjectLayerPairFilterTable, 0, jpc_ObjectLayerPairFilter, [], 0, 3, 0, 0, 0,
caju_JoltLayers, 0, jl_Object, [], 0, 3, 0, 0, 0,
jpcb_BroadPhaseLayerInterface, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jpcb_BroadPhaseLayerInterface_deleteNative)],
jpcb_BroadPhaseLayerInterfaceTable, 0, jpcb_BroadPhaseLayerInterface, [], 0, 3, 0, 0, 0,
jpcb_BroadPhaseLayer, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jpcb_BroadPhaseLayer_deleteNative)],
jpcb_ObjectVsBroadPhaseLayerFilter, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jpcb_ObjectVsBroadPhaseLayerFilter_deleteNative)],
jpcb_ObjectVsBroadPhaseLayerFilterTable, 0, jpcb_ObjectVsBroadPhaseLayerFilter, [], 0, 3, 0, 0, 0,
jc_Factory, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jc_Factory_deleteNative)],
jm_Vec3, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jm_Vec3_deleteNative)],
cbggg_Environment, 0, cbggg_Attributes, [], 0, 3, 0, 0, 0,
nmgsu_IBLBuilder$Light, "IBLBuilder$Light", 44, jl_Object, [], 0, 3, 0, nmgsu_IBLBuilder$Light_$callClinit, 0,
cbggg_Material, "Material", 15, cbggg_Attributes, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbggg_Material_hashCode), "$equals", $rt_wrapFunction1(cbggg_Material_equals)],
cbggga_FloatAttribute, "FloatAttribute", 19, cbggg_Attribute, [], 0, 3, 0, cbggga_FloatAttribute_$callClinit, ["$copy1", $rt_wrapFunction0(cbggga_FloatAttribute_copy), "$hashCode", $rt_wrapFunction0(cbggga_FloatAttribute_hashCode)],
cbgggu_ModelBuilder, 0, jl_Object, [], 0, 3, 0, 0, 0,
jr_DebugRendererEm, 0, ji_IDLBase, [], 0, 3, 0, 0, 0,
jg_DebugRenderer, 0, jr_DebugRendererEm, [], 0, 3, 0, 0, 0,
cbggga_ColorAttribute, "ColorAttribute", 19, cbggg_Attribute, [], 0, 3, 0, cbggga_ColorAttribute_$callClinit, ["$copy1", $rt_wrapFunction0(cbggga_ColorAttribute_copy), "$hashCode", $rt_wrapFunction0(cbggga_ColorAttribute_hashCode)],
otcit_FloatSynthesizer, 0, jl_Object, [], 4, 3, 0, 0, 0,
jp_PhysicsSystem, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jp_PhysicsSystem_deleteNative)],
jpb_Body, 0, ji_IDLBase, [], 0, 3, 0, 0, 0,
jpb_BodyInterface, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jpb_BodyInterface_deleteNative)],
jpcs_Shape, 0, ji_IDLBase, [], 0, 3, 0, 0, 0,
jpcs_ConvexShape, 0, jpcs_Shape, [], 0, 3, 0, 0, 0,
jpcs_BoxShape, 0, jpcs_ConvexShape, [], 0, 3, 0, 0, 0,
ji_IDLEnum, 0, jl_Object, [], 3, 3, 0, 0, 0,
je_EMotionType, "EMotionType", 38, jl_Enum, [ji_IDLEnum], 12, 3, 0, je_EMotionType_$callClinit, 0,
je_EActivation, "EActivation", 38, jl_Enum, [ji_IDLEnum], 12, 3, 0, je_EActivation_$callClinit, 0,
jc_TempAllocator, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jc_TempAllocator_deleteNative)],
jc_TempAllocatorImpl, 0, jc_TempAllocator, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jc_TempAllocatorImpl_deleteNative)],
jc_JobSystem, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jc_JobSystem_deleteNative)],
jc_JobSystemWithBarrier, 0, jc_JobSystem, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jc_JobSystemWithBarrier_deleteNative)],
jc_JobSystemThreadPool, 0, jc_JobSystemWithBarrier, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jc_JobSystemThreadPool_deleteNative)],
cbgm_Frustum, 0, jl_Object, [], 0, 3, 0, cbgm_Frustum_$callClinit, 0,
cbgmc_Ray, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_Ray_$callClinit, 0,
ji_IDLNativeData, "IDLNativeData", 37, jl_Object, [], 0, 3, [0,0,0], 0, 0,
cbgggu_ShaderProvider, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbgggu_BaseShaderProvider, 0, jl_Object, [cbgggu_ShaderProvider], 1, 3, 0, 0, 0,
cbgggu_DefaultShaderProvider, 0, cbgggu_BaseShaderProvider, [], 0, 3, 0, 0, ["$createShader", $rt_wrapFunction1(cbgggu_DefaultShaderProvider_createShader)],
nmgss_PBRShaderProvider, 0, cbgggu_DefaultShaderProvider, [], 0, 3, 0, 0, ["$createShader", $rt_wrapFunction1(nmgss_PBRShaderProvider_createShader0)],
cbggg_ShapeRenderer, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgggu_TextureDescriptor, 0, jl_Object, [jl_Comparable], 0, 3, 0, 0, 0,
nmgss_PBRShaderConfig$SRGB, 0, jl_Enum, [], 12, 3, 0, 0, 0,
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, 0, 0, 0]);
$rt_metadata([jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbgg_TextureData$TextureDataType, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbggg_MipMapGenerator, 0, jl_Object, [], 0, 3, 0, 0, 0,
jn_NativeBuffer, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_Graphics$BufferFormat, 0, jl_Object, [], 0, 3, 0, 0, 0,
jpb_MassProperties, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jpb_MassProperties_deleteNative)],
jpb_BodyCreationSettings, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jpb_BodyCreationSettings_deleteNative)],
jm_Mat44, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jm_Mat44_deleteNative)],
jm_Vec4, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jm_Vec4_deleteNative)],
cbgm_Plane, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgggs_DefaultShader$Config, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggu_RenderableSorter, 0, jl_Object, [], 3, 3, 0, 0, 0,
nmgss_SceneRenderableSorter, 0, jl_Object, [cbgggu_RenderableSorter, ju_Comparator], 0, 3, 0, 0, ["$sort1", $rt_wrapFunction2(nmgss_SceneRenderableSorter_sort), "$compare0", $rt_wrapFunction2(nmgss_SceneRenderableSorter_compare)],
cbgm_Vector2, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, 0, 0,
cbggg_ImmediateModeRenderer, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_ImmediateModeRenderer20, 0, jl_Object, [cbggg_ImmediateModeRenderer], 0, 3, 0, 0, 0,
nmgss_SceneSkybox$SkyboxShaderProvider, 0, cbgggu_DefaultShaderProvider, [], 0, 0, 0, 0, ["$createShader", $rt_wrapFunction1(nmgss_SceneSkybox$SkyboxShaderProvider_createShader)],
cbggg_Model, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgggm_Node, "Node", 18, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_NodePart, "NodePart", 18, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_Renderable, "Renderable", 15, jl_Object, [], 0, 3, 0, 0, 0,
nmgss_SceneRenderableSorter$Hints, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cbggga_DepthTestAttribute, "DepthTestAttribute", 19, cbggg_Attribute, [], 0, 3, 0, cbggga_DepthTestAttribute_$callClinit, ["$copy1", $rt_wrapFunction0(cbggga_DepthTestAttribute_copy), "$hashCode", $rt_wrapFunction0(cbggga_DepthTestAttribute_hashCode)],
cbggg_PixmapTextureData, "PixmapTextureData", 13, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, ["$disposePixmap", $rt_wrapFunction0(cbggg_PixmapTextureData_disposePixmap), "$consumePixmap", $rt_wrapFunction0(cbggg_PixmapTextureData_consumePixmap), "$getWidth", $rt_wrapFunction0(cbggg_PixmapTextureData_getWidth), "$getHeight", $rt_wrapFunction0(cbggg_PixmapTextureData_getHeight), "$getFormat", $rt_wrapFunction0(cbggg_PixmapTextureData_getFormat), "$useMipMaps", $rt_wrapFunction0(cbggg_PixmapTextureData_useMipMaps),
"$isManaged", $rt_wrapFunction0(cbggg_PixmapTextureData_isManaged), "$getType", $rt_wrapFunction0(cbggg_PixmapTextureData_getType), "$consumeCustomData", $rt_wrapFunction1(cbggg_PixmapTextureData_consumeCustomData), "$isPrepared", $rt_wrapFunction0(cbggg_PixmapTextureData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_PixmapTextureData_prepare)],
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, 0, 0,
otjt_Uint8Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
otjt_Uint16Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
nmgsu_LightUtils$LightsInfo, 0, jl_Object, [], 0, 3, 0, 0, 0,
nmgss_PBRShaderConfig, 0, cbgggs_DefaultShader$Config, [], 0, 3, 0, 0, 0,
cbgggu_DepthShaderProvider, 0, cbgggu_BaseShaderProvider, [], 0, 3, 0, 0, 0,
nmgss_PBRDepthShaderProvider, 0, cbgggu_DepthShaderProvider, [], 0, 3, 0, 0, ["$createShader", $rt_wrapFunction1(nmgss_PBRDepthShaderProvider_createShader)],
nmgsu_EnvironmentCache, 0, cbggg_Environment, [], 0, 3, 0, 0, 0,
cbggga_PointLightsAttribute, "PointLightsAttribute", 19, cbggg_Attribute, [], 0, 3, 0, cbggga_PointLightsAttribute_$callClinit, ["$hashCode", $rt_wrapFunction0(cbggga_PointLightsAttribute_hashCode), "$copy1", $rt_wrapFunction0(cbggga_PointLightsAttribute_copy)],
cbggga_SpotLightsAttribute, "SpotLightsAttribute", 19, cbggg_Attribute, [], 0, 3, 0, cbggga_SpotLightsAttribute_$callClinit, ["$hashCode", $rt_wrapFunction0(cbggga_SpotLightsAttribute_hashCode), "$copy1", $rt_wrapFunction0(cbggga_SpotLightsAttribute_copy)],
cbggg_ModelBatch, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgggm_MeshPart, "MeshPart", 18, jl_Object, [], 0, 3, 0, cbgggm_MeshPart_$callClinit, ["$equals", $rt_wrapFunction1(cbgggm_MeshPart_equals)],
nmgsu_ShaderParser, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggs_DepthShader$Config, 0, cbgggs_DefaultShader$Config, [], 0, 3, 0, 0, 0,
jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 27, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, 0, 0,
jn_CharBufferOverTypedArray, 0, jn_CharBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$capacityImpl", $rt_wrapFunction0(jn_CharBufferOverTypedArray_capacityImpl)],
cbgu_FlushablePool, 0, cbgu_Pool, [], 1, 3, 0, 0, 0,
cbggg_ModelBatch$RenderablePool, 0, cbgu_FlushablePool, [], 0, 3, 0, 0, ["$newObject", $rt_wrapFunction0(cbggg_ModelBatch$RenderablePool_newObject)],
cbgggu_DefaultRenderableSorter, 0, jl_Object, [cbgggu_RenderableSorter, ju_Comparator], 0, 3, 0, 0, ["$sort1", $rt_wrapFunction2(cbgggu_DefaultRenderableSorter_sort), "$compare0", $rt_wrapFunction2(cbgggu_DefaultRenderableSorter_compare)],
cbgggu_RenderContext, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggu_TextureBinder, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggu_DefaultTextureBinder, 0, jl_Object, [cbgggu_TextureBinder], 4, 3, 0, 0, 0,
cbgmc_BoundingBox, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_BoundingBox_$callClinit, 0,
cbgu_ArrayMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cgxgbt_TeaFileHandle$1, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaFileHandle$1_$callClinit, 0]);
$rt_metadata([ji_IOException, "IOException", 29, jl_Exception, [], 0, 3, 0, 0, 0,
cbggg_GLFrameBuffer, 0, jl_Object, [cbgu_Disposable], 1, 3, 0, cbggg_GLFrameBuffer_$callClinit, ["$bind", $rt_wrapFunction0(cbggg_GLFrameBuffer_bind)],
cbggg_FrameBufferCubemap, 0, cbggg_GLFrameBuffer, [], 0, 3, 0, cbggg_FrameBufferCubemap_$callClinit, ["$bind", $rt_wrapFunction0(cbggg_FrameBufferCubemap_bind), "$attachFrameBufferColorTexture", $rt_wrapFunction1(cbggg_FrameBufferCubemap_attachFrameBufferColorTexture0), "$createTexture", $rt_wrapFunction1(cbggg_FrameBufferCubemap_createTexture)],
nmgsu_IBLBuilder$1, "IBLBuilder$1", 44, cbggg_FrameBufferCubemap, [], 0, 0, 0, 0, ["$disposeColorTexture", $rt_wrapFunction1(nmgsu_IBLBuilder$1_disposeColorTexture)],
cbgg_Cubemap, "Cubemap", 12, cbgg_GLTexture, [], 0, 3, 0, cbgg_Cubemap_$callClinit, ["$getWidth", $rt_wrapFunction0(cbgg_Cubemap_getWidth)],
nmgsu_IBLBuilder$2, "IBLBuilder$2", 44, cbggg_FrameBufferCubemap, [], 0, 0, 0, 0, ["$disposeColorTexture", $rt_wrapFunction1(nmgsu_IBLBuilder$2_disposeColorTexture)],
cbgg_CubemapData, 0, jl_Object, [], 3, 3, 0, 0, 0,
nmgsu_FacedMultiCubemapData, 0, jl_Object, [cbgg_CubemapData], 0, 3, 0, 0, ["$isManaged", $rt_wrapFunction0(nmgsu_FacedMultiCubemapData_isManaged), "$getWidth", $rt_wrapFunction0(nmgsu_FacedMultiCubemapData_getWidth), "$isPrepared", $rt_wrapFunction0(nmgsu_FacedMultiCubemapData_isPrepared), "$prepare", $rt_wrapFunction0(nmgsu_FacedMultiCubemapData_prepare), "$consumeCubemapData", $rt_wrapFunction0(nmgsu_FacedMultiCubemapData_consumeCubemapData)],
cbggg_FrameBuffer, "FrameBuffer", 13, cbggg_GLFrameBuffer, [], 0, 3, 0, 0, ["$attachFrameBufferColorTexture", $rt_wrapFunction1(cbggg_FrameBuffer_attachFrameBufferColorTexture), "$disposeColorTexture", $rt_wrapFunction1(cbggg_FrameBuffer_disposeColorTexture), "$createTexture", $rt_wrapFunction1(cbggg_FrameBuffer_createTexture)],
cbgg_Cubemap$CubemapSide, 0, jl_Enum, [], 12, 3, 0, cbgg_Cubemap$CubemapSide_$callClinit, 0,
jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, 0, 0,
jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
cbggga_DirectionalLightsAttribute, "DirectionalLightsAttribute", 19, cbggg_Attribute, [], 0, 3, 0, cbggga_DirectionalLightsAttribute_$callClinit, ["$hashCode", $rt_wrapFunction0(cbggga_DirectionalLightsAttribute_hashCode), "$copy1", $rt_wrapFunction0(cbggga_DirectionalLightsAttribute_copy)],
cbgu_Sort, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_TextureAtlas$AtlasRegion, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
nmgss_PBRCommon, 0, jl_Object, [], 0, 3, 0, nmgss_PBRCommon_$callClinit, 0,
cbgggm_Animation, "Animation", 18, jl_Object, [], 0, 3, 0, 0, 0,
ji_ByteArrayOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, 0,
cbgu_StreamUtils$OptimizedByteArrayOutputStream, 0, ji_ByteArrayOutputStream, [], 0, 3, 0, 0, 0,
cbggg_ShapeRenderer$ShapeType, "ShapeRenderer$ShapeType", 13, jl_Enum, [], 12, 3, 0, 0, 0,
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, 0, 0,
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0, 0,
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0, 0,
jl_AssertionError, "AssertionError", 30, jl_Error, [], 0, 3, 0, 0, 0,
jl_Boolean, 0, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, 0, 0,
cgxjl_JParserLibraryLoader$OnInitFunction, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_10_0, 0, jl_Object, [cgxjl_JParserLibraryLoader$OnInitFunction], 0, 3, 0, 0, 0,
cbggg_GLFrameBuffer$GLFrameBufferBuilder, 0, jl_Object, [], 1, 3, 0, 0, 0,
cbggg_GLFrameBuffer$FrameBufferBuilder, 0, cbggg_GLFrameBuffer$GLFrameBufferBuilder, [], 0, 3, 0, 0, 0,
jnc_CoderResult, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_GLFrameBuffer$FrameBufferCubemapBuilder, 0, cbggg_GLFrameBuffer$GLFrameBufferBuilder, [], 0, 3, 0, 0, 0,
jnc_CoderMalfunctionError, "CoderMalfunctionError", 27, jl_Error, [], 0, 3, 0, 0, 0,
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, 0,
cbggg_GLFrameBuffer$FrameBufferRenderBufferAttachmentSpec, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbggg_GLFrameBuffer$FrameBufferTextureAttachmentSpec, "GLFrameBuffer$FrameBufferTextureAttachmentSpec", 13, jl_Object, [], 0, 3, 0, 0, 0,
cbgu_TimSort, 0, jl_Object, [], 0, 0, 0, 0, 0,
jn_BufferOverflowException, "BufferOverflowException", 26, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnc_BufferUnderflowException, "BufferUnderflowException", 27, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnc_BufferOverflowException, "BufferOverflowException", 27, jl_RuntimeException, [], 0, 3, 0, 0, 0,
jnc_MalformedInputException, "MalformedInputException", 27, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jnc_MalformedInputException_getMessage)],
jnc_UnmappableCharacterException, "UnmappableCharacterException", 27, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jnc_UnmappableCharacterException_getMessage)],
cbggg_HdpiUtils, 0, jl_Object, [], 0, 3, 0, cbggg_HdpiUtils_$callClinit, 0,
nmgsa_PBRMatrixAttribute, "PBRMatrixAttribute", 45, cbggg_Attribute, [], 0, 3, 0, nmgsa_PBRMatrixAttribute_$callClinit, ["$copy1", $rt_wrapFunction0(nmgsa_PBRMatrixAttribute_copy)],
nmgss_CascadeShadowMap, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbggge_ShadowMap, 0, jl_Object, [], 3, 3, 0, 0, 0,
nmgsl_DirectionalShadowLight, 0, nmgsl_DirectionalLightEx, [cbggge_ShadowMap, cbgu_Disposable], 0, 3, 0, 0, 0,
nmgss_TransmissionSource, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
cbgggm_NodeAnimation, "NodeAnimation", 18, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_NodeKeyframe, "NodeKeyframe", 18, jl_Object, [], 0, 3, 0, 0, 0,
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, 0, 0]);
$rt_metadata([jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, 0,
cbggg_HdpiMode, 0, jl_Enum, [], 12, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$6, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$6_onProgress), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$6_onSuccess)],
nmgss_MirrorSource, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
jnc_UnsupportedCharsetException, "UnsupportedCharsetException", 27, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
ji_UnsupportedEncodingException, "UnsupportedEncodingException", 29, ji_IOException, [], 0, 3, 0, 0, 0,
jnc_Charset$Charsets, 0, jl_Object, [], 0, 0, 0, jnc_Charset$Charsets_$callClinit, 0,
jnc_StandardCharsets, 0, jl_Object, [], 4, 3, 0, jnc_StandardCharsets_$callClinit, 0,
jnci_AsciiCharset, "AsciiCharset", 28, jnc_Charset, [], 0, 3, 0, 0, ["$newDecoder", $rt_wrapFunction0(jnci_AsciiCharset_newDecoder)],
jnci_Iso8859Charset, "Iso8859Charset", 28, jnc_Charset, [], 0, 3, 0, 0, ["$newDecoder", $rt_wrapFunction0(jnci_Iso8859Charset_newDecoder)],
jnci_UTF16Charset, "UTF16Charset", 28, jnc_Charset, [], 0, 3, 0, 0, ["$newDecoder", $rt_wrapFunction0(jnci_UTF16Charset_newDecoder)],
ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, 0, ["$close", $rt_wrapFunction0(ji_ByteArrayInputStream_close)],
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbggge_PointLight, 0, cbggge_BaseLight, [], 0, 3, 0, 0, 0,
nmgsl_PointLightEx, 0, cbggge_PointLight, [], 0, 3, 0, 0, 0,
cbggge_SpotLight, 0, cbggge_BaseLight, [], 0, 3, 0, 0, 0,
nmgsl_SpotLightEx, 0, cbggge_SpotLight, [], 0, 3, 0, 0, 0,
cbggg_BitmapFontCache$addText$lambda$_31_0, "BitmapFontCache$addText$lambda$_31_0", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$get5", $rt_wrapFunction0(cbggg_BitmapFontCache$addText$lambda$_31_0_get)],
cbgggu_MeshPartBuilder, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggu_MeshBuilder, "MeshBuilder", 17, jl_Object, [cbgggu_MeshPartBuilder], 0, 3, 0, cbgggu_MeshBuilder_$callClinit, 0,
jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, 0,
jnci_AsciiDecoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_AsciiDecoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jnci_UTF16Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF16Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jnci_Iso8859Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_Iso8859Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
jl_ArrayIndexOutOfBoundsException, "ArrayIndexOutOfBoundsException", 30, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, 0,
cbgu_ShortArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
jpb_BodyID, 0, ji_IDLBase, [], 0, 3, 0, 0, ["$deleteNative", $rt_wrapFunction0(jpb_BodyID_deleteNative)],
cbggg_GLOnlyTextureData, "GLOnlyTextureData", 13, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, ["$getType", $rt_wrapFunction0(cbggg_GLOnlyTextureData_getType), "$isPrepared", $rt_wrapFunction0(cbggg_GLOnlyTextureData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_GLOnlyTextureData_prepare), "$consumeCustomData", $rt_wrapFunction1(cbggg_GLOnlyTextureData_consumeCustomData), "$consumePixmap", $rt_wrapFunction0(cbggg_GLOnlyTextureData_consumePixmap), "$disposePixmap", $rt_wrapFunction0(cbggg_GLOnlyTextureData_disposePixmap),
"$getWidth", $rt_wrapFunction0(cbggg_GLOnlyTextureData_getWidth), "$getHeight", $rt_wrapFunction0(cbggg_GLOnlyTextureData_getHeight), "$getFormat", $rt_wrapFunction0(cbggg_GLOnlyTextureData_getFormat), "$useMipMaps", $rt_wrapFunction0(cbggg_GLOnlyTextureData_useMipMaps), "$isManaged", $rt_wrapFunction0(cbggg_GLOnlyTextureData_isManaged)],
cbggg_Shader, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, 0,
cbggg_FacedCubemapData, 0, jl_Object, [cbgg_CubemapData], 0, 3, 0, 0, ["$isManaged", $rt_wrapFunction0(cbggg_FacedCubemapData_isManaged), "$getWidth", $rt_wrapFunction0(cbggg_FacedCubemapData_getWidth), "$isPrepared", $rt_wrapFunction0(cbggg_FacedCubemapData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_FacedCubemapData_prepare), "$consumeCubemapData", $rt_wrapFunction0(cbggg_FacedCubemapData_consumeCubemapData)],
cbgggu_MeshPartBuilder$VertexInfo, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, 0,
cbgm_Matrix3, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
cbgggus_BaseShapeBuilder, 0, jl_Object, [], 0, 3, 0, cbgggus_BaseShapeBuilder_$callClinit, 0,
cbgggus_BoxShapeBuilder, 0, cbgggus_BaseShapeBuilder, [], 0, 3, 0, 0, 0,
cbgu_StringBuilder, 0, jl_Object, [jl_Appendable, jl_CharSequence], 0, 3, 0, 0, 0,
cbgggs_BaseShader, 0, jl_Object, [cbggg_Shader], 1, 3, 0, 0, ["$init0", $rt_wrapFunction2(cbgggs_BaseShader_init)],
cbgggs_DefaultShader, "DefaultShader", 16, cbgggs_BaseShader, [], 0, 3, 0, cbgggs_DefaultShader_$callClinit, ["$init", $rt_wrapFunction0(cbgggs_DefaultShader_init), "$canRender", $rt_wrapFunction1(cbgggs_DefaultShader_canRender), "$equals", $rt_wrapFunction1(cbgggs_DefaultShader_equals0), "$begin4", $rt_wrapFunction2(cbgggs_DefaultShader_begin), "$render6", $rt_wrapFunction2(cbgggs_DefaultShader_render), "$end1", $rt_wrapFunction0(cbgggs_DefaultShader_end), "$bindMaterial", $rt_wrapFunction1(cbgggs_DefaultShader_bindMaterial),
"$bindLights", $rt_wrapFunction2(cbgggs_DefaultShader_bindLights)],
nmgss_SceneSkybox$SkyboxShader, "SceneSkybox$SkyboxShader", 47, cbgggs_DefaultShader, [], 0, 0, 0, 0, ["$init", $rt_wrapFunction0(nmgss_SceneSkybox$SkyboxShader_init), "$bindMaterial", $rt_wrapFunction1(nmgss_SceneSkybox$SkyboxShader_bindMaterial)],
nmgsa_PBRColorAttribute, 0, cbggga_ColorAttribute, [], 0, 3, 0, nmgsa_PBRColorAttribute_$callClinit, 0,
nmgsa_PBRFlagAttribute, 0, cbggg_Attribute, [], 0, 3, 0, nmgsa_PBRFlagAttribute_$callClinit, 0,
nmgsa_FogAttribute, 0, cbggg_Attribute, [], 0, 3, 0, nmgsa_FogAttribute_$callClinit, 0,
nmgsu_LightUtils, 0, jl_Object, [], 0, 3, 0, 0, 0,
nmgsa_PBRFloatAttribute, 0, cbggga_FloatAttribute, [], 0, 3, 0, nmgsa_PBRFloatAttribute_$callClinit, 0,
nmgsa_PBRVolumeAttribute, 0, cbggg_Attribute, [], 0, 3, 0, nmgsa_PBRVolumeAttribute_$callClinit, 0,
nmgsa_PBRHDRColorAttribute, 0, cbggg_Attribute, [], 0, 3, 0, nmgsa_PBRHDRColorAttribute_$callClinit, 0,
nmgsa_PBRIridescenceAttribute, 0, cbggg_Attribute, [], 0, 3, 0, nmgsa_PBRIridescenceAttribute_$callClinit, 0,
nmgsa_ClippingPlaneAttribute, 0, cbggg_Attribute, [], 0, 3, 0, nmgsa_ClippingPlaneAttribute_$callClinit, 0,
nmgsa_CascadeShadowMapAttribute, 0, cbggg_Attribute, [], 0, 3, 0, nmgsa_CascadeShadowMapAttribute_$callClinit, 0,
nmgsa_MirrorSourceAttribute, 0, cbggg_Attribute, [], 0, 3, 0, nmgsa_MirrorSourceAttribute_$callClinit, 0]);
$rt_metadata([nmgsa_MirrorAttribute, 0, cbggg_Attribute, [], 0, 3, 0, nmgsa_MirrorAttribute_$callClinit, 0,
cbgggs_DepthShader, 0, cbgggs_DefaultShader, [], 0, 3, 0, cbgggs_DepthShader_$callClinit, ["$begin4", $rt_wrapFunction2(cbgggs_DepthShader_begin), "$end1", $rt_wrapFunction0(cbgggs_DepthShader_end)],
nmgss_PBRDepthShader, "PBRDepthShader", 43, cbgggs_DepthShader, [], 0, 3, 0, 0, ["$canRender", $rt_wrapFunction1(nmgss_PBRDepthShader_canRender), "$init", $rt_wrapFunction0(nmgss_PBRDepthShader_init), "$render6", $rt_wrapFunction2(nmgss_PBRDepthShader_render)],
cbgg_VertexAttributes$ReadonlyIterable, 0, jl_Object, [jl_Iterable], 0, 0, 0, 0, 0,
nmgss_PBRShader, "PBRShader", 43, cbgggs_DefaultShader, [], 0, 3, 0, nmgss_PBRShader_$callClinit, ["$canRender", $rt_wrapFunction1(nmgss_PBRShader_canRender), "$init0", $rt_wrapFunction2(nmgss_PBRShader_init), "$bindMaterial", $rt_wrapFunction1(nmgss_PBRShader_bindMaterial), "$render6", $rt_wrapFunction2(nmgss_PBRShader_render), "$bindLights", $rt_wrapFunction2(nmgss_PBRShader_bindLights)],
cgxgbtf_FileDB$1, 0, ji_OutputStream, [], 0, 0, 0, 0, ["$close", $rt_wrapFunction0(cgxgbtf_FileDB$1_close)],
otc_PlatformDetector, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggga_BlendingAttribute, 0, cbggg_Attribute, [], 0, 3, 0, cbggga_BlendingAttribute_$callClinit, 0,
cbggga_IntAttribute, 0, cbggg_Attribute, [], 0, 3, 0, cbggga_IntAttribute_$callClinit, 0,
cbgggs_BaseShader$Validator, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggs_BaseShader$Uniform, "BaseShader$Uniform", 16, jl_Object, [cbgggs_BaseShader$Validator], 0, 3, 0, 0, 0,
cbgggs_BaseShader$Setter, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggs_BaseShader$LocalSetter, 0, jl_Object, [cbgggs_BaseShader$Setter], 1, 3, 0, 0, ["$isGlobal", $rt_wrapFunction2(cbgggs_BaseShader$LocalSetter_isGlobal)],
nmgss_PBRShader$1, "PBRShader$1", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$1_set)],
nmgss_PBRShader$2, "PBRShader$2", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$2_set)],
nmgss_PBRShader$3, "PBRShader$3", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$3_set)],
nmgss_PBRShader$4, "PBRShader$4", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$4_set)],
nmgss_PBRShader$5, "PBRShader$5", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$5_set)],
nmgss_PBRShader$6, "PBRShader$6", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$6_set)],
nmgss_PBRShader$7, "PBRShader$7", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$7_set)],
nmgss_PBRShader$8, "PBRShader$8", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$8_set)],
nmgss_PBRShader$9, "PBRShader$9", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$9_set)],
nmgss_PBRShader$10, "PBRShader$10", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$10_set)],
nmgss_PBRShader$11, "PBRShader$11", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$11_set)],
nmgss_PBRShader$12, "PBRShader$12", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$12_set)],
nmgss_PBRShader$13, "PBRShader$13", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$13_set)],
nmgss_PBRShader$14, "PBRShader$14", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$14_set)],
nmgss_PBRShader$15, "PBRShader$15", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$15_set)],
nmgss_PBRShader$16, "PBRShader$16", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$16_set)],
nmgss_PBRShader$17, "PBRShader$17", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$17_set)],
nmgss_PBRShader$18, "PBRShader$18", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$18_set)],
nmgss_PBRShader$19, "PBRShader$19", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$19_set)],
nmgss_PBRShader$20, "PBRShader$20", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$20_set)],
nmgss_PBRShader$21, "PBRShader$21", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$21_set)],
nmgss_PBRShader$22, "PBRShader$22", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$22_set)],
nmgss_PBRShader$23, "PBRShader$23", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$23_set)],
nmgss_PBRShader$24, "PBRShader$24", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$24_set)],
nmgss_PBRShader$25, "PBRShader$25", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$25_set)],
nmgss_PBRShader$26, "PBRShader$26", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$26_set)],
nmgss_PBRShader$27, "PBRShader$27", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$27_set)],
nmgss_PBRShader$28, "PBRShader$28", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$28_set)],
nmgss_PBRShader$29, "PBRShader$29", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$29_set)],
nmgss_PBRShader$30, "PBRShader$30", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$30_set)],
nmgss_PBRShader$31, "PBRShader$31", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$31_set)],
nmgss_PBRShader$32, "PBRShader$32", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$32_set)],
nmgss_PBRShader$33, "PBRShader$33", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$33_set)],
nmgss_PBRShader$34, "PBRShader$34", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$34_set)],
nmgss_PBRShader$35, "PBRShader$35", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$35_set)],
nmgss_PBRShader$36, "PBRShader$36", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$36_set)],
nmgss_PBRShader$37, "PBRShader$37", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$37_set)]]);
$rt_metadata([nmgss_PBRShader$38, "PBRShader$38", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$38_set)],
nmgss_PBRShader$39, 0, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, 0,
nmgss_PBRShader$40, "PBRShader$40", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$40_set)],
nmgss_PBRShader$41, "PBRShader$41", 43, cbgggs_BaseShader$LocalSetter, [], 4, 0, 0, 0, ["$set20", $rt_wrapFunction4(nmgss_PBRShader$41_set)],
cbgggus_BaseShapeBuilder$1, 0, cbgu_FlushablePool, [], 0, 0, 0, 0, ["$newObject", $rt_wrapFunction0(cbgggus_BaseShapeBuilder$1_newObject)],
cbgggus_BaseShapeBuilder$2, 0, cbgu_FlushablePool, [], 0, 0, 0, 0, 0,
cbggge_AmbientCubemap, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggs_DefaultShader$Inputs, 0, jl_Object, [], 0, 3, 0, cbgggs_DefaultShader$Inputs_$callClinit, 0,
cbgggs_DefaultShader$Setters, 0, jl_Object, [], 0, 3, 0, cbgggs_DefaultShader$Setters_$callClinit, 0,
cbgggs_DefaultShader$Setters$Bones, "DefaultShader$Setters$Bones", 16, cbgggs_BaseShader$LocalSetter, [], 0, 3, 0, cbgggs_DefaultShader$Setters$Bones_$callClinit, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$Bones_set)],
cbgggs_DefaultShader$Setters$ACubemap, "DefaultShader$Setters$ACubemap", 16, cbgggs_BaseShader$LocalSetter, [], 0, 3, 0, cbgggs_DefaultShader$Setters$ACubemap_$callClinit, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$ACubemap_set)],
cbgu_IntIntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
cbgggs_BaseShader$GlobalSetter, 0, jl_Object, [cbgggs_BaseShader$Setter], 1, 3, 0, 0, ["$isGlobal", $rt_wrapFunction2(cbgggs_BaseShader$GlobalSetter_isGlobal)],
cbgggs_DefaultShader$Setters$1, "DefaultShader$Setters$1", 16, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$1_set)],
cbgggs_DefaultShader$Setters$2, "DefaultShader$Setters$2", 16, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$2_set)],
cbgggs_DefaultShader$Setters$3, "DefaultShader$Setters$3", 16, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$3_set)],
cbgggs_DefaultShader$Setters$4, "DefaultShader$Setters$4", 16, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$4_set)],
cbgggs_DefaultShader$Setters$5, "DefaultShader$Setters$5", 16, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$5_set)],
cbgggs_DefaultShader$Setters$6, "DefaultShader$Setters$6", 16, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$6_set)],
cbgggs_DefaultShader$Setters$7, "DefaultShader$Setters$7", 16, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$7_set)],
cbgggs_DefaultShader$Setters$8, "DefaultShader$Setters$8", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$8_set)],
cbgggs_DefaultShader$Setters$9, "DefaultShader$Setters$9", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$9_set)],
cbgggs_DefaultShader$Setters$10, "DefaultShader$Setters$10", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$10_set)],
cbgggs_DefaultShader$Setters$11, "DefaultShader$Setters$11", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$11_set)],
cbgggs_DefaultShader$Setters$12, "DefaultShader$Setters$12", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$12_set)],
cbgggs_DefaultShader$Setters$13, "DefaultShader$Setters$13", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$13_set)],
cbgggs_DefaultShader$Setters$14, "DefaultShader$Setters$14", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$14_set)],
cbgggs_DefaultShader$Setters$15, "DefaultShader$Setters$15", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$15_set)],
cbgggs_DefaultShader$Setters$16, "DefaultShader$Setters$16", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$16_set)],
cbgggs_DefaultShader$Setters$17, "DefaultShader$Setters$17", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$17_set)],
cbgggs_DefaultShader$Setters$18, "DefaultShader$Setters$18", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$18_set)],
cbgggs_DefaultShader$Setters$19, "DefaultShader$Setters$19", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$19_set)],
cbgggs_DefaultShader$Setters$20, "DefaultShader$Setters$20", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$20_set)],
cbgggs_DefaultShader$Setters$21, "DefaultShader$Setters$21", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$21_set)],
cbgggs_DefaultShader$Setters$22, "DefaultShader$Setters$22", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$22_set)],
cbgggs_DefaultShader$Setters$23, "DefaultShader$Setters$23", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$23_set)],
cbgggs_DefaultShader$Setters$24, "DefaultShader$Setters$24", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$24_set)],
cbgggs_DefaultShader$Setters$25, "DefaultShader$Setters$25", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$25_set)],
cbgggs_DefaultShader$Setters$26, "DefaultShader$Setters$26", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$26_set)],
cbgggs_DefaultShader$Setters$27, "DefaultShader$Setters$27", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$27_set)],
cbgggs_DefaultShader$Setters$28, "DefaultShader$Setters$28", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$28_set)],
cbgggs_DefaultShader$Setters$29, "DefaultShader$Setters$29", 16, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$set20", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$29_set)],
cbgg_VertexAttributes$ReadonlyIterator, 0, jl_Object, [ju_Iterator, jl_Iterable], 0, 0, 0, 0, 0,
cbgg_Colors, 0, jl_Object, [], 4, 3, 0, cbgg_Colors_$callClinit, 0,
nmgsm_WeightVector, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgggm_NodePart$set$lambda$_4_0, 0, jl_Object, [cbgu_ArraySupplier], 0, 3, 0, 0, 0,
cbgggm_NodePart$set$lambda$_4_1, 0, jl_Object, [cbgu_ArraySupplier], 0, 3, 0, 0, 0]);
let $rt_booleanArrayCls = $rt_arraycls($rt_booleancls),
$rt_charArrayCls = $rt_arraycls($rt_charcls),
$rt_byteArrayCls = $rt_arraycls($rt_bytecls),
$rt_shortArrayCls = $rt_arraycls($rt_shortcls),
$rt_intArrayCls = $rt_arraycls($rt_intcls),
$rt_longArrayCls = $rt_arraycls($rt_longcls),
$rt_floatArrayCls = $rt_arraycls($rt_floatcls);
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "start + count must be <= size: ", " + ", " <= ", "end can\'t be >= size: ", " >= ", "start can\'t be > end: ", " > ", "", "texture cannot be null.", "objects cannot be null.", "0", "GL_EXT_texture_filter_anisotropic", "New data must have the same managed status as the old data", "GL_ARB_framebuffer_object", "GL_EXT_framebuffer_object", "com.badlogic.gdx.backends.lwjgl3.Lwjgl3GLES20", "index can\'t be >= size: ", "index can\'t be > size: ",
"Array is empty.", "fromIndex(", ") > toIndex(", ")", "newSize must be >= 0: ", "[]", ", ", "key cannot be null.", "interface ", "class ", ": ", "\n", "\tat ", "null", "Caused by: ", "String is null", "String is empty", "String contains invalid digits: ", "String contains digits out of radix ", "The value is too big for integer type", "The value is too big for int type: ", "Illegal radix: ", "false", "true", "app", "db/assets", "high-performance", "canvas", "java.runtime.name", "userAgent", "os.name", "Windows",
"OS X", "no OS", "Linux", ".html", "index.html", "index-wasm.html", "index-debug.html", "pagehide", "resize", "assets.txt", "gdx.wasm.js", "howler.js", "WEB_SCRIPT_PATH", "WEB_ASSET_PATH", "bounces cannot be < 2 or > 5: ", "INIT", "PRELOAD_ASSETS", "DOWNLOAD_ASSETS", "APP_CREATE", "APP_LOOP", "object", "function", "string", "number", "undefined", "Either src or dest is null", "java.version", "1.8", "TeaVM", "file.separator", "/", "path.separator", ":", "line.separator", "java.io.tmpdir", "/tmp", "java.vm.version",
"user.home", "GLVersion", "OpenGL ES (\\d(\\.\\d){0,2})", "WebGL (\\d(\\.\\d){0,2})", "(\\d(\\.\\d){0,2})", "px", "Loading asset: ", "Unsupported asset type ", "assets/", "scripts/", "Loading script: ", "mousedown", "mouseup", "mousemove", "wheel", "touchstart", "touchmove", "touchcancel", "touchend", "keydown", "keypress", "keyup", "CSS1Compat", "Type ", " is not supported", "hidden", "visible", "object cannot be null.", "capacity must be >= 0: ", "The required capacity is too large: ", "glGetFloat not supported by WebGL backend",
"glGetInteger not supported by WebGL backend", "Only format RGBA and type UNSIGNED_BYTE are currently supported for glReadPixels(...). Create an issue when you need other formats.", "GL error: ", "Invalid version string: ", "\\.", "Error parsing number: ", ", assuming: ", "libGDX GL", "Android", "Desktop", "HeadlessDesktop", "Applet", "WebGL", "iOS", " REMOVE FOLDER: ", " REMOVE FILE: ", " Path: ", " Error: ", " CONTAINS FOLDER: ", " CONTAINS FILE: ", ".", "./", " GET FOLDER: ", " GET FILE: ", " Size: ", " PUT FILE: ",
" Bytes: ", "Cannot put an empty folder name", " PUT FOLDER: ", "IndexedDB is not supported in this browser", "PUT FOLDER DB: ", "PUT FILE DB: ", "REMOVE FILE DB: ", "OpenGL", "GLES", "NONE", "Patter is null", "IndexedDB Error opening database: ", "fSet", "Is", "In", "NonCapFSet", "AheadFSet", "BehindFSet", "AtomicFSet", "FinalSet", "<Empty set>", "JointSet", "NonCapJointSet", "PosLookaheadJointSet", "NegLookaheadJointSet", "PosBehindJointSet", "NegBehindJointSet", "<Quant>", "<GroupQuant>", "Lower", "Upper",
"ASCII", "Alpha", "Digit", "Alnum", "Punct", "Graph", "Print", "Blank", "Cntrl", "XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar", "javaTitleCase", "javaUnicodeIdentifierPart", "javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B",
"IPAExtensions", "SpacingModifierLetters", "CombiningDiacriticalMarks", "Greek", "Cyrillic", "CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "HangulJamo", "Ethiopic", "EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer",
"Mongolian", "Limbu", "TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese", "PhoneticExtensions", "PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols", "NumberForms", "Arrows", "MathematicalOperators", "MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes",
"MiscellaneousSymbols", "Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A", "BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended", "SupplementalPunctuation", "CJKRadicalsSupplement", "KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo",
"Kanbun", "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths", "CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates", "LowSurrogates", "PrivateUseArea", "CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks",
"CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms", "all", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc", "Sk", "So", "Pi", "Pf", "posFSet", " ", "^ ", "range:", "CompositeRangeSet:  <nonsurrogate> ", " <surrogate> ", "UCI range:", "decomposed Hangul syllable:", "UCI ", "CI ", "decomposed char:",
"<DotAllQuant>", "<DotQuant>", "<SOL>", "WordBoundary", "PreviousMatch", "<EOL>", "EOI", "^", "DotAll", "<Unix MultiLine $>", "<MultiLine $>", "CI back reference: ", "back reference: ", "UCI back reference: ", "sequence: ", "UCI sequence: ", "CI sequence: ", "PX", "PCT", "EM", "EX", "PT", "PC", "IN", "CM", "MM", "main", "success", "failure", "IndexedDB Error cursor", "offset + length must be <= size: ", "additionalCapacity must be >= 0: ", "charsetName is null", "Script download success: ", "Script download failed: ",
"#iterator() cannot be used nested.", "No support for buffer ", "Should never been thrown", "Invalid assets description file. ", "1", "c", "l", "\\", "Binary", "b", "Directory", "jolt", " is not subtype of ", "JMultiplatform ", " is not set", ".wasm.js", ".js", "com/badlogic/gdx/utils/lsans-15.fnt", "com/badlogic/gdx/utils/lsans-15.png", "If no regions are specified, the font data must have an images path.", "The specified font must contain at least one texture page.", "IndexedDB Error putting file: ", "Asset download failed: ",
"Asset download success: ", "Number of threads: ", "Jolt Config", "net/mgsx/gltf/shaders/brdfLUT.png", "FPS: ", "   MIN: ", "   AVG: ", "   MAX: ", "AntzFPSLogger", "libGDX iteration ", " will be discarded >>>", " report >>>", "JoltTest", "*** Test has finished! ***", "SpriteBatch.end must be called before begin.", "u_projTrans", "u_texture", "Iteration: ", "Box count: ", "MIN: ", "SpriteBatch.begin must be called before end.", "libGDX final report, ", " iterations.   ", "textures/badlogic.jpg", " FPS MIN: ",
"   FPS AVG: ", "   FPS MAX: ", "non-invertible matrix", "Can\'t have more than 8191 sprites per batch: ", "a_position", "a_color", "a_texCoord0", "attribute vec4 a_position;\nattribute vec4 a_color;\nattribute vec2 a_texCoord0;\nuniform mat4 u_projTrans;\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main()\n{\n   v_color = a_color;\n   v_color.a = v_color.a * (255.0/254.0);\n   v_texCoords = a_texCoord0;\n   gl_Position =  u_projTrans * a_position;\n}\n", "#ifdef GL_ES\n#define LOWP lowp\nprecision mediump float;\n#else\n#define LOWP \n#endif\nvarying LOWP vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\nvoid main()\n{\n  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}",
"Error compiling shader: ", "SpriteBatch.begin must be called before draw.", "(", ",", "VertexArray", "VertexBufferObject", "VertexBufferObjectSubData", "VertexBufferObjectWithVAO", "Mesh attempting to access memory outside of the index buffer (count: ", ", offset: ", ", max: ", "Already loaded.", "File is empty.", "padding=", "Invalid padding.", "Missing common header.", "Invalid common header.", "lineHeight=", "Missing: lineHeight", "base=", "Missing: base", "pages=", "Missing additional page definitions.",
".*id=(\\d+)", ".*file=\"?([^\"]+)\"?", "\\\\", "Missing: file", "Page IDs must be indices starting at 0: ", "Invalid page id: ", "kernings ", "metrics ", "char ", " =", "kerning ", "Error loading font file: ", "No glyphs found.", "attributes must be >= 1", "vertex shader must not be null", "fragment shader must not be null", "Fragment shader:\n", "Vertex shader\n", "An attempted fetch uniform from uncompiled shader \n", "No uniform with name \'", "\' in shader", "OnInit", "No buffer allocated!", "IndexBufferObject cannot be used after it has been disposed.",
"data must be a ByteBuffer or FloatBuffer", "buffer not allocated with newUnsafeByteBuffer or already disposed", "Failed to load .wasm.js or .js script: ", "New position ", " is outside of range [0;", "Capacity is negative: ", " at ", "[ByteBuffer position=", ", limit=", ", capacity=", ", mark ", "BIG_ENDIAN", "LITTLE_ENDIAN", "Already prepared", "Call prepare() before calling getPixmap()", "This TextureData implementation does not upload data itself", "File is null, it does not exist: ", "Error reading file: ",
"Pixmap already disposed!", "Unknown Gdx2DPixmap Format: ", "None", "SourceOver", "NearestNeighbour", "BiLinear", "unknown format: ", "Index ", "Nearest", "Linear", "MipMap", "MipMapNearestNearest", "MipMapLinearNearest", "MipMapNearestLinear", "MipMapLinearLinear", "MirroredRepeat", "ClampToEdge", "Repeat", "Unknown Format: ", "Intensity", "LuminanceAlpha", "RGB565", "RGBA4444", "RGB888", "RGBA8888", "This buffer is not allocated in linear memory and does not wrap native JS buffer", "GL_ARB_seamless_cube_map",
"PBR", "Warning seamless CubeMap is not supported by this platform and may cause filtering artifacts", "net/mgsx/gltf/shaders/ibl-sun.vs.glsl", "net/mgsx/gltf/shaders/ibl-sun.fs.glsl", "Cannot register ", ", maximum registered attribute count reached.", "Invalid type specified", "diffuseTexture", "specularTexture", "bumpTexture", "normalTexture", "ambientTexture", "emissiveTexture", "reflectionTexture", "MetallicRoughnessSampler", "OcclusionSampler", "brdfLUTSampler", "TransmissionTexture", "ThicknessTexture",
"SpecularFactorTexture", "IridescenceTexture", "IridescenceThicknessTexture", "TransmissionSourceTexture", "SpecularColorTexture", "environmentCubemap", "DiffuseEnvSampler", "SpecularEnvSampler", "GDX-GLTF Skybox LOD requires GLES 3+", "#version 300 es\n", "#version 130\n", "#define GLSL3\n", "#define MANUAL_SRGB\n", "#define SRGB_FAST_APPROXIMATION\n", "#define ENV_LOD\n", "net/mgsx/gltf/shaders/skybox", ".vs.glsl", ".fs.glsl", "rect", "Replacement preconditions do not hold", "UTF-8", "FileType \'", "\' Not supported in web backend",
"File not found: ", " (", "Error reading layout file: ", "Classpath", "Internal", "External", "Absolute", "Local", "Can only free direct buffer", "u_exponent", "u_ambient", "u_diffuse", "u_direction", "mtl", "shininess", "alphaTest", "Call end() first", "Call begin() first", "Mesh can\'t hold enough vertices: ", " * ", " < ", "Mesh can\'t hold enough indices: ", "Mesh attributes don\'t match", "a_normal", "node", "box", "diffuseColor", "specularColor", "ambientColor", "emissiveColor", "reflectionColor", "ambientLightColor",
"fogColor", "CUSTOM", "Static", "Kinematic", "Dynamic", "Activate", "DontActivate", "Disposing error - ", " is already disposed", "IDL", " cPointer is 0", "unable to provide a shader for this renderable", "net/mgsx/gltf/shaders/pbr/pbr.vs.glsl", "net/mgsx/gltf/shaders/pbr/pbr.fs.glsl", "#define position", "Flag\n", "#define normal", "#define tangent", "#version 130\n#define GLSL3\n", "#version 300 es\n#define GLSL3\n", "#define GAMMA_CORRECTION ", "#define TS_MANUAL_SRGB\n", "#define TS_SRGB_FAST_APPROXIMATION\n",
"#define MS_MANUAL_SRGB\n", "#define MS_SRGB_FAST_APPROXIMATION\n", "#define baseColorFactorFlag\n", "#define metallicRoughnessTextureFlag\n", "#define occlusionTextureFlag\n", "#define transmissionFlag\n", "#define transmissionTextureFlag\n", "#define volumeFlag\n", "#define thicknessTextureFlag\n", "#define iorFlag\n", "#define specularFactorFlag\n", "#define specularColorFlag\n", "#define specularFactorTextureFlag\n", "#define specularColorTextureFlag\n", "#define specularFlag\n", "#define iridescenceFlag\n",
"#define iridescenceTextureFlag\n", "#define iridescenceThicknessTextureFlag\n", "#define clippingPlaneFlag\n", "more than 8 cascade shadow textures not supported", "#define numCSM ", "#define transmissionSourceFlag\n", "#define diffuseSpecularEnvSeparateFlag\n", "#define mirrorSpecularFlag\n", "#define USE_IBL\n", "EXT_shader_texture_lod", "#define USE_TEXTURE_LOD_EXT\n", "#define USE_TEX_LOD\n", "#define brdfLUTTexture\n", "#define ambientLightFlag\n", "#define ENV_ROTATION\n", "#define unlitFlag\n", "#define v_diffuseUV v_texCoord",
"#define v_emissiveUV v_texCoord", "#define v_normalUV v_texCoord", "#define v_metallicRoughnessUV v_texCoord", "#define v_occlusionUV v_texCoord", "#define v_transmissionUV v_texCoord", "#define v_thicknessUV v_texCoord", "#define v_specularFactorUV v_texCoord", "#define v_specularColorUV v_texCoord", "#define v_iridescenceUV v_texCoord", "#define v_iridescenceThicknessUV v_texCoord", "#define textureFlag\n", "#define textureCoord1Flag\n", "more than 2 texture coordinates attribute not supported", "#define fogEquationFlag\n",
"#define color", "more than 8 bones influence attributes not supported: ", " found.", "PBRShader", "more than 8 morph target attributes not supported: ", "more than ", " color attributes not supported: ", "too many directional lights detected: ", "too many point lights detected: ", "too many spot lights detected: ", "unknow type lights not supported.", "cannot render with this shader", "color packed attribute not supported", "Shader compilation failed:\n", "Shader compilation warnings:\n", "Shader compilation success",
"attribute vec4 a_position;\n", "attribute vec4 a_color;\n", "attribute vec2 a_texCoord", ";\n", "uniform mat4 u_projModelView;\n", "varying vec4 v_col;\n", "varying vec2 v_tex", "void main() {\n   gl_Position = u_projModelView * a_position;\n", "   v_col = a_color;\n   v_col.a *= 255.0 / 254.0;\n", "   v_tex", " = ", "a_texCoord", "   gl_PointSize = 1.0;\n}\n", "Call end() before beginning a new shape batch.", "begin must be called first.", "Must call begin(ShapeType.", ").", ") or begin(ShapeType.", "u_projModelView",
"FAST", "ACCURATE", "IGNORE", "REPLACE", "REPORT", "newAction must be non-null", "Pixmap", "Custom", "texture width and height must be square when using mipmapping.", "u_sampler", "#ifdef GL_ES\nprecision mediump float;\n#endif\n", "uniform sampler2D u_sampler", "void main() {\n   gl_FragColor = ", "vec4(1, 1, 1, 1)", "v_col", " texture2D(u_sampler", ",  v_tex", ") *", ";\n}", "Cannot add a parent as a child", "Could not remove child from its current parent", "OPAQUE_LAST", "depthStencil", "prepare() must not be called on a PixmapTextureData instance as it is already prepared.",
"net/mgsx/gltf/shaders/depth.vs.glsl", "net/mgsx/gltf/shaders/depth.fs.glsl", "#define PackedDepthFlag\n", "com/badlogic/gdx/graphics/g3d/shaders/depth.vertex.glsl", "com/badlogic/gdx/graphics/g3d/shaders/depth.fragment.glsl", "too many bones: ", ", max configured: ", "too many bone weights: ", "pointLights", "spotLights", "Illegal arguments", "Call end() first.", "#include <", ">", "malformed include: ", "\n//////// ", "GL_OES_packed_depth_stencil", "GL_EXT_packed_depth_stencil", "Frame buffer couldn\'t be constructed: incomplete attachment",
"Frame buffer couldn\'t be constructed: incomplete dimensions", "Frame buffer couldn\'t be constructed: missing attachment", "Frame buffer couldn\'t be constructed: unsupported combination of formats", "Frame buffer couldn\'t be constructed: multisample mismatch", "Frame buffer couldn\'t be constructed: unknown error ", "Framebuffer multisample requires GLES 3.1+", "Framebuffer multisample with texture attachments not yet supported", "Packed Stencil/Render render buffers are not available on GLES 2.0", "Multiple render targets not available on GLES 2.0",
"Depth texture FrameBuffer Attachment not available on GLES 2.0", "Stencil texture FrameBuffer Attachment not available on GLES 2.0", "OES_texture_float", "Float texture FrameBuffer Attachment not available on GLES 2.0", "Frame buffer couldn\'t be constructed: packed stencil depth buffer cannot be specified together with separated depth or stencil buffer", "No remaining sides.", "You need to complete your cubemap data before using it", "PositiveX", "NegativeX", "PositiveY", "NegativeY", "PositiveZ", "NegativeZ",
"�", "averageCharsPerByte must be positive. Actual value is ", "maxCharsPerByte must be positive. Actual value is ", "directionalLights", "too many vertex attributes : ", "Point", "Line", "Filled", "Action must be non-null", "Comparison method violates its general contract!", "Malformed input of length ", "Unmappable characters of length ", "envRotation", "Logical", "Pixels", "Error writing file: ", "US-ASCII", "ISO-8859-1", "UTF-16", "UTF-16BE", "UTF-16LE", "Cannot build mesh without position attribute", "Too many vertices used",
"Incorrect primitive type", "This TextureData implementation does not return a Pixmap", "IndexedDB Error removing file: ", "Can\'t invert a singular matrix", "-2147483648", "Cannot register an uniform after initialization", "Already initialized", "com/badlogic/gdx/graphics/g3d/shaders/default.vertex.glsl", "com/badlogic/gdx/graphics/g3d/shaders/default.fragment.glsl", "u_dirLights[0].color", "u_dirLights[0].direction", "u_dirLights[1].color", "u_pointLights[0].color", "u_pointLights[0].position", "u_pointLights[0].intensity",
"u_pointLights[1].color", "u_spotLights[0].color", "u_spotLights[0].position", "u_spotLights[0].intensity", "u_spotLights[0].direction", "u_spotLights[0].cutoffAngle", "u_spotLights[0].exponent", "u_spotLights[1].color", "u_fogColor", "u_shadowMapProjViewTrans", "u_shadowTexture", "u_shadowPCFOffset", "Some attributes not implemented yet (", "u_time", "a_boneWeight", "#define positionFlag\n", "#define colorFlag\n", "#define binormalFlag\n", "#define tangentFlag\n", "#define normalFlag\n", "#define lightingFlag\n",
"#define ambientCubemapFlag\n", "#define numDirectionalLights ", "#define numPointLights ", "#define numSpotLights ", "#define fogFlag\n", "#define shadowMapFlag\n", "#define environmentCubemapFlag\n", "#define texCoord", "#define boneWeight", "#define blendedFlag\n", "#define diffuseTextureFlag\n", "#define diffuseTextureCoord texCoord0\n", "#define specularTextureFlag\n", "#define specularTextureCoord texCoord0\n", "#define normalTextureFlag\n", "#define normalTextureCoord texCoord0\n", "#define emissiveTextureFlag\n",
"#define emissiveTextureCoord texCoord0\n", "#define reflectionTextureFlag\n", "#define reflectionTextureCoord texCoord0\n", "#define ambientTextureFlag\n", "#define ambientTextureCoord texCoord0\n", "#define diffuseColorFlag\n", "#define emissiveColorFlag\n", "#define reflectionColorFlag\n", "#define shininessFlag\n", "#define alphaTestFlag\n", "#define numBones ", "Unknown material attribute: ", "u_lod", "BaseColorFactor", "unlit", "fogEquation", "Metallic", "Roughness", "NormalScale", "OcclusionStrength",
"ShadowBias", "EmissiveIntensity", "TransmissionFactor", "IOR", "SpecularFactor", "volume", "specularColorHDR", "iridescence", "clippingPlane", "CSM", "mirrorSource", "specularMirror", "u_morphTargets1", "u_morphTargets2", "u_mipmapScale", "u_texCoord0Transform", "u_texCoord1Transform", "u_ambientLight", "u_csmPCFClip", "u_csmTransforms", "u_csmSamplers", "u_diffuseTexture", "u_BaseColorFactor", "u_emissiveTexture", "u_normalTexture", "u_MetallicRoughnessSampler", "u_MetallicRoughnessValues", "u_NormalScale",
"u_OcclusionStrength", "u_OcclusionSampler", "u_DiffuseEnvSampler", "u_SpecularEnvSampler", "u_envRotation", "u_brdfLUT", "u_shadowBias", "u_fogEquation", "u_transmissionFactor", "u_transmissionSampler", "u_ior", "u_thicknessFactor", "u_attenuationDistance", "u_attenuationColor", "u_thicknessSampler", "u_specularFactor", "u_specularColorFactor", "u_specularFactorSampler", "u_specularColorSampler", "u_iridescenceFactor", "u_iridescenceIOR", "u_iridescenceThicknessMin", "u_iridescenceThicknessMax", "u_iridescenceSampler",
"u_iridescenceThicknessSampler", "u_transmissionSourceSampler", "u_transmissionSourceMipmapScale", "u_mirrorSpecularSampler", "u_mirrorMipmapScale", "u_mirrorNormal", "u_projViewTrans", "u_viewportInv", "u_clippingPlane", "blended", "cullface", "u_viewTrans", "u_cameraPosition", "u_cameraDirection", "u_cameraUp", "u_cameraNearFar", "u_worldTrans", "u_viewWorldTrans", "u_projViewWorldTrans", "u_normalMatrix", "u_bones", "u_shininess", "u_opacity", "u_diffuseColor", "u_diffuseUVTransform", "u_specularColor", "u_specularTexture",
"u_specularUVTransform", "u_emissiveColor", "u_emissiveUVTransform", "u_reflectionColor", "u_reflectionTexture", "u_reflectionUVTransform", "u_normalUVTransform", "u_ambientTexture", "u_ambientUVTransform", "u_alphaTest", "u_ambientCubemap", "u_dirLights", "u_pointLights", "u_spotLights", "u_environmentCubemap", "CLEAR", "CLEAR_WHITE", "BLACK", "WHITE", "LIGHT_GRAY", "GRAY", "DARK_GRAY", "BLUE", "NAVY", "ROYAL", "SLATE", "SKY", "CYAN", "TEAL", "GREEN", "CHARTREUSE", "LIME", "FOREST", "OLIVE", "YELLOW", "GOLD",
"GOLDENROD", "ORANGE", "BROWN", "TAN", "FIREBRICK", "RED", "SCARLET", "CORAL", "SALMON", "PINK", "MAGENTA", "PURPLE", "VIOLET", "MAROON"]);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
let $rt_export_main = $rt_mainStarter(cajt_TeaVMLauncher_main);
$rt_export_main.javaException = $rt_javaException;
let $rt_jso_marker = Symbol('jsoClass');
(() => {
    let c;
    c = cgxgbtdi_TeaWindow.prototype;
    c.onAnimationFrame = $rt_callWithReceiver(cgxgbtdi_TeaWindow_onAnimationFrame$exported$0);
    c = cgxgbt_TeaInput.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaInput_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$1_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$2_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$3.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$3_handleEvent$exported$0);
    c = cgxgbt_TeaGraphics$1.prototype;
    c.fullscreenChanged = $rt_callWithReceiver(cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0);
    c = cgxgbt_TeaClipboard$ClipboardWriteHandler.prototype;
    c.denied = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2);
    c.prompt = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1);
    c.granted = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_0_handleEvent$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_1_handleEvent$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_2_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$1_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$2_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$3.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$3_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0.prototype;
    c.apply = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1.prototype;
    c.apply = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2.prototype;
    c.get = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2_get$exported$0);
    c = cgxgbta_AssetLoadImpl$getFile$lambda$_2_0.prototype;
    c.onExecute = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$getFile$lambda$_2_0_onExecute$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2_handleEvent$exported$0);
    c = otji_JSWrapper$Helper$_clinit_$lambda$_3_0.prototype;
    c.accept = $rt_callWithReceiver(otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept$exported$0);
    c = otji_JSWrapper$Helper$_clinit_$lambda$_3_1.prototype;
    c.accept = $rt_callWithReceiver(otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept$exported$0);
    c = cgxgbta_AssetDownloadImpl$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$2_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$loadScript$lambda$_5_0_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$4.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$4_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$putFile$lambda$_2_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$putFile$lambda$_2_0_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0.prototype;
    c.onTimer = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$loadBinary$lambda$_6_0_onTimer$exported$0);
    c = cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_7_0_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_8_0_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0.prototype;
    c.onTimer = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_13_0_onTimer$exported$0);
    c = cgxjl_JParserLibraryLoader$loadScript$lambda$_5_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxjl_JParserLibraryLoader$loadScript$lambda$_5_0_handleEvent$exported$0);
    c = cgxjl_JParserLibraryLoader$loadScript$lambda$_5_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxjl_JParserLibraryLoader$loadScript$lambda$_5_1_handleEvent$exported$0);
    c = cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_10_0.prototype;
    c.onInit = $rt_callWithReceiver(cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_10_0_onInit$exported$0);
    c = cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0_handleEvent$exported$0);
})();
$rt_exports.main = $rt_export_main;
}));
